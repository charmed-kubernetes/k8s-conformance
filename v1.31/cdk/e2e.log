  I0921 12:12:44.314447      19 e2e.go:109] Starting e2e run "9303cc22-061c-4ec3-b88e-0f49b5a33cfb" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1726920763 - will randomize all specs

Will run 404 of 6603 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0921 12:12:44.580481 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:12:44.581549 19 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0921 12:12:44.619333 19 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0921 12:12:44.625804 19 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0921 12:12:44.626016 19 e2e.go:245] e2e test version: v1.31.1
  I0921 12:12:44.627053 19 e2e.go:254] kube-apiserver version: v1.31.1
  I0921 12:12:44.629024 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:12:44.635060 19 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.055 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 09/21/24 12:12:44.832
  I0921 12:12:44.832692 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename replication-controller @ 09/21/24 12:12:44.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:12:44.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:12:44.852
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/21/24 12:12:44.856
  STEP: When a replication controller with a matching selector is created @ 09/21/24 12:12:48.885
  STEP: Then the orphan pod is adopted @ 09/21/24 12:12:48.891
  I0921 12:12:49.902035 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1914" for this suite. @ 09/21/24 12:12:49.906
• [5.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 09/21/24 12:12:49.914
  I0921 12:12:49.914062 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename var-expansion @ 09/21/24 12:12:49.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:12:49.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:12:49.936
  I0921 12:12:51.959473 19 delete.go:62] Deleting pod "var-expansion-8f2d018e-bcad-41d5-8c1a-ac4d757237d6" in namespace "var-expansion-1486"
  I0921 12:12:51.970205 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-8f2d018e-bcad-41d5-8c1a-ac4d757237d6" to be fully deleted
  I0921 12:12:57.989714 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1486" for this suite. @ 09/21/24 12:12:57.995
• [8.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/21/24 12:12:58.004
  I0921 12:12:58.004083 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/21/24 12:12:58.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:12:58.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:12:58.028
  STEP: creating a target pod @ 09/21/24 12:12:58.03
  STEP: adding an ephemeral container @ 09/21/24 12:13:00.058
  STEP: checking pod container endpoints @ 09/21/24 12:13:04.086
  I0921 12:13:04.086424 19 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3161 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:13:04.086442 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:13:04.086859 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:13:04.086905 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-3161/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0921 12:13:04.127593 19 exec_util.go:111] Exec stderr: ""
  I0921 12:13:04.145248 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3161" for this suite. @ 09/21/24 12:13:04.15
• [6.235 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/21/24 12:13:04.239
  I0921 12:13:04.239088 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename discovery @ 09/21/24 12:13:04.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:13:04.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:13:04.257
  STEP: Setting up server cert @ 09/21/24 12:13:04.261
  I0921 12:13:04.435900 19 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0921 12:13:04.437185 19 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0921 12:13:04.437208 19 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0921 12:13:04.437215 19 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0921 12:13:04.437220 19 discovery.go:139] Checking APIGroup: apps
  I0921 12:13:04.438138 19 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0921 12:13:04.438151 19 discovery.go:148] Versions found [{apps/v1 v1}]
  I0921 12:13:04.438157 19 discovery.go:154] apps/v1 matches apps/v1
  I0921 12:13:04.438164 19 discovery.go:139] Checking APIGroup: events.k8s.io
  I0921 12:13:04.439366 19 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0921 12:13:04.439385 19 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0921 12:13:04.439391 19 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0921 12:13:04.439398 19 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0921 12:13:04.440492 19 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0921 12:13:04.440515 19 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0921 12:13:04.440522 19 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0921 12:13:04.440528 19 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0921 12:13:04.441463 19 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0921 12:13:04.441478 19 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0921 12:13:04.441484 19 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0921 12:13:04.441490 19 discovery.go:139] Checking APIGroup: autoscaling
  I0921 12:13:04.442404 19 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0921 12:13:04.442418 19 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0921 12:13:04.442424 19 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0921 12:13:04.442428 19 discovery.go:139] Checking APIGroup: batch
  I0921 12:13:04.443287 19 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0921 12:13:04.443298 19 discovery.go:148] Versions found [{batch/v1 v1}]
  I0921 12:13:04.443303 19 discovery.go:154] batch/v1 matches batch/v1
  I0921 12:13:04.443310 19 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0921 12:13:04.444283 19 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0921 12:13:04.444308 19 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0921 12:13:04.444317 19 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0921 12:13:04.444354 19 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0921 12:13:04.445296 19 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0921 12:13:04.445332 19 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0921 12:13:04.445357 19 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0921 12:13:04.445363 19 discovery.go:139] Checking APIGroup: policy
  I0921 12:13:04.446365 19 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0921 12:13:04.446375 19 discovery.go:148] Versions found [{policy/v1 v1}]
  I0921 12:13:04.446379 19 discovery.go:154] policy/v1 matches policy/v1
  I0921 12:13:04.446383 19 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0921 12:13:04.447246 19 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0921 12:13:04.447256 19 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0921 12:13:04.447262 19 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0921 12:13:04.447269 19 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0921 12:13:04.448217 19 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0921 12:13:04.448227 19 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0921 12:13:04.448237 19 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0921 12:13:04.448244 19 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0921 12:13:04.449125 19 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0921 12:13:04.449135 19 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0921 12:13:04.449146 19 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0921 12:13:04.449151 19 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0921 12:13:04.450175 19 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0921 12:13:04.450196 19 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0921 12:13:04.450202 19 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0921 12:13:04.450206 19 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0921 12:13:04.451139 19 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0921 12:13:04.451157 19 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0921 12:13:04.451162 19 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0921 12:13:04.451169 19 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0921 12:13:04.452082 19 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0921 12:13:04.452092 19 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0921 12:13:04.452098 19 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0921 12:13:04.452104 19 discovery.go:139] Checking APIGroup: node.k8s.io
  I0921 12:13:04.452957 19 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0921 12:13:04.452974 19 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0921 12:13:04.452979 19 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0921 12:13:04.452984 19 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0921 12:13:04.453854 19 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0921 12:13:04.453874 19 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0921 12:13:04.453877 19 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0921 12:13:04.453882 19 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0921 12:13:04.455023 19 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0921 12:13:04.455043 19 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0921 12:13:04.455047 19 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0921 12:13:04.455052 19 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0921 12:13:04.456160 19 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0921 12:13:04.456181 19 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0921 12:13:04.456186 19 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0921 12:13:04.456268 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6283" for this suite. @ 09/21/24 12:13:04.461
• [0.230 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/21/24 12:13:04.468
  I0921 12:13:04.468922 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename apf @ 09/21/24 12:13:04.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:13:04.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:13:04.49
  STEP: getting /apis @ 09/21/24 12:13:04.493
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/21/24 12:13:04.495
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/21/24 12:13:04.496
  STEP: creating @ 09/21/24 12:13:04.497
  STEP: getting @ 09/21/24 12:13:04.517
  STEP: listing @ 09/21/24 12:13:04.523
  STEP: watching @ 09/21/24 12:13:04.529
  I0921 12:13:04.529575 19 flowcontrol.go:394] starting watch
  STEP: patching @ 09/21/24 12:13:04.53
  STEP: updating @ 09/21/24 12:13:04.536
  I0921 12:13:04.546208 19 flowcontrol.go:422] waiting for watch events with expected annotations
  I0921 12:13:04.546241 19 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 09/21/24 12:13:04.546
  STEP: patching /status @ 09/21/24 12:13:04.551
  STEP: updating /status @ 09/21/24 12:13:04.557
  STEP: deleting @ 09/21/24 12:13:04.595
  STEP: deleting a collection @ 09/21/24 12:13:04.611
  I0921 12:13:04.636889 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4196" for this suite. @ 09/21/24 12:13:04.641
• [0.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/21/24 12:13:04.649
  I0921 12:13:04.649466 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename secrets @ 09/21/24 12:13:04.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:13:04.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:13:04.669
  STEP: Creating secret with name secret-test-360c2cd4-320a-4e38-b005-741596610765 @ 09/21/24 12:13:04.671
  STEP: Creating a pod to test consume secrets @ 09/21/24 12:13:04.675
  STEP: Saw pod success @ 09/21/24 12:13:08.702
  I0921 12:13:08.708176 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod pod-secrets-b8fb2111-08e5-4c25-a195-03206b366b77 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 12:13:08.724
  I0921 12:13:08.746248 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4356" for this suite. @ 09/21/24 12:13:08.75
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 09/21/24 12:13:08.759
  I0921 12:13:08.759800 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:13:08.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:13:08.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:13:08.777
  STEP: Creating configMap with name cm-test-opt-del-57ebb8ca-0e63-4b2e-912e-d056bb7c0447 @ 09/21/24 12:13:08.783
  STEP: Creating configMap with name cm-test-opt-upd-72986052-d4db-4be4-b896-1a66af384d10 @ 09/21/24 12:13:08.788
  STEP: Creating the pod @ 09/21/24 12:13:08.793
  STEP: Deleting configmap cm-test-opt-del-57ebb8ca-0e63-4b2e-912e-d056bb7c0447 @ 09/21/24 12:13:12.849
  STEP: Updating configmap cm-test-opt-upd-72986052-d4db-4be4-b896-1a66af384d10 @ 09/21/24 12:13:12.858
  STEP: Creating configMap with name cm-test-opt-create-d43dd4e3-0c32-4db6-b523-a24cdda6bb6f @ 09/21/24 12:13:12.863
  STEP: waiting to observe update in volume @ 09/21/24 12:13:12.868
  I0921 12:13:14.902176 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6453" for this suite. @ 09/21/24 12:13:14.906
• [6.156 seconds]
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/21/24 12:13:14.915
  I0921 12:13:14.915365 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename cronjob @ 09/21/24 12:13:14.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:13:14.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:13:14.934
  STEP: Creating a ReplaceConcurrent cronjob @ 09/21/24 12:13:14.937
  STEP: Ensuring a job is scheduled @ 09/21/24 12:13:14.943
  STEP: Ensuring exactly one is scheduled @ 09/21/24 12:14:00.949
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/21/24 12:14:00.954
  STEP: Ensuring the job is replaced with a new one @ 09/21/24 12:14:00.959
  STEP: Removing cronjob @ 09/21/24 12:15:00.965
  I0921 12:15:00.973728 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8159" for this suite. @ 09/21/24 12:15:00.981
• [106.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/21/24 12:15:00.991
  I0921 12:15:00.991280 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/21/24 12:15:00.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:15:01.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:15:01.028
  STEP: Cleaning up the secret @ 09/21/24 12:15:03.077
  STEP: Cleaning up the configmap @ 09/21/24 12:15:03.086
  STEP: Cleaning up the pod @ 09/21/24 12:15:03.095
  I0921 12:15:03.112859 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7074" for this suite. @ 09/21/24 12:15:03.118
• [2.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 09/21/24 12:15:03.127
  I0921 12:15:03.127392 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:15:03.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:15:03.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:15:03.148
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 12:15:03.151
  STEP: Saw pod success @ 09/21/24 12:15:07.181
  I0921 12:15:07.185668 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downwardapi-volume-57c0a40c-743d-41bb-9e3e-488eb1da119c container client-container: <nil>
  STEP: delete the pod @ 09/21/24 12:15:07.198
  I0921 12:15:07.218907 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6662" for this suite. @ 09/21/24 12:15:07.223
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 09/21/24 12:15:07.231
  I0921 12:15:07.231224 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 12:15:07.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:15:07.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:15:07.25
  STEP: Setting up server cert @ 09/21/24 12:15:07.274
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 12:15:07.449
  STEP: Deploying the webhook pod @ 09/21/24 12:15:07.458
  STEP: Wait for the deployment to be ready @ 09/21/24 12:15:07.471
  I0921 12:15:07.480802 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 12:15:09.495
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 12:15:09.507
  I0921 12:15:10.508239 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/21/24 12:15:10.518
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/21/24 12:15:10.534
  I0921 12:15:10.534140 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:15:10.598644 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6719" for this suite. @ 09/21/24 12:15:10.603
  STEP: Destroying namespace "webhook-markers-5226" for this suite. @ 09/21/24 12:15:10.611
• [3.390 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 09/21/24 12:15:10.621
  I0921 12:15:10.621691 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename dns @ 09/21/24 12:15:10.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:15:10.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:15:10.638
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/21/24 12:15:10.663
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/21/24 12:15:10.663
  STEP: creating a pod to probe DNS @ 09/21/24 12:15:10.663
  STEP: submitting the pod to kubernetes @ 09/21/24 12:15:10.663
  STEP: retrieving the pod @ 09/21/24 12:15:16.699
  STEP: looking for the results for each expected name from probers @ 09/21/24 12:15:16.703
  I0921 12:15:16.724112 19 dns_common.go:527] DNS probes using dns-9142/dns-test-74b5cd3f-52f6-460d-b60a-d5ea1f59de68 succeeded

  STEP: deleting the pod @ 09/21/24 12:15:16.724
  I0921 12:15:16.740500 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9142" for this suite. @ 09/21/24 12:15:16.744
• [6.130 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 09/21/24 12:15:16.751
  I0921 12:15:16.751873 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename runtimeclass @ 09/21/24 12:15:16.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:15:16.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:15:16.772
  STEP: Deleting RuntimeClass runtimeclass-8502-delete-me @ 09/21/24 12:15:16.779
  STEP: Waiting for the RuntimeClass to disappear @ 09/21/24 12:15:16.787
  I0921 12:15:16.798709 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8502" for this suite. @ 09/21/24 12:15:16.803
• [0.058 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/21/24 12:15:16.81
  I0921 12:15:16.810199 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename prestop @ 09/21/24 12:15:16.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:15:16.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:15:16.828
  STEP: Creating server pod server in namespace prestop-6133 @ 09/21/24 12:15:16.83
  STEP: Waiting for pods to come up. @ 09/21/24 12:15:16.839
  STEP: Creating tester pod tester in namespace prestop-6133 @ 09/21/24 12:15:18.857
  STEP: Deleting pre-stop pod @ 09/21/24 12:15:20.876
  I0921 12:15:25.896463 19 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/21/24 12:15:25.896
  I0921 12:15:25.910403 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-6133" for this suite. @ 09/21/24 12:15:25.916
• [9.114 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/21/24 12:15:25.924
  I0921 12:15:25.924428 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubelet-test @ 09/21/24 12:15:25.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:15:25.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:15:25.944
  I0921 12:15:29.968196 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4422" for this suite. @ 09/21/24 12:15:29.972
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/21/24 12:15:29.98
  I0921 12:15:29.980281 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename deployment @ 09/21/24 12:15:29.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:15:29.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:15:29.998
  STEP: creating a Deployment @ 09/21/24 12:15:30.005
  STEP: waiting for Deployment to be created @ 09/21/24 12:15:30.011
  STEP: waiting for all Replicas to be Ready @ 09/21/24 12:15:30.013
  I0921 12:15:30.014443 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0921 12:15:30.014463 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0921 12:15:30.027275 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0921 12:15:30.027302 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0921 12:15:30.049674 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0921 12:15:30.049710 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0921 12:15:30.061614 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0921 12:15:30.061641 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0921 12:15:30.645331 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0921 12:15:30.645392 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0921 12:15:31.288163 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/21/24 12:15:31.288
  I0921 12:15:31.297153 19 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/21/24 12:15:31.297
  I0921 12:15:31.298499 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0
  I0921 12:15:31.298520 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0
  I0921 12:15:31.298532 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0
  I0921 12:15:31.298539 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0
  I0921 12:15:31.298551 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0
  I0921 12:15:31.298557 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0
  I0921 12:15:31.298671 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0
  I0921 12:15:31.298681 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 0
  I0921 12:15:31.298691 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1
  I0921 12:15:31.298698 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1
  I0921 12:15:31.298708 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2
  I0921 12:15:31.298714 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2
  I0921 12:15:31.298796 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2
  I0921 12:15:31.298818 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2
  I0921 12:15:31.308912 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2
  I0921 12:15:31.308936 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2
  I0921 12:15:31.338538 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2
  I0921 12:15:31.338562 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2
  I0921 12:15:31.350428 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1
  I0921 12:15:31.350449 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1
  I0921 12:15:31.364100 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1
  I0921 12:15:31.364117 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1
  I0921 12:15:32.294021 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2
  I0921 12:15:32.294056 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2
  I0921 12:15:32.322204 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1
  STEP: listing Deployments @ 09/21/24 12:15:32.322
  I0921 12:15:32.327248 19 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/21/24 12:15:32.327
  I0921 12:15:32.339703 19 deployment.go:360] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/21/24 12:15:32.339
  I0921 12:15:32.348035 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0921 12:15:32.352246 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0921 12:15:32.372495 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0921 12:15:32.390902 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0921 12:15:32.402596 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0921 12:15:33.347150 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0921 12:15:33.377979 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0921 12:15:33.390750 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0921 12:15:36.680557 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/21/24 12:15:36.707
  STEP: fetching the DeploymentStatus @ 09/21/24 12:15:36.715
  I0921 12:15:36.724078 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1
  I0921 12:15:36.724107 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1
  I0921 12:15:36.724127 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1
  I0921 12:15:36.724206 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1
  I0921 12:15:36.724284 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 1
  I0921 12:15:36.724292 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2
  I0921 12:15:36.724301 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2
  I0921 12:15:36.724384 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 2
  I0921 12:15:36.724394 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4692 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/21/24 12:15:36.724
  I0921 12:15:36.737397 19 deployment.go:475] observed event type MODIFIED
  I0921 12:15:36.737416 19 deployment.go:475] observed event type MODIFIED
  I0921 12:15:36.737425 19 deployment.go:475] observed event type MODIFIED
  I0921 12:15:36.737481 19 deployment.go:475] observed event type MODIFIED
  I0921 12:15:36.737491 19 deployment.go:475] observed event type MODIFIED
  I0921 12:15:36.737498 19 deployment.go:475] observed event type MODIFIED
  I0921 12:15:36.737567 19 deployment.go:475] observed event type MODIFIED
  I0921 12:15:36.737574 19 deployment.go:475] observed event type MODIFIED
  I0921 12:15:36.737582 19 deployment.go:475] observed event type MODIFIED
  I0921 12:15:36.737647 19 deployment.go:475] observed event type MODIFIED
  I0921 12:15:36.737714 19 deployment.go:475] observed event type MODIFIED
  I0921 12:15:36.737732 19 deployment.go:475] observed event type MODIFIED
  I0921 12:15:36.743176 19 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0921 12:15:36.753131 19 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4692",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c78c8546-6a6f-41a4-a065-c81c8c85b6de",
      ResourceVersion: (string) (len=4) "5245",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862517732,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "293cbbc9-4efc-4014-8ff5-4da5b56ad25f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 39 33 63  62 62 63 39 2d 34 65 66  |":\"293cbbc9-4ef|
              00000130  63 2d 34 30 31 34 2d 38  66 66 35 2d 34 64 61 35  |c-4014-8ff5-4da5|
              00000140  62 35 36 61 64 32 35 66  5c 22 7d 22 3a 7b 7d 7d  |b56ad25f\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0921 12:15:36.758150 19 deployment.go:669] pod: "test-deployment-6c86c7f765-bp5vv":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-bp5vv",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-4692",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ddbd5490-d60a-4dd7-ada7-71c7889a869f",
      ResourceVersion: (string) (len=4) "5192",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862517732,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "c78c8546-6a6f-41a4-a065-c81c8c85b6de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 37 38 63 38 35 34 36  |uid\":\"c78c8546|
              000000a0  2d 36 61 36 66 2d 34 31  61 34 2d 61 30 36 35 2d  |-6a6f-41a4-a065-|
              000000b0  63 38 31 63 38 63 38 35  62 36 64 65 5c 22 7d 22  |c81c8c85b6de\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 37  2e 31 34 5c 22 7d 22 3a  |2.168.27.14\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zxqnl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zxqnl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.95.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.95.123"
        }
      },
      PodIP: (string) (len=13) "192.168.27.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.27.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862517732,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862517732,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f880cdc94da5642c55cff5952d3b2da9e85ec0530b327fa85258a1361565ae02",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zxqnl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0921 12:15:36.759676 19 deployment.go:669] pod: "test-deployment-6c86c7f765-qfkgt":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-qfkgt",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-4692",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed98726a-5eaa-4745-bbdc-a78bfa06595c",
      ResourceVersion: (string) (len=4) "5244",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862517733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "c78c8546-6a6f-41a4-a065-c81c8c85b6de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 37 38 63 38 35 34 36  |uid\":\"c78c8546|
              000000a0  2d 36 61 36 66 2d 34 31  61 34 2d 61 30 36 35 2d  |-6a6f-41a4-a065-|
              000000b0  63 38 31 63 38 63 38 35  62 36 64 65 5c 22 7d 22  |c81c8c85b6de\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  36 2e 31 33 36 5c 22 7d  |2.168.126.136\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xjzgv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xjzgv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-69-84",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.69.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.69.84"
        }
      },
      PodIP: (string) (len=15) "192.168.126.136",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.126.136"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862517733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862517735,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://25f199a1273e80782290b02a4b9a085d2d13caf0ca0a7bd49b262e24e32184a3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xjzgv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0921 12:15:36.762302 19 deployment.go:657] ReplicaSet "test-deployment-6ccdbb4d8c":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4692",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "938bf9ef-3709-452a-ba05-d559721eae33",
      ResourceVersion: (string) (len=4) "5253",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862517731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "293cbbc9-4efc-4014-8ff5-4da5b56ad25f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 39 33 63  62 62 63 39 2d 34 65 66  |":\"293cbbc9-4ef|
              00000130  63 2d 34 30 31 34 2d 38  66 66 35 2d 34 64 61 35  |c-4014-8ff5-4da5|
              00000140  62 35 36 61 64 32 35 66  5c 22 7d 22 3a 7b 7d 7d  |b56ad25f\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0921 12:15:36.768954 19 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-czvk4":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-czvk4",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=15) "deployment-4692",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40c2e41e-5a20-41b2-83c0-df12888317a7",
      ResourceVersion: (string) (len=4) "5249",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862517731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862517738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "938bf9ef-3709-452a-ba05-d559721eae33",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 33 38 62 66 39 65 66  |uid\":\"938bf9ef|
              000000a0  2d 33 37 30 39 2d 34 35  32 61 2d 62 61 30 35 2d  |-3709-452a-ba05-|
              000000b0  64 35 35 39 37 32 31 65  61 65 33 33 5c 22 7d 22  |d559721eae33\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 37  2e 31 33 5c 22 7d 22 3a  |2.168.27.13\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w8ltd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w8ltd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.95.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.95.123"
        }
      },
      PodIP: (string) (len=13) "192.168.27.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.27.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862517731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862517732,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://ce1046a6145b0a004c7dcd6604ce5c856a818d7cc4252f1f0150ad8b76c22103",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w8ltd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0921 12:15:36.770416 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4692" for this suite. @ 09/21/24 12:15:36.775
• [6.804 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 09/21/24 12:15:36.784
  I0921 12:15:36.784216 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:15:36.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:15:36.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:15:36.804
  STEP: Creating the pod @ 09/21/24 12:15:36.807
  I0921 12:15:39.359420 19 pod_client.go:173] Successfully updated pod "labelsupdate787979f9-47b1-4607-ba25-d6ee88c77a88"
  I0921 12:15:43.387532 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1229" for this suite. @ 09/21/24 12:15:43.391
• [6.616 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 09/21/24 12:15:43.4
  I0921 12:15:43.400547 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 12:15:43.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:15:43.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:15:43.419
  STEP: starting the proxy server @ 09/21/24 12:15:43.422
  I0921 12:15:43.422209 19 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-6521 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/21/24 12:15:43.455
  I0921 12:15:43.461614 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0921 12:15:43.462943 19 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:35005

  I0921 12:15:43.462975 19 kubectl.go:2229] kubectl proxy stderr: W0921 12:15:43.455162      27 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-6521" for this suite. @ 09/21/24 12:15:43.466
• [0.074 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 09/21/24 12:15:43.474
  I0921 12:15:43.474777 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-runtime @ 09/21/24 12:15:43.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:15:43.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:15:43.494
  STEP: create the container @ 09/21/24 12:15:43.496
  W0921 12:15:43.508017      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/21/24 12:15:43.508
  STEP: get the container status @ 09/21/24 12:15:45.524
  STEP: the container should be terminated @ 09/21/24 12:15:45.527
  STEP: the termination message should be set @ 09/21/24 12:15:45.527
  I0921 12:15:45.527981 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/21/24 12:15:45.528
  I0921 12:15:45.550796 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1471" for this suite. @ 09/21/24 12:15:45.555
• [2.089 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 09/21/24 12:15:45.563
  I0921 12:15:45.563577 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename svcaccounts @ 09/21/24 12:15:45.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:15:45.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:15:45.585
  STEP: Creating a pod to test service account token:  @ 09/21/24 12:15:45.587
  STEP: Saw pod success @ 09/21/24 12:15:47.608
  I0921 12:15:47.613058 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod test-pod-9e09ff3d-9fa6-4688-8daa-b675341ebd3d container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 12:15:47.622
  I0921 12:15:47.643586 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9410" for this suite. @ 09/21/24 12:15:47.648
• [2.093 seconds]
------------------------------
S
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/21/24 12:15:47.656
  I0921 12:15:47.656689 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename hostport @ 09/21/24 12:15:47.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:15:47.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:15:47.675
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/21/24 12:15:47.681
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.69.84 on the node which pod1 resides and expect scheduled @ 09/21/24 12:15:49.703
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.69.84 but use UDP protocol on the node which pod2 resides @ 09/21/24 12:16:01.749
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/21/24 12:16:05.79
  I0921 12:16:05.790368 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.69.84 http://127.0.0.1:54323/hostname] Namespace:hostport-9112 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:16:05.790387 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:16:05.790863 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:16:05.790919 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9112/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.69.84+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.69.84, port: 54323 @ 09/21/24 12:16:05.835
  I0921 12:16:05.835679 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.69.84:54323/hostname] Namespace:hostport-9112 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:16:05.835696 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:16:05.836138 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:16:05.836185 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9112/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.69.84%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.69.84, port: 54323 UDP @ 09/21/24 12:16:05.88
  I0921 12:16:05.880788 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.69.84 54323] Namespace:hostport-9112 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:16:05.880806 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:16:05.881260 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:16:05.881313 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9112/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.69.84+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I0921 12:16:10.924106 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9112" for this suite. @ 09/21/24 12:16:10.931
• [23.286 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/21/24 12:16:10.942
  I0921 12:16:10.943020 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename deployment @ 09/21/24 12:16:10.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:16:10.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:16:10.966
  I0921 12:16:10.969593 19 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0921 12:16:10.980410 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0921 12:16:15.986622 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/21/24 12:16:15.986
  I0921 12:16:15.986694 19 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0921 12:16:15.991365 19 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0921 12:16:15.999633 19 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0921 12:16:18.010528 19 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0921 12:16:18.015482 19 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0921 12:16:18.028937 19 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3349",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86c1477f-0644-4cb1-9fa7-9ab5e57e6f35",
      ResourceVersion: (string) (len=4) "5676",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862517775,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0921 12:16:18.033475 19 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3349",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8079894-16fc-40cc-905d-9c9761ca4bec",
      ResourceVersion: (string) (len=4) "5666",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862517776,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "86c1477f-0644-4cb1-9fa7-9ab5e57e6f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 36 63 31 34 37  37 66 2d 30 36 34 34 2d  |\"86c1477f-0644-|
              00000120  34 63 62 31 2d 39 66 61  37 2d 39 61 62 35 65 35  |4cb1-9fa7-9ab5e5|
              00000130  37 65 36 66 33 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7e6f35\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0921 12:16:18.034072 19 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0921 12:16:18.034274 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3349",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69e48b57-9582-407d-a0a5-23130e8ca22d",
      ResourceVersion: (string) (len=4) "5675",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862517770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "86c1477f-0644-4cb1-9fa7-9ab5e57e6f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 38 36 63 31 34 37 37  |"uid\":\"86c1477|
              000000b0  66 2d 30 36 34 34 2d 34  63 62 31 2d 39 66 61 37  |f-0644-4cb1-9fa7|
              000000c0  2d 39 61 62 35 65 35 37  65 36 66 33 35 5c 22 7d  |-9ab5e57e6f35\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0921 12:16:18.041593 19 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-4ftt2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-4ftt2",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-3349",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3cf1c977-1b53-4ea0-a2fb-bc30e7751909",
      ResourceVersion: (string) (len=4) "5665",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862517776,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "c8079894-16fc-40cc-905d-9c9761ca4bec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  30 37 39 38 39 34 2d 31  |d\":\"c8079894-1|
              00000090  36 66 63 2d 34 30 63 63  2d 39 30 35 64 2d 39 63  |6fc-40cc-905d-9c|
              000000a0  39 37 36 31 63 61 34 62  65 63 5c 22 7d 22 3a 7b  |9761ca4bec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 37  2e 31 39 5c 22 7d 22 3a  |2.168.27.19\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z6zzz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z6zzz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862517776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.95.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.95.123"
        }
      },
      PodIP: (string) (len=13) "192.168.27.19",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.27.19"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862517776,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862517776,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://7d0b235dbcc40941ff01454c8b35b5d6f6f642481629783c1de4bf7ff8ab8cc1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-z6zzz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:16:18.042722 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3349" for this suite. @ 09/21/24 12:16:18.05
• [7.117 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 09/21/24 12:16:18.06
  I0921 12:16:18.060172 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename resourcequota @ 09/21/24 12:16:18.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:16:18.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:16:18.08
  STEP: Creating a ResourceQuota @ 09/21/24 12:16:18.083
  STEP: Getting a ResourceQuota @ 09/21/24 12:16:18.087
  STEP: Updating a ResourceQuota @ 09/21/24 12:16:18.092
  STEP: Verifying a ResourceQuota was modified @ 09/21/24 12:16:18.096
  STEP: Deleting a ResourceQuota @ 09/21/24 12:16:18.103
  STEP: Verifying the deleted ResourceQuota @ 09/21/24 12:16:18.111
  I0921 12:16:18.116088 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8834" for this suite. @ 09/21/24 12:16:18.12
• [0.068 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 09/21/24 12:16:18.128
  I0921 12:16:18.128159 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/21/24 12:16:18.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:16:18.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:16:18.148
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/21/24 12:16:18.151
  I0921 12:16:18.151850 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:16:19.568484 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:16:24.620311 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3872" for this suite. @ 09/21/24 12:16:24.628
• [6.508 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/21/24 12:16:24.636
  I0921 12:16:24.636148 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename init-container @ 09/21/24 12:16:24.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:16:24.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:16:24.658
  STEP: creating the pod @ 09/21/24 12:16:24.66
  I0921 12:16:24.660473 19 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0921 12:16:27.551614 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7050" for this suite. @ 09/21/24 12:16:27.555
• [2.929 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 09/21/24 12:16:27.565
  I0921 12:16:27.565702 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename job @ 09/21/24 12:16:27.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:16:27.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:16:27.592
  STEP: Creating a job @ 09/21/24 12:16:27.594
  STEP: Ensuring active pods == parallelism @ 09/21/24 12:16:27.6
  STEP: Orphaning one of the Job's Pods @ 09/21/24 12:16:29.607
  I0921 12:16:30.124041 19 pod_client.go:173] Successfully updated pod "adopt-release-4ghqn"
  STEP: Checking that the Job readopts the Pod @ 09/21/24 12:16:30.124
  STEP: Removing the labels from the Job's Pod @ 09/21/24 12:16:32.134
  I0921 12:16:32.646990 19 pod_client.go:173] Successfully updated pod "adopt-release-4ghqn"
  STEP: Checking that the Job releases the Pod @ 09/21/24 12:16:32.647
  I0921 12:16:34.657803 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5640" for this suite. @ 09/21/24 12:16:34.665
• [7.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/21/24 12:16:34.675
  I0921 12:16:34.675040 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename secrets @ 09/21/24 12:16:34.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:16:34.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:16:34.696
  STEP: Creating secret with name secret-test-f38f4b24-c415-4c92-b0bd-ff81ce0051ed @ 09/21/24 12:16:34.698
  STEP: Creating a pod to test consume secrets @ 09/21/24 12:16:34.705
  STEP: Saw pod success @ 09/21/24 12:16:36.728
  I0921 12:16:36.732195 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-secrets-5d8e8e05-69a7-4c8d-8752-8288c833b867 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 12:16:36.743
  I0921 12:16:36.764215 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-224" for this suite. @ 09/21/24 12:16:36.768
• [2.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/21/24 12:16:36.776
  I0921 12:16:36.776534 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename taint-single-pod @ 09/21/24 12:16:36.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:16:36.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:16:36.798
  I0921 12:16:36.800478 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0921 12:17:36.800806 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I0921 12:17:36.806439 19 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/21/24 12:17:36.806
  I0921 12:17:37.023327 19 taints.go:294] Pod is running on ip-172-31-95-123. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/21/24 12:17:37.023
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/21/24 12:17:37.034
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/21/24 12:17:37.037
  I0921 12:17:37.037663 19 taints.go:313] Pod wasn't evicted. Proceeding
  I0921 12:17:37.037679 19 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/21/24 12:17:37.049
  STEP: Waiting some time to make sure that toleration time passed. @ 09/21/24 12:17:37.055
  I0921 12:18:52.058191 19 taints.go:329] Pod wasn't evicted. Test successful
  I0921 12:18:52.058372 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5446" for this suite. @ 09/21/24 12:18:52.064
• [135.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/21/24 12:18:52.073
  I0921 12:18:52.073711 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pods @ 09/21/24 12:18:52.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:18:52.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:18:52.1
  STEP: creating the pod @ 09/21/24 12:18:52.102
  STEP: submitting the pod to kubernetes @ 09/21/24 12:18:52.102
  W0921 12:18:52.110160      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 09/21/24 12:18:54.126
  STEP: updating the pod @ 09/21/24 12:18:54.131
  I0921 12:18:54.644044 19 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-01fe9783-adcf-4b6c-9d7c-b1e8328053ff"
  I0921 12:18:58.658741 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7408" for this suite. @ 09/21/24 12:18:58.663
• [6.599 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 09/21/24 12:18:58.672
  I0921 12:18:58.672538 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-probe @ 09/21/24 12:18:58.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:18:58.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:18:58.699
  STEP: Creating pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628 @ 09/21/24 12:18:58.701
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/21/24 12:19:00.724
  I0921 12:19:00.728723 19 container_probe.go:1749] Initial restart count of pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 is 0
  I0921 12:19:00.732849 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:02.739785 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:04.745693 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:06.752024 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:08.756968 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:10.763183 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:12.769489 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:14.775923 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:16.782192 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:18.788324 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:20.794781 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:22.800506 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:24.805213 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:26.811450 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:28.816454 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:30.825605 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:32.833056 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:34.842165 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:36.848683 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:38.855148 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:40.860733 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:42.866473 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:44.870636 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:46.876912 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:48.882817 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:50.888057 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:52.894215 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:54.900318 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:56.906432 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:19:58.912108 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:00.917861 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:02.924047 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:04.931063 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:06.936382 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:08.942297 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:10.948565 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:12.955080 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:14.959614 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:16.966397 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:18.972119 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:20.978031 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:22.983642 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:24.989127 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:26.995378 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:29.001031 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:31.008492 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:33.015455 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:35.020609 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:37.026515 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:39.033611 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:41.040097 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:43.047468 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:45.053515 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:47.060044 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:49.065102 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:51.071125 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:53.077580 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:55.083202 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:57.089235 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:20:59.096188 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:01.101288 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:03.108086 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:05.114026 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:07.120826 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:09.125727 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:11.132427 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:13.138979 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:15.146159 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:17.153221 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:19.160240 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:21.166307 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:23.173153 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:25.179459 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:27.186409 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:29.192552 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:31.199815 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:33.206125 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:35.214636 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:37.221073 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:39.228055 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:41.233936 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:43.240022 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:45.246794 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:47.252446 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:49.258297 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:51.265646 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:53.272277 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:55.277229 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:57.282846 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:21:59.289433 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:01.296753 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:03.303661 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:05.309704 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:07.315631 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:09.322100 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:11.327635 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:13.334300 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:15.339704 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:17.345429 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:19.351285 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:21.358255 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:23.364867 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:25.371215 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:27.376975 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:29.383725 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:31.389193 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:33.395681 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:35.401751 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:37.407918 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:39.413264 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:41.419789 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:43.427810 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:45.433368 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:47.439565 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:49.446188 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:51.450930 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:53.456787 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:55.463025 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:57.468391 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  I0921 12:22:59.474473 19 container_probe.go:1759] Get pod busybox-4001e7e8-a5b6-49cc-ac57-20c9feca45a9 in namespace container-probe-3628
  STEP: deleting the pod @ 09/21/24 12:23:01.475
  I0921 12:23:01.492452 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3628" for this suite. @ 09/21/24 12:23:01.496
• [242.836 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 09/21/24 12:23:01.508
  I0921 12:23:01.508838 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename gc @ 09/21/24 12:23:01.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:23:01.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:23:01.532
  STEP: create the rc @ 09/21/24 12:23:01.538
  W0921 12:23:01.543918      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/21/24 12:23:07.548
  STEP: wait for the rc to be deleted @ 09/21/24 12:23:07.558
  I0921 12:23:08.570195 19 garbage_collector.go:670] 80 pods remaining
  I0921 12:23:08.570228 19 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0921 12:23:08.570234 19 garbage_collector.go:678] 
  I0921 12:23:09.578218 19 garbage_collector.go:670] 71 pods remaining
  I0921 12:23:09.578278 19 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I0921 12:23:09.578285 19 garbage_collector.go:678] 
  I0921 12:23:10.578401 19 garbage_collector.go:670] 60 pods remaining
  I0921 12:23:10.578443 19 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0921 12:23:10.578450 19 garbage_collector.go:678] 
  I0921 12:23:11.575039 19 garbage_collector.go:670] 40 pods remaining
  I0921 12:23:11.575076 19 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0921 12:23:11.575083 19 garbage_collector.go:678] 
  I0921 12:23:12.571277 19 garbage_collector.go:670] 31 pods remaining
  I0921 12:23:12.571312 19 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I0921 12:23:12.571319 19 garbage_collector.go:678] 
  I0921 12:23:13.571576 19 garbage_collector.go:670] 20 pods remaining
  I0921 12:23:13.571618 19 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0921 12:23:13.571625 19 garbage_collector.go:678] 
  STEP: Gathering metrics @ 09/21/24 12:23:14.571
  W0921 12:23:14.580464      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0921 12:23:14.580496 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0921 12:23:14.580716 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2497" for this suite. @ 09/21/24 12:23:14.589
• [13.089 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 09/21/24 12:23:14.598
  I0921 12:23:14.598453 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 12:23:14.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:23:14.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:23:14.623
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 12:23:14.625
  STEP: Saw pod success @ 09/21/24 12:23:18.657
  I0921 12:23:18.661044 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downwardapi-volume-cddd2c53-2dd6-4fdd-a32c-092b940c0c8d container client-container: <nil>
  STEP: delete the pod @ 09/21/24 12:23:18.678
  I0921 12:23:18.698831 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3928" for this suite. @ 09/21/24 12:23:18.703
• [4.114 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/21/24 12:23:18.712
  I0921 12:23:18.712260 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename cronjob @ 09/21/24 12:23:18.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:23:18.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:23:18.735
  STEP: Creating a cronjob @ 09/21/24 12:23:18.738
  STEP: Ensuring more than one job is running at a time @ 09/21/24 12:23:18.743
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/21/24 12:25:00.748
  STEP: Removing cronjob @ 09/21/24 12:25:00.753
  I0921 12:25:00.762543 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1437" for this suite. @ 09/21/24 12:25:00.767
• [102.063 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 09/21/24 12:25:00.775
  I0921 12:25:00.775055 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:25:00.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:25:00.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:25:00.805
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 12:25:00.808
  STEP: Saw pod success @ 09/21/24 12:25:04.833
  I0921 12:25:04.838409 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod downwardapi-volume-3be60549-2313-4c6b-b322-4cb83fca4750 container client-container: <nil>
  STEP: delete the pod @ 09/21/24 12:25:04.853
  I0921 12:25:04.870516 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4618" for this suite. @ 09/21/24 12:25:04.875
• [4.109 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 09/21/24 12:25:04.884
  I0921 12:25:04.884578 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:25:04.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:25:04.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:25:04.907
  STEP: Creating configMap with name projected-configmap-test-volume-map-962947ba-e237-4c6a-843c-3a2e182b58a2 @ 09/21/24 12:25:04.909
  STEP: Creating a pod to test consume configMaps @ 09/21/24 12:25:04.915
  STEP: Saw pod success @ 09/21/24 12:25:08.95
  I0921 12:25:08.953974 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod pod-projected-configmaps-d4d3c836-4c42-4710-a378-efd70f91bdbf container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 12:25:08.963
  I0921 12:25:08.985522 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1410" for this suite. @ 09/21/24 12:25:08.989
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 09/21/24 12:25:08.997
  I0921 12:25:08.997891 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:25:08.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:25:09.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:25:09.02
  STEP: Creating configMap with name projected-configmap-test-volume-map-451c14e6-dd43-4c37-b175-a381b36e33fe @ 09/21/24 12:25:09.022
  STEP: Creating a pod to test consume configMaps @ 09/21/24 12:25:09.026
  STEP: Saw pod success @ 09/21/24 12:25:11.047
  I0921 12:25:11.050790 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod pod-projected-configmaps-64506fdb-f186-4182-939a-ffe858409175 container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 12:25:11.059
  I0921 12:25:11.079711 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4089" for this suite. @ 09/21/24 12:25:11.084
• [2.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 09/21/24 12:25:11.095
  I0921 12:25:11.095412 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir @ 09/21/24 12:25:11.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:25:11.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:25:11.119
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/21/24 12:25:11.121
  STEP: Saw pod success @ 09/21/24 12:25:13.141
  I0921 12:25:13.145768 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod pod-aedd18a6-345b-42c6-b5ff-bbf32975cb1c container test-container: <nil>
  STEP: delete the pod @ 09/21/24 12:25:13.154
  I0921 12:25:13.176257 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8346" for this suite. @ 09/21/24 12:25:13.18
• [2.093 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 09/21/24 12:25:13.188
  I0921 12:25:13.188708 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-runtime @ 09/21/24 12:25:13.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:25:13.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:25:13.211
  STEP: create the container @ 09/21/24 12:25:13.213
  W0921 12:25:13.225796      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/21/24 12:25:13.225
  STEP: get the container status @ 09/21/24 12:25:15.242
  STEP: the container should be terminated @ 09/21/24 12:25:15.247
  STEP: the termination message should be set @ 09/21/24 12:25:15.247
  I0921 12:25:15.247586 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/21/24 12:25:15.247
  I0921 12:25:15.268439 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9432" for this suite. @ 09/21/24 12:25:15.272
• [2.092 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 09/21/24 12:25:15.28
  I0921 12:25:15.280773 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/21/24 12:25:15.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:25:15.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:25:15.304
  STEP: set up a multi version CRD @ 09/21/24 12:25:15.306
  I0921 12:25:15.306596 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: rename a version @ 09/21/24 12:25:18.363
  STEP: check the new version name is served @ 09/21/24 12:25:18.376
  STEP: check the old version name is removed @ 09/21/24 12:25:19.188
  STEP: check the other version is not changed @ 09/21/24 12:25:19.794
  I0921 12:25:22.185251 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2191" for this suite. @ 09/21/24 12:25:22.192
• [6.919 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 09/21/24 12:25:22.199
  I0921 12:25:22.199768 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/21/24 12:25:22.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:25:22.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:25:22.221
  I0921 12:25:22.223395 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/21/24 12:25:23.524
  I0921 12:25:23.524481 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-401 --namespace=crd-publish-openapi-401 create -f -'
  I0921 12:25:25.592448 19 builder.go:146] stderr: ""
  I0921 12:25:25.592491 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9262-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0921 12:25:25.592551 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-401 --namespace=crd-publish-openapi-401 delete e2e-test-crd-publish-openapi-9262-crds test-cr'
  I0921 12:25:25.658802 19 builder.go:146] stderr: ""
  I0921 12:25:25.658849 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9262-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0921 12:25:25.658896 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-401 --namespace=crd-publish-openapi-401 apply -f -'
  I0921 12:25:25.719328 19 builder.go:146] stderr: ""
  I0921 12:25:25.719386 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9262-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0921 12:25:25.719440 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-401 --namespace=crd-publish-openapi-401 delete e2e-test-crd-publish-openapi-9262-crds test-cr'
  I0921 12:25:25.773006 19 builder.go:146] stderr: ""
  I0921 12:25:25.773056 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9262-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/21/24 12:25:25.773
  I0921 12:25:25.773238 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-401 explain e2e-test-crd-publish-openapi-9262-crds'
  I0921 12:25:25.817188 19 builder.go:146] stderr: ""
  I0921 12:25:25.817241 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9262-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0921 12:25:27.020642 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-401" for this suite. @ 09/21/24 12:25:27.028
• [4.838 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/21/24 12:25:27.038
  I0921 12:25:27.038051 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/21/24 12:25:27.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:25:27.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:25:27.058
  I0921 12:25:27.061263 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:25:30.151520 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8525" for this suite. @ 09/21/24 12:25:30.157
• [3.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/21/24 12:25:30.166
  I0921 12:25:30.166943 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pods @ 09/21/24 12:25:30.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:25:30.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:25:30.189
  STEP: creating the pod @ 09/21/24 12:25:30.191
  STEP: submitting the pod to kubernetes @ 09/21/24 12:25:30.191
  STEP: verifying the pod is in kubernetes @ 09/21/24 12:25:32.216
  STEP: updating the pod @ 09/21/24 12:25:32.22
  I0921 12:25:32.734777 19 pod_client.go:173] Successfully updated pod "pod-update-c32e122f-0262-4611-9831-d3047a9b92d4"
  STEP: verifying the updated pod is in kubernetes @ 09/21/24 12:25:32.739
  I0921 12:25:32.743433 19 pods.go:391] Pod update OK
  I0921 12:25:32.743539 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7072" for this suite. @ 09/21/24 12:25:32.747
• [2.590 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 09/21/24 12:25:32.756
  I0921 12:25:32.756669 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename namespaces @ 09/21/24 12:25:32.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:25:32.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:25:32.778
  STEP: Updating Namespace "namespaces-4091" @ 09/21/24 12:25:32.78
  I0921 12:25:32.793200 19 namespace.go:389] Namespace "namespaces-4091" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"9303cc22-061c-4ec3-b88e-0f49b5a33cfb", "kubernetes.io/metadata.name":"namespaces-4091", "namespaces-4091":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0921 12:25:32.793297 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4091" for this suite. @ 09/21/24 12:25:32.797
• [0.048 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 09/21/24 12:25:32.804
  I0921 12:25:32.804880 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename var-expansion @ 09/21/24 12:25:32.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:25:32.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:25:32.824
  STEP: creating the pod @ 09/21/24 12:25:32.827
  STEP: waiting for pod running @ 09/21/24 12:25:32.837
  STEP: creating a file in subpath @ 09/21/24 12:25:34.852
  I0921 12:25:34.855900 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9934 PodName:var-expansion-798214a5-5c73-4a42-a2ba-353a97aaa635 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:25:34.855926 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:25:34.856391 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:25:34.856438 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-9934/pods/var-expansion-798214a5-5c73-4a42-a2ba-353a97aaa635/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/21/24 12:25:34.904
  I0921 12:25:34.909673 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9934 PodName:var-expansion-798214a5-5c73-4a42-a2ba-353a97aaa635 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:25:34.909696 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:25:34.910112 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:25:34.910152 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-9934/pods/var-expansion-798214a5-5c73-4a42-a2ba-353a97aaa635/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/21/24 12:25:34.946
  I0921 12:25:35.458780 19 pod_client.go:173] Successfully updated pod "var-expansion-798214a5-5c73-4a42-a2ba-353a97aaa635"
  STEP: waiting for annotated pod running @ 09/21/24 12:25:35.458
  STEP: deleting the pod gracefully @ 09/21/24 12:25:35.463
  I0921 12:25:35.463611 19 delete.go:62] Deleting pod "var-expansion-798214a5-5c73-4a42-a2ba-353a97aaa635" in namespace "var-expansion-9934"
  I0921 12:25:35.472631 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-798214a5-5c73-4a42-a2ba-353a97aaa635" to be fully deleted
  I0921 12:26:07.573790 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9934" for this suite. @ 09/21/24 12:26:07.578
• [34.784 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/21/24 12:26:07.589
  I0921 12:26:07.589436 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename discovery @ 09/21/24 12:26:07.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:26:07.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:26:07.607
  STEP: Setting up server cert @ 09/21/24 12:26:07.614
  STEP: Requesting APIResourceList from "/api/v1" @ 09/21/24 12:26:07.873
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/21/24 12:26:07.875
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/21/24 12:26:07.877
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/21/24 12:26:07.877
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/21/24 12:26:07.878
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/21/24 12:26:07.88
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/21/24 12:26:07.881
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/21/24 12:26:07.881
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/21/24 12:26:07.882
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/21/24 12:26:07.883
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/21/24 12:26:07.884
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/21/24 12:26:07.886
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/21/24 12:26:07.887
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/21/24 12:26:07.888
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/21/24 12:26:07.889
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/21/24 12:26:07.89
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/21/24 12:26:07.891
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/21/24 12:26:07.891
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/21/24 12:26:07.892
  I0921 12:26:07.893691 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1866" for this suite. @ 09/21/24 12:26:07.899
• [0.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 09/21/24 12:26:07.909
  I0921 12:26:07.909379 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 12:26:07.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:26:07.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:26:07.931
  I0921 12:26:07.933362 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-8771 version'
  I0921 12:26:07.973251 19 builder.go:146] stderr: ""
  I0921 12:26:07.973287 19 builder.go:147] stdout: "Client Version: v1.31.1\nKustomize Version: v5.4.2\nServer Version: v1.31.1\n"
  I0921 12:26:07.973517 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8771" for this suite. @ 09/21/24 12:26:07.978
• [0.077 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 09/21/24 12:26:07.986
  I0921 12:26:07.986948 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 12:26:07.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:26:08.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:26:08.008
  STEP: creating Agnhost RC @ 09/21/24 12:26:08.011
  I0921 12:26:08.011734 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-3980 create -f -'
  I0921 12:26:08.111588 19 builder.go:146] stderr: ""
  I0921 12:26:08.111643 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/21/24 12:26:08.111
  I0921 12:26:09.117597 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0921 12:26:09.117628 19 framework.go:733] Found 0 / 1
  I0921 12:26:10.116942 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0921 12:26:10.116978 19 framework.go:733] Found 1 / 1
  I0921 12:26:10.116993 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/21/24 12:26:10.117
  I0921 12:26:10.121583 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0921 12:26:10.121604 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0921 12:26:10.121651 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-3980 patch pod agnhost-primary-4tz9m -p {"metadata":{"annotations":{"x":"y"}}}'
  I0921 12:26:10.175261 19 builder.go:146] stderr: ""
  I0921 12:26:10.175292 19 builder.go:147] stdout: "pod/agnhost-primary-4tz9m patched\n"
  STEP: checking annotations @ 09/21/24 12:26:10.175
  I0921 12:26:10.179622 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0921 12:26:10.179642 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0921 12:26:10.179782 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3980" for this suite. @ 09/21/24 12:26:10.184
• [2.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/21/24 12:26:10.193
  I0921 12:26:10.193456 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pods @ 09/21/24 12:26:10.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:26:10.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:26:10.215
  STEP: Create set of pods @ 09/21/24 12:26:10.217
  I0921 12:26:10.228260 19 pods.go:871] created test-pod-1
  I0921 12:26:10.236527 19 pods.go:871] created test-pod-2
  I0921 12:26:10.242259 19 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/21/24 12:26:10.242
  STEP: waiting for all pods to be deleted @ 09/21/24 12:26:12.285
  I0921 12:26:12.290466 19 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0921 12:26:13.291989 19 pods.go:1140] Pod quantity 1 is different from expected quantity 0
  I0921 12:26:14.292037 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8855" for this suite. @ 09/21/24 12:26:14.297
• [4.114 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 09/21/24 12:26:14.307
  I0921 12:26:14.307146 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename svcaccounts @ 09/21/24 12:26:14.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:26:14.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:26:14.326
  I0921 12:26:14.351523 19 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0921 12:26:14.351552 19 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0921 12:26:14.359774 19 service_accounts.go:253] created pod pod-service-account-mountsa
  I0921 12:26:14.359800 19 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0921 12:26:14.365619 19 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0921 12:26:14.365638 19 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0921 12:26:14.373323 19 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0921 12:26:14.373370 19 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0921 12:26:14.382731 19 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0921 12:26:14.382756 19 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0921 12:26:14.392175 19 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0921 12:26:14.392199 19 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0921 12:26:14.400080 19 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0921 12:26:14.400104 19 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0921 12:26:14.407572 19 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0921 12:26:14.407592 19 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0921 12:26:14.412839 19 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0921 12:26:14.412858 19 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0921 12:26:14.412961 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5303" for this suite. @ 09/21/24 12:26:14.418
• [0.120 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 09/21/24 12:26:14.427
  I0921 12:26:14.427229 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 12:26:14.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:26:14.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:26:14.45
  STEP: create deployment with httpd image @ 09/21/24 12:26:14.454
  I0921 12:26:14.454495 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9454 create -f -'
  I0921 12:26:14.551458 19 builder.go:146] stderr: ""
  I0921 12:26:14.551504 19 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/21/24 12:26:14.551
  I0921 12:26:14.551589 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9454 diff -f -'
  I0921 12:26:14.741732 19 builder.go:135] rc: 1
  I0921 12:26:14.741840 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9454 delete -f -'
  I0921 12:26:14.795255 19 builder.go:146] stderr: ""
  I0921 12:26:14.795294 19 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0921 12:26:14.795511 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9454" for this suite. @ 09/21/24 12:26:14.799
• [0.381 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/21/24 12:26:14.808
  I0921 12:26:14.808208 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename watch @ 09/21/24 12:26:14.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:26:14.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:26:14.828
  STEP: creating a watch on configmaps @ 09/21/24 12:26:14.831
  STEP: creating a new configmap @ 09/21/24 12:26:14.832
  STEP: modifying the configmap once @ 09/21/24 12:26:14.836
  STEP: closing the watch once it receives two notifications @ 09/21/24 12:26:14.846
  I0921 12:26:14.846619 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3255  80bb3abd-eec7-4afb-b5cd-97ce2b5d8463 10450 0 2024-09-21 12:26:14 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-21 12:26:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 12:26:14.846718 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3255  80bb3abd-eec7-4afb-b5cd-97ce2b5d8463 10451 0 2024-09-21 12:26:14 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-21 12:26:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/21/24 12:26:14.846
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/21/24 12:26:14.855
  STEP: deleting the configmap @ 09/21/24 12:26:14.857
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/21/24 12:26:14.863
  I0921 12:26:14.863910 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3255  80bb3abd-eec7-4afb-b5cd-97ce2b5d8463 10452 0 2024-09-21 12:26:14 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-21 12:26:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 12:26:14.864144 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3255  80bb3abd-eec7-4afb-b5cd-97ce2b5d8463 10453 0 2024-09-21 12:26:14 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-21 12:26:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 12:26:14.864635 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3255" for this suite. @ 09/21/24 12:26:14.869
• [0.071 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 09/21/24 12:26:14.879
  I0921 12:26:14.879234 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 12:26:14.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:26:14.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:26:14.895
  STEP: Setting up server cert @ 09/21/24 12:26:14.918
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 12:26:15.095
  STEP: Deploying the webhook pod @ 09/21/24 12:26:15.105
  STEP: Wait for the deployment to be ready @ 09/21/24 12:26:15.118
  I0921 12:26:15.128732 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 12:26:17.144
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 12:26:17.157
  I0921 12:26:18.158462 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/21/24 12:26:18.168
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/21/24 12:26:18.169
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/21/24 12:26:18.182
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/21/24 12:26:19.195
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/21/24 12:26:19.195
  STEP: Having no error when timeout is longer than webhook latency @ 09/21/24 12:26:20.23
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/21/24 12:26:20.23
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/21/24 12:26:25.269
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/21/24 12:26:25.269
  I0921 12:26:30.369995 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7339" for this suite. @ 09/21/24 12:26:30.373
  STEP: Destroying namespace "webhook-markers-5627" for this suite. @ 09/21/24 12:26:30.382
• [15.513 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/21/24 12:26:30.392
  I0921 12:26:30.392684 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename subjectreview @ 09/21/24 12:26:30.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:26:30.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:26:30.412
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-5980" @ 09/21/24 12:26:30.414
  I0921 12:26:30.420303 19 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-5980:e2e"
  I0921 12:26:30.420602 19 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-5980"}
  I0921 12:26:30.420680 19 subjectreviews.go:71] saUID: "54d55f18-9a74-4e16-888a-6be9009ab609"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-5980:e2e" @ 09/21/24 12:26:30.42
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-5980:e2e" @ 09/21/24 12:26:30.421
  I0921 12:26:30.422613 19 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-5980:e2e" api 'list' configmaps in "subjectreview-5980" namespace @ 09/21/24 12:26:30.422
  I0921 12:26:30.423968 19 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-5980:e2e" @ 09/21/24 12:26:30.423
  I0921 12:26:30.425746 19 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0921 12:26:30.425772 19 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0921 12:26:30.425933 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-5980" for this suite. @ 09/21/24 12:26:30.43
• [0.046 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/21/24 12:26:30.439
  I0921 12:26:30.439282 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename events @ 09/21/24 12:26:30.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:26:30.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:26:30.461
  STEP: Create set of events @ 09/21/24 12:26:30.463
  STEP: get a list of Events with a label in the current namespace @ 09/21/24 12:26:30.481
  STEP: delete a list of events @ 09/21/24 12:26:30.492
  I0921 12:26:30.493217 19 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/21/24 12:26:30.528
  I0921 12:26:30.532648 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8997" for this suite. @ 09/21/24 12:26:30.537
• [0.109 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 09/21/24 12:26:30.547
  I0921 12:26:30.547954 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename resourcequota @ 09/21/24 12:26:30.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:26:30.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:26:30.567
  STEP: Creating a ResourceQuota with best effort scope @ 09/21/24 12:26:30.57
  STEP: Ensuring ResourceQuota status is calculated @ 09/21/24 12:26:30.578
  STEP: Creating a ResourceQuota with not best effort scope @ 09/21/24 12:26:32.587
  STEP: Ensuring ResourceQuota status is calculated @ 09/21/24 12:26:32.596
  STEP: Creating a best-effort pod @ 09/21/24 12:26:34.602
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/21/24 12:26:34.62
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/21/24 12:26:36.625
  STEP: Deleting the pod @ 09/21/24 12:26:38.629
  STEP: Ensuring resource quota status released the pod usage @ 09/21/24 12:26:38.654
  STEP: Creating a not best-effort pod @ 09/21/24 12:26:40.661
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/21/24 12:26:40.675
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/21/24 12:26:42.68
  STEP: Deleting the pod @ 09/21/24 12:26:44.688
  STEP: Ensuring resource quota status released the pod usage @ 09/21/24 12:26:44.709
  I0921 12:26:46.716521 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9955" for this suite. @ 09/21/24 12:26:46.72
• [16.181 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 09/21/24 12:26:46.729
  I0921 12:26:46.729168 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename job @ 09/21/24 12:26:46.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:26:46.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:26:46.754
  STEP: Creating a job @ 09/21/24 12:26:46.756
  STEP: Ensuring active pods == parallelism @ 09/21/24 12:26:46.763
  STEP: delete a job @ 09/21/24 12:26:48.769
  STEP: deleting Job.batch foo in namespace job-7571, will wait for the garbage collector to delete the pods @ 09/21/24 12:26:48.769
  I0921 12:26:48.833256 19 resources.go:139] Deleting Job.batch foo took: 8.581347ms
  I0921 12:26:48.933393 19 resources.go:163] Terminating Job.batch foo pods took: 100.133243ms
  STEP: Ensuring job was deleted @ 09/21/24 12:26:50.134
  I0921 12:26:50.140178 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7571" for this suite. @ 09/21/24 12:26:50.145
• [3.425 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 09/21/24 12:26:50.154
  I0921 12:26:50.154140 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 12:26:50.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:26:50.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:26:50.173
  STEP: creating Agnhost RC @ 09/21/24 12:26:50.176
  I0921 12:26:50.176270 19 kubectl.go:1537] namespace kubectl-9394
  I0921 12:26:50.176314 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9394 create -f -'
  I0921 12:26:50.260430 19 builder.go:146] stderr: ""
  I0921 12:26:50.260466 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/21/24 12:26:50.26
  I0921 12:26:51.268231 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0921 12:26:51.268266 19 framework.go:733] Found 0 / 1
  I0921 12:26:52.267455 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0921 12:26:52.267488 19 framework.go:733] Found 1 / 1
  I0921 12:26:52.267502 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0921 12:26:52.271121 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0921 12:26:52.271142 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0921 12:26:52.271149 19 kubectl.go:1544] wait on agnhost-primary startup in kubectl-9394 
  I0921 12:26:52.271198 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9394 logs agnhost-primary-wmmht agnhost-primary'
  I0921 12:26:52.329700 19 builder.go:146] stderr: ""
  I0921 12:26:52.329743 19 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 09/21/24 12:26:52.329
  I0921 12:26:52.329818 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9394 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0921 12:26:52.391461 19 builder.go:146] stderr: ""
  I0921 12:26:52.391526 19 builder.go:147] stdout: "service/rm2 exposed\n"
  I0921 12:26:52.395819 19 utils.go:1203] Service rm2 in namespace kubectl-9394 found.
  STEP: exposing service @ 09/21/24 12:26:54.406
  I0921 12:26:54.406726 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9394 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0921 12:26:54.471108 19 builder.go:146] stderr: ""
  I0921 12:26:54.471154 19 builder.go:147] stdout: "service/rm3 exposed\n"
  I0921 12:26:54.479915 19 utils.go:1203] Service rm3 in namespace kubectl-9394 found.
  I0921 12:26:56.491776 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9394" for this suite. @ 09/21/24 12:26:56.496
• [6.351 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 09/21/24 12:26:56.505
  I0921 12:26:56.505212 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename dns @ 09/21/24 12:26:56.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:26:56.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:26:56.529
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8554.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8554.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 09/21/24 12:26:56.531
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8554.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8554.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/21/24 12:26:56.532
  STEP: creating a pod to probe /etc/hosts @ 09/21/24 12:26:56.532
  STEP: submitting the pod to kubernetes @ 09/21/24 12:26:56.532
  STEP: retrieving the pod @ 09/21/24 12:27:02.569
  STEP: looking for the results for each expected name from probers @ 09/21/24 12:27:02.574
  I0921 12:27:02.593428 19 dns_common.go:527] DNS probes using dns-8554/dns-test-4f2f5f6b-11b8-40aa-a298-4b7ae99bf1f5 succeeded

  STEP: deleting the pod @ 09/21/24 12:27:02.593
  I0921 12:27:02.614896 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8554" for this suite. @ 09/21/24 12:27:02.619
• [6.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 09/21/24 12:27:02.628
  I0921 12:27:02.628357 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename gc @ 09/21/24 12:27:02.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:27:02.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:27:02.647
  STEP: create the deployment @ 09/21/24 12:27:02.649
  W0921 12:27:02.657328      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/21/24 12:27:02.657
  STEP: delete the deployment @ 09/21/24 12:27:03.173
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/21/24 12:27:03.182
  STEP: Gathering metrics @ 09/21/24 12:27:03.704
  W0921 12:27:03.709279      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0921 12:27:03.709310 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0921 12:27:03.709532 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6488" for this suite. @ 09/21/24 12:27:03.714
• [1.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 09/21/24 12:27:03.725
  I0921 12:27:03.725146 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename runtimeclass @ 09/21/24 12:27:03.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:27:03.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:27:03.742
  I0921 12:27:03.782265 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7643" for this suite. @ 09/21/24 12:27:03.787
• [0.070 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 09/21/24 12:27:03.795
  I0921 12:27:03.795143 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename gc @ 09/21/24 12:27:03.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:27:03.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:27:03.815
  STEP: create the rc @ 09/21/24 12:27:03.821
  W0921 12:27:03.830044      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/21/24 12:27:09.842
  STEP: wait for the rc to be deleted @ 09/21/24 12:27:09.86
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/21/24 12:27:14.865
  STEP: Gathering metrics @ 09/21/24 12:27:44.877
  W0921 12:27:44.886928      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0921 12:27:44.887259 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0921 12:27:44.888821 19 delete.go:95] Deleting pod "simpletest.rc-2ktl8" in namespace "gc-5988"
  I0921 12:27:44.908555 19 delete.go:95] Deleting pod "simpletest.rc-2wgr5" in namespace "gc-5988"
  I0921 12:27:44.923786 19 delete.go:95] Deleting pod "simpletest.rc-2xcc4" in namespace "gc-5988"
  I0921 12:27:44.941407 19 delete.go:95] Deleting pod "simpletest.rc-4hvkv" in namespace "gc-5988"
  I0921 12:27:44.958885 19 delete.go:95] Deleting pod "simpletest.rc-4pdvm" in namespace "gc-5988"
  I0921 12:27:44.982718 19 delete.go:95] Deleting pod "simpletest.rc-4s6t4" in namespace "gc-5988"
  I0921 12:27:45.006304 19 delete.go:95] Deleting pod "simpletest.rc-55xwx" in namespace "gc-5988"
  I0921 12:27:45.026519 19 delete.go:95] Deleting pod "simpletest.rc-5nkqt" in namespace "gc-5988"
  I0921 12:27:45.040890 19 delete.go:95] Deleting pod "simpletest.rc-5sjxq" in namespace "gc-5988"
  I0921 12:27:45.060658 19 delete.go:95] Deleting pod "simpletest.rc-6gt5s" in namespace "gc-5988"
  I0921 12:27:45.078968 19 delete.go:95] Deleting pod "simpletest.rc-6kjxg" in namespace "gc-5988"
  I0921 12:27:45.098387 19 delete.go:95] Deleting pod "simpletest.rc-6lrfv" in namespace "gc-5988"
  I0921 12:27:45.114750 19 delete.go:95] Deleting pod "simpletest.rc-6lx9j" in namespace "gc-5988"
  I0921 12:27:45.133625 19 delete.go:95] Deleting pod "simpletest.rc-6qf6v" in namespace "gc-5988"
  I0921 12:27:45.148908 19 delete.go:95] Deleting pod "simpletest.rc-7b8bw" in namespace "gc-5988"
  I0921 12:27:45.164707 19 delete.go:95] Deleting pod "simpletest.rc-7h8xl" in namespace "gc-5988"
  I0921 12:27:45.182235 19 delete.go:95] Deleting pod "simpletest.rc-7l9gq" in namespace "gc-5988"
  I0921 12:27:45.195650 19 delete.go:95] Deleting pod "simpletest.rc-8rj8t" in namespace "gc-5988"
  I0921 12:27:45.217578 19 delete.go:95] Deleting pod "simpletest.rc-8vh97" in namespace "gc-5988"
  I0921 12:27:45.235064 19 delete.go:95] Deleting pod "simpletest.rc-8zkdk" in namespace "gc-5988"
  I0921 12:27:45.251609 19 delete.go:95] Deleting pod "simpletest.rc-95xgb" in namespace "gc-5988"
  I0921 12:27:45.274329 19 delete.go:95] Deleting pod "simpletest.rc-96crz" in namespace "gc-5988"
  I0921 12:27:45.299697 19 delete.go:95] Deleting pod "simpletest.rc-9d7r8" in namespace "gc-5988"
  I0921 12:27:45.315286 19 delete.go:95] Deleting pod "simpletest.rc-9fkkb" in namespace "gc-5988"
  I0921 12:27:45.330789 19 delete.go:95] Deleting pod "simpletest.rc-9g5v4" in namespace "gc-5988"
  I0921 12:27:45.351456 19 delete.go:95] Deleting pod "simpletest.rc-9qhld" in namespace "gc-5988"
  I0921 12:27:45.370094 19 delete.go:95] Deleting pod "simpletest.rc-bd5gh" in namespace "gc-5988"
  I0921 12:27:45.393114 19 delete.go:95] Deleting pod "simpletest.rc-blp5b" in namespace "gc-5988"
  I0921 12:27:45.407092 19 delete.go:95] Deleting pod "simpletest.rc-bzjkg" in namespace "gc-5988"
  I0921 12:27:45.426221 19 delete.go:95] Deleting pod "simpletest.rc-c47d8" in namespace "gc-5988"
  I0921 12:27:45.449320 19 delete.go:95] Deleting pod "simpletest.rc-ckvmf" in namespace "gc-5988"
  I0921 12:27:45.466140 19 delete.go:95] Deleting pod "simpletest.rc-ctkcx" in namespace "gc-5988"
  I0921 12:27:45.486516 19 delete.go:95] Deleting pod "simpletest.rc-cv5j8" in namespace "gc-5988"
  I0921 12:27:45.517203 19 delete.go:95] Deleting pod "simpletest.rc-cvwjx" in namespace "gc-5988"
  I0921 12:27:45.535538 19 delete.go:95] Deleting pod "simpletest.rc-d7kmf" in namespace "gc-5988"
  I0921 12:27:45.566028 19 delete.go:95] Deleting pod "simpletest.rc-ddvks" in namespace "gc-5988"
  I0921 12:27:45.583101 19 delete.go:95] Deleting pod "simpletest.rc-dfcn6" in namespace "gc-5988"
  I0921 12:27:45.601809 19 delete.go:95] Deleting pod "simpletest.rc-dfn66" in namespace "gc-5988"
  I0921 12:27:45.619538 19 delete.go:95] Deleting pod "simpletest.rc-dkxcq" in namespace "gc-5988"
  I0921 12:27:45.636212 19 delete.go:95] Deleting pod "simpletest.rc-f2rlw" in namespace "gc-5988"
  I0921 12:27:45.651201 19 delete.go:95] Deleting pod "simpletest.rc-fh9qz" in namespace "gc-5988"
  I0921 12:27:45.671903 19 delete.go:95] Deleting pod "simpletest.rc-frf89" in namespace "gc-5988"
  I0921 12:27:45.689429 19 delete.go:95] Deleting pod "simpletest.rc-gb2th" in namespace "gc-5988"
  I0921 12:27:45.706637 19 delete.go:95] Deleting pod "simpletest.rc-gl46n" in namespace "gc-5988"
  I0921 12:27:45.723161 19 delete.go:95] Deleting pod "simpletest.rc-gtlt6" in namespace "gc-5988"
  I0921 12:27:45.741877 19 delete.go:95] Deleting pod "simpletest.rc-gvk2j" in namespace "gc-5988"
  I0921 12:27:45.756537 19 delete.go:95] Deleting pod "simpletest.rc-hnpgr" in namespace "gc-5988"
  I0921 12:27:45.785831 19 delete.go:95] Deleting pod "simpletest.rc-hq6ln" in namespace "gc-5988"
  I0921 12:27:45.802219 19 delete.go:95] Deleting pod "simpletest.rc-hv2tk" in namespace "gc-5988"
  I0921 12:27:45.818472 19 delete.go:95] Deleting pod "simpletest.rc-hwlh2" in namespace "gc-5988"
  I0921 12:27:45.834994 19 delete.go:95] Deleting pod "simpletest.rc-j6ks8" in namespace "gc-5988"
  I0921 12:27:45.860734 19 delete.go:95] Deleting pod "simpletest.rc-j87qs" in namespace "gc-5988"
  I0921 12:27:45.875519 19 delete.go:95] Deleting pod "simpletest.rc-jddmq" in namespace "gc-5988"
  I0921 12:27:45.895644 19 delete.go:95] Deleting pod "simpletest.rc-jp8kf" in namespace "gc-5988"
  I0921 12:27:45.909009 19 delete.go:95] Deleting pod "simpletest.rc-kgtdm" in namespace "gc-5988"
  I0921 12:27:45.932499 19 delete.go:95] Deleting pod "simpletest.rc-khpk5" in namespace "gc-5988"
  I0921 12:27:45.952816 19 delete.go:95] Deleting pod "simpletest.rc-kk7k7" in namespace "gc-5988"
  I0921 12:27:45.969671 19 delete.go:95] Deleting pod "simpletest.rc-kpmhg" in namespace "gc-5988"
  I0921 12:27:45.991243 19 delete.go:95] Deleting pod "simpletest.rc-kqdcp" in namespace "gc-5988"
  I0921 12:27:46.011094 19 delete.go:95] Deleting pod "simpletest.rc-kqwkr" in namespace "gc-5988"
  I0921 12:27:46.029338 19 delete.go:95] Deleting pod "simpletest.rc-lf5pj" in namespace "gc-5988"
  I0921 12:27:46.047890 19 delete.go:95] Deleting pod "simpletest.rc-lkh6j" in namespace "gc-5988"
  I0921 12:27:46.064598 19 delete.go:95] Deleting pod "simpletest.rc-lq9q6" in namespace "gc-5988"
  I0921 12:27:46.081979 19 delete.go:95] Deleting pod "simpletest.rc-m4l4q" in namespace "gc-5988"
  I0921 12:27:46.097198 19 delete.go:95] Deleting pod "simpletest.rc-n2n7f" in namespace "gc-5988"
  I0921 12:27:46.117000 19 delete.go:95] Deleting pod "simpletest.rc-nbvdr" in namespace "gc-5988"
  I0921 12:27:46.134071 19 delete.go:95] Deleting pod "simpletest.rc-ndfzb" in namespace "gc-5988"
  I0921 12:27:46.151615 19 delete.go:95] Deleting pod "simpletest.rc-nnh66" in namespace "gc-5988"
  I0921 12:27:46.165200 19 delete.go:95] Deleting pod "simpletest.rc-p44f5" in namespace "gc-5988"
  I0921 12:27:46.185690 19 delete.go:95] Deleting pod "simpletest.rc-p877b" in namespace "gc-5988"
  I0921 12:27:46.205778 19 delete.go:95] Deleting pod "simpletest.rc-pcqs8" in namespace "gc-5988"
  I0921 12:27:46.219550 19 delete.go:95] Deleting pod "simpletest.rc-pj7gw" in namespace "gc-5988"
  I0921 12:27:46.232545 19 delete.go:95] Deleting pod "simpletest.rc-pltqf" in namespace "gc-5988"
  I0921 12:27:46.251552 19 delete.go:95] Deleting pod "simpletest.rc-pqck2" in namespace "gc-5988"
  I0921 12:27:46.264682 19 delete.go:95] Deleting pod "simpletest.rc-q2cwn" in namespace "gc-5988"
  I0921 12:27:46.281166 19 delete.go:95] Deleting pod "simpletest.rc-q5r9s" in namespace "gc-5988"
  I0921 12:27:46.298032 19 delete.go:95] Deleting pod "simpletest.rc-qtqr8" in namespace "gc-5988"
  I0921 12:27:46.330951 19 delete.go:95] Deleting pod "simpletest.rc-rmnx7" in namespace "gc-5988"
  I0921 12:27:46.384160 19 delete.go:95] Deleting pod "simpletest.rc-tfgjh" in namespace "gc-5988"
  I0921 12:27:46.432210 19 delete.go:95] Deleting pod "simpletest.rc-tkwvc" in namespace "gc-5988"
  I0921 12:27:46.482881 19 delete.go:95] Deleting pod "simpletest.rc-tpgkf" in namespace "gc-5988"
  I0921 12:27:46.536497 19 delete.go:95] Deleting pod "simpletest.rc-trrp4" in namespace "gc-5988"
  I0921 12:27:46.589427 19 delete.go:95] Deleting pod "simpletest.rc-v7cs7" in namespace "gc-5988"
  I0921 12:27:46.642293 19 delete.go:95] Deleting pod "simpletest.rc-v84v4" in namespace "gc-5988"
  I0921 12:27:46.680735 19 delete.go:95] Deleting pod "simpletest.rc-v9zk9" in namespace "gc-5988"
  I0921 12:27:46.740316 19 delete.go:95] Deleting pod "simpletest.rc-vmzrn" in namespace "gc-5988"
  I0921 12:27:46.782353 19 delete.go:95] Deleting pod "simpletest.rc-vzr4r" in namespace "gc-5988"
  I0921 12:27:46.838176 19 delete.go:95] Deleting pod "simpletest.rc-w8vvx" in namespace "gc-5988"
  I0921 12:27:46.885683 19 delete.go:95] Deleting pod "simpletest.rc-wbggg" in namespace "gc-5988"
  I0921 12:27:46.932222 19 delete.go:95] Deleting pod "simpletest.rc-wl7zk" in namespace "gc-5988"
  I0921 12:27:46.979195 19 delete.go:95] Deleting pod "simpletest.rc-x548j" in namespace "gc-5988"
  I0921 12:27:47.043418 19 delete.go:95] Deleting pod "simpletest.rc-x7hg8" in namespace "gc-5988"
  I0921 12:27:47.084120 19 delete.go:95] Deleting pod "simpletest.rc-xsp64" in namespace "gc-5988"
  I0921 12:27:47.133833 19 delete.go:95] Deleting pod "simpletest.rc-xw5jv" in namespace "gc-5988"
  I0921 12:27:47.184149 19 delete.go:95] Deleting pod "simpletest.rc-z4x8t" in namespace "gc-5988"
  I0921 12:27:47.227284 19 delete.go:95] Deleting pod "simpletest.rc-z7nv4" in namespace "gc-5988"
  I0921 12:27:47.288811 19 delete.go:95] Deleting pod "simpletest.rc-zbgnl" in namespace "gc-5988"
  I0921 12:27:47.338853 19 delete.go:95] Deleting pod "simpletest.rc-zfkzm" in namespace "gc-5988"
  I0921 12:27:47.389247 19 delete.go:95] Deleting pod "simpletest.rc-zhkng" in namespace "gc-5988"
  I0921 12:27:47.433602 19 delete.go:95] Deleting pod "simpletest.rc-zhzr9" in namespace "gc-5988"
  I0921 12:27:47.487511 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5988" for this suite. @ 09/21/24 12:27:47.53
• [43.779 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/21/24 12:27:47.575
  I0921 12:27:47.575752 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename deployment @ 09/21/24 12:27:47.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:27:47.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:27:47.601
  I0921 12:27:47.604797 19 deployment.go:1645] Creating simple deployment test-new-deployment
  I0921 12:27:47.623584 19 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  I0921 12:27:49.634820 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 21, 12, 27, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 27, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 27, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 27, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-64bcfc6446\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: getting scale subresource @ 09/21/24 12:27:51.644
  STEP: updating a scale subresource @ 09/21/24 12:27:51.649
  STEP: verifying the deployment Spec.Replicas was modified @ 09/21/24 12:27:51.657
  STEP: Patch a scale subresource @ 09/21/24 12:27:51.661
  I0921 12:27:51.686763 19 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1281f5ef-7f0d-4f8d-8203-0c55c234229f",
      ResourceVersion: (string) (len=5) "13112",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862518467,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0921 12:27:51.693026 19 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3abc7d3f-5530-4b7e-b927-f636a8daab75",
      ResourceVersion: (string) (len=5) "13115",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862518467,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "1281f5ef-7f0d-4f8d-8203-0c55c234229f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518471,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 32 38 31 66 35  65 66 2d 37 66 30 64 2d  |\"1281f5ef-7f0d-|
              00000120  34 66 38 64 2d 38 32 30  33 2d 30 63 35 35 63 32  |4f8d-8203-0c55c2|
              00000130  33 34 32 32 39 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |34229f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0921 12:27:51.704309 19 deployment.go:67] Pod "test-new-deployment-64bcfc6446-9p8rp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-9p8rp",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6bb1db6c-c8e5-4b9b-a4a4-c7ba02e161bc",
      ResourceVersion: (string) (len=5) "13116",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862518471,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3abc7d3f-5530-4b7e-b927-f636a8daab75",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518471,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  62 63 37 64 33 66 2d 35  |d\":\"3abc7d3f-5|
              00000090  35 33 30 2d 34 62 37 65  2d 62 39 32 37 2d 66 36  |530-4b7e-b927-f6|
              000000a0  33 36 61 38 64 61 61 62  37 35 5c 22 7d 22 3a 7b  |36a8daab75\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gndx6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gndx6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-69-84",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518471,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:27:51.705802 19 deployment.go:67] Pod "test-new-deployment-64bcfc6446-9s8zn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-9s8zn",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7cb95fe4-214f-4d91-81a3-490f22d8d755",
      ResourceVersion: (string) (len=5) "13106",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862518467,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3abc7d3f-5530-4b7e-b927-f636a8daab75",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  62 63 37 64 33 66 2d 35  |d\":\"3abc7d3f-5|
              00000090  35 33 30 2d 34 62 37 65  2d 62 39 32 37 2d 66 36  |530-4b7e-b927-f6|
              000000a0  33 36 61 38 64 61 61 62  37 35 5c 22 7d 22 3a 7b  |36a8daab75\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 37  2e 33 33 5c 22 7d 22 3a  |2.168.27.33\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kqrfl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kqrfl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.95.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.95.123"
        }
      },
      PodIP: (string) (len=13) "192.168.27.33",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.27.33"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862518467,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862518469,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://457d0c1354a388bc70cf29dcd826cc4abf8de3743c95f142f2f4e3117037fe22",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kqrfl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:27:51.707149 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-206" for this suite. @ 09/21/24 12:27:51.711
• [4.153 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/21/24 12:27:51.728
  I0921 12:27:51.728385 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename proxy @ 09/21/24 12:27:51.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:27:51.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:27:51.755
  I0921 12:27:51.758649 19 proxy.go:293] Creating pod...
  I0921 12:27:53.779316 19 proxy.go:317] Creating service...
  I0921 12:27:53.790932 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-567/pods/agnhost/proxy/some/path/with/DELETE
  I0921 12:27:53.796539 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0921 12:27:53.796572 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-567/pods/agnhost/proxy/some/path/with/GET
  I0921 12:27:53.802378 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0921 12:27:53.802403 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-567/pods/agnhost/proxy/some/path/with/HEAD
  I0921 12:27:53.806424 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0921 12:27:53.806443 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-567/pods/agnhost/proxy/some/path/with/OPTIONS
  I0921 12:27:53.810373 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0921 12:27:53.810393 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-567/pods/agnhost/proxy/some/path/with/PATCH
  I0921 12:27:53.814441 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0921 12:27:53.814471 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-567/pods/agnhost/proxy/some/path/with/POST
  I0921 12:27:53.819015 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0921 12:27:53.819038 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-567/pods/agnhost/proxy/some/path/with/PUT
  I0921 12:27:53.824531 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0921 12:27:53.824556 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-567/services/test-service/proxy/some/path/with/DELETE
  I0921 12:27:53.832167 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0921 12:27:53.832205 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-567/services/test-service/proxy/some/path/with/GET
  I0921 12:27:53.841771 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0921 12:27:53.841793 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-567/services/test-service/proxy/some/path/with/HEAD
  I0921 12:27:53.850435 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0921 12:27:53.850457 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-567/services/test-service/proxy/some/path/with/OPTIONS
  I0921 12:27:53.859945 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0921 12:27:53.859971 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-567/services/test-service/proxy/some/path/with/PATCH
  I0921 12:27:53.868839 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0921 12:27:53.868865 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-567/services/test-service/proxy/some/path/with/POST
  I0921 12:27:53.876015 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0921 12:27:53.876043 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-567/services/test-service/proxy/some/path/with/PUT
  I0921 12:27:53.883249 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0921 12:27:53.883396 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-567" for this suite. @ 09/21/24 12:27:53.889
• [2.169 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/21/24 12:27:53.897
  I0921 12:27:53.897802 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename disruption @ 09/21/24 12:27:53.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:27:53.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:27:53.918
  STEP: Creating a kubernetes client @ 09/21/24 12:27:53.921
  I0921 12:27:53.921543 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename disruption-2 @ 09/21/24 12:27:53.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:27:53.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:27:53.943
  STEP: Waiting for the pdb to be processed @ 09/21/24 12:27:53.951
  STEP: Waiting for the pdb to be processed @ 09/21/24 12:27:55.963
  STEP: Waiting for the pdb to be processed @ 09/21/24 12:27:57.974
  STEP: listing a collection of PDBs across all namespaces @ 09/21/24 12:27:59.979
  STEP: listing a collection of PDBs in namespace disruption-7730 @ 09/21/24 12:27:59.984
  STEP: deleting a collection of PDBs @ 09/21/24 12:27:59.989
  STEP: Waiting for the PDB collection to be deleted @ 09/21/24 12:28:00.006
  I0921 12:28:00.011461 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8097" for this suite. @ 09/21/24 12:28:00.016
  I0921 12:28:00.026044 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7730" for this suite. @ 09/21/24 12:28:00.029
• [6.142 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 09/21/24 12:28:00.039
  I0921 12:28:00.039565 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename resourcequota @ 09/21/24 12:28:00.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:28:00.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:28:00.057
  STEP: Counting existing ResourceQuota @ 09/21/24 12:28:00.059
  STEP: Creating a ResourceQuota @ 09/21/24 12:28:05.064
  STEP: Ensuring resource quota status is calculated @ 09/21/24 12:28:05.07
  STEP: Creating a Pod that fits quota @ 09/21/24 12:28:07.077
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/21/24 12:28:07.094
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/21/24 12:28:09.101
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/21/24 12:28:09.103
  STEP: Ensuring a pod cannot update its resource requirements @ 09/21/24 12:28:09.105
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/21/24 12:28:09.109
  STEP: Deleting the pod @ 09/21/24 12:28:11.116
  STEP: Ensuring resource quota status released the pod usage @ 09/21/24 12:28:11.138
  I0921 12:28:13.144732 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2306" for this suite. @ 09/21/24 12:28:13.149
• [13.119 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/21/24 12:28:13.158
  I0921 12:28:13.158813 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename watch @ 09/21/24 12:28:13.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:28:13.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:28:13.179
  STEP: creating a watch on configmaps with a certain label @ 09/21/24 12:28:13.182
  STEP: creating a new configmap @ 09/21/24 12:28:13.183
  STEP: modifying the configmap once @ 09/21/24 12:28:13.188
  STEP: changing the label value of the configmap @ 09/21/24 12:28:13.197
  STEP: Expecting to observe a delete notification for the watched object @ 09/21/24 12:28:13.206
  I0921 12:28:13.206392 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4749  c98b93d4-effd-4b58-a923-29657574cc41 13841 0 2024-09-21 12:28:13 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-21 12:28:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 12:28:13.206667 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4749  c98b93d4-effd-4b58-a923-29657574cc41 13842 0 2024-09-21 12:28:13 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-21 12:28:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 12:28:13.206757 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4749  c98b93d4-effd-4b58-a923-29657574cc41 13843 0 2024-09-21 12:28:13 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-21 12:28:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/21/24 12:28:13.206
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/21/24 12:28:13.218
  STEP: changing the label value of the configmap back @ 09/21/24 12:28:23.22
  STEP: modifying the configmap a third time @ 09/21/24 12:28:23.231
  STEP: deleting the configmap @ 09/21/24 12:28:23.242
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/21/24 12:28:23.25
  I0921 12:28:23.251046 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4749  c98b93d4-effd-4b58-a923-29657574cc41 13874 0 2024-09-21 12:28:13 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-21 12:28:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 12:28:23.251158 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4749  c98b93d4-effd-4b58-a923-29657574cc41 13876 0 2024-09-21 12:28:13 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-21 12:28:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 12:28:23.251400 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4749  c98b93d4-effd-4b58-a923-29657574cc41 13877 0 2024-09-21 12:28:13 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-21 12:28:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 12:28:23.251545 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4749" for this suite. @ 09/21/24 12:28:23.255
• [10.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 09/21/24 12:28:23.265
  I0921 12:28:23.265174 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename containers @ 09/21/24 12:28:23.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:28:23.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:28:23.285
  STEP: Creating a pod to test override command @ 09/21/24 12:28:23.288
  STEP: Saw pod success @ 09/21/24 12:28:27.317
  I0921 12:28:27.322133 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod client-containers-f9ab14d3-ecd5-4bf0-883b-7f423475b5b6 container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 12:28:27.342
  I0921 12:28:27.365403 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6418" for this suite. @ 09/21/24 12:28:27.37
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/21/24 12:28:27.378
  I0921 12:28:27.378168 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename conformance-tests @ 09/21/24 12:28:27.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:28:27.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:28:27.398
  STEP: Getting node addresses @ 09/21/24 12:28:27.401
  I0921 12:28:27.401096 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0921 12:28:27.406507 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-9350" for this suite. @ 09/21/24 12:28:27.411
• [0.041 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/21/24 12:28:27.419
  I0921 12:28:27.419198 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:28:27.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:28:27.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:28:27.441
  STEP: Creating configMap with name configmap-projected-all-test-volume-a8c56084-9e4b-4c5f-aa83-f3b2cd51ec78 @ 09/21/24 12:28:27.443
  STEP: Creating secret with name secret-projected-all-test-volume-fc52bee0-3907-42f6-9275-bcc4a215904b @ 09/21/24 12:28:27.45
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/21/24 12:28:27.454
  STEP: Saw pod success @ 09/21/24 12:28:31.482
  I0921 12:28:31.487902 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod projected-volume-313dfd7b-cd26-4fba-a2eb-ec1b308711fa container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 12:28:31.496
  I0921 12:28:31.520134 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-438" for this suite. @ 09/21/24 12:28:31.524
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/21/24 12:28:31.533
  I0921 12:28:31.533543 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename daemonsets @ 09/21/24 12:28:31.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:28:31.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:28:31.554
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/21/24 12:28:31.588
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/21/24 12:28:31.593
  I0921 12:28:31.601530 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:28:31.601567 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:28:31.605702 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 12:28:31.605725 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  I0921 12:28:32.598918 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:28:32.598958 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:28:32.603301 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0921 12:28:32.603323 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  I0921 12:28:33.599974 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:28:33.600048 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:28:33.604162 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0921 12:28:33.604196 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  I0921 12:28:34.602185 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:28:34.602238 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:28:34.606584 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0921 12:28:34.606624 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  I0921 12:28:35.598864 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:28:35.598917 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:28:35.603129 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0921 12:28:35.603279 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/21/24 12:28:35.608
  I0921 12:28:35.632834 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:28:35.633099 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:28:35.638790 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0921 12:28:35.638928 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/21/24 12:28:35.638
  STEP: Deleting DaemonSet "daemon-set" @ 09/21/24 12:28:36.648
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9485, will wait for the garbage collector to delete the pods @ 09/21/24 12:28:36.648
  I0921 12:28:36.714308 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.740875ms
  I0921 12:28:36.814565 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.24948ms
  I0921 12:28:38.524598 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 12:28:38.524643 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0921 12:28:38.528012 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14095"},"items":null}

  I0921 12:28:38.532846 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14095"},"items":null}

  I0921 12:28:38.548413 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9485" for this suite. @ 09/21/24 12:28:38.552
• [7.028 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 09/21/24 12:28:38.562
  I0921 12:28:38.562422 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:28:38.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:28:38.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:28:38.58
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 12:28:38.583
  STEP: Saw pod success @ 09/21/24 12:28:42.613
  I0921 12:28:42.617436 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downwardapi-volume-53953e59-6e7f-4406-b2be-0cfdae08e3c7 container client-container: <nil>
  STEP: delete the pod @ 09/21/24 12:28:42.625
  I0921 12:28:42.646598 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2281" for this suite. @ 09/21/24 12:28:42.651
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/21/24 12:28:42.66
  I0921 12:28:42.660895 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename events @ 09/21/24 12:28:42.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:28:42.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:28:42.681
  STEP: Create set of events @ 09/21/24 12:28:42.684
  I0921 12:28:42.689706 19 core_events.go:198] created test-event-1
  I0921 12:28:42.694445 19 core_events.go:198] created test-event-2
  I0921 12:28:42.699482 19 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/21/24 12:28:42.699
  STEP: delete collection of events @ 09/21/24 12:28:42.702
  I0921 12:28:42.702855 19 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/21/24 12:28:42.734
  I0921 12:28:42.734551 19 core_events.go:230] requesting list of events to confirm quantity
  I0921 12:28:42.739536 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4319" for this suite. @ 09/21/24 12:28:42.743
• [0.092 seconds]
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 09/21/24 12:28:42.752
  I0921 12:28:42.752605 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 12:28:42.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:28:42.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:28:42.771
  STEP: Creating the pod @ 09/21/24 12:28:42.774
  I0921 12:28:45.326024 19 pod_client.go:173] Successfully updated pod "labelsupdatef508a74f-1664-4752-97f5-d9cceb879d64"
  I0921 12:28:49.357240 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-84" for this suite. @ 09/21/24 12:28:49.362
• [6.619 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 09/21/24 12:28:49.371
  I0921 12:28:49.371789 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 12:28:49.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:28:49.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:28:49.395
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 12:28:49.397
  STEP: Saw pod success @ 09/21/24 12:28:53.427
  I0921 12:28:53.431807 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod downwardapi-volume-fda3447c-22b0-4ea7-83c7-ebd94258632c container client-container: <nil>
  STEP: delete the pod @ 09/21/24 12:28:53.445
  I0921 12:28:53.467440 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7979" for this suite. @ 09/21/24 12:28:53.472
• [4.108 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/21/24 12:28:53.479
  I0921 12:28:53.479873 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:28:53.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:28:53.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:28:53.501
  STEP: Creating projection with secret that has name projected-secret-test-e45b8053-69e2-4d50-80a0-07be7e2e80b1 @ 09/21/24 12:28:53.503
  STEP: Creating a pod to test consume secrets @ 09/21/24 12:28:53.507
  STEP: Saw pod success @ 09/21/24 12:28:57.538
  I0921 12:28:57.543405 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod pod-projected-secrets-29781d73-15c3-4ef0-a5fe-a43ae8a1ad1e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 12:28:57.552
  I0921 12:28:57.570500 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7568" for this suite. @ 09/21/24 12:28:57.574
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/21/24 12:28:57.584
  I0921 12:28:57.584659 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename tables @ 09/21/24 12:28:57.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:28:57.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:28:57.606
  I0921 12:28:57.611080 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8123" for this suite. @ 09/21/24 12:28:57.615
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/21/24 12:28:57.624
  I0921 12:28:57.624840 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pod-network-test @ 09/21/24 12:28:57.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:28:57.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:28:57.643
  STEP: Performing setup for networking test in namespace pod-network-test-3228 @ 09/21/24 12:28:57.646
  STEP: creating a selector @ 09/21/24 12:28:57.646
  STEP: Creating the service pods in kubernetes @ 09/21/24 12:28:57.646
  I0921 12:28:57.646151 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/21/24 12:29:19.771
  I0921 12:29:21.795180 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0921 12:29:21.795214 19 networking.go:42] Breadth first check of 192.168.171.144 on host 172.31.2.8...
  I0921 12:29:21.799601 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.27.26:9080/dial?request=hostname&protocol=udp&host=192.168.171.144&port=8081&tries=1'] Namespace:pod-network-test-3228 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:29:21.799633 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:29:21.800089 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:29:21.800137 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3228/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.27.26%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.171.144%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0921 12:29:21.841469 19 utils.go:356] Waiting for responses: map[]
  I0921 12:29:21.841526 19 utils.go:360] reached 192.168.171.144 after 0/1 tries
  I0921 12:29:21.841551 19 networking.go:42] Breadth first check of 192.168.126.146 on host 172.31.69.84...
  I0921 12:29:21.846767 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.27.26:9080/dial?request=hostname&protocol=udp&host=192.168.126.146&port=8081&tries=1'] Namespace:pod-network-test-3228 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:29:21.846790 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:29:21.847194 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:29:21.847234 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3228/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.27.26%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.126.146%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0921 12:29:21.882933 19 utils.go:356] Waiting for responses: map[]
  I0921 12:29:21.882970 19 utils.go:360] reached 192.168.126.146 after 0/1 tries
  I0921 12:29:21.882980 19 networking.go:42] Breadth first check of 192.168.27.29 on host 172.31.95.123...
  I0921 12:29:21.887062 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.27.26:9080/dial?request=hostname&protocol=udp&host=192.168.27.29&port=8081&tries=1'] Namespace:pod-network-test-3228 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:29:21.887081 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:29:21.887521 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:29:21.887565 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3228/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.27.26%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.27.29%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0921 12:29:21.926052 19 utils.go:356] Waiting for responses: map[]
  I0921 12:29:21.926092 19 utils.go:360] reached 192.168.27.29 after 0/1 tries
  I0921 12:29:21.926102 19 networking.go:53] Going to retry 0 out of 3 pods....
  I0921 12:29:21.926199 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3228" for this suite. @ 09/21/24 12:29:21.931
• [24.317 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 09/21/24 12:29:21.942
  I0921 12:29:21.942137 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename namespaces @ 09/21/24 12:29:21.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:29:21.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:29:21.961
  STEP: creating a Namespace @ 09/21/24 12:29:21.963
  STEP: patching the Namespace @ 09/21/24 12:29:21.98
  STEP: get the Namespace and ensuring it has the label @ 09/21/24 12:29:21.987
  I0921 12:29:21.991634 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4273" for this suite. @ 09/21/24 12:29:21.998
  STEP: Destroying namespace "nspatchtest-37d04a0f-1235-45e4-a982-00703803fe42-7389" for this suite. @ 09/21/24 12:29:22.007
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 09/21/24 12:29:22.016
  I0921 12:29:22.016086 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename runtimeclass @ 09/21/24 12:29:22.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:29:22.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:29:22.035
  I0921 12:29:24.072689 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6541" for this suite. @ 09/21/24 12:29:24.077
• [2.070 seconds]
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 09/21/24 12:29:24.086
  I0921 12:29:24.086371 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 12:29:24.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:29:24.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:29:24.109
  STEP: Creating a pod to test downward api env vars @ 09/21/24 12:29:24.113
  STEP: Saw pod success @ 09/21/24 12:29:28.142
  I0921 12:29:28.147641 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downward-api-10d84e71-a50f-45e3-a3b6-1579e964462b container dapi-container: <nil>
  STEP: delete the pod @ 09/21/24 12:29:28.156
  I0921 12:29:28.174511 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6856" for this suite. @ 09/21/24 12:29:28.179
• [4.106 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 09/21/24 12:29:28.192
  I0921 12:29:28.192428 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename resourcequota @ 09/21/24 12:29:28.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:29:28.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:29:28.219
  STEP: Discovering how many secrets are in namespace by default @ 09/21/24 12:29:28.223
  STEP: Counting existing ResourceQuota @ 09/21/24 12:29:33.228
  STEP: Creating a ResourceQuota @ 09/21/24 12:29:38.233
  STEP: Ensuring resource quota status is calculated @ 09/21/24 12:29:38.239
  STEP: Creating a Secret @ 09/21/24 12:29:40.244
  STEP: Ensuring resource quota status captures secret creation @ 09/21/24 12:29:40.259
  STEP: Deleting a secret @ 09/21/24 12:29:42.265
  STEP: Ensuring resource quota status released usage @ 09/21/24 12:29:42.275
  I0921 12:29:44.280886 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4238" for this suite. @ 09/21/24 12:29:44.285
• [16.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 09/21/24 12:29:44.294
  I0921 12:29:44.294260 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename deployment @ 09/21/24 12:29:44.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:29:44.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:29:44.316
  STEP: creating a Deployment @ 09/21/24 12:29:44.322
  I0921 12:29:44.322784 19 deployment.go:507] Creating simple deployment test-deployment-qvxvp
  I0921 12:29:44.339069 19 deployment.go:222] deployment "test-deployment-qvxvp" doesn't have the required revision set
  STEP: Getting /status @ 09/21/24 12:29:46.358
  I0921 12:29:46.363207 19 deployment.go:532] Deployment test-deployment-qvxvp has Conditions: [{Available True 2024-09-21 12:29:45 +0000 UTC 2024-09-21 12:29:45 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-09-21 12:29:45 +0000 UTC 2024-09-21 12:29:44 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qvxvp-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/21/24 12:29:46.363
  I0921 12:29:46.375957 19 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 29, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 29, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 29, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 29, 44, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-qvxvp-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/21/24 12:29:46.375
  I0921 12:29:46.377578 19 deployment.go:579] Observed &Deployment event: ADDED
  I0921 12:29:46.377607 19 deployment.go:575] Observed Deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-21 12:29:44 +0000 UTC 2024-09-21 12:29:44 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qvxvp-f4dbbbf74"}
  I0921 12:29:46.377705 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0921 12:29:46.377730 19 deployment.go:575] Observed Deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-21 12:29:44 +0000 UTC 2024-09-21 12:29:44 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qvxvp-f4dbbbf74"}
  I0921 12:29:46.377775 19 deployment.go:575] Observed Deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-21 12:29:44 +0000 UTC 2024-09-21 12:29:44 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0921 12:29:46.377866 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0921 12:29:46.377907 19 deployment.go:575] Observed Deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-21 12:29:44 +0000 UTC 2024-09-21 12:29:44 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0921 12:29:46.377917 19 deployment.go:575] Observed Deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-21 12:29:44 +0000 UTC 2024-09-21 12:29:44 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-qvxvp-f4dbbbf74" is progressing.}
  I0921 12:29:46.378012 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0921 12:29:46.378041 19 deployment.go:575] Observed Deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-21 12:29:45 +0000 UTC 2024-09-21 12:29:45 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0921 12:29:46.378051 19 deployment.go:575] Observed Deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-21 12:29:45 +0000 UTC 2024-09-21 12:29:44 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qvxvp-f4dbbbf74" has successfully progressed.}
  I0921 12:29:46.378141 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0921 12:29:46.378154 19 deployment.go:575] Observed Deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-21 12:29:45 +0000 UTC 2024-09-21 12:29:45 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0921 12:29:46.378163 19 deployment.go:575] Observed Deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-21 12:29:45 +0000 UTC 2024-09-21 12:29:44 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qvxvp-f4dbbbf74" has successfully progressed.}
  I0921 12:29:46.378239 19 deployment.go:572] Found Deployment test-deployment-qvxvp in namespace deployment-895 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0921 12:29:46.378252 19 deployment.go:583] Deployment test-deployment-qvxvp has an updated status
  STEP: patching the Statefulset Status @ 09/21/24 12:29:46.378
  I0921 12:29:46.378279 19 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0921 12:29:46.387364 19 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/21/24 12:29:46.387
  I0921 12:29:46.388820 19 deployment.go:616] Observed &Deployment event: ADDED
  I0921 12:29:46.388844 19 deployment.go:612] Observed deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-21 12:29:44 +0000 UTC 2024-09-21 12:29:44 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qvxvp-f4dbbbf74"}
  I0921 12:29:46.388934 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0921 12:29:46.388953 19 deployment.go:612] Observed deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-21 12:29:44 +0000 UTC 2024-09-21 12:29:44 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qvxvp-f4dbbbf74"}
  I0921 12:29:46.388963 19 deployment.go:612] Observed deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-21 12:29:44 +0000 UTC 2024-09-21 12:29:44 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0921 12:29:46.389139 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0921 12:29:46.389170 19 deployment.go:612] Observed deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-21 12:29:44 +0000 UTC 2024-09-21 12:29:44 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0921 12:29:46.389181 19 deployment.go:612] Observed deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-21 12:29:44 +0000 UTC 2024-09-21 12:29:44 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-qvxvp-f4dbbbf74" is progressing.}
  I0921 12:29:46.389298 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0921 12:29:46.389317 19 deployment.go:612] Observed deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-21 12:29:45 +0000 UTC 2024-09-21 12:29:45 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0921 12:29:46.389327 19 deployment.go:612] Observed deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-21 12:29:45 +0000 UTC 2024-09-21 12:29:44 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qvxvp-f4dbbbf74" has successfully progressed.}
  I0921 12:29:46.389447 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0921 12:29:46.389508 19 deployment.go:612] Observed deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-21 12:29:45 +0000 UTC 2024-09-21 12:29:45 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0921 12:29:46.389562 19 deployment.go:612] Observed deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-21 12:29:45 +0000 UTC 2024-09-21 12:29:44 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qvxvp-f4dbbbf74" has successfully progressed.}
  I0921 12:29:46.389580 19 deployment.go:612] Observed deployment test-deployment-qvxvp in namespace deployment-895 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0921 12:29:46.389688 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0921 12:29:46.389753 19 deployment.go:609] Found deployment test-deployment-qvxvp in namespace deployment-895 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0921 12:29:46.389768 19 deployment.go:620] Deployment test-deployment-qvxvp has a patched status
  I0921 12:29:46.394381 19 deployment.go:633] Deployment "test-deployment-qvxvp":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-qvxvp",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-895",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "526dd14e-c016-4fb0-9d44-a42ef5e269ef",
      ResourceVersion: (string) (len=5) "14656",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862518584,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-qvxvp-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0921 12:29:46.400829 19 deployment.go:39] New ReplicaSet "test-deployment-qvxvp-f4dbbbf74" of Deployment "test-deployment-qvxvp":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-qvxvp-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-895",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9116dbd3-1ec4-443d-8a7c-22ab5984662b",
      ResourceVersion: (string) (len=5) "14651",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862518584,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-qvxvp",
          UID: (types.UID) (len=36) "526dd14e-c016-4fb0-9d44-a42ef5e269ef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 35 32 36  |k:{\"uid\":\"526|
              00000120  64 64 31 34 65 2d 63 30  31 36 2d 34 66 62 30 2d  |dd14e-c016-4fb0-|
              00000130  39 64 34 34 2d 61 34 32  65 66 35 65 32 36 39 65  |9d44-a42ef5e269e|
              00000140  66 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |f\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0921 12:29:46.406925 19 deployment.go:67] Pod "test-deployment-qvxvp-f4dbbbf74-wdcm2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-qvxvp-f4dbbbf74-wdcm2",
      GenerateName: (string) (len=32) "test-deployment-qvxvp-f4dbbbf74-",
      Namespace: (string) (len=14) "deployment-895",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c50dacfb-2972-4502-8869-89e07c3bea9a",
      ResourceVersion: (string) (len=5) "14650",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862518584,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-qvxvp-f4dbbbf74",
          UID: (types.UID) (len=36) "9116dbd3-1ec4-443d-8a7c-22ab5984662b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 39 31 31 36 64 62 64  33 2d 31 65 63 34 2d 34  |"9116dbd3-1ec4-4|
              000000a0  34 33 64 2d 38 61 37 63  2d 32 32 61 62 35 39 38  |43d-8a7c-22ab598|
              000000b0  34 36 36 32 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |4662b\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 37  2e 34 35 5c 22 7d 22 3a  |2.168.27.45\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2fg6h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2fg6h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862518584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.95.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.95.123"
        }
      },
      PodIP: (string) (len=13) "192.168.27.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.27.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862518584,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862518584,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8a9214bd41d1dbbaebe1ad4347c8bce7ba8d70b2ff545b3a3cb785f31ecaf45f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2fg6h",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:29:46.407956 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-895" for this suite. @ 09/21/24 12:29:46.413
• [2.128 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/21/24 12:29:46.422
  I0921 12:29:46.422723 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubelet-test @ 09/21/24 12:29:46.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:29:46.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:29:46.441
  I0921 12:29:48.481420 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8834" for this suite. @ 09/21/24 12:29:48.486
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 09/21/24 12:29:48.496
  I0921 12:29:48.496559 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename gc @ 09/21/24 12:29:48.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:29:48.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:29:48.518
  I0921 12:29:48.558498 19 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"f2c38474-f13d-4f74-aa26-f9b1a8f90b26", Controller:(*bool)(0xc001cddafe), BlockOwnerDeletion:(*bool)(0xc001cddaff)}}
  I0921 12:29:48.568780 19 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"0cfabb55-3e2e-4d94-a21f-0cb314831f49", Controller:(*bool)(0xc001cddd36), BlockOwnerDeletion:(*bool)(0xc001cddd37)}}
  I0921 12:29:48.583131 19 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"b19cc5d2-a234-4225-8518-04c210ecd34a", Controller:(*bool)(0xc004a1a2a6), BlockOwnerDeletion:(*bool)(0xc004a1a2a7)}}
  I0921 12:29:53.598595 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3686" for this suite. @ 09/21/24 12:29:53.605
• [5.117 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 09/21/24 12:29:53.613
  I0921 12:29:53.613798 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename statefulset @ 09/21/24 12:29:53.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:29:53.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:29:53.634
  STEP: Creating service test in namespace statefulset-9118 @ 09/21/24 12:29:53.637
  STEP: Creating a new StatefulSet @ 09/21/24 12:29:53.645
  I0921 12:29:53.661230 19 wait.go:40] Found 0 stateful pods, waiting for 3
  I0921 12:30:03.662634 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0921 12:30:03.662670 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0921 12:30:03.662677 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0921 12:30:03.675877 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-9118 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0921 12:30:03.764627 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0921 12:30:03.764664 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0921 12:30:03.764681 19 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/21/24 12:30:13.774
  I0921 12:30:13.785491 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 09/21/24 12:30:13.785
  STEP: Updating Pods in reverse ordinal order @ 09/21/24 12:30:23.8
  I0921 12:30:23.806707 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-9118 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0921 12:30:23.903012 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0921 12:30:23.903220 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0921 12:30:23.903237 19 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0921 12:30:33.921989 19 wait.go:158] Waiting for StatefulSet statefulset-9118/ss2 to complete update
  STEP: Rolling back to a previous revision @ 09/21/24 12:30:43.923
  I0921 12:30:43.923795 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-9118 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0921 12:30:44.004700 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0921 12:30:44.004753 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0921 12:30:44.004765 19 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0921 12:30:54.031623 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 09/21/24 12:31:04.044
  I0921 12:31:04.047760 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-9118 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0921 12:31:04.131222 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0921 12:31:04.131265 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0921 12:31:04.131277 19 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0921 12:31:14.153587 19 statefulset.go:138] Deleting all statefulset in ns statefulset-9118
  I0921 12:31:14.158328 19 rest.go:150] Scaling statefulset ss2 to 0
  I0921 12:31:24.183039 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0921 12:31:24.191238 19 rest.go:88] Deleting statefulset ss2
  I0921 12:31:24.211119 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9118" for this suite. @ 09/21/24 12:31:24.218
• [90.613 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/21/24 12:31:24.226
  I0921 12:31:24.226749 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename field-validation @ 09/21/24 12:31:24.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:31:24.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:31:24.248
  I0921 12:31:24.251111 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:31:27.340441 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8502" for this suite. @ 09/21/24 12:31:27.343
• [3.127 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/21/24 12:31:27.353
  I0921 12:31:27.353773 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename replicaset @ 09/21/24 12:31:27.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:31:27.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:31:27.376
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/21/24 12:31:27.378
  STEP: When a replicaset with a matching selector is created @ 09/21/24 12:31:29.406
  STEP: Then the orphan pod is adopted @ 09/21/24 12:31:29.412
  STEP: When the matched label of one of its pods change @ 09/21/24 12:31:30.422
  I0921 12:31:30.426382 19 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/21/24 12:31:30.439
  I0921 12:31:31.450006 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8963" for this suite. @ 09/21/24 12:31:31.454
• [4.110 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 09/21/24 12:31:31.463
  I0921 12:31:31.463545 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/21/24 12:31:31.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:31:31.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:31:31.486
  STEP: create the container to handle the HTTPGet hook request. @ 09/21/24 12:31:31.492
  STEP: create the pod with lifecycle hook @ 09/21/24 12:31:33.519
  STEP: delete the pod with lifecycle hook @ 09/21/24 12:31:35.543
  STEP: check prestop hook @ 09/21/24 12:31:37.562
  I0921 12:31:37.580486 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9739" for this suite. @ 09/21/24 12:31:37.585
• [6.130 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/21/24 12:31:37.593
  I0921 12:31:37.593972 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pods @ 09/21/24 12:31:37.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:31:37.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:31:37.613
  I0921 12:31:37.615825 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: creating the pod @ 09/21/24 12:31:37.616
  STEP: submitting the pod to kubernetes @ 09/21/24 12:31:37.616
  I0921 12:31:39.686885 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-138" for this suite. @ 09/21/24 12:31:39.692
• [2.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 09/21/24 12:31:39.701
  I0921 12:31:39.701244 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir @ 09/21/24 12:31:39.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:31:39.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:31:39.721
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/21/24 12:31:39.723
  STEP: Saw pod success @ 09/21/24 12:31:43.749
  I0921 12:31:43.754369 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-9f6a4302-ad0e-4c21-be24-d137863ddd9c container test-container: <nil>
  STEP: delete the pod @ 09/21/24 12:31:43.766
  I0921 12:31:43.786584 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3755" for this suite. @ 09/21/24 12:31:43.791
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/21/24 12:31:43.801
  I0921 12:31:43.801511 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:31:43.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:31:43.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:31:43.819
  STEP: Creating projection with secret that has name projected-secret-test-10fe47fa-3b49-417b-88cc-a97f9b567f8b @ 09/21/24 12:31:43.822
  STEP: Creating a pod to test consume secrets @ 09/21/24 12:31:43.826
  STEP: Saw pod success @ 09/21/24 12:31:47.86
  I0921 12:31:47.864243 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod pod-projected-secrets-08751f86-c983-49b2-853e-fe9552e7b25f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 12:31:47.873
  I0921 12:31:47.894428 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1612" for this suite. @ 09/21/24 12:31:47.898
• [4.106 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/21/24 12:31:47.907
  I0921 12:31:47.907986 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/21/24 12:31:47.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:31:47.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:31:47.928
  STEP: Creating two CSIDrivers @ 09/21/24 12:31:47.93
  STEP: Getting "inline-driver-1f8aae46-e7b6-4f9b-97f5-b870221cbaa9" & "inline-driver-3e735cf2-ad47-49a3-a21f-5b4828a292fe" @ 09/21/24 12:31:47.949
  STEP: Patching the CSIDriver "inline-driver-3e735cf2-ad47-49a3-a21f-5b4828a292fe" @ 09/21/24 12:31:47.957
  STEP: Updating the CSIDriver "inline-driver-3e735cf2-ad47-49a3-a21f-5b4828a292fe" @ 09/21/24 12:31:47.963
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-7867" @ 09/21/24 12:31:47.975
  STEP: Deleting CSIDriver "inline-driver-1f8aae46-e7b6-4f9b-97f5-b870221cbaa9" @ 09/21/24 12:31:47.979
  STEP: Confirm deletion of CSIDriver "inline-driver-1f8aae46-e7b6-4f9b-97f5-b870221cbaa9" @ 09/21/24 12:31:47.987
  STEP: Deleting CSIDriver "inline-driver-3e735cf2-ad47-49a3-a21f-5b4828a292fe" via DeleteCollection @ 09/21/24 12:31:47.991
  STEP: Confirm deletion of CSIDriver "inline-driver-3e735cf2-ad47-49a3-a21f-5b4828a292fe" @ 09/21/24 12:31:48.003
  I0921 12:31:48.008028 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7867" for this suite. @ 09/21/24 12:31:48.013
• [0.114 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 09/21/24 12:31:48.021
  I0921 12:31:48.021695 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename configmap @ 09/21/24 12:31:48.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:31:48.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:31:48.042
  STEP: creating a ConfigMap @ 09/21/24 12:31:48.045
  STEP: fetching the ConfigMap @ 09/21/24 12:31:48.051
  STEP: patching the ConfigMap @ 09/21/24 12:31:48.055
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/21/24 12:31:48.062
  STEP: deleting the ConfigMap by collection with a label selector @ 09/21/24 12:31:48.066
  STEP: listing all ConfigMaps in test namespace @ 09/21/24 12:31:48.076
  I0921 12:31:48.080530 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4582" for this suite. @ 09/21/24 12:31:48.084
• [0.074 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 09/21/24 12:31:48.095
  I0921 12:31:48.095401 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename dns @ 09/21/24 12:31:48.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:31:48.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:31:48.114
  STEP: Creating a test headless service @ 09/21/24 12:31:48.116
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6824.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-6824.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6824.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-6824.svc.cluster.local;sleep 1; done
   @ 09/21/24 12:31:48.122
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6824.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-6824.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6824.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-6824.svc.cluster.local;sleep 1; done
   @ 09/21/24 12:31:48.122
  STEP: creating a pod to probe DNS @ 09/21/24 12:31:48.122
  STEP: submitting the pod to kubernetes @ 09/21/24 12:31:48.122
  STEP: retrieving the pod @ 09/21/24 12:31:50.155
  STEP: looking for the results for each expected name from probers @ 09/21/24 12:31:50.159
  I0921 12:31:50.165471 19 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local from pod dns-6824/dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890: the server could not find the requested resource (get pods dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890)
  I0921 12:31:50.169273 19 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local from pod dns-6824/dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890: the server could not find the requested resource (get pods dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890)
  I0921 12:31:50.173680 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-6824.svc.cluster.local from pod dns-6824/dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890: the server could not find the requested resource (get pods dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890)
  I0921 12:31:50.178228 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-6824.svc.cluster.local from pod dns-6824/dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890: the server could not find the requested resource (get pods dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890)
  I0921 12:31:50.182074 19 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local from pod dns-6824/dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890: the server could not find the requested resource (get pods dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890)
  I0921 12:31:50.188318 19 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local from pod dns-6824/dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890: the server could not find the requested resource (get pods dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890)
  I0921 12:31:50.193328 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-6824.svc.cluster.local from pod dns-6824/dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890: the server could not find the requested resource (get pods dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890)
  I0921 12:31:50.197172 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-6824.svc.cluster.local from pod dns-6824/dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890: the server could not find the requested resource (get pods dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890)
  I0921 12:31:50.197196 19 dns_common.go:489] Lookups using dns-6824/dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local wheezy_udp@dns-test-service-2.dns-6824.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-6824.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6824.svc.cluster.local jessie_udp@dns-test-service-2.dns-6824.svc.cluster.local jessie_tcp@dns-test-service-2.dns-6824.svc.cluster.local]

  I0921 12:31:50.204722 19 dns_common.go:495] Pod client logs for webserver: 
  I0921 12:31:50.212865 19 dns_common.go:495] Pod client logs for querier: 
  I0921 12:31:50.220491 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0921 12:31:55.198481 19 dns_common.go:527] DNS probes using dns-6824/dns-test-51a2a0b8-a359-409b-8d5a-ada71a292890 succeeded

  STEP: deleting the pod @ 09/21/24 12:31:55.198
  STEP: deleting the test headless service @ 09/21/24 12:31:55.218
  I0921 12:31:55.236051 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6824" for this suite. @ 09/21/24 12:31:55.241
• [7.156 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 09/21/24 12:31:55.251
  I0921 12:31:55.251078 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 12:31:55.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:31:55.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:31:55.269
  STEP: creating the pod @ 09/21/24 12:31:55.272
  I0921 12:31:55.272131 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-6981 create -f -'
  I0921 12:31:55.363849 19 builder.go:146] stderr: ""
  I0921 12:31:55.363888 19 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/21/24 12:31:57.376
  I0921 12:31:57.376324 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-6981 label pods pause testing-label=testing-label-value'
  I0921 12:31:57.439131 19 builder.go:146] stderr: ""
  I0921 12:31:57.439182 19 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/21/24 12:31:57.439
  I0921 12:31:57.439404 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-6981 get pod pause -L testing-label'
  I0921 12:31:57.484911 19 builder.go:146] stderr: ""
  I0921 12:31:57.484949 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/21/24 12:31:57.484
  I0921 12:31:57.485025 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-6981 label pods pause testing-label-'
  I0921 12:31:57.540499 19 builder.go:146] stderr: ""
  I0921 12:31:57.540536 19 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/21/24 12:31:57.54
  I0921 12:31:57.540612 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-6981 get pod pause -L testing-label'
  I0921 12:31:57.585929 19 builder.go:146] stderr: ""
  I0921 12:31:57.585972 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/21/24 12:31:57.586
  I0921 12:31:57.586128 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-6981 delete --grace-period=0 --force -f -'
  I0921 12:31:57.646632 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0921 12:31:57.646667 19 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0921 12:31:57.646708 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-6981 get rc,svc -l name=pause --no-headers'
  I0921 12:31:57.706172 19 builder.go:146] stderr: "No resources found in kubectl-6981 namespace.\n"
  I0921 12:31:57.706211 19 builder.go:147] stdout: ""
  I0921 12:31:57.706255 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-6981 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0921 12:31:57.751428 19 builder.go:146] stderr: ""
  I0921 12:31:57.751477 19 builder.go:147] stdout: ""
  I0921 12:31:57.751619 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6981" for this suite. @ 09/21/24 12:31:57.756
• [2.514 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/21/24 12:31:57.765
  I0921 12:31:57.765225 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename endpointslice @ 09/21/24 12:31:57.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:31:57.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:31:57.783
  STEP: getting /apis @ 09/21/24 12:31:57.789
  STEP: getting /apis/discovery.k8s.io @ 09/21/24 12:31:57.792
  STEP: getting /apis/discovery.k8s.iov1 @ 09/21/24 12:31:57.793
  STEP: creating @ 09/21/24 12:31:57.794
  STEP: getting @ 09/21/24 12:31:57.811
  STEP: listing @ 09/21/24 12:31:57.815
  STEP: watching @ 09/21/24 12:31:57.818
  I0921 12:31:57.818178 19 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/21/24 12:31:57.819
  STEP: cluster-wide watching @ 09/21/24 12:31:57.823
  I0921 12:31:57.823389 19 endpointslice.go:459] starting watch
  STEP: patching @ 09/21/24 12:31:57.824
  STEP: updating @ 09/21/24 12:31:57.83
  I0921 12:31:57.840707 19 endpointslice.go:482] waiting for watch events with expected annotations
  I0921 12:31:57.840739 19 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/21/24 12:31:57.84
  STEP: deleting a collection @ 09/21/24 12:31:57.857
  I0921 12:31:57.879911 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3054" for this suite. @ 09/21/24 12:31:57.884
• [0.127 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/21/24 12:31:57.892
  I0921 12:31:57.892555 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:31:57.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:31:57.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:31:57.913
  STEP: Creating projection with secret that has name projected-secret-test-c415f12a-5541-427e-ab9b-51b2e18772cd @ 09/21/24 12:31:57.916
  STEP: Creating a pod to test consume secrets @ 09/21/24 12:31:57.921
  STEP: Saw pod success @ 09/21/24 12:32:01.949
  I0921 12:32:01.953849 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-projected-secrets-5bed8dc5-5443-4c44-a713-ad36b2f4699a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 12:32:01.962
  I0921 12:32:01.984290 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6513" for this suite. @ 09/21/24 12:32:01.989
• [4.105 seconds]
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 09/21/24 12:32:01.997
  I0921 12:32:01.997500 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 12:32:01.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:02.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:02.016
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 12:32:02.019
  STEP: Saw pod success @ 09/21/24 12:32:04.041
  I0921 12:32:04.046149 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downwardapi-volume-385d6e63-296b-4708-92fa-50e322f3378a container client-container: <nil>
  STEP: delete the pod @ 09/21/24 12:32:04.058
  I0921 12:32:04.080184 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9074" for this suite. @ 09/21/24 12:32:04.083
• [2.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 09/21/24 12:32:04.091
  I0921 12:32:04.091750 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename var-expansion @ 09/21/24 12:32:04.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:04.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:04.111
  STEP: Creating a pod to test substitution in container's args @ 09/21/24 12:32:04.113
  STEP: Saw pod success @ 09/21/24 12:32:06.137
  I0921 12:32:06.141742 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod var-expansion-a850b727-c65f-40e1-8136-f3fd1141972a container dapi-container: <nil>
  STEP: delete the pod @ 09/21/24 12:32:06.15
  I0921 12:32:06.170278 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5605" for this suite. @ 09/21/24 12:32:06.175
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/21/24 12:32:06.184
  I0921 12:32:06.184777 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename server-version @ 09/21/24 12:32:06.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:06.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:06.208
  STEP: Request ServerVersion @ 09/21/24 12:32:06.21
  STEP: Confirm major version @ 09/21/24 12:32:06.212
  I0921 12:32:06.212516 19 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/21/24 12:32:06.212
  I0921 12:32:06.212548 19 server_version.go:58] cleanMinorVersion: 31
  I0921 12:32:06.212558 19 server_version.go:62] Minor version: 31
  I0921 12:32:06.212699 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-274" for this suite. @ 09/21/24 12:32:06.216
• [0.040 seconds]
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/21/24 12:32:06.224
  I0921 12:32:06.224730 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/21/24 12:32:06.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:06.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:06.245
  STEP: getting /apis @ 09/21/24 12:32:06.248
  STEP: getting /apis/storage.k8s.io @ 09/21/24 12:32:06.251
  STEP: getting /apis/storage.k8s.io/v1 @ 09/21/24 12:32:06.252
  STEP: creating @ 09/21/24 12:32:06.253
  STEP: watching @ 09/21/24 12:32:06.275
  I0921 12:32:06.275051 19 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/21/24 12:32:06.281
  STEP: listing in namespace @ 09/21/24 12:32:06.285
  STEP: listing across namespaces @ 09/21/24 12:32:06.289
  STEP: patching @ 09/21/24 12:32:06.293
  STEP: updating @ 09/21/24 12:32:06.298
  I0921 12:32:06.303871 19 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0921 12:32:06.303947 19 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/21/24 12:32:06.303
  STEP: deleting a collection @ 09/21/24 12:32:06.32
  I0921 12:32:06.340940 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-8707" for this suite. @ 09/21/24 12:32:06.345
• [0.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 09/21/24 12:32:06.354
  I0921 12:32:06.354179 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 12:32:06.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:06.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:06.373
  STEP: creating service endpoint-test2 in namespace services-9484 @ 09/21/24 12:32:06.376
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9484 to expose endpoints map[] @ 09/21/24 12:32:06.388
  I0921 12:32:06.397759 19 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0921 12:32:07.407833 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9484 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9484 @ 09/21/24 12:32:07.407
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9484 to expose endpoints map[pod1:[80]] @ 09/21/24 12:32:09.432
  I0921 12:32:09.445515 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9484 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/21/24 12:32:09.445
  I0921 12:32:09.445576 19 resource.go:361] Creating new exec pod
  I0921 12:32:12.467468 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-9484 exec execpodxgf8h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0921 12:32:12.591403 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0921 12:32:12.591444 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 12:32:12.591643 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-9484 exec execpodxgf8h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.220 80'
  I0921 12:32:12.674831 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.220 80\nConnection to 10.152.183.220 80 port [tcp/http] succeeded!\n"
  I0921 12:32:12.674871 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9484 @ 09/21/24 12:32:12.674
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9484 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/21/24 12:32:14.696
  I0921 12:32:14.714906 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9484 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/21/24 12:32:14.714
  I0921 12:32:15.715484 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-9484 exec execpodxgf8h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0921 12:32:15.798438 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0921 12:32:15.798477 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 12:32:15.798623 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-9484 exec execpodxgf8h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.220 80'
  I0921 12:32:15.879848 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.220 80\nConnection to 10.152.183.220 80 port [tcp/http] succeeded!\n"
  I0921 12:32:15.879889 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9484 @ 09/21/24 12:32:15.879
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9484 to expose endpoints map[pod2:[80]] @ 09/21/24 12:32:15.901
  I0921 12:32:15.920796 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9484 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/21/24 12:32:15.92
  I0921 12:32:16.921471 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-9484 exec execpodxgf8h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0921 12:32:17.002459 19 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0921 12:32:17.002500 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 12:32:17.002601 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-9484 exec execpodxgf8h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.220 80'
  I0921 12:32:17.077799 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.220 80\nConnection to 10.152.183.220 80 port [tcp/http] succeeded!\n"
  I0921 12:32:17.077841 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9484 @ 09/21/24 12:32:17.077
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9484 to expose endpoints map[] @ 09/21/24 12:32:17.096
  I0921 12:32:17.106550 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9484 exposes endpoints map[]
  I0921 12:32:17.126586 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9484" for this suite. @ 09/21/24 12:32:17.131
• [10.785 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/21/24 12:32:17.139
  I0921 12:32:17.139456 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename sched-pred @ 09/21/24 12:32:17.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:17.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:17.159
  I0921 12:32:17.162306 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0921 12:32:17.169869 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I0921 12:32:17.173422 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-2-8 before test
  I0921 12:32:17.180207 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-72drx from ingress-nginx-kubernetes-worker started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 12:32:17.180224 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0921 12:32:17.180230 19 predicates.go:957] calico-node-698gv from kube-system started at 2024-09-21 12:09:22 +0000 UTC (1 container statuses recorded)
  I0921 12:32:17.180236 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0921 12:32:17.180243 19 predicates.go:957] coredns-5b4857d7c8-w6vks from kube-system started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 12:32:17.180247 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0921 12:32:17.180253 19 predicates.go:957] kube-state-metrics-5d7bdccd49-b422z from kube-system started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 12:32:17.180259 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0921 12:32:17.180264 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-g9gpw from kube-system started at 2024-09-21 12:06:02 +0000 UTC (2 container statuses recorded)
  I0921 12:32:17.180269 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0921 12:32:17.180274 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0921 12:32:17.180279 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-5v9dx from kubernetes-dashboard started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 12:32:17.180296 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0921 12:32:17.180301 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-cj2rk from kubernetes-dashboard started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 12:32:17.180306 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0921 12:32:17.180313 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-5wrw9 from sonobuoy started at 2024-09-21 12:12:34 +0000 UTC (2 container statuses recorded)
  I0921 12:32:17.180318 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 12:32:17.180324 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0921 12:32:17.180332 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-69-84 before test
  I0921 12:32:17.186063 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-l9lt9 from ingress-nginx-kubernetes-worker started at 2024-09-21 12:08:37 +0000 UTC (1 container statuses recorded)
  I0921 12:32:17.186085 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0921 12:32:17.186092 19 predicates.go:957] calico-node-rw7c2 from kube-system started at 2024-09-21 12:09:12 +0000 UTC (1 container statuses recorded)
  I0921 12:32:17.186097 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0921 12:32:17.186104 19 predicates.go:957] sonobuoy-e2e-job-b3f4395adb4247d5 from sonobuoy started at 2024-09-21 12:12:33 +0000 UTC (2 container statuses recorded)
  I0921 12:32:17.186108 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0921 12:32:17.186114 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 12:32:17.186121 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-2g2mv from sonobuoy started at 2024-09-21 12:12:34 +0000 UTC (2 container statuses recorded)
  I0921 12:32:17.186126 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 12:32:17.186131 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0921 12:32:17.186138 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-95-123 before test
  I0921 12:32:17.192167 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-nkb4x from ingress-nginx-kubernetes-worker started at 2024-09-21 12:17:48 +0000 UTC (1 container statuses recorded)
  I0921 12:32:17.192187 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0921 12:32:17.192194 19 predicates.go:957] calico-node-tb2z2 from kube-system started at 2024-09-21 12:09:53 +0000 UTC (1 container statuses recorded)
  I0921 12:32:17.192199 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0921 12:32:17.192205 19 predicates.go:957] execpodxgf8h from services-9484 started at 2024-09-21 12:32:09 +0000 UTC (1 container statuses recorded)
  I0921 12:32:17.192210 19 predicates.go:959] 	Container agnhost-container ready: true, restart count 0
  I0921 12:32:17.192215 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-21 12:12:31 +0000 UTC (1 container statuses recorded)
  I0921 12:32:17.192220 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0921 12:32:17.192227 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-thrjz from sonobuoy started at 2024-09-21 12:12:34 +0000 UTC (2 container statuses recorded)
  I0921 12:32:17.192235 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 12:32:17.192258 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-2-8 @ 09/21/24 12:32:17.209
  STEP: verifying the node has the label node ip-172-31-69-84 @ 09/21/24 12:32:17.22
  STEP: verifying the node has the label node ip-172-31-95-123 @ 09/21/24 12:32:17.234
  I0921 12:32:17.249170 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-72drx requesting resource cpu=0m on Node ip-172-31-2-8
  I0921 12:32:17.249213 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-l9lt9 requesting resource cpu=0m on Node ip-172-31-69-84
  I0921 12:32:17.249220 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-nkb4x requesting resource cpu=0m on Node ip-172-31-95-123
  I0921 12:32:17.249228 19 predicates.go:372] Pod calico-node-698gv requesting resource cpu=250m on Node ip-172-31-2-8
  I0921 12:32:17.249235 19 predicates.go:372] Pod calico-node-rw7c2 requesting resource cpu=250m on Node ip-172-31-69-84
  I0921 12:32:17.249241 19 predicates.go:372] Pod calico-node-tb2z2 requesting resource cpu=250m on Node ip-172-31-95-123
  I0921 12:32:17.249254 19 predicates.go:372] Pod coredns-5b4857d7c8-w6vks requesting resource cpu=100m on Node ip-172-31-2-8
  I0921 12:32:17.249260 19 predicates.go:372] Pod kube-state-metrics-5d7bdccd49-b422z requesting resource cpu=0m on Node ip-172-31-2-8
  I0921 12:32:17.249459 19 predicates.go:372] Pod metrics-server-v0.7.1-6c77d69467-g9gpw requesting resource cpu=5m on Node ip-172-31-2-8
  I0921 12:32:17.249469 19 predicates.go:372] Pod dashboard-metrics-scraper-64757cf48d-5v9dx requesting resource cpu=0m on Node ip-172-31-2-8
  I0921 12:32:17.249524 19 predicates.go:372] Pod kubernetes-dashboard-7b6b7bcb5d-cj2rk requesting resource cpu=0m on Node ip-172-31-2-8
  I0921 12:32:17.249582 19 predicates.go:372] Pod execpodxgf8h requesting resource cpu=0m on Node ip-172-31-95-123
  I0921 12:32:17.249588 19 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-95-123
  I0921 12:32:17.249598 19 predicates.go:372] Pod sonobuoy-e2e-job-b3f4395adb4247d5 requesting resource cpu=0m on Node ip-172-31-69-84
  I0921 12:32:17.249604 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-2g2mv requesting resource cpu=0m on Node ip-172-31-69-84
  I0921 12:32:17.249610 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-5wrw9 requesting resource cpu=0m on Node ip-172-31-2-8
  I0921 12:32:17.249616 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-thrjz requesting resource cpu=0m on Node ip-172-31-95-123
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/21/24 12:32:17.249
  I0921 12:32:17.249829 19 predicates.go:382] Creating a pod which consumes cpu=1151m on Node ip-172-31-2-8
  I0921 12:32:17.263551 19 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-69-84
  I0921 12:32:17.271392 19 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-95-123
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/21/24 12:32:19.303
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-09d4530c-58e0-4f5c-b6cf-d7cb7a129b5c.17f7425a31e8c485], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5844/filler-pod-09d4530c-58e0-4f5c-b6cf-d7cb7a129b5c to ip-172-31-2-8] @ 09/21/24 12:32:19.308
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-09d4530c-58e0-4f5c-b6cf-d7cb7a129b5c.17f7425a4f489352], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.10"] @ 09/21/24 12:32:19.309
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-09d4530c-58e0-4f5c-b6cf-d7cb7a129b5c.17f7425a60b2dab3], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.10" in 292ms (292ms including waiting). Image size: 320368 bytes.] @ 09/21/24 12:32:19.309
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-09d4530c-58e0-4f5c-b6cf-d7cb7a129b5c.17f7425a616ce32c], Reason = [Created], Message = [Created container filler-pod-09d4530c-58e0-4f5c-b6cf-d7cb7a129b5c] @ 09/21/24 12:32:19.309
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-09d4530c-58e0-4f5c-b6cf-d7cb7a129b5c.17f7425a63cdb283], Reason = [Started], Message = [Started container filler-pod-09d4530c-58e0-4f5c-b6cf-d7cb7a129b5c] @ 09/21/24 12:32:19.309
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-825fa82e-ffce-4625-935e-cfad3737fe08.17f7425a32f66e8b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5844/filler-pod-825fa82e-ffce-4625-935e-cfad3737fe08 to ip-172-31-95-123] @ 09/21/24 12:32:19.309
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-825fa82e-ffce-4625-935e-cfad3737fe08.17f7425a508ff37c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/21/24 12:32:19.309
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-825fa82e-ffce-4625-935e-cfad3737fe08.17f7425a519f73fd], Reason = [Created], Message = [Created container filler-pod-825fa82e-ffce-4625-935e-cfad3737fe08] @ 09/21/24 12:32:19.309
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-825fa82e-ffce-4625-935e-cfad3737fe08.17f7425a54126f2e], Reason = [Started], Message = [Started container filler-pod-825fa82e-ffce-4625-935e-cfad3737fe08] @ 09/21/24 12:32:19.309
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f5f83105-7eaa-4a36-b219-54db2bc3b561.17f7425a32579a60], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5844/filler-pod-f5f83105-7eaa-4a36-b219-54db2bc3b561 to ip-172-31-69-84] @ 09/21/24 12:32:19.309
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f5f83105-7eaa-4a36-b219-54db2bc3b561.17f7425a50668f2f], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/21/24 12:32:19.309
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f5f83105-7eaa-4a36-b219-54db2bc3b561.17f7425a517c9931], Reason = [Created], Message = [Created container filler-pod-f5f83105-7eaa-4a36-b219-54db2bc3b561] @ 09/21/24 12:32:19.309
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f5f83105-7eaa-4a36-b219-54db2bc3b561.17f7425a53c5a52a], Reason = [Started], Message = [Started container filler-pod-f5f83105-7eaa-4a36-b219-54db2bc3b561] @ 09/21/24 12:32:19.309
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17f7425aabd40982], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 09/21/24 12:32:19.324
  STEP: removing the label node off the node ip-172-31-2-8 @ 09/21/24 12:32:20.323
  STEP: verifying the node doesn't have the label node @ 09/21/24 12:32:20.337
  STEP: removing the label node off the node ip-172-31-69-84 @ 09/21/24 12:32:20.34
  STEP: verifying the node doesn't have the label node @ 09/21/24 12:32:20.355
  STEP: removing the label node off the node ip-172-31-95-123 @ 09/21/24 12:32:20.359
  STEP: verifying the node doesn't have the label node @ 09/21/24 12:32:20.374
  I0921 12:32:20.380482 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5844" for this suite. @ 09/21/24 12:32:20.385
• [3.255 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 09/21/24 12:32:20.396
  I0921 12:32:20.396493 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir @ 09/21/24 12:32:20.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:20.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:20.419
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/21/24 12:32:20.421
  STEP: Saw pod success @ 09/21/24 12:32:24.448
  I0921 12:32:24.452655 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-0c1f2020-a6c9-485f-96d7-27cd492e622c container test-container: <nil>
  STEP: delete the pod @ 09/21/24 12:32:24.46
  I0921 12:32:24.477863 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4599" for this suite. @ 09/21/24 12:32:24.482
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 09/21/24 12:32:24.491
  I0921 12:32:24.491017 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 12:32:24.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:24.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:24.509
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 12:32:24.511
  STEP: Saw pod success @ 09/21/24 12:32:28.538
  I0921 12:32:28.543377 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downwardapi-volume-6298356f-fc41-47b9-98c9-4eafc94b2ce6 container client-container: <nil>
  STEP: delete the pod @ 09/21/24 12:32:28.551
  I0921 12:32:28.575331 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1885" for this suite. @ 09/21/24 12:32:28.579
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 09/21/24 12:32:28.588
  I0921 12:32:28.588969 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 12:32:28.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:28.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:28.607
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/21/24 12:32:28.61
  I0921 12:32:28.611026 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-472 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0921 12:32:28.665887 19 builder.go:146] stderr: ""
  I0921 12:32:28.665912 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/21/24 12:32:28.665
  I0921 12:32:28.665966 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-472 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0921 12:32:28.715696 19 builder.go:146] stderr: ""
  I0921 12:32:28.715723 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/21/24 12:32:28.715
  I0921 12:32:28.721494 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-472 delete pods e2e-test-httpd-pod'
  I0921 12:32:29.894179 19 builder.go:146] stderr: ""
  I0921 12:32:29.894219 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0921 12:32:29.894365 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-472" for this suite. @ 09/21/24 12:32:29.899
• [1.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/21/24 12:32:29.908
  I0921 12:32:29.908660 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename ingressclass @ 09/21/24 12:32:29.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:29.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:29.929
  STEP: getting /apis @ 09/21/24 12:32:29.931
  STEP: getting /apis/networking.k8s.io @ 09/21/24 12:32:29.938
  STEP: getting /apis/networking.k8s.iov1 @ 09/21/24 12:32:29.94
  STEP: creating @ 09/21/24 12:32:29.942
  STEP: getting @ 09/21/24 12:32:29.959
  STEP: listing @ 09/21/24 12:32:29.962
  STEP: watching @ 09/21/24 12:32:29.966
  I0921 12:32:29.966774 19 ingressclass.go:348] starting watch
  STEP: patching @ 09/21/24 12:32:29.967
  STEP: updating @ 09/21/24 12:32:29.973
  I0921 12:32:29.978410 19 ingressclass.go:364] waiting for watch events with expected annotations
  I0921 12:32:29.978444 19 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/21/24 12:32:29.978
  STEP: deleting a collection @ 09/21/24 12:32:29.995
  I0921 12:32:30.018639 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-7756" for this suite. @ 09/21/24 12:32:30.023
• [0.124 seconds]
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 09/21/24 12:32:30.032
  I0921 12:32:30.032817 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename configmap @ 09/21/24 12:32:30.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:30.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:30.055
  STEP: Creating configMap with name configmap-test-upd-2b0b5453-1bcc-43b6-8f9e-a74a3f45f534 @ 09/21/24 12:32:30.061
  STEP: Creating the pod @ 09/21/24 12:32:30.066
  STEP: Waiting for pod with text data @ 09/21/24 12:32:32.089
  STEP: Waiting for pod with binary data @ 09/21/24 12:32:32.098
  I0921 12:32:32.108698 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1481" for this suite. @ 09/21/24 12:32:32.113
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 09/21/24 12:32:32.123
  I0921 12:32:32.123923 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename configmap @ 09/21/24 12:32:32.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:32.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:32.146
  STEP: Creating configMap that has name configmap-test-emptyKey-3982a811-273a-493f-b7c3-d04fe24f3255 @ 09/21/24 12:32:32.149
  I0921 12:32:32.150606 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4798" for this suite. @ 09/21/24 12:32:32.155
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/21/24 12:32:32.164
  I0921 12:32:32.164150 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pv @ 09/21/24 12:32:32.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:32.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:32.181
  STEP: Creating initial PV and PVC @ 09/21/24 12:32:32.184
  I0921 12:32:32.184285 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6128" @ 09/21/24 12:32:32.201
  STEP: Listing PVCs in namespace "pv-6128" @ 09/21/24 12:32:32.205
  STEP: Reading "pvc-fqd7b" Status @ 09/21/24 12:32:32.208
  STEP: Reading "pv-6128-49lbr" Status @ 09/21/24 12:32:32.213
  STEP: Patching "pvc-fqd7b" Status @ 09/21/24 12:32:32.218
  STEP: Patching "pv-6128-49lbr" Status @ 09/21/24 12:32:32.224
  STEP: Updating "pvc-fqd7b" Status @ 09/21/24 12:32:32.237
  STEP: Updating "pv-6128-49lbr" Status @ 09/21/24 12:32:32.248
  I0921 12:32:32.258625 19 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0921 12:32:32.258655 19 pv.go:205] Deleting PersistentVolumeClaim "pvc-fqd7b"
  I0921 12:32:32.273615 19 pv.go:193] Deleting PersistentVolume "pv-6128-49lbr"
  I0921 12:32:32.283695 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6128" for this suite. @ 09/21/24 12:32:32.287
• [0.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 09/21/24 12:32:32.296
  I0921 12:32:32.296369 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 12:32:32.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:32.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:32.317
  STEP: Setting up server cert @ 09/21/24 12:32:32.343
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 12:32:32.625
  STEP: Deploying the webhook pod @ 09/21/24 12:32:32.636
  STEP: Wait for the deployment to be ready @ 09/21/24 12:32:32.652
  I0921 12:32:32.662920 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 12:32:34.678
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 12:32:34.692
  I0921 12:32:35.692303 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/21/24 12:32:35.701
  STEP: create a pod that should be denied by the webhook @ 09/21/24 12:32:35.716
  STEP: create a pod that causes the webhook to hang @ 09/21/24 12:32:35.723
  STEP: create a configmap that should be denied by the webhook @ 09/21/24 12:32:45.732
  STEP: create a configmap that should be admitted by the webhook @ 09/21/24 12:32:45.762
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/21/24 12:32:45.772
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/21/24 12:32:45.782
  STEP: create a namespace that bypass the webhook @ 09/21/24 12:32:45.788
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/21/24 12:32:45.805
  I0921 12:32:45.871016 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5263" for this suite. @ 09/21/24 12:32:45.877
  STEP: Destroying namespace "webhook-markers-9954" for this suite. @ 09/21/24 12:32:45.885
  STEP: Destroying namespace "exempted-namespace-9709" for this suite. @ 09/21/24 12:32:45.894
• [13.608 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 09/21/24 12:32:45.904
  I0921 12:32:45.904242 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 12:32:45.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:45.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:45.923
  STEP: creating an Endpoint @ 09/21/24 12:32:45.931
  STEP: waiting for available Endpoint @ 09/21/24 12:32:45.937
  STEP: listing all Endpoints @ 09/21/24 12:32:45.938
  STEP: updating the Endpoint @ 09/21/24 12:32:45.943
  STEP: fetching the Endpoint @ 09/21/24 12:32:45.948
  STEP: patching the Endpoint @ 09/21/24 12:32:45.954
  STEP: fetching the Endpoint @ 09/21/24 12:32:45.962
  STEP: deleting the Endpoint by Collection @ 09/21/24 12:32:45.966
  STEP: waiting for Endpoint deletion @ 09/21/24 12:32:45.976
  STEP: fetching the Endpoint @ 09/21/24 12:32:45.977
  I0921 12:32:45.981703 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9888" for this suite. @ 09/21/24 12:32:45.987
• [0.092 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/21/24 12:32:45.996
  I0921 12:32:45.996157 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename field-validation @ 09/21/24 12:32:45.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:46.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:46.02
  I0921 12:32:46.024787 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  W0921 12:32:46.025511      19 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000f42f30 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0921 12:32:48.568965      19 warnings.go:70] unknown field "alpha"
  W0921 12:32:48.568987      19 warnings.go:70] unknown field "beta"
  W0921 12:32:48.568991      19 warnings.go:70] unknown field "delta"
  W0921 12:32:48.568994      19 warnings.go:70] unknown field "epsilon"
  W0921 12:32:48.568997      19 warnings.go:70] unknown field "gamma"
  I0921 12:32:49.139538 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9440" for this suite. @ 09/21/24 12:32:49.143
• [3.155 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/21/24 12:32:49.151
  I0921 12:32:49.151120 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/21/24 12:32:49.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:49.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:49.171
  STEP: creating a policy with variables @ 09/21/24 12:32:49.179
  STEP: waiting until the marker is denied @ 09/21/24 12:32:49.203
  STEP: testing a replicated Deployment to be allowed @ 09/21/24 12:32:49.612
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/21/24 12:32:49.629
  I0921 12:32:49.693501 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3018" for this suite. @ 09/21/24 12:32:49.707
• [0.568 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/21/24 12:32:49.719
  I0921 12:32:49.719623 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename daemonsets @ 09/21/24 12:32:49.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:49.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:49.739
  STEP: Creating simple DaemonSet "daemon-set" @ 09/21/24 12:32:49.766
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/21/24 12:32:49.773
  I0921 12:32:49.778003 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:32:49.778067 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:32:49.781248 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 12:32:49.781272 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  I0921 12:32:50.779875 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:32:50.779910 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:32:50.783796 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 12:32:50.783816 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  I0921 12:32:51.780967 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:32:51.781007 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:32:51.786184 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0921 12:32:51.786205 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/21/24 12:32:51.79
  STEP: DeleteCollection of the DaemonSets @ 09/21/24 12:32:51.795
  STEP: Verify that ReplicaSets have been deleted @ 09/21/24 12:32:51.809
  I0921 12:32:51.831879 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16798"},"items":null}

  I0921 12:32:51.837223 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16799"},"items":[{"metadata":{"name":"daemon-set-l8rvs","generateName":"daemon-set-","namespace":"daemonsets-9763","uid":"55d4e71c-ff85-48c5-a06a-eaaf918b857d","resourceVersion":"16796","creationTimestamp":"2024-09-21T12:32:49Z","deletionTimestamp":"2024-09-21T12:33:21Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"34ae5757-f49d-43c8-bc0b-ae1d70182275","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-21T12:32:49Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"34ae5757-f49d-43c8-bc0b-ae1d70182275\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-21T12:32:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.126.177\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-p698q","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-p698q","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-69-84","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-69-84"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-21T12:32:51Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-21T12:32:49Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-21T12:32:51Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-21T12:32:51Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-21T12:32:49Z"}],"hostIP":"172.31.69.84","hostIPs":[{"ip":"172.31.69.84"}],"podIP":"192.168.126.177","podIPs":[{"ip":"192.168.126.177"}],"startTime":"2024-09-21T12:32:49Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-21T12:32:50Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://b70657d2247b7b20e17d9ee362941a4c4445d63d12da60677b501c35e7309ddc","started":true,"volumeMounts":[{"name":"kube-api-access-p698q","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-psc7b","generateName":"daemon-set-","namespace":"daemonsets-9763","uid":"d958e33c-3b3d-4630-b795-28b71f5195bf","resourceVersion":"16797","creationTimestamp":"2024-09-21T12:32:49Z","deletionTimestamp":"2024-09-21T12:33:21Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"34ae5757-f49d-43c8-bc0b-ae1d70182275","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-21T12:32:49Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"34ae5757-f49d-43c8-bc0b-ae1d70182275\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-21T12:32:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.27.9\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-mzvz5","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-mzvz5","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-95-123","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-95-123"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-21T12:32:50Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-21T12:32:49Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-21T12:32:50Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-21T12:32:50Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-21T12:32:49Z"}],"hostIP":"172.31.95.123","hostIPs":[{"ip":"172.31.95.123"}],"podIP":"192.168.27.9","podIPs":[{"ip":"192.168.27.9"}],"startTime":"2024-09-21T12:32:49Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-21T12:32:50Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://0a10e725b38a9603b5b0cd910121b9f467404ffbbc10c8b28a30c17e434a24cc","started":true,"volumeMounts":[{"name":"kube-api-access-mzvz5","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-w97c7","generateName":"daemon-set-","namespace":"daemonsets-9763","uid":"c6bf405c-5d4e-4415-8aec-7eaa7847a685","resourceVersion":"16799","creationTimestamp":"2024-09-21T12:32:49Z","deletionTimestamp":"2024-09-21T12:33:21Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"34ae5757-f49d-43c8-bc0b-ae1d70182275","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-21T12:32:49Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"34ae5757-f49d-43c8-bc0b-ae1d70182275\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-21T12:32:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.171.143\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5dc6r","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5dc6r","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-2-8","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-2-8"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-21T12:32:51Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-21T12:32:49Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-21T12:32:51Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-21T12:32:51Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-21T12:32:49Z"}],"hostIP":"172.31.2.8","hostIPs":[{"ip":"172.31.2.8"}],"podIP":"192.168.171.143","podIPs":[{"ip":"192.168.171.143"}],"startTime":"2024-09-21T12:32:49Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-21T12:32:50Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://057f87494852dc29c2e664e511990aceb41e5c603467448ac38f0d5cfde00400","started":true,"volumeMounts":[{"name":"kube-api-access-5dc6r","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0921 12:32:51.858808 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9763" for this suite. @ 09/21/24 12:32:51.864
• [2.154 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 09/21/24 12:32:51.873
  I0921 12:32:51.874003 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 12:32:51.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:51.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:51.896
  STEP: creating a replication controller @ 09/21/24 12:32:51.899
  I0921 12:32:51.900048 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-3400 create -f -'
  I0921 12:32:51.989423 19 builder.go:146] stderr: ""
  I0921 12:32:51.989477 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/21/24 12:32:51.989
  I0921 12:32:51.989572 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-3400 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0921 12:32:52.041151 19 builder.go:146] stderr: ""
  I0921 12:32:52.041187 19 builder.go:147] stdout: "update-demo-nautilus-pxssj update-demo-nautilus-wvvq6 "
  I0921 12:32:52.041245 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-3400 get pods update-demo-nautilus-pxssj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0921 12:32:52.084868 19 builder.go:146] stderr: ""
  I0921 12:32:52.084905 19 builder.go:147] stdout: ""
  I0921 12:32:52.084915 19 kubectl.go:2502] update-demo-nautilus-pxssj is created but not running
  I0921 12:32:57.086475 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-3400 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0921 12:32:57.134171 19 builder.go:146] stderr: ""
  I0921 12:32:57.134209 19 builder.go:147] stdout: "update-demo-nautilus-pxssj update-demo-nautilus-wvvq6 "
  I0921 12:32:57.134254 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-3400 get pods update-demo-nautilus-pxssj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0921 12:32:57.179274 19 builder.go:146] stderr: ""
  I0921 12:32:57.179324 19 builder.go:147] stdout: "true"
  I0921 12:32:57.179386 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-3400 get pods update-demo-nautilus-pxssj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0921 12:32:57.224248 19 builder.go:146] stderr: ""
  I0921 12:32:57.224294 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0921 12:32:57.224306 19 kubectl.go:2393] validating pod update-demo-nautilus-pxssj
  I0921 12:32:57.232276 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0921 12:32:57.232334 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0921 12:32:57.232362 19 kubectl.go:2520] update-demo-nautilus-pxssj is verified up and running
  I0921 12:32:57.232455 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-3400 get pods update-demo-nautilus-wvvq6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0921 12:32:57.275774 19 builder.go:146] stderr: ""
  I0921 12:32:57.275811 19 builder.go:147] stdout: "true"
  I0921 12:32:57.275856 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-3400 get pods update-demo-nautilus-wvvq6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0921 12:32:57.321032 19 builder.go:146] stderr: ""
  I0921 12:32:57.321070 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0921 12:32:57.321082 19 kubectl.go:2393] validating pod update-demo-nautilus-wvvq6
  I0921 12:32:57.327065 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0921 12:32:57.327125 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0921 12:32:57.327137 19 kubectl.go:2520] update-demo-nautilus-wvvq6 is verified up and running
  STEP: using delete to clean up resources @ 09/21/24 12:32:57.327
  I0921 12:32:57.327230 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-3400 delete --grace-period=0 --force -f -'
  I0921 12:32:57.380015 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0921 12:32:57.380053 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0921 12:32:57.380118 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-3400 get rc,svc -l name=update-demo --no-headers'
  I0921 12:32:57.442173 19 builder.go:146] stderr: "No resources found in kubectl-3400 namespace.\n"
  I0921 12:32:57.442229 19 builder.go:147] stdout: ""
  I0921 12:32:57.442286 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-3400 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0921 12:32:57.493149 19 builder.go:146] stderr: ""
  I0921 12:32:57.493200 19 builder.go:147] stdout: ""
  I0921 12:32:57.493376 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3400" for this suite. @ 09/21/24 12:32:57.498
• [5.632 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 09/21/24 12:32:57.506
  I0921 12:32:57.506097 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename statefulset @ 09/21/24 12:32:57.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:32:57.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:32:57.532
  STEP: Creating service test in namespace statefulset-6370 @ 09/21/24 12:32:57.535
  STEP: Looking for a node to schedule stateful set and pod @ 09/21/24 12:32:57.542
  STEP: Creating pod with conflicting port in namespace statefulset-6370 @ 09/21/24 12:32:57.546
  STEP: Waiting until pod test-pod will start running in namespace statefulset-6370 @ 09/21/24 12:32:57.558
  STEP: Creating statefulset with conflicting port in namespace statefulset-6370 @ 09/21/24 12:32:59.568
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-6370 @ 09/21/24 12:32:59.574
  I0921 12:32:59.588007 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-6370, name: ss-0, uid: c4ec6368-5449-454c-96f9-c05a378dd92b, status phase: Pending. Waiting for statefulset controller to delete.
  I0921 12:32:59.608121 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-6370, name: ss-0, uid: c4ec6368-5449-454c-96f9-c05a378dd92b, status phase: Failed. Waiting for statefulset controller to delete.
  I0921 12:32:59.667595 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-6370, name: ss-0, uid: c4ec6368-5449-454c-96f9-c05a378dd92b, status phase: Failed. Waiting for statefulset controller to delete.
  I0921 12:32:59.675857 19 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-6370
  STEP: Removing pod with conflicting port in namespace statefulset-6370 @ 09/21/24 12:32:59.675
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-6370 and will be in running state @ 09/21/24 12:32:59.695
  I0921 12:33:01.705303 19 statefulset.go:138] Deleting all statefulset in ns statefulset-6370
  I0921 12:33:01.709001 19 rest.go:150] Scaling statefulset ss to 0
  I0921 12:33:11.729431 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0921 12:33:11.734454 19 rest.go:88] Deleting statefulset ss
  I0921 12:33:11.752519 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6370" for this suite. @ 09/21/24 12:33:11.756
• [14.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 09/21/24 12:33:11.766
  I0921 12:33:11.766022 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/21/24 12:33:11.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:33:11.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:33:11.783
  STEP: create the container to handle the HTTPGet hook request. @ 09/21/24 12:33:11.791
  STEP: create the pod with lifecycle hook @ 09/21/24 12:33:13.82
  STEP: check poststart hook @ 09/21/24 12:33:15.846
  STEP: delete the pod with lifecycle hook @ 09/21/24 12:33:15.854
  I0921 12:33:17.874017 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6676" for this suite. @ 09/21/24 12:33:17.879
• [6.123 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 09/21/24 12:33:17.889
  I0921 12:33:17.889444 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/21/24 12:33:17.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:33:17.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:33:17.906
  STEP: set up a multi version CRD @ 09/21/24 12:33:17.909
  I0921 12:33:17.909466 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: mark a version not serverd @ 09/21/24 12:33:20.917
  STEP: check the unserved version gets removed @ 09/21/24 12:33:20.934
  STEP: check the other version is not changed @ 09/21/24 12:33:21.751
  I0921 12:33:24.169642 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5294" for this suite. @ 09/21/24 12:33:24.177
• [6.298 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 09/21/24 12:33:24.187
  I0921 12:33:24.187584 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 12:33:24.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:33:24.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:33:24.217
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-3059 @ 09/21/24 12:33:24.219
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/21/24 12:33:24.241
  STEP: creating service externalsvc in namespace services-3059 @ 09/21/24 12:33:24.241
  STEP: creating replication controller externalsvc in namespace services-3059 @ 09/21/24 12:33:24.257
  I0921 12:33:24.265906      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-3059, replica count: 2
  I0921 12:33:27.318077      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/21/24 12:33:27.323
  I0921 12:33:27.347683 19 resource.go:361] Creating new exec pod
  I0921 12:33:29.367602 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-3059 exec execpodpwx64 -- /bin/sh -x -c nslookup nodeport-service.services-3059.svc.cluster.local'
  I0921 12:33:29.473481 19 builder.go:146] stderr: "+ nslookup nodeport-service.services-3059.svc.cluster.local\n"
  I0921 12:33:29.473553 19 builder.go:147] stdout: "Server:\t\t10.152.183.37\nAddress:\t10.152.183.37#53\n\nnodeport-service.services-3059.svc.cluster.local\tcanonical name = externalsvc.services-3059.svc.cluster.local.\nName:\texternalsvc.services-3059.svc.cluster.local\nAddress: 10.152.183.174\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-3059, will wait for the garbage collector to delete the pods @ 09/21/24 12:33:29.473
  I0921 12:33:29.537773 19 resources.go:139] Deleting ReplicationController externalsvc took: 8.826947ms
  I0921 12:33:29.638017 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.239114ms
  I0921 12:33:32.459950 19 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0921 12:33:32.473012 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3059" for this suite. @ 09/21/24 12:33:32.478
• [8.300 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 09/21/24 12:33:32.487
  I0921 12:33:32.487520 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 12:33:32.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:33:32.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:33:32.504
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/21/24 12:33:32.515
  I0921 12:33:32.515849 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-1910 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0921 12:33:32.609757 19 builder.go:146] stderr: ""
  I0921 12:33:32.609790 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/21/24 12:33:32.609
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/21/24 12:33:37.66
  I0921 12:33:37.660987 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-1910 get pod e2e-test-httpd-pod -o json'
  I0921 12:33:37.707128 19 builder.go:146] stderr: ""
  I0921 12:33:37.707226 19 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-09-21T12:33:32Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1910\",\n        \"resourceVersion\": \"17312\",\n        \"uid\": \"f0c15f2f-aed6-4706-b1f8-53a64d050864\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-bdjh5\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-95-123\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-bdjh5\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-21T12:33:33Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-21T12:33:32Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-21T12:33:33Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-21T12:33:33Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-21T12:33:32Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://1965e67220fe5724923040ff13946c54eebced9f09aa7e278e5fa12d234157fa\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-09-21T12:33:33Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-bdjh5\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.95.123\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.95.123\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.27.20\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.27.20\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-09-21T12:33:32Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/21/24 12:33:37.707
  I0921 12:33:37.707364 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-1910 replace -f -'
  I0921 12:33:37.795719 19 builder.go:146] stderr: ""
  I0921 12:33:37.795759 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 09/21/24 12:33:37.795
  I0921 12:33:37.800804 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-1910 delete pods e2e-test-httpd-pod'
  I0921 12:33:39.040090 19 builder.go:146] stderr: ""
  I0921 12:33:39.040141 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0921 12:33:39.040388 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1910" for this suite. @ 09/21/24 12:33:39.044
• [6.566 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 09/21/24 12:33:39.053
  I0921 12:33:39.053526 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 12:33:39.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:33:39.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:33:39.071
  I0921 12:33:39.077965 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7383" for this suite. @ 09/21/24 12:33:39.082
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/21/24 12:33:39.091
  I0921 12:33:39.091904 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename svc-latency @ 09/21/24 12:33:39.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:33:39.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:33:39.111
  I0921 12:33:39.114627 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1578 @ 09/21/24 12:33:39.115
  I0921 12:33:39.121573      19 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1578, replica count: 1
  I0921 12:33:40.173179      19 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0921 12:33:40.286303 19 service_latency.go:356] Created: latency-svc-h5fp5
  I0921 12:33:40.294972 19 service_latency.go:363] Got endpoints: latency-svc-h5fp5 [21.283466ms]
  I0921 12:33:40.308925 19 service_latency.go:356] Created: latency-svc-pcj8x
  I0921 12:33:40.315132 19 service_latency.go:363] Got endpoints: latency-svc-pcj8x [19.987796ms]
  I0921 12:33:40.320793 19 service_latency.go:356] Created: latency-svc-z55h5
  I0921 12:33:40.327947 19 service_latency.go:363] Got endpoints: latency-svc-z55h5 [32.533197ms]
  I0921 12:33:40.328654 19 service_latency.go:356] Created: latency-svc-4kwjl
  I0921 12:33:40.335605 19 service_latency.go:363] Got endpoints: latency-svc-4kwjl [40.075703ms]
  I0921 12:33:40.340573 19 service_latency.go:356] Created: latency-svc-9f7r8
  I0921 12:33:40.345672 19 service_latency.go:363] Got endpoints: latency-svc-9f7r8 [49.886472ms]
  I0921 12:33:40.347801 19 service_latency.go:356] Created: latency-svc-q2wtb
  I0921 12:33:40.355332 19 service_latency.go:356] Created: latency-svc-vkh9z
  I0921 12:33:40.355992 19 service_latency.go:363] Got endpoints: latency-svc-q2wtb [60.138025ms]
  I0921 12:33:40.364532 19 service_latency.go:363] Got endpoints: latency-svc-vkh9z [68.845255ms]
  I0921 12:33:40.366479 19 service_latency.go:356] Created: latency-svc-xfhcc
  I0921 12:33:40.372240 19 service_latency.go:363] Got endpoints: latency-svc-xfhcc [76.254201ms]
  I0921 12:33:40.378126 19 service_latency.go:356] Created: latency-svc-2cz54
  I0921 12:33:40.382203 19 service_latency.go:363] Got endpoints: latency-svc-2cz54 [86.590882ms]
  I0921 12:33:40.383050 19 service_latency.go:356] Created: latency-svc-4662m
  I0921 12:33:40.391388 19 service_latency.go:363] Got endpoints: latency-svc-4662m [95.367923ms]
  I0921 12:33:40.393903 19 service_latency.go:356] Created: latency-svc-rkvbc
  I0921 12:33:40.400081 19 service_latency.go:363] Got endpoints: latency-svc-rkvbc [103.987518ms]
  I0921 12:33:40.405018 19 service_latency.go:356] Created: latency-svc-pkzp2
  I0921 12:33:40.410474 19 service_latency.go:356] Created: latency-svc-7kcqj
  I0921 12:33:40.412867 19 service_latency.go:363] Got endpoints: latency-svc-pkzp2 [114.995341ms]
  I0921 12:33:40.416387 19 service_latency.go:363] Got endpoints: latency-svc-7kcqj [120.086377ms]
  I0921 12:33:40.420144 19 service_latency.go:356] Created: latency-svc-fzf8w
  I0921 12:33:40.425104 19 service_latency.go:363] Got endpoints: latency-svc-fzf8w [128.948128ms]
  I0921 12:33:40.428965 19 service_latency.go:356] Created: latency-svc-fzvm7
  I0921 12:33:40.438508 19 service_latency.go:356] Created: latency-svc-qrzg9
  I0921 12:33:40.438721 19 service_latency.go:363] Got endpoints: latency-svc-fzvm7 [141.038351ms]
  I0921 12:33:40.446198 19 service_latency.go:363] Got endpoints: latency-svc-qrzg9 [149.969866ms]
  I0921 12:33:40.449253 19 service_latency.go:356] Created: latency-svc-v8zwb
  I0921 12:33:40.453703 19 service_latency.go:363] Got endpoints: latency-svc-v8zwb [138.521029ms]
  I0921 12:33:40.459696 19 service_latency.go:356] Created: latency-svc-28fxr
  I0921 12:33:40.464613 19 service_latency.go:363] Got endpoints: latency-svc-28fxr [136.635194ms]
  I0921 12:33:40.466016 19 service_latency.go:356] Created: latency-svc-b6rfj
  I0921 12:33:40.472730 19 service_latency.go:363] Got endpoints: latency-svc-b6rfj [137.096618ms]
  I0921 12:33:40.476469 19 service_latency.go:356] Created: latency-svc-5r9kx
  I0921 12:33:40.482511 19 service_latency.go:363] Got endpoints: latency-svc-5r9kx [136.789979ms]
  I0921 12:33:40.484659 19 service_latency.go:356] Created: latency-svc-jg64k
  I0921 12:33:40.491896 19 service_latency.go:356] Created: latency-svc-lql9l
  I0921 12:33:40.493316 19 service_latency.go:363] Got endpoints: latency-svc-jg64k [136.869379ms]
  I0921 12:33:40.498570 19 service_latency.go:363] Got endpoints: latency-svc-lql9l [134.00992ms]
  I0921 12:33:40.502602 19 service_latency.go:356] Created: latency-svc-rn8w6
  I0921 12:33:40.507615 19 service_latency.go:363] Got endpoints: latency-svc-rn8w6 [135.337504ms]
  I0921 12:33:40.511466 19 service_latency.go:356] Created: latency-svc-9gmvn
  I0921 12:33:40.518476 19 service_latency.go:356] Created: latency-svc-mvmjz
  I0921 12:33:40.519500 19 service_latency.go:363] Got endpoints: latency-svc-9gmvn [137.01469ms]
  I0921 12:33:40.527122 19 service_latency.go:356] Created: latency-svc-27k9n
  I0921 12:33:40.528552 19 service_latency.go:363] Got endpoints: latency-svc-mvmjz [137.13652ms]
  I0921 12:33:40.533386 19 service_latency.go:363] Got endpoints: latency-svc-27k9n [132.598513ms]
  I0921 12:33:40.536644 19 service_latency.go:356] Created: latency-svc-h4mdw
  I0921 12:33:40.542966 19 service_latency.go:356] Created: latency-svc-d2q97
  I0921 12:33:40.544908 19 service_latency.go:363] Got endpoints: latency-svc-h4mdw [132.017414ms]
  I0921 12:33:40.553854 19 service_latency.go:363] Got endpoints: latency-svc-d2q97 [137.439939ms]
  I0921 12:33:40.555149 19 service_latency.go:356] Created: latency-svc-xd7k4
  I0921 12:33:40.564150 19 service_latency.go:363] Got endpoints: latency-svc-xd7k4 [138.953392ms]
  I0921 12:33:40.570507 19 service_latency.go:356] Created: latency-svc-nl4cc
  I0921 12:33:40.579069 19 service_latency.go:356] Created: latency-svc-vbngb
  I0921 12:33:40.579231 19 service_latency.go:363] Got endpoints: latency-svc-nl4cc [140.494827ms]
  I0921 12:33:40.587760 19 service_latency.go:363] Got endpoints: latency-svc-vbngb [141.529546ms]
  I0921 12:33:40.588943 19 service_latency.go:356] Created: latency-svc-c4rpc
  I0921 12:33:40.595376 19 service_latency.go:363] Got endpoints: latency-svc-c4rpc [141.483635ms]
  I0921 12:33:40.600109 19 service_latency.go:356] Created: latency-svc-45q26
  I0921 12:33:40.607014 19 service_latency.go:356] Created: latency-svc-qbd58
  I0921 12:33:40.607946 19 service_latency.go:363] Got endpoints: latency-svc-45q26 [143.170077ms]
  I0921 12:33:40.616335 19 service_latency.go:363] Got endpoints: latency-svc-qbd58 [143.577447ms]
  I0921 12:33:40.619460 19 service_latency.go:356] Created: latency-svc-dlnkp
  I0921 12:33:40.624403 19 service_latency.go:363] Got endpoints: latency-svc-dlnkp [141.83278ms]
  I0921 12:33:40.631173 19 service_latency.go:356] Created: latency-svc-fvckt
  I0921 12:33:40.636401 19 service_latency.go:363] Got endpoints: latency-svc-fvckt [143.042924ms]
  I0921 12:33:40.637025 19 service_latency.go:356] Created: latency-svc-n47bl
  I0921 12:33:40.646724 19 service_latency.go:363] Got endpoints: latency-svc-n47bl [148.123917ms]
  I0921 12:33:40.654428 19 service_latency.go:356] Created: latency-svc-2fws9
  I0921 12:33:40.663135 19 service_latency.go:356] Created: latency-svc-472s4
  I0921 12:33:40.674440 19 service_latency.go:356] Created: latency-svc-d2jrf
  I0921 12:33:40.685199 19 service_latency.go:356] Created: latency-svc-sgt4c
  I0921 12:33:40.696886 19 service_latency.go:363] Got endpoints: latency-svc-2fws9 [189.207275ms]
  I0921 12:33:40.700701 19 service_latency.go:356] Created: latency-svc-spjl2
  I0921 12:33:40.701710 19 service_latency.go:356] Created: latency-svc-bgwt8
  I0921 12:33:40.708786 19 service_latency.go:356] Created: latency-svc-tnts8
  I0921 12:33:40.728548 19 service_latency.go:356] Created: latency-svc-vbr54
  I0921 12:33:40.732908 19 service_latency.go:356] Created: latency-svc-mdx2k
  I0921 12:33:40.741771 19 service_latency.go:356] Created: latency-svc-dprnb
  I0921 12:33:40.746726 19 service_latency.go:363] Got endpoints: latency-svc-472s4 [226.898929ms]
  I0921 12:33:40.756140 19 service_latency.go:356] Created: latency-svc-grq7d
  I0921 12:33:40.762082 19 service_latency.go:356] Created: latency-svc-dzqws
  I0921 12:33:40.768843 19 service_latency.go:356] Created: latency-svc-rpxlw
  I0921 12:33:40.778000 19 service_latency.go:356] Created: latency-svc-qdpdb
  I0921 12:33:40.783072 19 service_latency.go:356] Created: latency-svc-6dx4z
  I0921 12:33:40.791414 19 service_latency.go:356] Created: latency-svc-dj7hn
  I0921 12:33:40.798971 19 service_latency.go:363] Got endpoints: latency-svc-d2jrf [270.291496ms]
  I0921 12:33:40.801298 19 service_latency.go:356] Created: latency-svc-5ntxq
  I0921 12:33:40.810277 19 service_latency.go:356] Created: latency-svc-rbnl5
  I0921 12:33:40.846016 19 service_latency.go:363] Got endpoints: latency-svc-sgt4c [312.600364ms]
  I0921 12:33:40.858296 19 service_latency.go:356] Created: latency-svc-dm682
  I0921 12:33:40.893471 19 service_latency.go:363] Got endpoints: latency-svc-spjl2 [348.506438ms]
  I0921 12:33:40.909400 19 service_latency.go:356] Created: latency-svc-j7sld
  I0921 12:33:40.944288 19 service_latency.go:363] Got endpoints: latency-svc-bgwt8 [390.400588ms]
  I0921 12:33:40.955933 19 service_latency.go:356] Created: latency-svc-l646h
  I0921 12:33:40.993500 19 service_latency.go:363] Got endpoints: latency-svc-tnts8 [429.322415ms]
  I0921 12:33:41.006134 19 service_latency.go:356] Created: latency-svc-brnnm
  I0921 12:33:41.046630 19 service_latency.go:363] Got endpoints: latency-svc-vbr54 [467.375847ms]
  I0921 12:33:41.060530 19 service_latency.go:356] Created: latency-svc-zd68k
  I0921 12:33:41.095623 19 service_latency.go:363] Got endpoints: latency-svc-mdx2k [507.814757ms]
  I0921 12:33:41.107522 19 service_latency.go:356] Created: latency-svc-jh2tj
  I0921 12:33:41.143259 19 service_latency.go:363] Got endpoints: latency-svc-dprnb [547.851007ms]
  I0921 12:33:41.158504 19 service_latency.go:356] Created: latency-svc-rwssf
  I0921 12:33:41.194051 19 service_latency.go:363] Got endpoints: latency-svc-grq7d [586.072074ms]
  I0921 12:33:41.209746 19 service_latency.go:356] Created: latency-svc-4dnkp
  I0921 12:33:41.247366 19 service_latency.go:363] Got endpoints: latency-svc-dzqws [630.959547ms]
  I0921 12:33:41.258267 19 service_latency.go:356] Created: latency-svc-xbz9h
  I0921 12:33:41.296031 19 service_latency.go:363] Got endpoints: latency-svc-rpxlw [671.596104ms]
  I0921 12:33:41.311026 19 service_latency.go:356] Created: latency-svc-r867c
  I0921 12:33:41.345310 19 service_latency.go:363] Got endpoints: latency-svc-qdpdb [708.837407ms]
  I0921 12:33:41.358735 19 service_latency.go:356] Created: latency-svc-khg6b
  I0921 12:33:41.395169 19 service_latency.go:363] Got endpoints: latency-svc-6dx4z [748.412013ms]
  I0921 12:33:41.409012 19 service_latency.go:356] Created: latency-svc-x42tj
  I0921 12:33:41.443899 19 service_latency.go:363] Got endpoints: latency-svc-dj7hn [746.903478ms]
  I0921 12:33:41.455877 19 service_latency.go:356] Created: latency-svc-vqzn7
  I0921 12:33:41.495932 19 service_latency.go:363] Got endpoints: latency-svc-5ntxq [749.174879ms]
  I0921 12:33:41.509210 19 service_latency.go:356] Created: latency-svc-4xj5f
  I0921 12:33:41.545914 19 service_latency.go:363] Got endpoints: latency-svc-rbnl5 [746.90113ms]
  I0921 12:33:41.556991 19 service_latency.go:356] Created: latency-svc-cskcn
  I0921 12:33:41.593274 19 service_latency.go:363] Got endpoints: latency-svc-dm682 [747.106543ms]
  I0921 12:33:41.608521 19 service_latency.go:356] Created: latency-svc-kjp9j
  I0921 12:33:41.644133 19 service_latency.go:363] Got endpoints: latency-svc-j7sld [750.580523ms]
  I0921 12:33:41.657644 19 service_latency.go:356] Created: latency-svc-8tdsc
  I0921 12:33:41.695733 19 service_latency.go:363] Got endpoints: latency-svc-l646h [751.049817ms]
  I0921 12:33:41.706392 19 service_latency.go:356] Created: latency-svc-4vkgl
  I0921 12:33:41.745416 19 service_latency.go:363] Got endpoints: latency-svc-brnnm [751.860128ms]
  I0921 12:33:41.758054 19 service_latency.go:356] Created: latency-svc-v4h9f
  I0921 12:33:41.793821 19 service_latency.go:363] Got endpoints: latency-svc-zd68k [747.14851ms]
  I0921 12:33:41.809273 19 service_latency.go:356] Created: latency-svc-fpfcg
  I0921 12:33:41.843984 19 service_latency.go:363] Got endpoints: latency-svc-jh2tj [748.311965ms]
  I0921 12:33:41.858259 19 service_latency.go:356] Created: latency-svc-rnbts
  I0921 12:33:41.894373 19 service_latency.go:363] Got endpoints: latency-svc-rwssf [751.008702ms]
  I0921 12:33:41.909188 19 service_latency.go:356] Created: latency-svc-j9czr
  I0921 12:33:41.944920 19 service_latency.go:363] Got endpoints: latency-svc-4dnkp [750.822529ms]
  I0921 12:33:41.958683 19 service_latency.go:356] Created: latency-svc-8jx7m
  I0921 12:33:41.996115 19 service_latency.go:363] Got endpoints: latency-svc-xbz9h [748.703421ms]
  I0921 12:33:42.006806 19 service_latency.go:356] Created: latency-svc-4t4vp
  I0921 12:33:42.045538 19 service_latency.go:363] Got endpoints: latency-svc-r867c [749.058539ms]
  I0921 12:33:42.057480 19 service_latency.go:356] Created: latency-svc-d7nc6
  I0921 12:33:42.093357 19 service_latency.go:363] Got endpoints: latency-svc-khg6b [747.931623ms]
  I0921 12:33:42.108588 19 service_latency.go:356] Created: latency-svc-85gn2
  I0921 12:33:42.145019 19 service_latency.go:363] Got endpoints: latency-svc-x42tj [749.775695ms]
  I0921 12:33:42.157879 19 service_latency.go:356] Created: latency-svc-2c7rw
  I0921 12:33:42.194813 19 service_latency.go:363] Got endpoints: latency-svc-vqzn7 [750.847616ms]
  I0921 12:33:42.207447 19 service_latency.go:356] Created: latency-svc-lvmx5
  I0921 12:33:42.246392 19 service_latency.go:363] Got endpoints: latency-svc-4xj5f [750.407483ms]
  I0921 12:33:42.260365 19 service_latency.go:356] Created: latency-svc-f99x8
  I0921 12:33:42.296161 19 service_latency.go:363] Got endpoints: latency-svc-cskcn [750.206339ms]
  I0921 12:33:42.309443 19 service_latency.go:356] Created: latency-svc-xbcz5
  I0921 12:33:42.343504 19 service_latency.go:363] Got endpoints: latency-svc-kjp9j [750.183957ms]
  I0921 12:33:42.358045 19 service_latency.go:356] Created: latency-svc-vtnkc
  I0921 12:33:42.394232 19 service_latency.go:363] Got endpoints: latency-svc-8tdsc [750.057994ms]
  I0921 12:33:42.411511 19 service_latency.go:356] Created: latency-svc-jt558
  I0921 12:33:42.446857 19 service_latency.go:363] Got endpoints: latency-svc-4vkgl [751.079773ms]
  I0921 12:33:42.457844 19 service_latency.go:356] Created: latency-svc-7qpbw
  I0921 12:33:42.495735 19 service_latency.go:363] Got endpoints: latency-svc-v4h9f [750.009439ms]
  I0921 12:33:42.509656 19 service_latency.go:356] Created: latency-svc-md74d
  I0921 12:33:42.545541 19 service_latency.go:363] Got endpoints: latency-svc-fpfcg [751.673228ms]
  I0921 12:33:42.564887 19 service_latency.go:356] Created: latency-svc-xj6q9
  I0921 12:33:42.594391 19 service_latency.go:363] Got endpoints: latency-svc-rnbts [750.362221ms]
  I0921 12:33:42.608461 19 service_latency.go:356] Created: latency-svc-5tbnn
  I0921 12:33:42.643515 19 service_latency.go:363] Got endpoints: latency-svc-j9czr [749.089804ms]
  I0921 12:33:42.657645 19 service_latency.go:356] Created: latency-svc-fdvzg
  I0921 12:33:42.694987 19 service_latency.go:363] Got endpoints: latency-svc-8jx7m [750.018363ms]
  I0921 12:33:42.709713 19 service_latency.go:356] Created: latency-svc-7hwvw
  I0921 12:33:42.746903 19 service_latency.go:363] Got endpoints: latency-svc-4t4vp [750.740948ms]
  I0921 12:33:42.758327 19 service_latency.go:356] Created: latency-svc-zf2bm
  I0921 12:33:42.797374 19 service_latency.go:363] Got endpoints: latency-svc-d7nc6 [751.793707ms]
  I0921 12:33:42.809955 19 service_latency.go:356] Created: latency-svc-gw5nn
  I0921 12:33:42.844033 19 service_latency.go:363] Got endpoints: latency-svc-85gn2 [750.628244ms]
  I0921 12:33:42.860215 19 service_latency.go:356] Created: latency-svc-w5sfj
  I0921 12:33:42.895234 19 service_latency.go:363] Got endpoints: latency-svc-2c7rw [750.164376ms]
  I0921 12:33:42.906638 19 service_latency.go:356] Created: latency-svc-zq4d6
  I0921 12:33:42.945211 19 service_latency.go:363] Got endpoints: latency-svc-lvmx5 [750.34304ms]
  I0921 12:33:42.958218 19 service_latency.go:356] Created: latency-svc-kr7h5
  I0921 12:33:42.997580 19 service_latency.go:363] Got endpoints: latency-svc-f99x8 [751.141686ms]
  I0921 12:33:43.012808 19 service_latency.go:356] Created: latency-svc-m66fv
  I0921 12:33:43.047169 19 service_latency.go:363] Got endpoints: latency-svc-xbcz5 [750.874896ms]
  I0921 12:33:43.059080 19 service_latency.go:356] Created: latency-svc-9jvjm
  I0921 12:33:43.093684 19 service_latency.go:363] Got endpoints: latency-svc-vtnkc [750.138944ms]
  I0921 12:33:43.110027 19 service_latency.go:356] Created: latency-svc-5lzg2
  I0921 12:33:43.145178 19 service_latency.go:363] Got endpoints: latency-svc-jt558 [750.653937ms]
  I0921 12:33:43.160450 19 service_latency.go:356] Created: latency-svc-d6vtb
  I0921 12:33:43.195027 19 service_latency.go:363] Got endpoints: latency-svc-7qpbw [748.130159ms]
  I0921 12:33:43.206474 19 service_latency.go:356] Created: latency-svc-qjbtd
  I0921 12:33:43.245275 19 service_latency.go:363] Got endpoints: latency-svc-md74d [749.496253ms]
  I0921 12:33:43.257490 19 service_latency.go:356] Created: latency-svc-wfwwc
  I0921 12:33:43.296917 19 service_latency.go:363] Got endpoints: latency-svc-xj6q9 [745.984808ms]
  I0921 12:33:43.313984 19 service_latency.go:356] Created: latency-svc-xg5jl
  I0921 12:33:43.344231 19 service_latency.go:363] Got endpoints: latency-svc-5tbnn [749.795751ms]
  I0921 12:33:43.356701 19 service_latency.go:356] Created: latency-svc-6klsm
  I0921 12:33:43.393928 19 service_latency.go:363] Got endpoints: latency-svc-fdvzg [750.352918ms]
  I0921 12:33:43.408951 19 service_latency.go:356] Created: latency-svc-7h952
  I0921 12:33:43.444633 19 service_latency.go:363] Got endpoints: latency-svc-7hwvw [749.593776ms]
  I0921 12:33:43.457756 19 service_latency.go:356] Created: latency-svc-mh9bs
  I0921 12:33:43.495956 19 service_latency.go:363] Got endpoints: latency-svc-zf2bm [749.014472ms]
  I0921 12:33:43.506964 19 service_latency.go:356] Created: latency-svc-zn24p
  I0921 12:33:43.546290 19 service_latency.go:363] Got endpoints: latency-svc-gw5nn [748.877433ms]
  I0921 12:33:43.558116 19 service_latency.go:356] Created: latency-svc-5cmjx
  I0921 12:33:43.594111 19 service_latency.go:363] Got endpoints: latency-svc-w5sfj [750.030966ms]
  I0921 12:33:43.611069 19 service_latency.go:356] Created: latency-svc-hhp4b
  I0921 12:33:43.643466 19 service_latency.go:363] Got endpoints: latency-svc-zq4d6 [748.171774ms]
  I0921 12:33:43.654665 19 service_latency.go:356] Created: latency-svc-z69bc
  I0921 12:33:43.695770 19 service_latency.go:363] Got endpoints: latency-svc-kr7h5 [750.27777ms]
  I0921 12:33:43.708614 19 service_latency.go:356] Created: latency-svc-mfjk6
  I0921 12:33:43.746566 19 service_latency.go:363] Got endpoints: latency-svc-m66fv [748.939105ms]
  I0921 12:33:43.760608 19 service_latency.go:356] Created: latency-svc-6w4xz
  I0921 12:33:43.795137 19 service_latency.go:363] Got endpoints: latency-svc-9jvjm [747.921263ms]
  I0921 12:33:43.809125 19 service_latency.go:356] Created: latency-svc-xzf2v
  I0921 12:33:43.844604 19 service_latency.go:363] Got endpoints: latency-svc-5lzg2 [750.868871ms]
  I0921 12:33:43.860402 19 service_latency.go:356] Created: latency-svc-dm52m
  I0921 12:33:43.898057 19 service_latency.go:363] Got endpoints: latency-svc-d6vtb [752.665276ms]
  I0921 12:33:43.912710 19 service_latency.go:356] Created: latency-svc-gghzn
  I0921 12:33:43.944926 19 service_latency.go:363] Got endpoints: latency-svc-qjbtd [749.8369ms]
  I0921 12:33:43.956281 19 service_latency.go:356] Created: latency-svc-fvflb
  I0921 12:33:43.996260 19 service_latency.go:363] Got endpoints: latency-svc-wfwwc [750.927978ms]
  I0921 12:33:44.009265 19 service_latency.go:356] Created: latency-svc-dx9w9
  I0921 12:33:44.052619 19 service_latency.go:363] Got endpoints: latency-svc-xg5jl [755.651254ms]
  I0921 12:33:44.068210 19 service_latency.go:356] Created: latency-svc-455kd
  I0921 12:33:44.093947 19 service_latency.go:363] Got endpoints: latency-svc-6klsm [749.646145ms]
  I0921 12:33:44.107234 19 service_latency.go:356] Created: latency-svc-phkpd
  I0921 12:33:44.145763 19 service_latency.go:363] Got endpoints: latency-svc-7h952 [751.784071ms]
  I0921 12:33:44.155449 19 service_latency.go:356] Created: latency-svc-zwgv5
  I0921 12:33:44.193550 19 service_latency.go:363] Got endpoints: latency-svc-mh9bs [748.863214ms]
  I0921 12:33:44.205962 19 service_latency.go:356] Created: latency-svc-5llv4
  I0921 12:33:44.243949 19 service_latency.go:363] Got endpoints: latency-svc-zn24p [747.947526ms]
  I0921 12:33:44.258189 19 service_latency.go:356] Created: latency-svc-l2kj6
  I0921 12:33:44.297680 19 service_latency.go:363] Got endpoints: latency-svc-5cmjx [751.345119ms]
  I0921 12:33:44.315757 19 service_latency.go:356] Created: latency-svc-dck6v
  I0921 12:33:44.344880 19 service_latency.go:363] Got endpoints: latency-svc-hhp4b [750.725079ms]
  I0921 12:33:44.359720 19 service_latency.go:356] Created: latency-svc-t4j2b
  I0921 12:33:44.395419 19 service_latency.go:363] Got endpoints: latency-svc-z69bc [751.89819ms]
  I0921 12:33:44.408533 19 service_latency.go:356] Created: latency-svc-xv4f7
  I0921 12:33:44.446411 19 service_latency.go:363] Got endpoints: latency-svc-mfjk6 [750.593997ms]
  I0921 12:33:44.459648 19 service_latency.go:356] Created: latency-svc-2v94b
  I0921 12:33:44.495988 19 service_latency.go:363] Got endpoints: latency-svc-6w4xz [749.368133ms]
  I0921 12:33:44.508742 19 service_latency.go:356] Created: latency-svc-ph596
  I0921 12:33:44.544400 19 service_latency.go:363] Got endpoints: latency-svc-xzf2v [748.97712ms]
  I0921 12:33:44.558754 19 service_latency.go:356] Created: latency-svc-kdrpz
  I0921 12:33:44.595805 19 service_latency.go:363] Got endpoints: latency-svc-dm52m [751.045949ms]
  I0921 12:33:44.611052 19 service_latency.go:356] Created: latency-svc-qvcpj
  I0921 12:33:44.645457 19 service_latency.go:363] Got endpoints: latency-svc-gghzn [747.351484ms]
  I0921 12:33:44.657639 19 service_latency.go:356] Created: latency-svc-bb948
  I0921 12:33:44.696928 19 service_latency.go:363] Got endpoints: latency-svc-fvflb [751.954769ms]
  I0921 12:33:44.709701 19 service_latency.go:356] Created: latency-svc-swg8v
  I0921 12:33:44.746130 19 service_latency.go:363] Got endpoints: latency-svc-dx9w9 [749.821342ms]
  I0921 12:33:44.760086 19 service_latency.go:356] Created: latency-svc-rjvzf
  I0921 12:33:44.793488 19 service_latency.go:363] Got endpoints: latency-svc-455kd [740.794281ms]
  I0921 12:33:44.807670 19 service_latency.go:356] Created: latency-svc-5r8r2
  I0921 12:33:44.845313 19 service_latency.go:363] Got endpoints: latency-svc-phkpd [751.31581ms]
  I0921 12:33:44.857211 19 service_latency.go:356] Created: latency-svc-vszzx
  I0921 12:33:44.896538 19 service_latency.go:363] Got endpoints: latency-svc-zwgv5 [750.721018ms]
  I0921 12:33:44.909882 19 service_latency.go:356] Created: latency-svc-dswhg
  I0921 12:33:44.945929 19 service_latency.go:363] Got endpoints: latency-svc-5llv4 [752.321856ms]
  I0921 12:33:44.958084 19 service_latency.go:356] Created: latency-svc-9mcjn
  I0921 12:33:44.995997 19 service_latency.go:363] Got endpoints: latency-svc-l2kj6 [751.971643ms]
  I0921 12:33:45.009948 19 service_latency.go:356] Created: latency-svc-782f2
  I0921 12:33:45.044395 19 service_latency.go:363] Got endpoints: latency-svc-dck6v [746.664669ms]
  I0921 12:33:45.059574 19 service_latency.go:356] Created: latency-svc-nsxcc
  I0921 12:33:45.093843 19 service_latency.go:363] Got endpoints: latency-svc-t4j2b [748.790425ms]
  I0921 12:33:45.105917 19 service_latency.go:356] Created: latency-svc-6ktt6
  I0921 12:33:45.145983 19 service_latency.go:363] Got endpoints: latency-svc-xv4f7 [750.517068ms]
  I0921 12:33:45.157552 19 service_latency.go:356] Created: latency-svc-ljts2
  I0921 12:33:45.196613 19 service_latency.go:363] Got endpoints: latency-svc-2v94b [750.154283ms]
  I0921 12:33:45.208224 19 service_latency.go:356] Created: latency-svc-xzwbd
  I0921 12:33:45.243420 19 service_latency.go:363] Got endpoints: latency-svc-ph596 [747.388364ms]
  I0921 12:33:45.257179 19 service_latency.go:356] Created: latency-svc-8jnkb
  I0921 12:33:45.293890 19 service_latency.go:363] Got endpoints: latency-svc-kdrpz [749.417298ms]
  I0921 12:33:45.307466 19 service_latency.go:356] Created: latency-svc-5dw8t
  I0921 12:33:45.346503 19 service_latency.go:363] Got endpoints: latency-svc-qvcpj [750.651502ms]
  I0921 12:33:45.359542 19 service_latency.go:356] Created: latency-svc-b4d65
  I0921 12:33:45.395427 19 service_latency.go:363] Got endpoints: latency-svc-bb948 [749.909749ms]
  I0921 12:33:45.408769 19 service_latency.go:356] Created: latency-svc-br4kw
  I0921 12:33:45.445806 19 service_latency.go:363] Got endpoints: latency-svc-swg8v [748.797666ms]
  I0921 12:33:45.459211 19 service_latency.go:356] Created: latency-svc-smjqz
  I0921 12:33:45.493463 19 service_latency.go:363] Got endpoints: latency-svc-rjvzf [747.289424ms]
  I0921 12:33:45.507266 19 service_latency.go:356] Created: latency-svc-vjtbm
  I0921 12:33:45.544929 19 service_latency.go:363] Got endpoints: latency-svc-5r8r2 [751.359686ms]
  I0921 12:33:45.557372 19 service_latency.go:356] Created: latency-svc-xzqzb
  I0921 12:33:45.596636 19 service_latency.go:363] Got endpoints: latency-svc-vszzx [751.254479ms]
  I0921 12:33:45.609099 19 service_latency.go:356] Created: latency-svc-fzmrq
  I0921 12:33:45.645329 19 service_latency.go:363] Got endpoints: latency-svc-dswhg [748.717978ms]
  I0921 12:33:45.658055 19 service_latency.go:356] Created: latency-svc-vvld7
  I0921 12:33:45.693734 19 service_latency.go:363] Got endpoints: latency-svc-9mcjn [747.754572ms]
  I0921 12:33:45.708088 19 service_latency.go:356] Created: latency-svc-spn7l
  I0921 12:33:45.744214 19 service_latency.go:363] Got endpoints: latency-svc-782f2 [748.170376ms]
  I0921 12:33:45.756765 19 service_latency.go:356] Created: latency-svc-tns7k
  I0921 12:33:45.792981 19 service_latency.go:363] Got endpoints: latency-svc-nsxcc [748.53909ms]
  I0921 12:33:45.805888 19 service_latency.go:356] Created: latency-svc-hlngs
  I0921 12:33:45.846322 19 service_latency.go:363] Got endpoints: latency-svc-6ktt6 [752.428155ms]
  I0921 12:33:45.859450 19 service_latency.go:356] Created: latency-svc-rr526
  I0921 12:33:45.898209 19 service_latency.go:363] Got endpoints: latency-svc-ljts2 [751.988808ms]
  I0921 12:33:45.910577 19 service_latency.go:356] Created: latency-svc-f2wq8
  I0921 12:33:45.943632 19 service_latency.go:363] Got endpoints: latency-svc-xzwbd [746.964751ms]
  I0921 12:33:45.959011 19 service_latency.go:356] Created: latency-svc-lsdrb
  I0921 12:33:45.994407 19 service_latency.go:363] Got endpoints: latency-svc-8jnkb [750.936429ms]
  I0921 12:33:46.008578 19 service_latency.go:356] Created: latency-svc-94fgp
  I0921 12:33:46.046289 19 service_latency.go:363] Got endpoints: latency-svc-5dw8t [752.3009ms]
  I0921 12:33:46.057919 19 service_latency.go:356] Created: latency-svc-hv2kt
  I0921 12:33:46.095253 19 service_latency.go:363] Got endpoints: latency-svc-b4d65 [748.703801ms]
  I0921 12:33:46.111530 19 service_latency.go:356] Created: latency-svc-z2qc6
  I0921 12:33:46.146124 19 service_latency.go:363] Got endpoints: latency-svc-br4kw [750.650575ms]
  I0921 12:33:46.159255 19 service_latency.go:356] Created: latency-svc-4b28p
  I0921 12:33:46.195391 19 service_latency.go:363] Got endpoints: latency-svc-smjqz [749.243337ms]
  I0921 12:33:46.209700 19 service_latency.go:356] Created: latency-svc-vhqxj
  I0921 12:33:46.245565 19 service_latency.go:363] Got endpoints: latency-svc-vjtbm [752.060375ms]
  I0921 12:33:46.258034 19 service_latency.go:356] Created: latency-svc-fd6r5
  I0921 12:33:46.298800 19 service_latency.go:363] Got endpoints: latency-svc-xzqzb [753.815894ms]
  I0921 12:33:46.311776 19 service_latency.go:356] Created: latency-svc-r5pg9
  I0921 12:33:46.346195 19 service_latency.go:363] Got endpoints: latency-svc-fzmrq [749.506421ms]
  I0921 12:33:46.358196 19 service_latency.go:356] Created: latency-svc-kqggt
  I0921 12:33:46.393750 19 service_latency.go:363] Got endpoints: latency-svc-vvld7 [748.28759ms]
  I0921 12:33:46.414016 19 service_latency.go:356] Created: latency-svc-hxmk7
  I0921 12:33:46.447060 19 service_latency.go:363] Got endpoints: latency-svc-spn7l [753.274332ms]
  I0921 12:33:46.460753 19 service_latency.go:356] Created: latency-svc-rs2hg
  I0921 12:33:46.494186 19 service_latency.go:363] Got endpoints: latency-svc-tns7k [749.933798ms]
  I0921 12:33:46.509782 19 service_latency.go:356] Created: latency-svc-njgz9
  I0921 12:33:46.544559 19 service_latency.go:363] Got endpoints: latency-svc-hlngs [751.527793ms]
  I0921 12:33:46.557931 19 service_latency.go:356] Created: latency-svc-vzz2d
  I0921 12:33:46.596292 19 service_latency.go:363] Got endpoints: latency-svc-rr526 [749.687647ms]
  I0921 12:33:46.608646 19 service_latency.go:356] Created: latency-svc-7qsvf
  I0921 12:33:46.646566 19 service_latency.go:363] Got endpoints: latency-svc-f2wq8 [748.304737ms]
  I0921 12:33:46.658489 19 service_latency.go:356] Created: latency-svc-b2dgj
  I0921 12:33:46.693235 19 service_latency.go:363] Got endpoints: latency-svc-lsdrb [749.526597ms]
  I0921 12:33:46.708234 19 service_latency.go:356] Created: latency-svc-ld7qr
  I0921 12:33:46.744414 19 service_latency.go:363] Got endpoints: latency-svc-94fgp [749.963659ms]
  I0921 12:33:46.756649 19 service_latency.go:356] Created: latency-svc-zcg4c
  I0921 12:33:46.796037 19 service_latency.go:363] Got endpoints: latency-svc-hv2kt [749.668538ms]
  I0921 12:33:46.808950 19 service_latency.go:356] Created: latency-svc-r8mqf
  I0921 12:33:46.845960 19 service_latency.go:363] Got endpoints: latency-svc-z2qc6 [750.656463ms]
  I0921 12:33:46.858967 19 service_latency.go:356] Created: latency-svc-rppvj
  I0921 12:33:46.894853 19 service_latency.go:363] Got endpoints: latency-svc-4b28p [748.67865ms]
  I0921 12:33:46.909122 19 service_latency.go:356] Created: latency-svc-7dnlw
  I0921 12:33:46.944376 19 service_latency.go:363] Got endpoints: latency-svc-vhqxj [748.931305ms]
  I0921 12:33:46.958698 19 service_latency.go:356] Created: latency-svc-g6ffj
  I0921 12:33:46.993435 19 service_latency.go:363] Got endpoints: latency-svc-fd6r5 [747.681327ms]
  I0921 12:33:47.008260 19 service_latency.go:356] Created: latency-svc-mq5x2
  I0921 12:33:47.044675 19 service_latency.go:363] Got endpoints: latency-svc-r5pg9 [745.809566ms]
  I0921 12:33:47.058859 19 service_latency.go:356] Created: latency-svc-g4blx
  I0921 12:33:47.097163 19 service_latency.go:363] Got endpoints: latency-svc-kqggt [750.918916ms]
  I0921 12:33:47.111737 19 service_latency.go:356] Created: latency-svc-jlxjk
  I0921 12:33:47.146520 19 service_latency.go:363] Got endpoints: latency-svc-hxmk7 [752.720148ms]
  I0921 12:33:47.158503 19 service_latency.go:356] Created: latency-svc-cndhc
  I0921 12:33:47.194139 19 service_latency.go:363] Got endpoints: latency-svc-rs2hg [747.03631ms]
  I0921 12:33:47.209544 19 service_latency.go:356] Created: latency-svc-sqp5k
  I0921 12:33:47.243688 19 service_latency.go:363] Got endpoints: latency-svc-njgz9 [749.40492ms]
  I0921 12:33:47.258264 19 service_latency.go:356] Created: latency-svc-zws9x
  I0921 12:33:47.294316 19 service_latency.go:363] Got endpoints: latency-svc-vzz2d [749.715184ms]
  I0921 12:33:47.307471 19 service_latency.go:356] Created: latency-svc-8j64n
  I0921 12:33:47.345847 19 service_latency.go:363] Got endpoints: latency-svc-7qsvf [749.473621ms]
  I0921 12:33:47.358620 19 service_latency.go:356] Created: latency-svc-zf2cm
  I0921 12:33:47.395577 19 service_latency.go:363] Got endpoints: latency-svc-b2dgj [748.965444ms]
  I0921 12:33:47.406717 19 service_latency.go:356] Created: latency-svc-hlw9q
  I0921 12:33:47.443640 19 service_latency.go:363] Got endpoints: latency-svc-ld7qr [750.372589ms]
  I0921 12:33:47.459946 19 service_latency.go:356] Created: latency-svc-kfz45
  I0921 12:33:47.493999 19 service_latency.go:363] Got endpoints: latency-svc-zcg4c [749.331271ms]
  I0921 12:33:47.508694 19 service_latency.go:356] Created: latency-svc-9fg7h
  I0921 12:33:47.546398 19 service_latency.go:363] Got endpoints: latency-svc-r8mqf [750.327821ms]
  I0921 12:33:47.557954 19 service_latency.go:356] Created: latency-svc-b9tps
  I0921 12:33:47.595532 19 service_latency.go:363] Got endpoints: latency-svc-rppvj [749.507288ms]
  I0921 12:33:47.610508 19 service_latency.go:356] Created: latency-svc-rbdrq
  I0921 12:33:47.645613 19 service_latency.go:363] Got endpoints: latency-svc-7dnlw [750.71303ms]
  I0921 12:33:47.659457 19 service_latency.go:356] Created: latency-svc-b8szc
  I0921 12:33:47.694236 19 service_latency.go:363] Got endpoints: latency-svc-g6ffj [749.820645ms]
  I0921 12:33:47.708413 19 service_latency.go:356] Created: latency-svc-xk8sg
  I0921 12:33:47.745793 19 service_latency.go:363] Got endpoints: latency-svc-mq5x2 [752.315169ms]
  I0921 12:33:47.758850 19 service_latency.go:356] Created: latency-svc-wfj4l
  I0921 12:33:47.800308 19 service_latency.go:363] Got endpoints: latency-svc-g4blx [755.431749ms]
  I0921 12:33:47.814609 19 service_latency.go:356] Created: latency-svc-x6gll
  I0921 12:33:47.846519 19 service_latency.go:363] Got endpoints: latency-svc-jlxjk [749.330014ms]
  I0921 12:33:47.858225 19 service_latency.go:356] Created: latency-svc-m9f4r
  I0921 12:33:47.892530 19 service_latency.go:363] Got endpoints: latency-svc-cndhc [745.981283ms]
  I0921 12:33:47.906008 19 service_latency.go:356] Created: latency-svc-l4r9j
  I0921 12:33:47.943602 19 service_latency.go:363] Got endpoints: latency-svc-sqp5k [749.414056ms]
  I0921 12:33:47.956425 19 service_latency.go:356] Created: latency-svc-gggch
  I0921 12:33:47.994705 19 service_latency.go:363] Got endpoints: latency-svc-zws9x [750.995062ms]
  I0921 12:33:48.005553 19 service_latency.go:356] Created: latency-svc-r44kh
  I0921 12:33:48.045149 19 service_latency.go:363] Got endpoints: latency-svc-8j64n [750.808251ms]
  I0921 12:33:48.059112 19 service_latency.go:356] Created: latency-svc-w6qzf
  I0921 12:33:48.094215 19 service_latency.go:363] Got endpoints: latency-svc-zf2cm [748.336814ms]
  I0921 12:33:48.107694 19 service_latency.go:356] Created: latency-svc-sbnqg
  I0921 12:33:48.144565 19 service_latency.go:363] Got endpoints: latency-svc-hlw9q [748.954299ms]
  I0921 12:33:48.195414 19 service_latency.go:363] Got endpoints: latency-svc-kfz45 [751.742027ms]
  I0921 12:33:48.244650 19 service_latency.go:363] Got endpoints: latency-svc-9fg7h [750.615029ms]
  I0921 12:33:48.299886 19 service_latency.go:363] Got endpoints: latency-svc-b9tps [753.454427ms]
  I0921 12:33:48.343691 19 service_latency.go:363] Got endpoints: latency-svc-rbdrq [748.124105ms]
  I0921 12:33:48.395667 19 service_latency.go:363] Got endpoints: latency-svc-b8szc [750.02083ms]
  I0921 12:33:48.444517 19 service_latency.go:363] Got endpoints: latency-svc-xk8sg [750.252648ms]
  I0921 12:33:48.495223 19 service_latency.go:363] Got endpoints: latency-svc-wfj4l [749.36067ms]
  I0921 12:33:48.545112 19 service_latency.go:363] Got endpoints: latency-svc-x6gll [744.772228ms]
  I0921 12:33:48.596328 19 service_latency.go:363] Got endpoints: latency-svc-m9f4r [749.769157ms]
  I0921 12:33:48.643869 19 service_latency.go:363] Got endpoints: latency-svc-l4r9j [751.288229ms]
  I0921 12:33:48.696180 19 service_latency.go:363] Got endpoints: latency-svc-gggch [752.542929ms]
  I0921 12:33:48.744031 19 service_latency.go:363] Got endpoints: latency-svc-r44kh [749.276219ms]
  I0921 12:33:48.796097 19 service_latency.go:363] Got endpoints: latency-svc-w6qzf [750.788104ms]
  I0921 12:33:48.845647 19 service_latency.go:363] Got endpoints: latency-svc-sbnqg [751.388557ms]
  I0921 12:33:48.845760 19 service_latency.go:114] Latencies: [19.987796ms 32.533197ms 40.075703ms 49.886472ms 60.138025ms 68.845255ms 76.254201ms 86.590882ms 95.367923ms 103.987518ms 114.995341ms 120.086377ms 128.948128ms 132.017414ms 132.598513ms 134.00992ms 135.337504ms 136.635194ms 136.789979ms 136.869379ms 137.01469ms 137.096618ms 137.13652ms 137.439939ms 138.521029ms 138.953392ms 140.494827ms 141.038351ms 141.483635ms 141.529546ms 141.83278ms 143.042924ms 143.170077ms 143.577447ms 148.123917ms 149.969866ms 189.207275ms 226.898929ms 270.291496ms 312.600364ms 348.506438ms 390.400588ms 429.322415ms 467.375847ms 507.814757ms 547.851007ms 586.072074ms 630.959547ms 671.596104ms 708.837407ms 740.794281ms 744.772228ms 745.809566ms 745.981283ms 745.984808ms 746.664669ms 746.90113ms 746.903478ms 746.964751ms 747.03631ms 747.106543ms 747.14851ms 747.289424ms 747.351484ms 747.388364ms 747.681327ms 747.754572ms 747.921263ms 747.931623ms 747.947526ms 748.124105ms 748.130159ms 748.170376ms 748.171774ms 748.28759ms 748.304737ms 748.311965ms 748.336814ms 748.412013ms 748.53909ms 748.67865ms 748.703421ms 748.703801ms 748.717978ms 748.790425ms 748.797666ms 748.863214ms 748.877433ms 748.931305ms 748.939105ms 748.954299ms 748.965444ms 748.97712ms 749.014472ms 749.058539ms 749.089804ms 749.174879ms 749.243337ms 749.276219ms 749.330014ms 749.331271ms 749.36067ms 749.368133ms 749.40492ms 749.414056ms 749.417298ms 749.473621ms 749.496253ms 749.506421ms 749.507288ms 749.526597ms 749.593776ms 749.646145ms 749.668538ms 749.687647ms 749.715184ms 749.769157ms 749.775695ms 749.795751ms 749.820645ms 749.821342ms 749.8369ms 749.909749ms 749.933798ms 749.963659ms 750.009439ms 750.018363ms 750.02083ms 750.030966ms 750.057994ms 750.138944ms 750.154283ms 750.164376ms 750.183957ms 750.206339ms 750.252648ms 750.27777ms 750.327821ms 750.34304ms 750.352918ms 750.362221ms 750.372589ms 750.407483ms 750.517068ms 750.580523ms 750.593997ms 750.615029ms 750.628244ms 750.650575ms 750.651502ms 750.653937ms 750.656463ms 750.71303ms 750.721018ms 750.725079ms 750.740948ms 750.788104ms 750.808251ms 750.822529ms 750.847616ms 750.868871ms 750.874896ms 750.918916ms 750.927978ms 750.936429ms 750.995062ms 751.008702ms 751.045949ms 751.049817ms 751.079773ms 751.141686ms 751.254479ms 751.288229ms 751.31581ms 751.345119ms 751.359686ms 751.388557ms 751.527793ms 751.673228ms 751.742027ms 751.784071ms 751.793707ms 751.860128ms 751.89819ms 751.954769ms 751.971643ms 751.988808ms 752.060375ms 752.3009ms 752.315169ms 752.321856ms 752.428155ms 752.542929ms 752.665276ms 752.720148ms 753.274332ms 753.454427ms 753.815894ms 755.431749ms 755.651254ms]
  I0921 12:33:48.845773 19 service_latency.go:118] 50 %ile: 749.331271ms
  I0921 12:33:48.845780 19 service_latency.go:119] 90 %ile: 751.784071ms
  I0921 12:33:48.845786 19 service_latency.go:120] 99 %ile: 755.431749ms
  I0921 12:33:48.845792 19 service_latency.go:121] Total sample count: 200
  I0921 12:33:48.845879 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1578" for this suite. @ 09/21/24 12:33:48.851
• [9.770 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/21/24 12:33:48.861
  I0921 12:33:48.861539 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubelet-test @ 09/21/24 12:33:48.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:33:48.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:33:48.878
  I0921 12:33:50.917469 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3610" for this suite. @ 09/21/24 12:33:50.922
• [2.070 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/21/24 12:33:50.931
  I0921 12:33:50.931409 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/21/24 12:33:50.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:33:50.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:33:50.952
  I0921 12:33:50.954670 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:33:54.024269 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8317" for this suite. @ 09/21/24 12:33:54.048
• [3.141 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/21/24 12:33:54.072
  I0921 12:33:54.072724 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename sysctl @ 09/21/24 12:33:54.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:33:54.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:33:54.125
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/21/24 12:33:54.131
  STEP: Watching for error events or started pod @ 09/21/24 12:33:54.147
  STEP: Waiting for pod completion @ 09/21/24 12:33:56.151
  STEP: Checking that the pod succeeded @ 09/21/24 12:33:58.166
  STEP: Getting logs from the pod @ 09/21/24 12:33:58.166
  STEP: Checking that the sysctl is actually updated @ 09/21/24 12:33:58.177
  I0921 12:33:58.177156 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3781" for this suite. @ 09/21/24 12:33:58.183
• [4.118 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/21/24 12:33:58.19
  I0921 12:33:58.190706 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename replicaset @ 09/21/24 12:33:58.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:33:58.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:33:58.213
  STEP: Create a Replicaset @ 09/21/24 12:33:58.219
  STEP: Verify that the required pods have come up. @ 09/21/24 12:33:58.227
  I0921 12:33:58.231518 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0921 12:34:03.240329 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/21/24 12:34:03.24
  STEP: Getting /status @ 09/21/24 12:34:03.24
  I0921 12:34:03.246811 19 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/21/24 12:34:03.246
  I0921 12:34:03.258168 19 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/21/24 12:34:03.258
  I0921 12:34:03.259703 19 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0921 12:34:03.259778 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0921 12:34:03.259845 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0921 12:34:03.260088 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0921 12:34:03.260108 19 replica_set.go:682] Found replicaset test-rs in namespace replicaset-7729 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0921 12:34:03.260121 19 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/21/24 12:34:03.26
  I0921 12:34:03.260145 19 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0921 12:34:03.266263 19 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/21/24 12:34:03.266
  I0921 12:34:03.267807 19 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0921 12:34:03.267876 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0921 12:34:03.268066 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0921 12:34:03.268146 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0921 12:34:03.268193 19 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-7729 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0921 12:34:03.268250 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0921 12:34:03.268265 19 replica_set.go:718] Found replicaset test-rs in namespace replicaset-7729 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0921 12:34:03.268286 19 replica_set.go:729] Replicaset test-rs has a patched status
  I0921 12:34:03.268402 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7729" for this suite. @ 09/21/24 12:34:03.273
• [5.092 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 09/21/24 12:34:03.282
  I0921 12:34:03.282571 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename security-context-test @ 09/21/24 12:34:03.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:34:03.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:34:03.299
  I0921 12:34:05.325954 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6944" for this suite. @ 09/21/24 12:34:05.329
• [2.056 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 09/21/24 12:34:05.338
  I0921 12:34:05.338323 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:34:05.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:34:05.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:34:05.358
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 12:34:05.36
  STEP: Saw pod success @ 09/21/24 12:34:07.38
  I0921 12:34:07.385560 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downwardapi-volume-9022f6c0-8a53-4de2-ad3d-0ae7bf5235c5 container client-container: <nil>
  STEP: delete the pod @ 09/21/24 12:34:07.395
  I0921 12:34:07.418323 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5770" for this suite. @ 09/21/24 12:34:07.423
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 09/21/24 12:34:07.431
  I0921 12:34:07.431747 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename dns @ 09/21/24 12:34:07.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:34:07.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:34:07.451
  STEP: Creating a test headless service @ 09/21/24 12:34:07.454
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1419.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-1419.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 09/21/24 12:34:07.46
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1419.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1419.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/21/24 12:34:07.46
  STEP: creating a pod to probe DNS @ 09/21/24 12:34:07.46
  STEP: submitting the pod to kubernetes @ 09/21/24 12:34:07.46
  STEP: retrieving the pod @ 09/21/24 12:34:09.485
  STEP: looking for the results for each expected name from probers @ 09/21/24 12:34:09.493
  I0921 12:34:09.514414 19 dns_common.go:527] DNS probes using dns-1419/dns-test-9c290f23-5c1c-4656-9575-a5d6ce4d75a0 succeeded

  STEP: deleting the pod @ 09/21/24 12:34:09.514
  STEP: deleting the test headless service @ 09/21/24 12:34:09.533
  I0921 12:34:09.550784 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1419" for this suite. @ 09/21/24 12:34:09.554
• [2.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/21/24 12:34:09.561
  I0921 12:34:09.561637 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename endpointslice @ 09/21/24 12:34:09.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:34:09.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:34:09.581
  I0921 12:34:09.595411 19 endpointslice.go:1045] Endpoints addresses: [172.31.11.53 172.31.80.71] , ports: [6443]
  I0921 12:34:09.595434 19 endpointslice.go:1075] EndpointSlices addresses: [172.31.11.53 172.31.80.71] , ports: [6443]
  I0921 12:34:09.595508 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9593" for this suite. @ 09/21/24 12:34:09.599
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 09/21/24 12:34:09.608
  I0921 12:34:09.608731 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 12:34:09.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:34:09.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:34:09.624
  STEP: creating service in namespace services-2165 @ 09/21/24 12:34:09.627
  STEP: creating service affinity-clusterip-transition in namespace services-2165 @ 09/21/24 12:34:09.627
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2165 @ 09/21/24 12:34:09.639
  I0921 12:34:09.648380      19 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-2165, replica count: 3
  I0921 12:34:12.698747      19 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0921 12:34:12.710039 19 resource.go:361] Creating new exec pod
  I0921 12:34:15.725560 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-2165 exec execpod-affinityptggg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0921 12:34:15.809681 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0921 12:34:15.809729 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 12:34:15.809852 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-2165 exec execpod-affinityptggg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.232 80'
  I0921 12:34:15.892869 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.232 80\nConnection to 10.152.183.232 80 port [tcp/http] succeeded!\n"
  I0921 12:34:15.892913 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 12:34:15.903587 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-2165 exec execpod-affinityptggg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.232:80/ ; done'
  I0921 12:34:16.051328 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n"
  I0921 12:34:16.051433 19 builder.go:147] stdout: "\naffinity-clusterip-transition-tt48t\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-dwlnf\naffinity-clusterip-transition-dwlnf\naffinity-clusterip-transition-tt48t\naffinity-clusterip-transition-dwlnf\naffinity-clusterip-transition-tt48t\naffinity-clusterip-transition-tt48t\naffinity-clusterip-transition-tt48t\naffinity-clusterip-transition-tt48t\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-tt48t\naffinity-clusterip-transition-dwlnf\naffinity-clusterip-transition-dwlnf\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-tt48t"
  I0921 12:34:16.051462 19 service.go:242] Received response from host: affinity-clusterip-transition-tt48t
  I0921 12:34:16.051472 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.051479 19 service.go:242] Received response from host: affinity-clusterip-transition-dwlnf
  I0921 12:34:16.051486 19 service.go:242] Received response from host: affinity-clusterip-transition-dwlnf
  I0921 12:34:16.051493 19 service.go:242] Received response from host: affinity-clusterip-transition-tt48t
  I0921 12:34:16.051499 19 service.go:242] Received response from host: affinity-clusterip-transition-dwlnf
  I0921 12:34:16.051505 19 service.go:242] Received response from host: affinity-clusterip-transition-tt48t
  I0921 12:34:16.051511 19 service.go:242] Received response from host: affinity-clusterip-transition-tt48t
  I0921 12:34:16.051518 19 service.go:242] Received response from host: affinity-clusterip-transition-tt48t
  I0921 12:34:16.051564 19 service.go:242] Received response from host: affinity-clusterip-transition-tt48t
  I0921 12:34:16.051578 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.051587 19 service.go:242] Received response from host: affinity-clusterip-transition-tt48t
  I0921 12:34:16.051593 19 service.go:242] Received response from host: affinity-clusterip-transition-dwlnf
  I0921 12:34:16.051602 19 service.go:242] Received response from host: affinity-clusterip-transition-dwlnf
  I0921 12:34:16.051649 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.051656 19 service.go:242] Received response from host: affinity-clusterip-transition-tt48t
  I0921 12:34:16.063326 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-2165 exec execpod-affinityptggg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.232:80/ ; done'
  I0921 12:34:16.205412 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.232:80/\n"
  I0921 12:34:16.205462 19 builder.go:147] stdout: "\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-qj4w2\naffinity-clusterip-transition-qj4w2"
  I0921 12:34:16.205474 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205483 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205490 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205496 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205503 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205508 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205517 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205522 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205531 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205538 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205552 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205558 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205566 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205573 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205579 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205585 19 service.go:242] Received response from host: affinity-clusterip-transition-qj4w2
  I0921 12:34:16.205656 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2165, will wait for the garbage collector to delete the pods @ 09/21/24 12:34:16.218
  I0921 12:34:16.286179 19 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 9.106471ms
  I0921 12:34:16.386484 19 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.298564ms
  I0921 12:34:19.609910 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2165" for this suite. @ 09/21/24 12:34:19.614
• [10.016 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 09/21/24 12:34:19.624
  I0921 12:34:19.624680 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 12:34:19.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:34:19.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:34:19.641
  STEP: Setting up server cert @ 09/21/24 12:34:19.662
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 12:34:19.963
  STEP: Deploying the webhook pod @ 09/21/24 12:34:19.974
  STEP: Wait for the deployment to be ready @ 09/21/24 12:34:19.988
  I0921 12:34:19.998696 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 12:34:22.015
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 12:34:22.029
  I0921 12:34:23.029618 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/21/24 12:34:23.039
  STEP: create a namespace for the webhook @ 09/21/24 12:34:23.052
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/21/24 12:34:23.067
  I0921 12:34:23.136848 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4265" for this suite. @ 09/21/24 12:34:23.14
  STEP: Destroying namespace "webhook-markers-2747" for this suite. @ 09/21/24 12:34:23.148
  STEP: Destroying namespace "fail-closed-namespace-5313" for this suite. @ 09/21/24 12:34:23.157
• [3.541 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 09/21/24 12:34:23.166
  I0921 12:34:23.166329 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename statefulset @ 09/21/24 12:34:23.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:34:23.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:34:23.185
  STEP: Creating service test in namespace statefulset-375 @ 09/21/24 12:34:23.187
  STEP: Creating statefulset ss in namespace statefulset-375 @ 09/21/24 12:34:23.191
  I0921 12:34:23.205564 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0921 12:34:33.210565 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/21/24 12:34:33.219
  STEP: updating a scale subresource @ 09/21/24 12:34:33.222
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/21/24 12:34:33.23
  STEP: Patch a scale subresource @ 09/21/24 12:34:33.236
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/21/24 12:34:33.243
  I0921 12:34:33.250434 19 statefulset.go:138] Deleting all statefulset in ns statefulset-375
  I0921 12:34:33.253865 19 rest.go:150] Scaling statefulset ss to 0
  I0921 12:34:43.275938 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0921 12:34:43.280849 19 rest.go:88] Deleting statefulset ss
  I0921 12:34:43.298222 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-375" for this suite. @ 09/21/24 12:34:43.303
• [20.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 09/21/24 12:34:43.312
  I0921 12:34:43.312830 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename security-context @ 09/21/24 12:34:43.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:34:43.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:34:43.332
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/21/24 12:34:43.335
  STEP: Saw pod success @ 09/21/24 12:34:45.357
  I0921 12:34:45.361244 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod security-context-d2eada5d-3f38-425b-9d88-57d83b83f585 container test-container: <nil>
  STEP: delete the pod @ 09/21/24 12:34:45.369
  I0921 12:34:45.390546 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7402" for this suite. @ 09/21/24 12:34:45.395
• [2.092 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 09/21/24 12:34:45.405
  I0921 12:34:45.405167 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename secrets @ 09/21/24 12:34:45.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:34:45.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:34:45.422
  STEP: Creating secret with name secret-test-2fbebd13-0a22-4d67-b975-dddeef1a665f @ 09/21/24 12:34:45.424
  STEP: Creating a pod to test consume secrets @ 09/21/24 12:34:45.432
  STEP: Saw pod success @ 09/21/24 12:34:47.453
  I0921 12:34:47.457724 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-secrets-3f747751-5ba4-499b-b902-835aa4daff22 container secret-env-test: <nil>
  STEP: delete the pod @ 09/21/24 12:34:47.467
  I0921 12:34:47.488511 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9334" for this suite. @ 09/21/24 12:34:47.492
• [2.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 09/21/24 12:34:47.5
  I0921 12:34:47.500678 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 12:34:47.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:34:47.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:34:47.524
  STEP: creating all guestbook components @ 09/21/24 12:34:47.527
  I0921 12:34:47.527116 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0921 12:34:47.527199 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9432 create -f -'
  I0921 12:34:47.620099 19 builder.go:146] stderr: ""
  I0921 12:34:47.620148 19 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0921 12:34:47.620194 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0921 12:34:47.620263 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9432 create -f -'
  I0921 12:34:47.718363 19 builder.go:146] stderr: ""
  I0921 12:34:47.718403 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0921 12:34:47.718452 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0921 12:34:47.718516 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9432 create -f -'
  I0921 12:34:47.812397 19 builder.go:146] stderr: ""
  I0921 12:34:47.812435 19 builder.go:147] stdout: "service/frontend created\n"
  I0921 12:34:47.812528 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0921 12:34:47.812672 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9432 create -f -'
  I0921 12:34:47.879261 19 builder.go:146] stderr: ""
  I0921 12:34:47.879299 19 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0921 12:34:47.879410 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0921 12:34:47.879625 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9432 create -f -'
  I0921 12:34:47.954433 19 builder.go:146] stderr: ""
  I0921 12:34:47.954469 19 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0921 12:34:47.954552 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0921 12:34:47.954653 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9432 create -f -'
  I0921 12:34:48.018980 19 builder.go:146] stderr: ""
  I0921 12:34:48.019018 19 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/21/24 12:34:48.019
  I0921 12:34:48.019233 19 kubectl.go:2272] Waiting for all frontend pods to be Running.
  I0921 12:34:53.071163 19 kubectl.go:2276] Waiting for frontend to serve content.
  I0921 12:34:53.083171 19 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I0921 12:34:53.097293 19 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/21/24 12:34:53.107
  I0921 12:34:53.107232 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9432 delete --grace-period=0 --force -f -'
  I0921 12:34:53.176153 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0921 12:34:53.176212 19 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/21/24 12:34:53.176
  I0921 12:34:53.176321 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9432 delete --grace-period=0 --force -f -'
  I0921 12:34:53.246472 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0921 12:34:53.246510 19 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/21/24 12:34:53.246
  I0921 12:34:53.246626 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9432 delete --grace-period=0 --force -f -'
  I0921 12:34:53.314771 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0921 12:34:53.314809 19 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/21/24 12:34:53.314
  I0921 12:34:53.315043 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9432 delete --grace-period=0 --force -f -'
  I0921 12:34:53.366317 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0921 12:34:53.366373 19 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/21/24 12:34:53.366
  I0921 12:34:53.366542 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9432 delete --grace-period=0 --force -f -'
  I0921 12:34:53.431813 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0921 12:34:53.431850 19 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/21/24 12:34:53.431
  I0921 12:34:53.432044 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9432 delete --grace-period=0 --force -f -'
  I0921 12:34:53.505109 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0921 12:34:53.505155 19 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0921 12:34:53.505264 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9432" for this suite. @ 09/21/24 12:34:53.51
• [6.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 09/21/24 12:34:53.521
  I0921 12:34:53.521396 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename configmap @ 09/21/24 12:34:53.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:34:53.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:34:53.565
  STEP: Creating configMap with name configmap-test-volume-ad435770-40cf-4d31-b360-a5cd843fd6a7 @ 09/21/24 12:34:53.568
  STEP: Creating a pod to test consume configMaps @ 09/21/24 12:34:53.573
  STEP: Saw pod success @ 09/21/24 12:34:57.6
  I0921 12:34:57.604605 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod pod-configmaps-533410ae-9b4a-40c9-b167-9ad6b44b1e1c container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 12:34:57.614
  I0921 12:34:57.636062 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3136" for this suite. @ 09/21/24 12:34:57.64
• [4.126 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 09/21/24 12:34:57.647
  I0921 12:34:57.647846 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:34:57.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:34:57.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:34:57.666
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 12:34:57.669
  STEP: Saw pod success @ 09/21/24 12:35:01.693
  I0921 12:35:01.698140 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downwardapi-volume-3f0c0fe0-e235-482b-b08c-abcd03644ba1 container client-container: <nil>
  STEP: delete the pod @ 09/21/24 12:35:01.708
  I0921 12:35:01.730844 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-512" for this suite. @ 09/21/24 12:35:01.735
• [4.099 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 09/21/24 12:35:01.746
  I0921 12:35:01.746775 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/21/24 12:35:01.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:35:01.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:35:01.763
  I0921 12:35:01.767427 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/21/24 12:35:03.038
  I0921 12:35:03.038376 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-6616 --namespace=crd-publish-openapi-6616 create -f -'
  I0921 12:35:03.109357 19 builder.go:146] stderr: ""
  I0921 12:35:03.109397 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-612-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0921 12:35:03.109458 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-6616 --namespace=crd-publish-openapi-6616 delete e2e-test-crd-publish-openapi-612-crds test-foo'
  I0921 12:35:03.164814 19 builder.go:146] stderr: ""
  I0921 12:35:03.164852 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-612-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0921 12:35:03.164895 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-6616 --namespace=crd-publish-openapi-6616 apply -f -'
  I0921 12:35:03.222827 19 builder.go:146] stderr: ""
  I0921 12:35:03.222866 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-612-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0921 12:35:03.222905 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-6616 --namespace=crd-publish-openapi-6616 delete e2e-test-crd-publish-openapi-612-crds test-foo'
  I0921 12:35:03.275856 19 builder.go:146] stderr: ""
  I0921 12:35:03.275894 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-612-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/21/24 12:35:03.275
  I0921 12:35:03.276035 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-6616 --namespace=crd-publish-openapi-6616 create -f -'
  I0921 12:35:03.322091 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/21/24 12:35:03.322
  I0921 12:35:03.322202 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-6616 --namespace=crd-publish-openapi-6616 create -f -'
  I0921 12:35:03.367733 19 builder.go:135] rc: 1
  I0921 12:35:03.367812 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-6616 --namespace=crd-publish-openapi-6616 apply -f -'
  I0921 12:35:03.428200 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/21/24 12:35:03.428
  I0921 12:35:03.428312 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-6616 --namespace=crd-publish-openapi-6616 create -f -'
  I0921 12:35:03.477023 19 builder.go:135] rc: 1
  I0921 12:35:03.477116 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-6616 --namespace=crd-publish-openapi-6616 apply -f -'
  I0921 12:35:03.534154 19 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/21/24 12:35:03.534
  I0921 12:35:03.534381 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-6616 explain e2e-test-crd-publish-openapi-612-crds'
  I0921 12:35:03.577871 19 builder.go:146] stderr: ""
  I0921 12:35:03.577922 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-612-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/21/24 12:35:03.578
  I0921 12:35:03.578197 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-6616 explain e2e-test-crd-publish-openapi-612-crds.metadata'
  I0921 12:35:03.622202 19 builder.go:146] stderr: ""
  I0921 12:35:03.622389 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-612-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0921 12:35:03.622684 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-6616 explain e2e-test-crd-publish-openapi-612-crds.spec'
  I0921 12:35:03.665763 19 builder.go:146] stderr: ""
  I0921 12:35:03.665811 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-612-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0921 12:35:03.665913 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-6616 explain e2e-test-crd-publish-openapi-612-crds.spec.bars'
  I0921 12:35:03.709123 19 builder.go:146] stderr: ""
  I0921 12:35:03.709177 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-612-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/21/24 12:35:03.709
  I0921 12:35:03.709333 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-6616 explain e2e-test-crd-publish-openapi-612-crds.spec.bars2'
  I0921 12:35:03.752485 19 builder.go:135] rc: 1
  I0921 12:35:04.964069 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6616" for this suite. @ 09/21/24 12:35:04.97
• [3.234 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/21/24 12:35:04.98
  I0921 12:35:04.980679 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/21/24 12:35:04.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:35:04.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:35:05
  STEP: mirroring a new custom Endpoint @ 09/21/24 12:35:05.015
  I0921 12:35:05.027890 19 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 09/21/24 12:35:07.032
  I0921 12:35:07.043511 19 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 09/21/24 12:35:09.049
  I0921 12:35:09.063511 19 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I0921 12:35:11.069734 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8173" for this suite. @ 09/21/24 12:35:11.074
• [6.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 09/21/24 12:35:11.083
  I0921 12:35:11.083132 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-probe @ 09/21/24 12:35:11.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:35:11.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:35:11.103
  STEP: Creating pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125 @ 09/21/24 12:35:11.105
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/21/24 12:35:13.128
  I0921 12:35:13.133005 19 container_probe.go:1749] Initial restart count of pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc is 0
  I0921 12:35:13.138062 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:15.143437 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:17.149793 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:19.155879 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:21.162292 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:23.168263 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:25.173253 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:27.180169 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:29.186335 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:31.191509 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:33.196758 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:35.203014 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:37.210250 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:39.216781 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:41.223010 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:43.230232 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:45.235338 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:47.242526 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:49.248297 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:51.254520 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:53.258487 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:55.264428 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:57.270990 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:35:59.277164 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:01.284281 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:03.290380 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:05.296590 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:07.303323 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:09.310749 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:11.317798 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:13.324337 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:15.330683 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:17.337631 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:19.343482 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:21.349582 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:23.355969 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:25.360728 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:27.366003 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:29.372453 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:31.378442 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:33.385469 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:35.391499 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:37.397045 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:39.403687 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:41.409182 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:43.415235 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:45.421642 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:47.428101 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:49.435030 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:51.440756 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:53.446927 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:55.451790 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:57.458375 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:36:59.465579 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:01.471312 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:03.477621 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:05.486277 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:07.492225 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:09.497888 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:11.504631 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:13.511060 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:15.518138 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:17.524426 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:19.531218 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:21.536771 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:23.542752 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:25.549559 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:27.556502 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:29.561218 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:31.567682 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:33.572827 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:35.579824 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:37.586264 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:39.591530 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:41.598825 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:43.605860 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:45.611945 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:47.619826 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:49.625554 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:51.631268 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:53.636046 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:55.642195 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:57.649305 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:37:59.654454 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:01.660878 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:03.668813 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:05.673991 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:07.680530 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:09.687165 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:11.692155 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:13.699381 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:15.706053 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:17.713515 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:19.719091 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:21.725703 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:23.733405 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:25.739686 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:27.746296 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:29.752420 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:31.758458 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:33.765204 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:35.770431 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:37.776265 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:39.782935 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:41.787944 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:43.794988 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:45.800190 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:47.807094 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:49.813930 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:51.819393 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:53.824446 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:55.829841 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:57.836384 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:38:59.841672 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:39:01.847484 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:39:03.854241 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:39:05.862065 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:39:07.868219 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:39:09.874256 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  I0921 12:39:11.879842 19 container_probe.go:1759] Get pod liveness-d61fdd40-90fb-4a7b-a7f3-8243d4ee96cc in namespace container-probe-4125
  STEP: deleting the pod @ 09/21/24 12:39:13.88
  I0921 12:39:13.903186 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4125" for this suite. @ 09/21/24 12:39:13.908
• [242.833 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/21/24 12:39:13.916
  I0921 12:39:13.916386 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename field-validation @ 09/21/24 12:39:13.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:39:13.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:39:13.936
  I0921 12:39:13.939143 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  W0921 12:39:16.477271      19 warnings.go:70] unknown field "alpha"
  W0921 12:39:16.477292      19 warnings.go:70] unknown field "beta"
  W0921 12:39:16.477296      19 warnings.go:70] unknown field "delta"
  W0921 12:39:16.477299      19 warnings.go:70] unknown field "epsilon"
  W0921 12:39:16.477302      19 warnings.go:70] unknown field "gamma"
  I0921 12:39:17.027511 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8930" for this suite. @ 09/21/24 12:39:17.032
• [3.124 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/21/24 12:39:17.04
  I0921 12:39:17.040591 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename sched-pred @ 09/21/24 12:39:17.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:39:17.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:39:17.059
  I0921 12:39:17.062546 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0921 12:39:17.071063 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I0921 12:39:17.075950 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-2-8 before test
  I0921 12:39:17.081883 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-72drx from ingress-nginx-kubernetes-worker started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 12:39:17.081912 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0921 12:39:17.081919 19 predicates.go:957] calico-node-698gv from kube-system started at 2024-09-21 12:09:22 +0000 UTC (1 container statuses recorded)
  I0921 12:39:17.081925 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0921 12:39:17.081932 19 predicates.go:957] coredns-5b4857d7c8-w6vks from kube-system started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 12:39:17.081937 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0921 12:39:17.081942 19 predicates.go:957] kube-state-metrics-5d7bdccd49-b422z from kube-system started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 12:39:17.081948 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0921 12:39:17.081954 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-g9gpw from kube-system started at 2024-09-21 12:06:02 +0000 UTC (2 container statuses recorded)
  I0921 12:39:17.081959 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0921 12:39:17.081964 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0921 12:39:17.081977 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-5v9dx from kubernetes-dashboard started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 12:39:17.081981 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0921 12:39:17.081987 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-cj2rk from kubernetes-dashboard started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 12:39:17.081992 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0921 12:39:17.081998 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-5wrw9 from sonobuoy started at 2024-09-21 12:12:34 +0000 UTC (2 container statuses recorded)
  I0921 12:39:17.082003 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 12:39:17.082007 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0921 12:39:17.082040 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-69-84 before test
  I0921 12:39:17.087905 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-l9lt9 from ingress-nginx-kubernetes-worker started at 2024-09-21 12:08:37 +0000 UTC (1 container statuses recorded)
  I0921 12:39:17.087921 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0921 12:39:17.087928 19 predicates.go:957] calico-node-rw7c2 from kube-system started at 2024-09-21 12:09:12 +0000 UTC (1 container statuses recorded)
  I0921 12:39:17.087934 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0921 12:39:17.087939 19 predicates.go:957] sonobuoy-e2e-job-b3f4395adb4247d5 from sonobuoy started at 2024-09-21 12:12:33 +0000 UTC (2 container statuses recorded)
  I0921 12:39:17.087945 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0921 12:39:17.087950 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 12:39:17.087956 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-2g2mv from sonobuoy started at 2024-09-21 12:12:34 +0000 UTC (2 container statuses recorded)
  I0921 12:39:17.087961 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 12:39:17.087966 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0921 12:39:17.087972 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-95-123 before test
  I0921 12:39:17.094824 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-nkb4x from ingress-nginx-kubernetes-worker started at 2024-09-21 12:17:48 +0000 UTC (1 container statuses recorded)
  I0921 12:39:17.094847 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0921 12:39:17.094853 19 predicates.go:957] calico-node-tb2z2 from kube-system started at 2024-09-21 12:09:53 +0000 UTC (1 container statuses recorded)
  I0921 12:39:17.094859 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0921 12:39:17.094866 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-21 12:12:31 +0000 UTC (1 container statuses recorded)
  I0921 12:39:17.094884 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0921 12:39:17.094890 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-thrjz from sonobuoy started at 2024-09-21 12:12:34 +0000 UTC (2 container statuses recorded)
  I0921 12:39:17.094894 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 12:39:17.094919 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/21/24 12:39:17.095
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/21/24 12:39:19.119
  STEP: Trying to apply a random label on the found node. @ 09/21/24 12:39:19.131
  STEP: verifying the node has the label kubernetes.io/e2e-fb2fbccd-4247-4856-946f-3632826948df 42 @ 09/21/24 12:39:19.141
  STEP: Trying to relaunch the pod, now with labels. @ 09/21/24 12:39:19.145
  STEP: removing the label kubernetes.io/e2e-fb2fbccd-4247-4856-946f-3632826948df off the node ip-172-31-95-123 @ 09/21/24 12:39:21.171
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-fb2fbccd-4247-4856-946f-3632826948df @ 09/21/24 12:39:21.184
  I0921 12:39:21.189092 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7491" for this suite. @ 09/21/24 12:39:21.195
• [4.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 09/21/24 12:39:21.204
  I0921 12:39:21.204266 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename sched-preemption @ 09/21/24 12:39:21.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:39:21.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:39:21.225
  I0921 12:39:21.244126 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0921 12:40:21.249530 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/21/24 12:40:21.254
  I0921 12:40:21.254438 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/21/24 12:40:21.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:40:21.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:40:21.273
  STEP: Finding an available node @ 09/21/24 12:40:21.276
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/21/24 12:40:21.276
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/21/24 12:40:23.304
  I0921 12:40:23.321979 19 preemption.go:585] found a healthy node: ip-172-31-95-123
  I0921 12:40:29.393365 19 preemption.go:708] pods created so far: [1 1 1]
  I0921 12:40:29.393396 19 preemption.go:709] length of pods created so far: 3
  I0921 12:40:31.408610 19 preemption.go:726] pods created so far: [2 2 1]
  I0921 12:40:38.491860 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1461" for this suite. @ 09/21/24 12:40:38.497
  I0921 12:40:38.504673 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8333" for this suite. @ 09/21/24 12:40:38.51
• [77.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/21/24 12:40:38.518
  I0921 12:40:38.518207 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename daemonsets @ 09/21/24 12:40:38.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:40:38.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:40:38.54
  STEP: Creating simple DaemonSet "daemon-set" @ 09/21/24 12:40:38.57
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/21/24 12:40:38.577
  I0921 12:40:38.583693 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:40:38.583736 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:40:38.586934 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 12:40:38.586958 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  I0921 12:40:39.583831 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:40:39.583877 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:40:39.587899 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 12:40:39.587922 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  I0921 12:40:40.582789 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:40:40.583232 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 12:40:40.588326 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0921 12:40:40.588385 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 09/21/24 12:40:40.592
  I0921 12:40:40.596632 19 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/21/24 12:40:40.596
  I0921 12:40:40.608148 19 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/21/24 12:40:40.608
  I0921 12:40:40.609842 19 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0921 12:40:40.609930 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0921 12:40:40.609995 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0921 12:40:40.610098 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0921 12:40:40.610156 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0921 12:40:40.610269 19 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-4175 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0921 12:40:40.610283 19 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/21/24 12:40:40.61
  STEP: watching for the daemon set status to be patched @ 09/21/24 12:40:40.617
  I0921 12:40:40.618956 19 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0921 12:40:40.619377 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0921 12:40:40.619603 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0921 12:40:40.619677 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0921 12:40:40.619734 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0921 12:40:40.619807 19 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-4175 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0921 12:40:40.619874 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0921 12:40:40.619887 19 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-4175 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0921 12:40:40.619896 19 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/21/24 12:40:40.625
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4175, will wait for the garbage collector to delete the pods @ 09/21/24 12:40:40.625
  I0921 12:40:40.690091 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.385128ms
  I0921 12:40:40.791021 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.925189ms
  I0921 12:40:42.196592 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 12:40:42.196626 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0921 12:40:42.201332 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21372"},"items":null}

  I0921 12:40:42.206126 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21372"},"items":null}

  I0921 12:40:42.223381 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4175" for this suite. @ 09/21/24 12:40:42.228
• [3.721 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 09/21/24 12:40:42.24
  I0921 12:40:42.240646 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename statefulset @ 09/21/24 12:40:42.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:40:42.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:40:42.26
  STEP: Creating service test in namespace statefulset-7244 @ 09/21/24 12:40:42.262
  I0921 12:40:42.279412 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0921 12:40:52.282809 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/21/24 12:40:52.291
  I0921 12:40:52.311175 19 wait.go:40] Found 1 stateful pods, waiting for 2
  I0921 12:41:02.314220 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0921 12:41:02.314251 19 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/21/24 12:41:02.324
  STEP: Delete all of the StatefulSets @ 09/21/24 12:41:02.328
  STEP: Verify that StatefulSets have been deleted @ 09/21/24 12:41:02.339
  I0921 12:41:02.343020 19 statefulset.go:138] Deleting all statefulset in ns statefulset-7244
  I0921 12:41:02.359295 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7244" for this suite. @ 09/21/24 12:41:02.364
• [20.131 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 09/21/24 12:41:02.371
  I0921 12:41:02.371976 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename var-expansion @ 09/21/24 12:41:02.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:41:02.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:41:02.391
  STEP: Creating a pod to test env composition @ 09/21/24 12:41:02.394
  STEP: Saw pod success @ 09/21/24 12:41:06.426
  I0921 12:41:06.431823 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod var-expansion-8f0b0e0a-a177-45a9-9d95-d6573668e94e container dapi-container: <nil>
  STEP: delete the pod @ 09/21/24 12:41:06.448
  I0921 12:41:06.470538 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3170" for this suite. @ 09/21/24 12:41:06.474
• [4.112 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 09/21/24 12:41:06.484
  I0921 12:41:06.484225 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir @ 09/21/24 12:41:06.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:41:06.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:41:06.502
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/21/24 12:41:06.505
  STEP: Saw pod success @ 09/21/24 12:41:10.529
  I0921 12:41:10.533185 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-561a5937-5e5f-482f-bdcf-7e63ab325bce container test-container: <nil>
  STEP: delete the pod @ 09/21/24 12:41:10.542
  I0921 12:41:10.563930 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4652" for this suite. @ 09/21/24 12:41:10.569
• [4.094 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 09/21/24 12:41:10.577
  I0921 12:41:10.577873 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-probe @ 09/21/24 12:41:10.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:41:10.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:41:10.598
  STEP: Creating pod liveness-16d86f34-061b-4127-bce8-2251193287c1 in namespace container-probe-2257 @ 09/21/24 12:41:10.6
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/21/24 12:41:12.622
  I0921 12:41:12.626765 19 container_probe.go:1749] Initial restart count of pod liveness-16d86f34-061b-4127-bce8-2251193287c1 is 0
  I0921 12:41:12.630531 19 container_probe.go:1759] Get pod liveness-16d86f34-061b-4127-bce8-2251193287c1 in namespace container-probe-2257
  I0921 12:41:14.636650 19 container_probe.go:1759] Get pod liveness-16d86f34-061b-4127-bce8-2251193287c1 in namespace container-probe-2257
  I0921 12:41:16.641128 19 container_probe.go:1759] Get pod liveness-16d86f34-061b-4127-bce8-2251193287c1 in namespace container-probe-2257
  I0921 12:41:18.647267 19 container_probe.go:1759] Get pod liveness-16d86f34-061b-4127-bce8-2251193287c1 in namespace container-probe-2257
  I0921 12:41:20.652847 19 container_probe.go:1759] Get pod liveness-16d86f34-061b-4127-bce8-2251193287c1 in namespace container-probe-2257
  I0921 12:41:22.657716 19 container_probe.go:1759] Get pod liveness-16d86f34-061b-4127-bce8-2251193287c1 in namespace container-probe-2257
  I0921 12:41:24.663110 19 container_probe.go:1759] Get pod liveness-16d86f34-061b-4127-bce8-2251193287c1 in namespace container-probe-2257
  I0921 12:41:26.669502 19 container_probe.go:1759] Get pod liveness-16d86f34-061b-4127-bce8-2251193287c1 in namespace container-probe-2257
  I0921 12:41:28.674025 19 container_probe.go:1759] Get pod liveness-16d86f34-061b-4127-bce8-2251193287c1 in namespace container-probe-2257
  I0921 12:41:30.680069 19 container_probe.go:1759] Get pod liveness-16d86f34-061b-4127-bce8-2251193287c1 in namespace container-probe-2257
  I0921 12:41:32.686451 19 container_probe.go:1759] Get pod liveness-16d86f34-061b-4127-bce8-2251193287c1 in namespace container-probe-2257
  I0921 12:41:32.686490 19 container_probe.go:1763] Restart count of pod container-probe-2257/liveness-16d86f34-061b-4127-bce8-2251193287c1 is now 1 (20.059684082s elapsed)
  STEP: deleting the pod @ 09/21/24 12:41:32.686
  I0921 12:41:32.705952 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2257" for this suite. @ 09/21/24 12:41:32.71
• [22.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 09/21/24 12:41:32.718
  I0921 12:41:32.718700 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename configmap @ 09/21/24 12:41:32.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:41:32.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:41:32.739
  STEP: Creating configMap with name configmap-test-volume-map-e3776872-8cb1-4123-89c8-5881d622c90d @ 09/21/24 12:41:32.741
  STEP: Creating a pod to test consume configMaps @ 09/21/24 12:41:32.746
  STEP: Saw pod success @ 09/21/24 12:41:36.771
  I0921 12:41:36.775996 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-configmaps-80ddf19a-190f-4e0a-b22f-60ec52cde154 container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 12:41:36.786
  I0921 12:41:36.807694 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5135" for this suite. @ 09/21/24 12:41:36.812
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/21/24 12:41:36.821
  I0921 12:41:36.821715 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/21/24 12:41:36.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:41:36.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:41:36.842
  STEP: creating a target pod @ 09/21/24 12:41:36.844
  STEP: adding an ephemeral container @ 09/21/24 12:41:38.87
  STEP: checking pod container endpoints @ 09/21/24 12:41:40.889
  I0921 12:41:40.889364 19 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1794 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:41:40.889384 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:41:40.889817 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:41:40.889854 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-1794/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0921 12:41:40.930814 19 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/21/24 12:41:40.939
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/21/24 12:41:40.945
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/21/24 12:41:40.958
  I0921 12:41:40.963883 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1794" for this suite. @ 09/21/24 12:41:40.969
• [4.157 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/21/24 12:41:40.979
  I0921 12:41:40.979055 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename deployment @ 09/21/24 12:41:40.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:41:40.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:41:40.999
  I0921 12:41:41.002225 19 deployment.go:1196] Creating deployment "webserver-deployment"
  I0921 12:41:41.008777 19 deployment.go:1200] Waiting for observed generation 1
  I0921 12:41:43.018872 19 deployment.go:1205] Waiting for all required pods to come up
  I0921 12:41:43.023961 19 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/21/24 12:41:43.023
  I0921 12:41:43.024045 19 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0921 12:41:43.033365 19 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0921 12:41:43.044484 19 deployment.go:313] Updating deployment webserver-deployment
  I0921 12:41:43.044508 19 deployment.go:1224] Waiting for observed generation 2
  I0921 12:41:45.053839 19 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0921 12:41:45.057799 19 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0921 12:41:45.062443 19 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0921 12:41:45.075626 19 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0921 12:41:45.075649 19 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0921 12:41:45.080557 19 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0921 12:41:45.087913 19 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0921 12:41:45.087932 19 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0921 12:41:45.099488 19 deployment.go:313] Updating deployment webserver-deployment
  I0921 12:41:45.099517 19 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0921 12:41:45.110599 19 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0921 12:41:45.115503 19 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0921 12:41:45.140396 19 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cbcc224f-ffe0-47fb-9cc9-6ea6ff4623ab",
      ResourceVersion: (string) (len=5) "22150",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0921 12:41:45.184456 19 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff6f48f9-e92a-460a-89d6-7a0aaee42a1a",
      ResourceVersion: (string) (len=5) "22147",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "cbcc224f-ffe0-47fb-9cc9-6ea6ff4623ab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 62 63 63 32 32  34 66 2d 66 66 65 30 2d  |\"cbcc224f-ffe0-|
              00000120  34 37 66 62 2d 39 63 63  39 2d 36 65 61 36 66 66  |47fb-9cc9-6ea6ff|
              00000130  34 36 32 33 61 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4623ab\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0921 12:41:45.185639 19 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0921 12:41:45.185907 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
      ResourceVersion: (string) (len=5) "22144",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "cbcc224f-ffe0-47fb-9cc9-6ea6ff4623ab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 62 63 63 32 32  34 66 2d 66 66 65 30 2d  |\"cbcc224f-ffe0-|
              00000120  34 37 66 62 2d 39 63 63  39 2d 36 65 61 36 66 66  |47fb-9cc9-6ea6ff|
              00000130  34 36 32 33 61 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4623ab\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0921 12:41:45.217865 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-27wsh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-27wsh",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f09e4d26-8372-44a8-bbd4-39104b138a81",
      ResourceVersion: (string) (len=5) "21993",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 37  31 2e 31 34 32 5c 22 7d  |2.168.171.142\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rj68w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rj68w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "ip-172-31-2-8",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.31.2.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.31.2.8"
        }
      },
      PodIP: (string) (len=15) "192.168.171.142",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.171.142"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862519301,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://18288f1a394d954273ffe798650d017bdd2608bd3211e768712dd90a12184be6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rj68w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.219117 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-5b8db" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5b8db",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1dfe45fb-5818-4b85-858a-35cf30926554",
      ResourceVersion: (string) (len=5) "22183",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xzw2b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xzw2b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.219926 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-5ld44" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5ld44",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d694cbb-8441-458f-bb43-569eacd81047",
      ResourceVersion: (string) (len=5) "22176",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-42vvg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-42vvg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-69-84",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.220872 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-5vk7b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5vk7b",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ded5ef8-721d-4e91-9ef6-a37e1467aa3c",
      ResourceVersion: (string) (len=5) "22016",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  36 2e 31 36 32 5c 22 7d  |2.168.126.162\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gjkwm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gjkwm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-69-84",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.69.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.69.84"
        }
      },
      PodIP: (string) (len=15) "192.168.126.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.126.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862519302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7f30a21a44663558fd66f9666bfacb790b03a697f6fe3ee82578fb24d37dcb9f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gjkwm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.229533 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-5vr58" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5vr58",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e3ee073-9f80-4dc8-a410-74116c080170",
      ResourceVersion: (string) (len=5) "21971",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 37  2e 33 33 5c 22 7d 22 3a  |2.168.27.33\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sh62f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sh62f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.95.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.95.123"
        }
      },
      PodIP: (string) (len=13) "192.168.27.33",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.27.33"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862519301,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0c23aaecbc9b2112682f9561cbdbcb7456bdea4ecaa1f2fd95def876f802ed42",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sh62f",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.243677 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-6czzj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-6czzj",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f789f1ae-902c-4bc7-9ea5-e30282c164e8",
      ResourceVersion: (string) (len=5) "22182",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vspmc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vspmc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.244884 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-6hwvn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-6hwvn",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c83c9594-e290-4c8d-ad5f-8e317c9c7c7c",
      ResourceVersion: (string) (len=5) "21997",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 37  31 2e 31 33 37 5c 22 7d  |2.168.171.137\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-khrnr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-khrnr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "ip-172-31-2-8",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.31.2.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.31.2.8"
        }
      },
      PodIP: (string) (len=15) "192.168.171.137",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.171.137"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862519301,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7b042433b1e0f8a6734135517ab9b7a4fd3a248371164ddae8e3c9feae29c60c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-khrnr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.246434 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-8hwbz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-8hwbz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92aadcdd-42f3-4917-9741-0163bf3d146a",
      ResourceVersion: (string) (len=5) "22179",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rdqcw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rdqcw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.247256 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-cstm8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-cstm8",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17c24d23-6cbc-4363-b89e-67ad9f3c81d2",
      ResourceVersion: (string) (len=5) "22164",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7lxnd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7lxnd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.248024 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-hd2vs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hd2vs",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d21be13f-8750-42ee-b54c-5b7ebc6a86b2",
      ResourceVersion: (string) (len=5) "22175",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bl2w9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bl2w9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "ip-172-31-2-8",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.248870 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-l6h2m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-l6h2m",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "195917cc-abcb-4115-ac9a-37776e9ea637",
      ResourceVersion: (string) (len=5) "22160",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-shn55",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-shn55",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-69-84",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.250035 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-lf9mt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-lf9mt",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a139dff-efdd-4961-9c7e-631a15bdb588",
      ResourceVersion: (string) (len=5) "22151",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lcqwp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lcqwp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-69-84",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.251108 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-lngk7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-lngk7",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4520a7b6-78e6-4176-8019-d2bf7f8faa2f",
      ResourceVersion: (string) (len=5) "22177",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-twp47",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-twp47",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.252224 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-m4pvp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-m4pvp",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ac2f775-42f1-438b-94ab-89e227b9e7ee",
      ResourceVersion: (string) (len=5) "22033",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 37  31 2e 31 36 31 5c 22 7d  |2.168.171.161\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jjcdj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jjcdj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "ip-172-31-2-8",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.31.2.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.31.2.8"
        }
      },
      PodIP: (string) (len=15) "192.168.171.161",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.171.161"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862519302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2f4eb6c6ab5a0c05d359d4ab1780584f482f81c17e3c199554b88b309a7b5496",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jjcdj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.254690 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-mpnqj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-mpnqj",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e29dd1e4-d628-4c96-b1c8-53f4f1ba002e",
      ResourceVersion: (string) (len=5) "22178",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4pfzn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4pfzn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.258252 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-n2cml" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-n2cml",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2697bf02-ca82-4f92-a3a4-df3467be0920",
      ResourceVersion: (string) (len=5) "22156",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f6l8v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f6l8v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.260504 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-t6tx5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-t6tx5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66cc4293-0455-4633-97e8-a102189b11f9",
      ResourceVersion: (string) (len=5) "22022",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  36 2e 31 33 37 5c 22 7d  |2.168.126.137\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7f4gn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7f4gn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-69-84",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.69.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.69.84"
        }
      },
      PodIP: (string) (len=15) "192.168.126.137",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.126.137"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862519302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6785ab7c27388d90e1eaf5eb4a9034218164963c92bf1729f2cc79987d182187",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7f4gn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.262656 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-x5zrl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-x5zrl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "77b6287d-aae2-40f3-9164-8c8970b143d3",
      ResourceVersion: (string) (len=5) "22030",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 37  2e 35 32 5c 22 7d 22 3a  |2.168.27.52\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jnb4d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jnb4d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.95.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.95.123"
        }
      },
      PodIP: (string) (len=13) "192.168.27.52",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.27.52"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862519302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dbfefc5602ae17a376cb1371fd277b41d51cdade9aa4d01bcecdef9275ca02e8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jnb4d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.266036 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-xqwlz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-xqwlz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ced26fdc-a482-48e3-b549-9988aecc8365",
      ResourceVersion: (string) (len=5) "21977",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 37  2e 34 30 5c 22 7d 22 3a  |2.168.27.40\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lcf8n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lcf8n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.95.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.95.123"
        }
      },
      PodIP: (string) (len=13) "192.168.27.40",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.27.40"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862519301,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fa764d6c1fa329e46cf6f3c09f12e6c0808f7a52f4a823199b22f40bd0f09e25",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lcf8n",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.269670 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-xzb5c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-xzb5c",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f585f568-196b-4d19-b97a-e1d2ba552274",
      ResourceVersion: (string) (len=5) "22180",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1f595557-272e-4832-80ca-844fcee14f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  35 39 35 35 35 37 2d 32  |d\":\"1f595557-2|
              00000090  37 32 65 2d 34 38 33 32  2d 38 30 63 61 2d 38 34  |72e-4832-80ca-84|
              000000a0  34 66 63 65 65 31 34 66  34 63 5c 22 7d 22 3a 7b  |4fcee14f4c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7tfj2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7tfj2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.271522 19 deployment.go:67] Pod "webserver-deployment-786f49d774-6kw8m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-6kw8m",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5c50c82-6a4c-4c5b-a63d-a9d36556499b",
      ResourceVersion: (string) (len=5) "22135",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ff6f48f9-e92a-460a-89d6-7a0aaee42a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 66  36 66 34 38 66 39 2d 65  |d\":\"ff6f48f9-e|
              00000090  39 32 61 2d 34 36 30 61  2d 38 39 64 36 2d 37 61  |92a-460a-89d6-7a|
              000000a0  30 61 61 65 65 34 32 61  31 61 5c 22 7d 22 3a 7b  |0aaee42a1a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 36 2e 31  36 39 5c 22 7d 22 3a 7b  |68.126.169\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4lx6s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4lx6s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-69-84",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.69.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.69.84"
        }
      },
      PodIP: (string) (len=15) "192.168.126.169",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.126.169"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4lx6s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.272897 19 deployment.go:67] Pod "webserver-deployment-786f49d774-9ltk9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-9ltk9",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e13b41f-9407-4ed5-a2e5-772cd5cf4c13",
      ResourceVersion: (string) (len=5) "22138",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ff6f48f9-e92a-460a-89d6-7a0aaee42a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 66  36 66 34 38 66 39 2d 65  |d\":\"ff6f48f9-e|
              00000090  39 32 61 2d 34 36 30 61  2d 38 39 64 36 2d 37 61  |92a-460a-89d6-7a|
              000000a0  30 61 61 65 65 34 32 61  31 61 5c 22 7d 22 3a 7b  |0aaee42a1a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 36 2e 31  34 34 5c 22 7d 22 3a 7b  |68.126.144\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cljtg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cljtg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-69-84",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.69.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.69.84"
        }
      },
      PodIP: (string) (len=15) "192.168.126.144",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.126.144"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cljtg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.276590 19 deployment.go:67] Pod "webserver-deployment-786f49d774-bgr75" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-bgr75",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c2bb022-2a25-4319-b116-20e68ce6ac36",
      ResourceVersion: (string) (len=5) "22131",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ff6f48f9-e92a-460a-89d6-7a0aaee42a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 66  36 66 34 38 66 39 2d 65  |d\":\"ff6f48f9-e|
              00000090  39 32 61 2d 34 36 30 61  2d 38 39 64 36 2d 37 61  |92a-460a-89d6-7a|
              000000a0  30 61 61 65 65 34 32 61  31 61 5c 22 7d 22 3a 7b  |0aaee42a1a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 37 31 2e 31  36 32 5c 22 7d 22 3a 7b  |68.171.162\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4dnhp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4dnhp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "ip-172-31-2-8",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.31.2.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.31.2.8"
        }
      },
      PodIP: (string) (len=15) "192.168.171.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.171.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4dnhp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.278232 19 deployment.go:67] Pod "webserver-deployment-786f49d774-c8l2r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-c8l2r",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66a5e209-ebaf-4ee6-9ed5-e9a50db032a3",
      ResourceVersion: (string) (len=5) "22168",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ff6f48f9-e92a-460a-89d6-7a0aaee42a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 66  36 66 34 38 66 39 2d 65  |d\":\"ff6f48f9-e|
              00000090  39 32 61 2d 34 36 30 61  2d 38 39 64 36 2d 37 61  |92a-460a-89d6-7a|
              000000a0  30 61 61 65 65 34 32 61  31 61 5c 22 7d 22 3a 7b  |0aaee42a1a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l2896",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l2896",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-69-84",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.279034 19 deployment.go:67] Pod "webserver-deployment-786f49d774-hvxd2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-hvxd2",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc016256-0c9e-4aa0-8a9b-616e3034b3c2",
      ResourceVersion: (string) (len=5) "22171",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ff6f48f9-e92a-460a-89d6-7a0aaee42a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 66  36 66 34 38 66 39 2d 65  |d\":\"ff6f48f9-e|
              00000090  39 32 61 2d 34 36 30 61  2d 38 39 64 36 2d 37 61  |92a-460a-89d6-7a|
              000000a0  30 61 61 65 65 34 32 61  31 61 5c 22 7d 22 3a 7b  |0aaee42a1a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m4h6q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m4h6q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.282147 19 deployment.go:67] Pod "webserver-deployment-786f49d774-jbtb6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-jbtb6",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2ba3c15e-e1db-4c74-bdb6-8611e4d21f70",
      ResourceVersion: (string) (len=5) "22165",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ff6f48f9-e92a-460a-89d6-7a0aaee42a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 66  36 66 34 38 66 39 2d 65  |d\":\"ff6f48f9-e|
              00000090  39 32 61 2d 34 36 30 61  2d 38 39 64 36 2d 37 61  |92a-460a-89d6-7a|
              000000a0  30 61 61 65 65 34 32 61  31 61 5c 22 7d 22 3a 7b  |0aaee42a1a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zwjts",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zwjts",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "ip-172-31-2-8",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.31.2.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.31.2.8"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zwjts",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.284449 19 deployment.go:67] Pod "webserver-deployment-786f49d774-lghrk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-lghrk",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "77fd017f-53e5-4275-a979-ece60cd810c5",
      ResourceVersion: (string) (len=5) "22166",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ff6f48f9-e92a-460a-89d6-7a0aaee42a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 66  36 66 34 38 66 39 2d 65  |d\":\"ff6f48f9-e|
              00000090  39 32 61 2d 34 36 30 61  2d 38 39 64 36 2d 37 61  |92a-460a-89d6-7a|
              000000a0  30 61 61 65 65 34 32 61  31 61 5c 22 7d 22 3a 7b  |0aaee42a1a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rxf2s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rxf2s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.285757 19 deployment.go:67] Pod "webserver-deployment-786f49d774-ndczl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-ndczl",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e706b760-5f96-4c9d-8325-b9f79999e283",
      ResourceVersion: (string) (len=5) "22167",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ff6f48f9-e92a-460a-89d6-7a0aaee42a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 66  36 66 34 38 66 39 2d 65  |d\":\"ff6f48f9-e|
              00000090  39 32 61 2d 34 36 30 61  2d 38 39 64 36 2d 37 61  |92a-460a-89d6-7a|
              000000a0  30 61 61 65 65 34 32 61  31 61 5c 22 7d 22 3a 7b  |0aaee42a1a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-82jsh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-82jsh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.286636 19 deployment.go:67] Pod "webserver-deployment-786f49d774-t8r5v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-t8r5v",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b1616808-aa71-45d1-8c30-b8e25dca43ba",
      ResourceVersion: (string) (len=5) "22170",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ff6f48f9-e92a-460a-89d6-7a0aaee42a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 66  36 66 34 38 66 39 2d 65  |d\":\"ff6f48f9-e|
              00000090  39 32 61 2d 34 36 30 61  2d 38 39 64 36 2d 37 61  |92a-460a-89d6-7a|
              000000a0  30 61 61 65 65 34 32 61  31 61 5c 22 7d 22 3a 7b  |0aaee42a1a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v4d67",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v4d67",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.289261 19 deployment.go:67] Pod "webserver-deployment-786f49d774-tvhr2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-tvhr2",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd1d4d3c-3e94-4a28-b946-86a6b55bf8d4",
      ResourceVersion: (string) (len=5) "22169",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ff6f48f9-e92a-460a-89d6-7a0aaee42a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 66  36 66 34 38 66 39 2d 65  |d\":\"ff6f48f9-e|
              00000090  39 32 61 2d 34 36 30 61  2d 38 39 64 36 2d 37 61  |92a-460a-89d6-7a|
              000000a0  30 61 61 65 65 34 32 61  31 61 5c 22 7d 22 3a 7b  |0aaee42a1a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c6qc9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c6qc9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.290160 19 deployment.go:67] Pod "webserver-deployment-786f49d774-vq65s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-vq65s",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ddd2cc9a-6950-4137-8143-780200350f7d",
      ResourceVersion: (string) (len=5) "22123",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ff6f48f9-e92a-460a-89d6-7a0aaee42a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 66  36 66 34 38 66 39 2d 65  |d\":\"ff6f48f9-e|
              00000090  39 32 61 2d 34 36 30 61  2d 38 39 64 36 2d 37 61  |92a-460a-89d6-7a|
              000000a0  30 61 61 65 65 34 32 61  31 61 5c 22 7d 22 3a 7b  |0aaee42a1a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 37 2e 35 37  5c 22 7d 22 3a 7b 22 2e  |68.27.57\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rkqgg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rkqgg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.95.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.95.123"
        }
      },
      PodIP: (string) (len=13) "192.168.27.57",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.27.57"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rkqgg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.291541 19 deployment.go:67] Pod "webserver-deployment-786f49d774-xfbk7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xfbk7",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "436bbc28-a314-4cb2-853b-ebdafe48aed9",
      ResourceVersion: (string) (len=5) "22142",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ff6f48f9-e92a-460a-89d6-7a0aaee42a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 66  36 66 34 38 66 39 2d 65  |d\":\"ff6f48f9-e|
              00000090  39 32 61 2d 34 36 30 61  2d 38 39 64 36 2d 37 61  |92a-460a-89d6-7a|
              000000a0  30 61 61 65 65 34 32 61  31 61 5c 22 7d 22 3a 7b  |0aaee42a1a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 37 2e 34 37  5c 22 7d 22 3a 7b 22 2e  |68.27.47\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wsq76",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wsq76",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.95.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.95.123"
        }
      },
      PodIP: (string) (len=13) "192.168.27.47",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.27.47"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wsq76",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:41:45.298193 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3054" for this suite. @ 09/21/24 12:41:45.31
• [4.352 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 09/21/24 12:41:45.331
  I0921 12:41:45.331884 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename namespaces @ 09/21/24 12:41:45.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:41:45.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:41:45.368
  STEP: Creating a test namespace @ 09/21/24 12:41:45.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:41:45.399
  STEP: Creating a service in the namespace @ 09/21/24 12:41:45.401
  STEP: Deleting the namespace @ 09/21/24 12:41:45.419
  STEP: Waiting for the namespace to be removed. @ 09/21/24 12:41:45.43
  STEP: Recreating the namespace @ 09/21/24 12:41:51.433
  STEP: Verifying there is no service in the namespace @ 09/21/24 12:41:51.452
  I0921 12:41:51.462504 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-179" for this suite. @ 09/21/24 12:41:51.467
  STEP: Destroying namespace "nsdeletetest-8084" for this suite. @ 09/21/24 12:41:51.474
  I0921 12:41:51.478577 19 framework.go:370] Namespace nsdeletetest-8084 was already deleted
  STEP: Destroying namespace "nsdeletetest-6645" for this suite. @ 09/21/24 12:41:51.478
• [6.156 seconds]
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 09/21/24 12:41:51.487
  I0921 12:41:51.487484 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename job @ 09/21/24 12:41:51.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:41:51.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:41:51.508
  STEP: Creating a suspended job @ 09/21/24 12:41:51.518
  STEP: Patching the Job @ 09/21/24 12:41:51.523
  STEP: Watching for Job to be patched @ 09/21/24 12:41:51.541
  I0921 12:41:51.542687 19 job.go:1330] Event ADDED observed for Job e2e-8gzxf in namespace job-930 with labels: map[e2e-job-label:e2e-8gzxf] and annotations: map[]
  I0921 12:41:51.542732 19 job.go:1330] Event MODIFIED observed for Job e2e-8gzxf in namespace job-930 with labels: map[e2e-job-label:e2e-8gzxf] and annotations: map[]
  I0921 12:41:51.542745 19 job.go:1333] Event MODIFIED found for Job e2e-8gzxf in namespace job-930 with labels: map[e2e-8gzxf:patched e2e-job-label:e2e-8gzxf] and annotations: map[]
  STEP: Updating the job @ 09/21/24 12:41:51.542
  STEP: Watching for Job to be updated @ 09/21/24 12:41:51.553
  I0921 12:41:51.554881 19 job.go:1333] Event MODIFIED found for Job e2e-8gzxf in namespace job-930 with labels: map[e2e-8gzxf:patched e2e-job-label:e2e-8gzxf] and annotations: map[updated:true]
  I0921 12:41:51.554975 19 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/21/24 12:41:51.554
  I0921 12:41:51.558336 19 job.go:1233] Job: e2e-8gzxf as labels: map[e2e-8gzxf:patched e2e-job-label:e2e-8gzxf]
  STEP: Waiting for job to complete @ 09/21/24 12:41:51.558
  STEP: Delete a job collection with a labelselector @ 09/21/24 12:41:59.569
  STEP: Watching for Job to be deleted @ 09/21/24 12:41:59.582
  I0921 12:41:59.583703 19 job.go:1330] Event MODIFIED observed for Job e2e-8gzxf in namespace job-930 with labels: map[e2e-8gzxf:patched e2e-job-label:e2e-8gzxf] and annotations: map[updated:true]
  I0921 12:41:59.583741 19 job.go:1330] Event MODIFIED observed for Job e2e-8gzxf in namespace job-930 with labels: map[e2e-8gzxf:patched e2e-job-label:e2e-8gzxf] and annotations: map[updated:true]
  I0921 12:41:59.583753 19 job.go:1330] Event MODIFIED observed for Job e2e-8gzxf in namespace job-930 with labels: map[e2e-8gzxf:patched e2e-job-label:e2e-8gzxf] and annotations: map[updated:true]
  I0921 12:41:59.583824 19 job.go:1330] Event MODIFIED observed for Job e2e-8gzxf in namespace job-930 with labels: map[e2e-8gzxf:patched e2e-job-label:e2e-8gzxf] and annotations: map[updated:true]
  I0921 12:41:59.583841 19 job.go:1330] Event MODIFIED observed for Job e2e-8gzxf in namespace job-930 with labels: map[e2e-8gzxf:patched e2e-job-label:e2e-8gzxf] and annotations: map[updated:true]
  I0921 12:41:59.583852 19 job.go:1330] Event MODIFIED observed for Job e2e-8gzxf in namespace job-930 with labels: map[e2e-8gzxf:patched e2e-job-label:e2e-8gzxf] and annotations: map[updated:true]
  I0921 12:41:59.583909 19 job.go:1330] Event MODIFIED observed for Job e2e-8gzxf in namespace job-930 with labels: map[e2e-8gzxf:patched e2e-job-label:e2e-8gzxf] and annotations: map[updated:true]
  I0921 12:41:59.583972 19 job.go:1333] Event DELETED found for Job e2e-8gzxf in namespace job-930 with labels: map[e2e-8gzxf:patched e2e-job-label:e2e-8gzxf] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/21/24 12:41:59.583
  I0921 12:41:59.587795 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-930" for this suite. @ 09/21/24 12:41:59.593
• [8.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 09/21/24 12:41:59.614
  I0921 12:41:59.614171 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename dns @ 09/21/24 12:41:59.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:41:59.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:41:59.633
  STEP: Creating a test headless service @ 09/21/24 12:41:59.635
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3168 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3168;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3168 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3168;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3168.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3168.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3168.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3168.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3168.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3168.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3168.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3168.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3168.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3168.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3168.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3168.svc;check="$$(dig +notcp +noall +answer +search 94.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.94_udp@PTR;check="$$(dig +tcp +noall +answer +search 94.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.94_tcp@PTR;sleep 1; done
   @ 09/21/24 12:41:59.654
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3168 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3168;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3168 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3168;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3168.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3168.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3168.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3168.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3168.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3168.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3168.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3168.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3168.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3168.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3168.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3168.svc;check="$$(dig +notcp +noall +answer +search 94.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.94_udp@PTR;check="$$(dig +tcp +noall +answer +search 94.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.94_tcp@PTR;sleep 1; done
   @ 09/21/24 12:41:59.654
  STEP: creating a pod to probe DNS @ 09/21/24 12:41:59.654
  STEP: submitting the pod to kubernetes @ 09/21/24 12:41:59.655
  STEP: retrieving the pod @ 09/21/24 12:42:01.679
  STEP: looking for the results for each expected name from probers @ 09/21/24 12:42:01.683
  I0921 12:42:01.689368 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.694223 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.699740 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3168 from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.703876 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3168 from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.709255 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3168.svc from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.714246 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3168.svc from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.718838 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3168.svc from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.724136 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3168.svc from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.747825 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.752579 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.757937 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3168 from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.762189 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3168 from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.767200 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3168.svc from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.772315 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3168.svc from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.776177 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3168.svc from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.781134 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3168.svc from pod dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd: the server could not find the requested resource (get pods dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd)
  I0921 12:42:01.799785 19 dns_common.go:489] Lookups using dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3168 wheezy_tcp@dns-test-service.dns-3168 wheezy_udp@dns-test-service.dns-3168.svc wheezy_tcp@dns-test-service.dns-3168.svc wheezy_udp@_http._tcp.dns-test-service.dns-3168.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3168.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3168 jessie_tcp@dns-test-service.dns-3168 jessie_udp@dns-test-service.dns-3168.svc jessie_tcp@dns-test-service.dns-3168.svc jessie_udp@_http._tcp.dns-test-service.dns-3168.svc jessie_tcp@_http._tcp.dns-test-service.dns-3168.svc]

  I0921 12:42:01.819218 19 dns_common.go:495] Pod client logs for webserver: 
  I0921 12:42:01.827296 19 dns_common.go:495] Pod client logs for querier: 
  I0921 12:42:01.836580 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0921 12:42:06.798933 19 dns_common.go:527] DNS probes using dns-3168/dns-test-dc7e7948-b080-4ff6-b156-6bf7c0b0bbcd succeeded

  STEP: deleting the pod @ 09/21/24 12:42:06.799
  STEP: deleting the test service @ 09/21/24 12:42:06.824
  STEP: deleting the test headless service @ 09/21/24 12:42:06.852
  I0921 12:42:06.875074 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3168" for this suite. @ 09/21/24 12:42:06.883
• [7.279 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 09/21/24 12:42:06.893
  I0921 12:42:06.893615 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename dns @ 09/21/24 12:42:06.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:42:06.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:42:06.912
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/21/24 12:42:06.916
  I0921 12:42:06.927666 19 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2914  6e04f3dd-1a3f-4510-86d4-a7b8ce864529 22841 0 2024-09-21 12:42:06 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-09-21 12:42:06 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vrqbp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vrqbp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/21/24 12:42:08.943
  I0921 12:42:08.943750 19 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2914 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:42:08.943769 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:42:08.944215 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:42:08.944271 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2914/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/21/24 12:42:09.002
  I0921 12:42:09.002287 19 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2914 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:42:09.002304 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:42:09.002841 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:42:09.002923 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2914/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0921 12:42:09.047497 19 dns.go:423] Deleting pod test-dns-nameservers...
  I0921 12:42:09.069659 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2914" for this suite. @ 09/21/24 12:42:09.074
• [2.189 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/21/24 12:42:09.082
  I0921 12:42:09.082753 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename subpath @ 09/21/24 12:42:09.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:42:09.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:42:09.104
  STEP: Setting up data @ 09/21/24 12:42:09.106
  STEP: Creating pod pod-subpath-test-downwardapi-zllt @ 09/21/24 12:42:09.117
  STEP: Creating a pod to test atomic-volume-subpath @ 09/21/24 12:42:09.117
  STEP: Saw pod success @ 09/21/24 12:42:33.202
  I0921 12:42:33.207370 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod pod-subpath-test-downwardapi-zllt container test-container-subpath-downwardapi-zllt: <nil>
  STEP: delete the pod @ 09/21/24 12:42:33.216
  STEP: Deleting pod pod-subpath-test-downwardapi-zllt @ 09/21/24 12:42:33.237
  I0921 12:42:33.237692 19 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-zllt" in namespace "subpath-4656"
  I0921 12:42:33.242845 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4656" for this suite. @ 09/21/24 12:42:33.247
• [24.173 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 09/21/24 12:42:33.256
  I0921 12:42:33.256054 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename svcaccounts @ 09/21/24 12:42:33.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:42:33.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:42:33.275
  STEP: Creating ServiceAccount "e2e-sa-x8wgx"  @ 09/21/24 12:42:33.277
  I0921 12:42:33.283358 19 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-x8wgx"  @ 09/21/24 12:42:33.283
  I0921 12:42:33.293966 19 service_accounts.go:839] AutomountServiceAccountToken: true
  I0921 12:42:33.294077 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8745" for this suite. @ 09/21/24 12:42:33.299
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/21/24 12:42:33.307
  I0921 12:42:33.307665 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename disruption @ 09/21/24 12:42:33.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:42:33.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:42:33.329
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/21/24 12:42:33.332
  STEP: Waiting for the pdb to be processed @ 09/21/24 12:42:33.337
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/21/24 12:42:35.35
  STEP: Waiting for all pods to be running @ 09/21/24 12:42:35.35
  I0921 12:42:35.354872 19 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 09/21/24 12:42:37.355
  STEP: Updating the pdb to allow a pod to be evicted @ 09/21/24 12:42:37.369
  STEP: Waiting for the pdb to be processed @ 09/21/24 12:42:37.378
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/21/24 12:42:39.384
  STEP: Waiting for all pods to be running @ 09/21/24 12:42:39.384
  STEP: Waiting for the pdb to observed all healthy pods @ 09/21/24 12:42:39.388
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/21/24 12:42:39.42
  STEP: Waiting for the pdb to be processed @ 09/21/24 12:42:39.45
  STEP: Waiting for all pods to be running @ 09/21/24 12:42:39.455
  I0921 12:42:39.462570 19 disruption.go:691] running pods: 2 < 3
  STEP: locating a running pod @ 09/21/24 12:42:41.462
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/21/24 12:42:41.473
  STEP: Waiting for the pdb to be deleted @ 09/21/24 12:42:41.482
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/21/24 12:42:41.486
  STEP: Waiting for all pods to be running @ 09/21/24 12:42:41.486
  I0921 12:42:41.511275 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2220" for this suite. @ 09/21/24 12:42:41.515
• [8.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/21/24 12:42:41.528
  I0921 12:42:41.529013 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/21/24 12:42:41.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:42:41.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:42:41.558
  STEP: Creating 50 configmaps @ 09/21/24 12:42:41.564
  STEP: Creating RC which spawns configmap-volume pods @ 09/21/24 12:42:41.867
  I0921 12:42:41.885753 19 resource.go:87] Pod name wrapped-volume-race-e88a142b-5f23-44b3-81d9-12414bf4cef0: Found 0 pods out of 5
  I0921 12:42:46.893283 19 resource.go:87] Pod name wrapped-volume-race-e88a142b-5f23-44b3-81d9-12414bf4cef0: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/21/24 12:42:46.893
  STEP: Creating RC which spawns configmap-volume pods @ 09/21/24 12:42:46.926
  I0921 12:42:46.940708 19 resource.go:87] Pod name wrapped-volume-race-6da3cbd6-b009-4f4b-b7b2-310be5a50e0d: Found 0 pods out of 5
  I0921 12:42:51.948653 19 resource.go:87] Pod name wrapped-volume-race-6da3cbd6-b009-4f4b-b7b2-310be5a50e0d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/21/24 12:42:51.948
  STEP: Creating RC which spawns configmap-volume pods @ 09/21/24 12:42:51.975
  I0921 12:42:51.990079 19 resource.go:87] Pod name wrapped-volume-race-8d9ce2cc-2239-4150-b385-064eb92423e0: Found 0 pods out of 5
  I0921 12:42:56.998673 19 resource.go:87] Pod name wrapped-volume-race-8d9ce2cc-2239-4150-b385-064eb92423e0: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/21/24 12:42:56.998
  STEP: deleting ReplicationController wrapped-volume-race-8d9ce2cc-2239-4150-b385-064eb92423e0 in namespace emptydir-wrapper-1372, will wait for the garbage collector to delete the pods @ 09/21/24 12:42:57.022
  I0921 12:42:57.090110 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-8d9ce2cc-2239-4150-b385-064eb92423e0 took: 12.951167ms
  I0921 12:42:57.190870 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-8d9ce2cc-2239-4150-b385-064eb92423e0 pods took: 100.763724ms
  STEP: deleting ReplicationController wrapped-volume-race-6da3cbd6-b009-4f4b-b7b2-310be5a50e0d in namespace emptydir-wrapper-1372, will wait for the garbage collector to delete the pods @ 09/21/24 12:42:58.392
  I0921 12:42:58.457294 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-6da3cbd6-b009-4f4b-b7b2-310be5a50e0d took: 9.985309ms
  I0921 12:42:58.557625 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-6da3cbd6-b009-4f4b-b7b2-310be5a50e0d pods took: 100.321896ms
  STEP: deleting ReplicationController wrapped-volume-race-e88a142b-5f23-44b3-81d9-12414bf4cef0 in namespace emptydir-wrapper-1372, will wait for the garbage collector to delete the pods @ 09/21/24 12:43:00.258
  I0921 12:43:00.323754 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-e88a142b-5f23-44b3-81d9-12414bf4cef0 took: 10.842662ms
  I0921 12:43:00.424879 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-e88a142b-5f23-44b3-81d9-12414bf4cef0 pods took: 101.119299ms
  STEP: Cleaning up the configMaps @ 09/21/24 12:43:01.626
  I0921 12:43:02.017188 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1372" for this suite. @ 09/21/24 12:43:02.021
• [20.501 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 09/21/24 12:43:02.029
  I0921 12:43:02.029977 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 12:43:02.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:43:02.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:43:02.049
  STEP: Setting up server cert @ 09/21/24 12:43:02.076
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 12:43:02.386
  STEP: Deploying the webhook pod @ 09/21/24 12:43:02.397
  STEP: Wait for the deployment to be ready @ 09/21/24 12:43:02.41
  I0921 12:43:02.419671 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 12:43:04.434
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 12:43:04.446
  I0921 12:43:05.446704 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/21/24 12:43:05.454
  STEP: create a pod that should be updated by the webhook @ 09/21/24 12:43:05.469
  I0921 12:43:05.546245 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9701" for this suite. @ 09/21/24 12:43:05.551
  STEP: Destroying namespace "webhook-markers-443" for this suite. @ 09/21/24 12:43:05.559
• [3.538 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 09/21/24 12:43:05.568
  I0921 12:43:05.568048 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 12:43:05.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:43:05.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:43:05.585
  STEP: Setting up server cert @ 09/21/24 12:43:05.612
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 12:43:06.057
  STEP: Deploying the webhook pod @ 09/21/24 12:43:06.064
  STEP: Wait for the deployment to be ready @ 09/21/24 12:43:06.076
  I0921 12:43:06.084886 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/21/24 12:43:08.099
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 12:43:08.112
  I0921 12:43:09.112775 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0921 12:43:09.122673 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4684-crds.webhook.example.com via the AdmissionRegistration API @ 09/21/24 12:43:09.634
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/21/24 12:43:09.649
  I0921 12:43:12.246776 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2056" for this suite. @ 09/21/24 12:43:12.251
  STEP: Destroying namespace "webhook-markers-4407" for this suite. @ 09/21/24 12:43:12.259
• [6.702 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 09/21/24 12:43:12.27
  I0921 12:43:12.270589 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 12:43:12.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:43:12.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:43:12.286
  STEP: creating service in namespace services-8095 @ 09/21/24 12:43:12.289
  STEP: creating service affinity-clusterip in namespace services-8095 @ 09/21/24 12:43:12.289
  STEP: creating replication controller affinity-clusterip in namespace services-8095 @ 09/21/24 12:43:12.3
  I0921 12:43:12.308323      19 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-8095, replica count: 3
  I0921 12:43:15.359299      19 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0921 12:43:15.369704 19 resource.go:361] Creating new exec pod
  I0921 12:43:18.388652 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-8095 exec execpod-affinityh69ng -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0921 12:43:18.483379 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0921 12:43:18.483425 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 12:43:18.483518 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-8095 exec execpod-affinityh69ng -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.47 80'
  I0921 12:43:18.564595 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.47 80\nConnection to 10.152.183.47 80 port [tcp/http] succeeded!\n"
  I0921 12:43:18.564638 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 12:43:18.564706 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-8095 exec execpod-affinityh69ng -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.47:80/ ; done'
  I0921 12:43:18.705758 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.47:80/\n"
  I0921 12:43:18.705925 19 builder.go:147] stdout: "\naffinity-clusterip-xnlvs\naffinity-clusterip-xnlvs\naffinity-clusterip-xnlvs\naffinity-clusterip-xnlvs\naffinity-clusterip-xnlvs\naffinity-clusterip-xnlvs\naffinity-clusterip-xnlvs\naffinity-clusterip-xnlvs\naffinity-clusterip-xnlvs\naffinity-clusterip-xnlvs\naffinity-clusterip-xnlvs\naffinity-clusterip-xnlvs\naffinity-clusterip-xnlvs\naffinity-clusterip-xnlvs\naffinity-clusterip-xnlvs\naffinity-clusterip-xnlvs"
  I0921 12:43:18.705946 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.705955 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.705962 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.706098 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.706114 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.706120 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.706130 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.706137 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.706148 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.706177 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.706184 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.706196 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.706203 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.706211 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.706223 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.706251 19 service.go:242] Received response from host: affinity-clusterip-xnlvs
  I0921 12:43:18.706333 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8095, will wait for the garbage collector to delete the pods @ 09/21/24 12:43:18.725
  I0921 12:43:18.790578 19 resources.go:139] Deleting ReplicationController affinity-clusterip took: 9.86727ms
  I0921 12:43:18.891462 19 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.879778ms
  I0921 12:43:21.613668 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8095" for this suite. @ 09/21/24 12:43:21.618
• [9.357 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 09/21/24 12:43:21.627
  I0921 12:43:21.627564 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 12:43:21.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:43:21.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:43:21.647
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8750 @ 09/21/24 12:43:21.649
  STEP: changing the ExternalName service to type=NodePort @ 09/21/24 12:43:21.656
  STEP: creating replication controller externalname-service in namespace services-8750 @ 09/21/24 12:43:21.686
  I0921 12:43:21.692114      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-8750, replica count: 2
  I0921 12:43:24.742900      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0921 12:43:24.742970 19 resource.go:361] Creating new exec pod
  I0921 12:43:27.769030 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-8750 exec execpodghxrw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0921 12:43:27.861577 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0921 12:43:27.861628 19 builder.go:147] stdout: "externalname-service-mjf9p"
  I0921 12:43:27.861759 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-8750 exec execpodghxrw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.234 80'
  I0921 12:43:27.941912 19 builder.go:146] stderr: "+ echo hostName+ nc -v -t -w 2 10.152.183.234 80\n\nConnection to 10.152.183.234 80 port [tcp/http] succeeded!\n"
  I0921 12:43:27.941964 19 builder.go:147] stdout: ""
  I0921 12:43:28.862806 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-8750 exec execpodghxrw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.234 80'
  I0921 12:43:28.945162 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.234 80\nConnection to 10.152.183.234 80 port [tcp/http] succeeded!\n"
  I0921 12:43:28.945211 19 builder.go:147] stdout: "externalname-service-mjf9p"
  I0921 12:43:28.945323 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-8750 exec execpodghxrw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.2.8 31750'
  I0921 12:43:29.031121 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.2.8 31750\nConnection to 172.31.2.8 31750 port [tcp/*] succeeded!\n"
  I0921 12:43:29.031180 19 builder.go:147] stdout: "externalname-service-mjf9p"
  I0921 12:43:29.031261 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-8750 exec execpodghxrw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.95.123 31750'
  I0921 12:43:29.113262 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.95.123 31750\nConnection to 172.31.95.123 31750 port [tcp/*] succeeded!\n"
  I0921 12:43:29.113305 19 builder.go:147] stdout: "externalname-service-8q7xx"
  I0921 12:43:29.113448 19 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0921 12:43:29.143479 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8750" for this suite. @ 09/21/24 12:43:29.148
• [7.529 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 09/21/24 12:43:29.156
  I0921 12:43:29.156975 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename svcaccounts @ 09/21/24 12:43:29.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:43:29.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:43:29.178
  I0921 12:43:29.184254 19 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-7870"
  I0921 12:43:29.192959 19 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-7870"
  STEP: waiting for a new root ca configmap created @ 09/21/24 12:43:29.693
  I0921 12:43:29.699026 19 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-7870"
  I0921 12:43:29.705832 19 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-7870"
  STEP: waiting for the root ca configmap reconciled @ 09/21/24 12:43:30.206
  I0921 12:43:30.211668 19 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-7870"
  I0921 12:43:30.211775 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7870" for this suite. @ 09/21/24 12:43:30.216
• [1.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 09/21/24 12:43:30.227
  I0921 12:43:30.227288 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename configmap @ 09/21/24 12:43:30.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:43:30.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:43:30.247
  STEP: Creating configMap configmap-9807/configmap-test-412f5050-09b3-4d87-ad07-827b19069009 @ 09/21/24 12:43:30.25
  STEP: Creating a pod to test consume configMaps @ 09/21/24 12:43:30.254
  STEP: Saw pod success @ 09/21/24 12:43:32.28
  I0921 12:43:32.284935 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-configmaps-09970a0a-2e5c-4c04-9726-a8e690ff1c33 container env-test: <nil>
  STEP: delete the pod @ 09/21/24 12:43:32.297
  I0921 12:43:32.316655 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9807" for this suite. @ 09/21/24 12:43:32.321
• [2.104 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 09/21/24 12:43:32.331
  I0921 12:43:32.331326 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 12:43:32.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:43:32.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:43:32.358
  STEP: Setting up server cert @ 09/21/24 12:43:32.389
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 12:43:32.54
  STEP: Deploying the webhook pod @ 09/21/24 12:43:32.551
  STEP: Wait for the deployment to be ready @ 09/21/24 12:43:32.568
  I0921 12:43:32.589821 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 12:43:34.604
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 12:43:34.621
  I0921 12:43:35.621938 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0921 12:43:35.628540 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2525-crds.webhook.example.com via the AdmissionRegistration API @ 09/21/24 12:43:36.141
  STEP: Creating a custom resource while v1 is storage version @ 09/21/24 12:43:36.155
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/21/24 12:43:38.168
  STEP: Patching the custom resource while v2 is storage version @ 09/21/24 12:43:38.182
  I0921 12:43:38.793009 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5116" for this suite. @ 09/21/24 12:43:38.798
  STEP: Destroying namespace "webhook-markers-7484" for this suite. @ 09/21/24 12:43:38.807
• [6.485 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 09/21/24 12:43:38.816
  I0921 12:43:38.816200 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename job @ 09/21/24 12:43:38.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:43:38.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:43:38.836
  STEP: Creating a job @ 09/21/24 12:43:38.838
  STEP: Ensuring job reaches completions @ 09/21/24 12:43:38.846
  I0921 12:43:50.858873 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1701" for this suite. @ 09/21/24 12:43:50.864
• [12.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 09/21/24 12:43:50.874
  I0921 12:43:50.874136 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir @ 09/21/24 12:43:50.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:43:50.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:43:50.892
  STEP: Creating Pod @ 09/21/24 12:43:50.895
  STEP: Reading file content from the nginx-container @ 09/21/24 12:43:52.915
  I0921 12:43:52.915958 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-2545 PodName:pod-sharedvolume-04be86b2-6a59-47c8-85cc-609c07e12d49 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:43:52.915977 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:43:52.916432 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:43:52.916479 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-2545/pods/pod-sharedvolume-04be86b2-6a59-47c8-85cc-609c07e12d49/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0921 12:43:52.954498 19 exec_util.go:111] Exec stderr: ""
  I0921 12:43:52.954636 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2545" for this suite. @ 09/21/24 12:43:52.96
• [2.095 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/21/24 12:43:52.969
  I0921 12:43:52.969367 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/21/24 12:43:52.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:43:52.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:43:52.992
  I0921 12:43:52.999319 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6568" for this suite. @ 09/21/24 12:43:53.004
• [0.044 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/21/24 12:43:53.013
  I0921 12:43:53.013918 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename secrets @ 09/21/24 12:43:53.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:43:53.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:43:53.036
  I0921 12:43:53.085053 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1334" for this suite. @ 09/21/24 12:43:53.089
• [0.084 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/21/24 12:43:53.098
  I0921 12:43:53.098226 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename replicaset @ 09/21/24 12:43:53.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:43:53.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:43:53.117
  I0921 12:43:53.135766 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0921 12:43:58.142855 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/21/24 12:43:58.142
  STEP: Scaling up "test-rs" replicaset @ 09/21/24 12:43:58.142
  I0921 12:43:58.153381 19 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/21/24 12:43:58.153
  I0921 12:43:58.164516 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-202 with ReadyReplicas 1, AvailableReplicas 1
  I0921 12:43:58.195641 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-202 with ReadyReplicas 1, AvailableReplicas 1
  I0921 12:43:58.214285 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-202 with ReadyReplicas 1, AvailableReplicas 1
  I0921 12:43:58.223520 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-202 with ReadyReplicas 1, AvailableReplicas 1
  I0921 12:43:59.202941 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-202 with ReadyReplicas 2, AvailableReplicas 2
  I0921 12:43:59.314379 19 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-202 with ReadyReplicas 3 found true
  I0921 12:43:59.314570 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-202" for this suite. @ 09/21/24 12:43:59.319
• [6.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 09/21/24 12:43:59.329
  I0921 12:43:59.329851 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename replication-controller @ 09/21/24 12:43:59.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:43:59.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:43:59.348
  STEP: Creating replication controller my-hostname-basic-3d5516a9-837d-42ea-bea5-9bbdfb5e50aa @ 09/21/24 12:43:59.351
  I0921 12:43:59.361011 19 resource.go:87] Pod name my-hostname-basic-3d5516a9-837d-42ea-bea5-9bbdfb5e50aa: Found 0 pods out of 1
  I0921 12:44:04.366296 19 resource.go:87] Pod name my-hostname-basic-3d5516a9-837d-42ea-bea5-9bbdfb5e50aa: Found 1 pods out of 1
  I0921 12:44:04.366332 19 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-3d5516a9-837d-42ea-bea5-9bbdfb5e50aa" are running
  I0921 12:44:04.370593 19 rc.go:523] Pod "my-hostname-basic-3d5516a9-837d-42ea-bea5-9bbdfb5e50aa-pxhnc" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-21 12:44:00 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-21 12:43:59 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-21 12:44:00 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-21 12:44:00 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-21 12:43:59 +0000 UTC Reason: Message:}])
  I0921 12:44:04.370617 19 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/21/24 12:44:04.37
  I0921 12:44:04.386196 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1118" for this suite. @ 09/21/24 12:44:04.391
• [5.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 09/21/24 12:44:04.399
  I0921 12:44:04.399297 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 12:44:04.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:44:04.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:44:04.417
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 12:44:04.42
  STEP: Saw pod success @ 09/21/24 12:44:06.437
  I0921 12:44:06.443119 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downwardapi-volume-9dab98e3-68f9-437a-bd92-8e328b744aa7 container client-container: <nil>
  STEP: delete the pod @ 09/21/24 12:44:06.451
  I0921 12:44:06.468851 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8847" for this suite. @ 09/21/24 12:44:06.472
• [2.083 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 09/21/24 12:44:06.482
  I0921 12:44:06.482014 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename statefulset @ 09/21/24 12:44:06.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:44:06.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:44:06.501
  STEP: Creating service test in namespace statefulset-708 @ 09/21/24 12:44:06.503
  STEP: Creating statefulset ss in namespace statefulset-708 @ 09/21/24 12:44:06.517
  I0921 12:44:06.529198 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0921 12:44:16.530059 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/21/24 12:44:16.539
  STEP: Getting /status @ 09/21/24 12:44:16.545
  I0921 12:44:16.550452 19 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/21/24 12:44:16.55
  I0921 12:44:16.562488 19 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/21/24 12:44:16.562
  I0921 12:44:16.563907 19 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I0921 12:44:16.564008 19 statefulset.go:1111] Found Statefulset ss in namespace statefulset-708 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0921 12:44:16.564023 19 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/21/24 12:44:16.564
  I0921 12:44:16.564046 19 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0921 12:44:16.572267 19 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/21/24 12:44:16.572
  I0921 12:44:16.573633 19 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I0921 12:44:16.573655 19 statefulset.go:1151] Observed Statefulset ss in namespace statefulset-708 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0921 12:44:16.573743 19 statefulset.go:1155] Observed &StatefulSet event: MODIFIED
  I0921 12:44:16.573792 19 statefulset.go:138] Deleting all statefulset in ns statefulset-708
  I0921 12:44:16.578454 19 rest.go:150] Scaling statefulset ss to 0
  I0921 12:44:26.597329 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0921 12:44:26.601303 19 rest.go:88] Deleting statefulset ss
  I0921 12:44:26.618872 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-708" for this suite. @ 09/21/24 12:44:26.623
• [20.149 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 09/21/24 12:44:26.631
  I0921 12:44:26.631398 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename security-context-test @ 09/21/24 12:44:26.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:44:26.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:44:26.647
  I0921 12:44:30.675656 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6262" for this suite. @ 09/21/24 12:44:30.681
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 09/21/24 12:44:30.691
  I0921 12:44:30.691849 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename gc @ 09/21/24 12:44:30.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:44:30.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:44:30.712
  STEP: create the rc @ 09/21/24 12:44:30.715
  W0921 12:44:30.719662      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/21/24 12:44:35.724
  STEP: wait for all pods to be garbage collected @ 09/21/24 12:44:35.733
  STEP: Gathering metrics @ 09/21/24 12:44:40.742
  W0921 12:44:40.749032      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0921 12:44:40.749070 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0921 12:44:40.749203 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4715" for this suite. @ 09/21/24 12:44:40.753
• [10.070 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/21/24 12:44:40.761
  I0921 12:44:40.761549 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename limitrange @ 09/21/24 12:44:40.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:44:40.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:44:40.781
  STEP: Creating LimitRange "e2e-limitrange-wx69n" in namespace "limitrange-5428" @ 09/21/24 12:44:40.784
  STEP: Creating another limitRange in another namespace @ 09/21/24 12:44:40.791
  I0921 12:44:40.808089 19 limit_range.go:299] Namespace "e2e-limitrange-wx69n-5812" created
  I0921 12:44:40.808114 19 limit_range.go:300] Creating LimitRange "e2e-limitrange-wx69n" in namespace "e2e-limitrange-wx69n-5812"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-wx69n" @ 09/21/24 12:44:40.815
  I0921 12:44:40.819487 19 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-wx69n" in "limitrange-5428" namespace @ 09/21/24 12:44:40.819
  I0921 12:44:40.827374 19 limit_range.go:335] LimitRange "e2e-limitrange-wx69n" has been patched
  STEP: Delete LimitRange "e2e-limitrange-wx69n" by Collection with labelSelector: "e2e-limitrange-wx69n=patched" @ 09/21/24 12:44:40.827
  STEP: Confirm that the limitRange "e2e-limitrange-wx69n" has been deleted @ 09/21/24 12:44:40.838
  I0921 12:44:40.838957 19 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0921 12:44:40.842442 19 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-wx69n=patched"
  I0921 12:44:40.842470 19 limit_range.go:344] LimitRange "e2e-limitrange-wx69n" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-wx69n" @ 09/21/24 12:44:40.842
  I0921 12:44:40.846763 19 limit_range.go:350] Found 1 limitRange
  I0921 12:44:40.846885 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5428" for this suite. @ 09/21/24 12:44:40.851
  STEP: Destroying namespace "e2e-limitrange-wx69n-5812" for this suite. @ 09/21/24 12:44:40.86
• [0.107 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 09/21/24 12:44:40.868
  I0921 12:44:40.868871 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 12:44:40.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:44:40.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:44:40.889
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1545 @ 09/21/24 12:44:40.891
  STEP: changing the ExternalName service to type=ClusterIP @ 09/21/24 12:44:40.898
  STEP: creating replication controller externalname-service in namespace services-1545 @ 09/21/24 12:44:40.916
  I0921 12:44:40.925012      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-1545, replica count: 2
  I0921 12:44:43.976416      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0921 12:44:43.976460 19 resource.go:361] Creating new exec pod
  I0921 12:44:46.996484 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1545 exec execpodjs8pc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0921 12:44:47.079587 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0921 12:44:47.079644 19 builder.go:147] stdout: ""
  I0921 12:44:47.996563 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1545 exec execpodjs8pc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0921 12:44:48.080610 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0921 12:44:48.080669 19 builder.go:147] stdout: "externalname-service-2gshh"
  I0921 12:44:48.080753 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1545 exec execpodjs8pc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.26 80'
  I0921 12:44:48.165009 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.26 80\nConnection to 10.152.183.26 80 port [tcp/http] succeeded!\n"
  I0921 12:44:48.165060 19 builder.go:147] stdout: "externalname-service-6tnfg"
  I0921 12:44:48.165181 19 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0921 12:44:48.186309 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1545" for this suite. @ 09/21/24 12:44:48.191
• [7.332 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/21/24 12:44:48.2
  I0921 12:44:48.200787 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename crd-webhook @ 09/21/24 12:44:48.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:44:48.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:44:48.223
  STEP: Setting up server cert @ 09/21/24 12:44:48.225
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/21/24 12:44:48.375
  STEP: Deploying the custom resource conversion webhook pod @ 09/21/24 12:44:48.386
  STEP: Wait for the deployment to be ready @ 09/21/24 12:44:48.399
  I0921 12:44:48.417251 19 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 12:44:50.432
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 12:44:50.447
  I0921 12:44:51.447199 19 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0921 12:44:51.456589 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Creating a v1 custom resource @ 09/21/24 12:44:54.012
  STEP: v2 custom resource should be converted @ 09/21/24 12:44:54.018
  I0921 12:44:54.592525 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1864" for this suite. @ 09/21/24 12:44:54.597
• [6.408 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/21/24 12:44:54.609
  I0921 12:44:54.609277 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename deployment @ 09/21/24 12:44:54.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:44:54.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:44:54.629
  I0921 12:44:54.632233 19 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0921 12:44:54.638002 19 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0921 12:44:54.648961 19 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I0921 12:44:56.659012 19 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0921 12:44:56.662290 19 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0921 12:44:56.675085 19 deployment.go:313] Updating deployment test-recreate-deployment
  I0921 12:44:56.675132 19 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0921 12:44:56.767296 19 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1887",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f6ebf80a-8674-4001-964e-319ebf4ae0f2",
      ResourceVersion: (string) (len=5) "25374",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519494,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519494,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0921 12:44:56.772269 19 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1887",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "157617fd-1480-41d3-b24a-5b162a19ba1e",
      ResourceVersion: (string) (len=5) "25372",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519496,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "f6ebf80a-8674-4001-964e-319ebf4ae0f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 36 65 62 66 38  30 61 2d 38 36 37 34 2d  |\"f6ebf80a-8674-|
              00000120  34 30 30 31 2d 39 36 34  65 2d 33 31 39 65 62 66  |4001-964e-319ebf|
              00000130  34 61 65 30 66 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4ae0f2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0921 12:44:56.772789 19 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0921 12:44:56.772984 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1887",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a8a2e976-04d7-481a-934b-7013946c2c33",
      ResourceVersion: (string) (len=5) "25363",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519494,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "f6ebf80a-8674-4001-964e-319ebf4ae0f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 36 65 62 66 38  30 61 2d 38 36 37 34 2d  |\"f6ebf80a-8674-|
              00000120  34 30 30 31 2d 39 36 34  65 2d 33 31 39 65 62 66  |4001-964e-319ebf|
              00000130  34 61 65 30 66 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4ae0f2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0921 12:44:56.778702 19 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-6c9br" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-6c9br",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-1887",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6ff7383-e7a7-41ef-8b90-34404b0c6137",
      ResourceVersion: (string) (len=5) "25375",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519496,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "157617fd-1480-41d3-b24a-5b162a19ba1e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  37 36 31 37 66 64 2d 31  |d\":\"157617fd-1|
              00000090  34 38 30 2d 34 31 64 33  2d 62 32 34 61 2d 35 62  |480-41d3-b24a-5b|
              000000a0  31 36 32 61 31 39 62 61  31 65 5c 22 7d 22 3a 7b  |162a19ba1e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-llr6k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-llr6k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.95.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.95.123"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519496,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-llr6k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:44:56.779829 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1887" for this suite. @ 09/21/24 12:44:56.783
• [2.181 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/21/24 12:44:56.79
  I0921 12:44:56.790712 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/21/24 12:44:56.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:44:56.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:44:56.812
  STEP: creating @ 09/21/24 12:44:56.814
  STEP: getting @ 09/21/24 12:44:56.833
  STEP: listing in namespace @ 09/21/24 12:44:56.838
  STEP: patching @ 09/21/24 12:44:56.841
  STEP: deleting @ 09/21/24 12:44:56.85
  I0921 12:44:56.864064 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3524" for this suite. @ 09/21/24 12:44:56.87
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 09/21/24 12:44:56.879
  I0921 12:44:56.879743 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir @ 09/21/24 12:44:56.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:44:56.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:44:56.903
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/21/24 12:44:56.905
  STEP: Saw pod success @ 09/21/24 12:44:58.929
  I0921 12:44:58.935142 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod pod-1f9b2416-2e2f-4c5a-baa0-0c3d71bd872b container test-container: <nil>
  STEP: delete the pod @ 09/21/24 12:44:58.947
  I0921 12:44:58.971454 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6991" for this suite. @ 09/21/24 12:44:58.975
• [2.106 seconds]
------------------------------
SSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/21/24 12:44:58.985
  I0921 12:44:58.985491 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename sysctl @ 09/21/24 12:44:58.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:44:59.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:44:59.005
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/21/24 12:44:59.007
  I0921 12:44:59.012269 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6027" for this suite. @ 09/21/24 12:44:59.016
• [0.040 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 09/21/24 12:44:59.025
  I0921 12:44:59.025837 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename namespaces @ 09/21/24 12:44:59.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:44:59.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:44:59.046
  STEP: Read namespace status @ 09/21/24 12:44:59.048
  I0921 12:44:59.052898 19 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/21/24 12:44:59.052
  I0921 12:44:59.059034 19 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/21/24 12:44:59.059
  I0921 12:44:59.075119 19 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0921 12:44:59.075229 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4530" for this suite. @ 09/21/24 12:44:59.08
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/21/24 12:44:59.088
  I0921 12:44:59.088896 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename subpath @ 09/21/24 12:44:59.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:44:59.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:44:59.109
  STEP: Setting up data @ 09/21/24 12:44:59.111
  STEP: Creating pod pod-subpath-test-configmap-5tqt @ 09/21/24 12:44:59.121
  STEP: Creating a pod to test atomic-volume-subpath @ 09/21/24 12:44:59.121
  STEP: Saw pod success @ 09/21/24 12:45:23.211
  I0921 12:45:23.215875 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-subpath-test-configmap-5tqt container test-container-subpath-configmap-5tqt: <nil>
  STEP: delete the pod @ 09/21/24 12:45:23.225
  STEP: Deleting pod pod-subpath-test-configmap-5tqt @ 09/21/24 12:45:23.248
  I0921 12:45:23.248451 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-5tqt" in namespace "subpath-8300"
  I0921 12:45:23.252743 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8300" for this suite. @ 09/21/24 12:45:23.257
• [24.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/21/24 12:45:23.266
  I0921 12:45:23.266156 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename proxy @ 09/21/24 12:45:23.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:45:23.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:45:23.286
  I0921 12:45:23.288756 19 proxy.go:387] Creating pod...
  I0921 12:45:25.310988 19 proxy.go:411] Creating service...
  I0921 12:45:25.324932 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4175/pods/agnhost/proxy?method=DELETE
  I0921 12:45:25.334988 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0921 12:45:25.335029 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4175/pods/agnhost/proxy?method=OPTIONS
  I0921 12:45:25.340286 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0921 12:45:25.340314 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4175/pods/agnhost/proxy?method=PATCH
  I0921 12:45:25.344411 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0921 12:45:25.344442 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4175/pods/agnhost/proxy?method=POST
  I0921 12:45:25.349023 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0921 12:45:25.349057 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4175/pods/agnhost/proxy?method=PUT
  I0921 12:45:25.354367 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0921 12:45:25.354393 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4175/services/e2e-proxy-test-service/proxy?method=DELETE
  I0921 12:45:25.360696 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0921 12:45:25.360720 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4175/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0921 12:45:25.368959 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0921 12:45:25.368984 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4175/services/e2e-proxy-test-service/proxy?method=PATCH
  I0921 12:45:25.375808 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0921 12:45:25.375836 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4175/services/e2e-proxy-test-service/proxy?method=POST
  I0921 12:45:25.382848 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0921 12:45:25.382875 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4175/services/e2e-proxy-test-service/proxy?method=PUT
  I0921 12:45:25.391127 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0921 12:45:25.391154 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4175/pods/agnhost/proxy?method=GET
  I0921 12:45:25.395308 19 proxy.go:487] http.Client request:GET StatusCode:301
  I0921 12:45:25.395327 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4175/services/e2e-proxy-test-service/proxy?method=GET
  I0921 12:45:25.400518 19 proxy.go:487] http.Client request:GET StatusCode:301
  I0921 12:45:25.400554 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4175/pods/agnhost/proxy?method=HEAD
  I0921 12:45:25.405335 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0921 12:45:25.405384 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4175/services/e2e-proxy-test-service/proxy?method=HEAD
  I0921 12:45:25.413091 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0921 12:45:25.413322 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4175" for this suite. @ 09/21/24 12:45:25.418
• [2.162 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/21/24 12:45:25.428
  I0921 12:45:25.428016 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename sched-pred @ 09/21/24 12:45:25.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:45:25.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:45:25.449
  I0921 12:45:25.451430 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0921 12:45:25.459847 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I0921 12:45:25.463657 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-2-8 before test
  I0921 12:45:25.468974 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-72drx from ingress-nginx-kubernetes-worker started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 12:45:25.468990 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0921 12:45:25.468997 19 predicates.go:957] calico-node-698gv from kube-system started at 2024-09-21 12:09:22 +0000 UTC (1 container statuses recorded)
  I0921 12:45:25.469002 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0921 12:45:25.469008 19 predicates.go:957] coredns-5b4857d7c8-w6vks from kube-system started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 12:45:25.469014 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0921 12:45:25.469020 19 predicates.go:957] kube-state-metrics-5d7bdccd49-b422z from kube-system started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 12:45:25.469025 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0921 12:45:25.469031 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-g9gpw from kube-system started at 2024-09-21 12:06:02 +0000 UTC (2 container statuses recorded)
  I0921 12:45:25.469036 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0921 12:45:25.469041 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0921 12:45:25.469046 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-5v9dx from kubernetes-dashboard started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 12:45:25.469052 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0921 12:45:25.469057 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-cj2rk from kubernetes-dashboard started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 12:45:25.469062 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0921 12:45:25.469068 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-5wrw9 from sonobuoy started at 2024-09-21 12:12:34 +0000 UTC (2 container statuses recorded)
  I0921 12:45:25.469073 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 12:45:25.469079 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0921 12:45:25.469089 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-69-84 before test
  I0921 12:45:25.475252 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-l9lt9 from ingress-nginx-kubernetes-worker started at 2024-09-21 12:08:37 +0000 UTC (1 container statuses recorded)
  I0921 12:45:25.475273 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0921 12:45:25.475279 19 predicates.go:957] calico-node-rw7c2 from kube-system started at 2024-09-21 12:09:12 +0000 UTC (1 container statuses recorded)
  I0921 12:45:25.475284 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0921 12:45:25.475288 19 predicates.go:957] sonobuoy-e2e-job-b3f4395adb4247d5 from sonobuoy started at 2024-09-21 12:12:33 +0000 UTC (2 container statuses recorded)
  I0921 12:45:25.475291 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0921 12:45:25.475295 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 12:45:25.475299 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-2g2mv from sonobuoy started at 2024-09-21 12:12:34 +0000 UTC (2 container statuses recorded)
  I0921 12:45:25.475303 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 12:45:25.475306 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0921 12:45:25.475310 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-95-123 before test
  I0921 12:45:25.481462 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-nkb4x from ingress-nginx-kubernetes-worker started at 2024-09-21 12:17:48 +0000 UTC (1 container statuses recorded)
  I0921 12:45:25.481494 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0921 12:45:25.481501 19 predicates.go:957] calico-node-tb2z2 from kube-system started at 2024-09-21 12:09:53 +0000 UTC (1 container statuses recorded)
  I0921 12:45:25.481506 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0921 12:45:25.481513 19 predicates.go:957] agnhost from proxy-4175 started at 2024-09-21 12:45:23 +0000 UTC (1 container statuses recorded)
  I0921 12:45:25.481518 19 predicates.go:959] 	Container agnhost ready: true, restart count 0
  I0921 12:45:25.481523 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-21 12:12:31 +0000 UTC (1 container statuses recorded)
  I0921 12:45:25.481528 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0921 12:45:25.481534 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-thrjz from sonobuoy started at 2024-09-21 12:12:34 +0000 UTC (2 container statuses recorded)
  I0921 12:45:25.481539 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 12:45:25.481544 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/21/24 12:45:25.481
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/21/24 12:45:27.504
  STEP: Trying to apply a random label on the found node. @ 09/21/24 12:45:27.526
  STEP: verifying the node has the label kubernetes.io/e2e-08b817e2-3c8e-4c8b-bb43-2ca45b935732 95 @ 09/21/24 12:45:27.534
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/21/24 12:45:27.539
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.69.84 on the node which pod4 resides and expect not scheduled @ 09/21/24 12:45:29.563
  STEP: removing the label kubernetes.io/e2e-08b817e2-3c8e-4c8b-bb43-2ca45b935732 off the node ip-172-31-69-84 @ 09/21/24 12:50:29.57
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-08b817e2-3c8e-4c8b-bb43-2ca45b935732 @ 09/21/24 12:50:29.584
  I0921 12:50:29.588900 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8601" for this suite. @ 09/21/24 12:50:29.595
• [304.176 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 09/21/24 12:50:29.604
  I0921 12:50:29.604697 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 12:50:29.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:50:29.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:50:29.627
  STEP: fetching services @ 09/21/24 12:50:29.63
  I0921 12:50:29.633940 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1608" for this suite. @ 09/21/24 12:50:29.637
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 09/21/24 12:50:29.646
  I0921 12:50:29.646163 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/21/24 12:50:29.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:50:29.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:50:29.664
  STEP: Setting up the test @ 09/21/24 12:50:29.666
  STEP: Creating hostNetwork=false pod @ 09/21/24 12:50:29.666
  STEP: Creating hostNetwork=true pod @ 09/21/24 12:50:31.69
  STEP: Running the test @ 09/21/24 12:50:33.713
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/21/24 12:50:33.713
  I0921 12:50:33.713874 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6605 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:50:33.713893 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:50:33.714407 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:50:33.714447 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6605/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0921 12:50:33.758011 19 exec_util.go:111] Exec stderr: ""
  I0921 12:50:33.758065 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6605 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:50:33.758075 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:50:33.758639 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:50:33.758703 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6605/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0921 12:50:33.791319 19 exec_util.go:111] Exec stderr: ""
  I0921 12:50:33.791398 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6605 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:50:33.791407 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:50:33.791890 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:50:33.791937 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6605/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0921 12:50:33.823110 19 exec_util.go:111] Exec stderr: ""
  I0921 12:50:33.823166 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6605 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:50:33.823176 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:50:33.823671 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:50:33.823716 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6605/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0921 12:50:33.855329 19 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/21/24 12:50:33.855
  I0921 12:50:33.855441 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6605 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:50:33.855451 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:50:33.855926 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:50:33.855976 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6605/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0921 12:50:33.883283 19 exec_util.go:111] Exec stderr: ""
  I0921 12:50:33.883358 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6605 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:50:33.883368 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:50:33.883828 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:50:33.883873 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6605/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0921 12:50:33.918158 19 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/21/24 12:50:33.918
  I0921 12:50:33.918259 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6605 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:50:33.918269 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:50:33.918798 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:50:33.918859 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6605/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0921 12:50:33.963268 19 exec_util.go:111] Exec stderr: ""
  I0921 12:50:33.963328 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6605 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:50:33.963380 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:50:33.963851 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:50:33.963902 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6605/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0921 12:50:33.997954 19 exec_util.go:111] Exec stderr: ""
  I0921 12:50:33.998000 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6605 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:50:33.998007 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:50:33.998527 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:50:33.998593 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6605/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0921 12:50:34.046189 19 exec_util.go:111] Exec stderr: ""
  I0921 12:50:34.046251 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6605 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:50:34.046261 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:50:34.046881 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:50:34.046929 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6605/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0921 12:50:34.083444 19 exec_util.go:111] Exec stderr: ""
  I0921 12:50:34.083627 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6605" for this suite. @ 09/21/24 12:50:34.088
• [4.451 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 09/21/24 12:50:34.097
  I0921 12:50:34.097723 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/21/24 12:50:34.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:50:34.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:50:34.119
  STEP: getting /apis @ 09/21/24 12:50:34.128
  STEP: getting /apis/admissionregistration.k8s.io @ 09/21/24 12:50:34.131
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/21/24 12:50:34.132
  STEP: creating @ 09/21/24 12:50:34.133
  STEP: getting @ 09/21/24 12:50:34.148
  STEP: listing @ 09/21/24 12:50:34.153
  STEP: watching @ 09/21/24 12:50:34.156
  I0921 12:50:34.156663 19 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 09/21/24 12:50:34.157
  STEP: updating @ 09/21/24 12:50:34.163
  I0921 12:50:34.172717 19 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 09/21/24 12:50:34.172
  STEP: deleting a collection @ 09/21/24 12:50:34.188
  I0921 12:50:34.213377 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4886" for this suite. @ 09/21/24 12:50:34.218
• [0.131 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 09/21/24 12:50:34.228
  I0921 12:50:34.228653 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename dns @ 09/21/24 12:50:34.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:50:34.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:50:34.248
  STEP: Creating a test headless service @ 09/21/24 12:50:34.251
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9497.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9497.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9497.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 158.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.158_udp@PTR;check="$$(dig +tcp +noall +answer +search 158.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.158_tcp@PTR;sleep 1; done
   @ 09/21/24 12:50:34.273
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9497.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9497.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9497.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 158.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.158_udp@PTR;check="$$(dig +tcp +noall +answer +search 158.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.158_tcp@PTR;sleep 1; done
   @ 09/21/24 12:50:34.273
  STEP: creating a pod to probe DNS @ 09/21/24 12:50:34.273
  STEP: submitting the pod to kubernetes @ 09/21/24 12:50:34.273
  STEP: retrieving the pod @ 09/21/24 12:50:36.297
  STEP: looking for the results for each expected name from probers @ 09/21/24 12:50:36.303
  I0921 12:50:36.309143 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-9497.svc.cluster.local from pod dns-9497/dns-test-a83edbee-2e57-409b-9124-6b515f95167c: the server could not find the requested resource (get pods dns-test-a83edbee-2e57-409b-9124-6b515f95167c)
  I0921 12:50:36.314035 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-9497.svc.cluster.local from pod dns-9497/dns-test-a83edbee-2e57-409b-9124-6b515f95167c: the server could not find the requested resource (get pods dns-test-a83edbee-2e57-409b-9124-6b515f95167c)
  I0921 12:50:36.319535 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9497.svc.cluster.local from pod dns-9497/dns-test-a83edbee-2e57-409b-9124-6b515f95167c: the server could not find the requested resource (get pods dns-test-a83edbee-2e57-409b-9124-6b515f95167c)
  I0921 12:50:36.325766 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9497.svc.cluster.local from pod dns-9497/dns-test-a83edbee-2e57-409b-9124-6b515f95167c: the server could not find the requested resource (get pods dns-test-a83edbee-2e57-409b-9124-6b515f95167c)
  I0921 12:50:36.350723 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-9497.svc.cluster.local from pod dns-9497/dns-test-a83edbee-2e57-409b-9124-6b515f95167c: the server could not find the requested resource (get pods dns-test-a83edbee-2e57-409b-9124-6b515f95167c)
  I0921 12:50:36.355112 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-9497.svc.cluster.local from pod dns-9497/dns-test-a83edbee-2e57-409b-9124-6b515f95167c: the server could not find the requested resource (get pods dns-test-a83edbee-2e57-409b-9124-6b515f95167c)
  I0921 12:50:36.360153 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9497.svc.cluster.local from pod dns-9497/dns-test-a83edbee-2e57-409b-9124-6b515f95167c: the server could not find the requested resource (get pods dns-test-a83edbee-2e57-409b-9124-6b515f95167c)
  I0921 12:50:36.365245 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9497.svc.cluster.local from pod dns-9497/dns-test-a83edbee-2e57-409b-9124-6b515f95167c: the server could not find the requested resource (get pods dns-test-a83edbee-2e57-409b-9124-6b515f95167c)
  I0921 12:50:36.385306 19 dns_common.go:489] Lookups using dns-9497/dns-test-a83edbee-2e57-409b-9124-6b515f95167c failed for: [wheezy_udp@dns-test-service.dns-9497.svc.cluster.local wheezy_tcp@dns-test-service.dns-9497.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9497.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9497.svc.cluster.local jessie_udp@dns-test-service.dns-9497.svc.cluster.local jessie_tcp@dns-test-service.dns-9497.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9497.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9497.svc.cluster.local]

  I0921 12:50:36.403911 19 dns_common.go:495] Pod client logs for webserver: 
  I0921 12:50:36.411832 19 dns_common.go:495] Pod client logs for querier: 
  I0921 12:50:36.419719 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0921 12:50:41.386759 19 dns_common.go:527] DNS probes using dns-9497/dns-test-a83edbee-2e57-409b-9124-6b515f95167c succeeded

  STEP: deleting the pod @ 09/21/24 12:50:41.386
  STEP: deleting the test service @ 09/21/24 12:50:41.416
  STEP: deleting the test headless service @ 09/21/24 12:50:41.445
  I0921 12:50:41.459652 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9497" for this suite. @ 09/21/24 12:50:41.464
• [7.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 09/21/24 12:50:41.474
  I0921 12:50:41.474070 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir @ 09/21/24 12:50:41.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:50:41.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:50:41.493
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/21/24 12:50:41.496
  STEP: Saw pod success @ 09/21/24 12:50:45.523
  I0921 12:50:45.529309 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-9cf57766-effc-4d29-862a-8b68cf6cf0e6 container test-container: <nil>
  STEP: delete the pod @ 09/21/24 12:50:45.536
  I0921 12:50:45.557636 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3663" for this suite. @ 09/21/24 12:50:45.561
• [4.097 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 09/21/24 12:50:45.571
  I0921 12:50:45.571279 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename configmap @ 09/21/24 12:50:45.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:50:45.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:50:45.592
  STEP: Creating configMap with name configmap-test-volume-8dc84c85-27db-40ff-afbc-9642436863e8 @ 09/21/24 12:50:45.594
  STEP: Creating a pod to test consume configMaps @ 09/21/24 12:50:45.599
  STEP: Saw pod success @ 09/21/24 12:50:49.628
  I0921 12:50:49.632356 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-configmaps-f0567d50-223f-4a90-9a75-a4877be4b602 container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 12:50:49.641
  I0921 12:50:49.662654 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2270" for this suite. @ 09/21/24 12:50:49.667
• [4.104 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/21/24 12:50:49.675
  I0921 12:50:49.675489 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:50:49.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:50:49.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:50:49.694
  STEP: Creating secret with name projected-secret-test-d56426a8-3eca-44c2-8fa7-373b8c506d29 @ 09/21/24 12:50:49.697
  STEP: Creating a pod to test consume secrets @ 09/21/24 12:50:49.704
  STEP: Saw pod success @ 09/21/24 12:50:53.735
  I0921 12:50:53.740423 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-projected-secrets-7bdc2bbf-e185-4219-a495-ead3f9d796cf container secret-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 12:50:53.748
  I0921 12:50:53.767014 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7" for this suite. @ 09/21/24 12:50:53.772
• [4.107 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/21/24 12:50:53.782
  I0921 12:50:53.782368 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename field-validation @ 09/21/24 12:50:53.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:50:53.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:50:53.802
  I0921 12:50:53.804646 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  W0921 12:50:56.343608      19 warnings.go:70] unknown field "alpha"
  W0921 12:50:56.343629      19 warnings.go:70] unknown field "beta"
  W0921 12:50:56.343633      19 warnings.go:70] unknown field "delta"
  W0921 12:50:56.343636      19 warnings.go:70] unknown field "epsilon"
  W0921 12:50:56.343640      19 warnings.go:70] unknown field "gamma"
  I0921 12:50:56.895626 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6332" for this suite. @ 09/21/24 12:50:56.899
• [3.126 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 09/21/24 12:50:56.907
  I0921 12:50:56.907900 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:50:56.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:50:56.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:50:56.932
  STEP: Creating configMap with name projected-configmap-test-volume-1a39267b-1d12-4e1d-8c34-f088d270aa69 @ 09/21/24 12:50:56.934
  STEP: Creating a pod to test consume configMaps @ 09/21/24 12:50:56.94
  STEP: Saw pod success @ 09/21/24 12:51:00.967
  I0921 12:51:00.971901 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-projected-configmaps-1edb6da2-e7b6-413f-926b-70320f84859d container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 12:51:00.981
  I0921 12:51:01.004294 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6919" for this suite. @ 09/21/24 12:51:01.009
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/21/24 12:51:01.022
  I0921 12:51:01.022576 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename secrets @ 09/21/24 12:51:01.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:51:01.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:51:01.044
  STEP: Creating secret with name s-test-opt-del-3f65ad78-964a-4105-a1af-17d1af398061 @ 09/21/24 12:51:01.051
  STEP: Creating secret with name s-test-opt-upd-5f8f35e3-bfec-4c7e-9d0a-3eb6416d32f8 @ 09/21/24 12:51:01.057
  STEP: Creating the pod @ 09/21/24 12:51:01.061
  STEP: Deleting secret s-test-opt-del-3f65ad78-964a-4105-a1af-17d1af398061 @ 09/21/24 12:51:03.116
  STEP: Updating secret s-test-opt-upd-5f8f35e3-bfec-4c7e-9d0a-3eb6416d32f8 @ 09/21/24 12:51:03.124
  STEP: Creating secret with name s-test-opt-create-3a16a3f0-686e-426a-a90a-96cedc01671b @ 09/21/24 12:51:03.13
  STEP: waiting to observe update in volume @ 09/21/24 12:51:03.134
  I0921 12:52:29.621149 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4913" for this suite. @ 09/21/24 12:52:29.626
• [88.614 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 09/21/24 12:52:29.636
  I0921 12:52:29.636211 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename gc @ 09/21/24 12:52:29.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:52:29.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:52:29.656
  STEP: create the deployment @ 09/21/24 12:52:29.658
  W0921 12:52:29.666033      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/21/24 12:52:29.666
  STEP: delete the deployment @ 09/21/24 12:52:30.171
  STEP: wait for all rs to be garbage collected @ 09/21/24 12:52:30.18
  STEP: expected 0 rs, got 1 rs @ 09/21/24 12:52:30.185
  STEP: expected 0 pods, got 2 pods @ 09/21/24 12:52:30.189
  STEP: Gathering metrics @ 09/21/24 12:52:30.695
  W0921 12:52:30.700973      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0921 12:52:30.701005 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0921 12:52:30.701141 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9358" for this suite. @ 09/21/24 12:52:30.706
• [1.080 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/21/24 12:52:30.716
  I0921 12:52:30.716596 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename subpath @ 09/21/24 12:52:30.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:52:30.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:52:30.736
  STEP: Setting up data @ 09/21/24 12:52:30.739
  STEP: Creating pod pod-subpath-test-configmap-n2tq @ 09/21/24 12:52:30.752
  STEP: Creating a pod to test atomic-volume-subpath @ 09/21/24 12:52:30.752
  STEP: Saw pod success @ 09/21/24 12:52:54.847
  I0921 12:52:54.852833 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod pod-subpath-test-configmap-n2tq container test-container-subpath-configmap-n2tq: <nil>
  STEP: delete the pod @ 09/21/24 12:52:54.868
  STEP: Deleting pod pod-subpath-test-configmap-n2tq @ 09/21/24 12:52:54.891
  I0921 12:52:54.891391 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-n2tq" in namespace "subpath-4989"
  I0921 12:52:54.896135 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4989" for this suite. @ 09/21/24 12:52:54.901
• [24.193 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/21/24 12:52:54.909
  I0921 12:52:54.909479 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename deployment @ 09/21/24 12:52:54.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:52:54.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:52:54.928
  I0921 12:52:54.941690 19 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0921 12:52:59.946963 19 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/21/24 12:52:59.947
  I0921 12:52:59.947035 19 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0921 12:53:01.953109 19 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0921 12:53:01.963631 19 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0921 12:53:03.973183 19 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0921 12:53:03.983417 19 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0921 12:53:03.994116 19 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0921 12:53:04.004813 19 deployment.go:313] Updating deployment test-rollover-deployment
  I0921 12:53:04.004845 19 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0921 12:53:06.015509 19 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0921 12:53:06.024074 19 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0921 12:53:06.032515 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0921 12:53:06.032573 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 53, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 53, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 53, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 53, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 12:53:08.043967 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0921 12:53:08.044029 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 53, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 53, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 53, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 53, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 12:53:10.042558 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0921 12:53:10.042618 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 53, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 53, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 53, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 53, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 12:53:12.043955 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0921 12:53:12.044014 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 53, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 53, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 53, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 53, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 12:53:14.044017 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0921 12:53:14.044074 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 53, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 53, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 53, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 53, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 12:53:16.041326 19 deployment.go:94] 
  I0921 12:53:16.041403 19 deployment.go:974] Ensure that both old replica sets have no replicas
  I0921 12:53:16.054803 19 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3349",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66273516-9646-47c1-94bd-55d8f6707a1a",
      ResourceVersion: (string) (len=5) "27188",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519981,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519981,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519981,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519981,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0921 12:53:16.059862 19 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3349",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56f3e1d2-fdf2-4191-8a4e-e2284b4b4c14",
      ResourceVersion: (string) (len=5) "27178",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519984,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "66273516-9646-47c1-94bd-55d8f6707a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 36 32 37 33 35  31 36 2d 39 36 34 36 2d  |\"66273516-9646-|
              00000120  34 37 63 31 2d 39 34 62  64 2d 35 35 64 38 66 36  |47c1-94bd-55d8f6|
              00000130  37 30 37 61 31 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |707a1a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0921 12:53:16.060382 19 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0921 12:53:16.060671 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3349",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3a94ba0-cff9-4c62-b1f3-3212ab17710c",
      ResourceVersion: (string) (len=5) "27187",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "66273516-9646-47c1-94bd-55d8f6707a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  36 36 32 37 33 35 31 36  2d 39 36 34 36 2d 34 37  |66273516-9646-47|
              000000c0  63 31 2d 39 34 62 64 2d  35 35 64 38 66 36 37 30  |c1-94bd-55d8f670|
              000000d0  37 61 31 61 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |7a1a\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0921 12:53:16.061468 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3349",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2daff12a-e6c8-4e3a-981e-6439a5d6d994",
      ResourceVersion: (string) (len=5) "27142",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519981,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "66273516-9646-47c1-94bd-55d8f6707a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 36 32 37 33 35  31 36 2d 39 36 34 36 2d  |\"66273516-9646-|
              00000120  34 37 63 31 2d 39 34 62  64 2d 35 35 64 38 66 36  |47c1-94bd-55d8f6|
              00000130  37 30 37 61 31 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |707a1a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0921 12:53:16.068238 19 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-fcspx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-fcspx",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-3349",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "867baf8d-727e-47bd-87f5-3339837a079f",
      ResourceVersion: (string) (len=5) "27156",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519984,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "56f3e1d2-fdf2-4191-8a4e-e2284b4b4c14",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  66 33 65 31 64 32 2d 66  |d\":\"56f3e1d2-f|
              00000090  64 66 32 2d 34 31 39 31  2d 38 61 34 65 2d 65 32  |df2-4191-8a4e-e2|
              000000a0  32 38 34 62 34 62 34 63  31 34 5c 22 7d 22 3a 7b  |284b4b4c14\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519985,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 37  2e 31 30 5c 22 7d 22 3a  |2.168.27.10\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5wlvv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5wlvv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519985,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519985,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519985,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862519984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.95.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.95.123"
        }
      },
      PodIP: (string) (len=13) "192.168.27.10",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.27.10"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862519984,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862519984,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://c17257e2cdfc7235410bd73a661c78bad60537ee1d0da16a4aa704d766ef37c8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5wlvv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 12:53:16.069331 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3349" for this suite. @ 09/21/24 12:53:16.073
• [21.173 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 09/21/24 12:53:16.083
  I0921 12:53:16.083105 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename replication-controller @ 09/21/24 12:53:16.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:53:16.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:53:16.101
  I0921 12:53:16.105195 19 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/21/24 12:53:16.115
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/21/24 12:53:16.121
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/21/24 12:53:17.131
  I0921 12:53:17.142392 19 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/21/24 12:53:17.142
  I0921 12:53:17.149685 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1800" for this suite. @ 09/21/24 12:53:17.154
• [1.079 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 09/21/24 12:53:17.161
  I0921 12:53:17.161982 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename statefulset @ 09/21/24 12:53:17.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:53:17.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:53:17.18
  STEP: Creating service test in namespace statefulset-1441 @ 09/21/24 12:53:17.186
  STEP: Creating a new StatefulSet @ 09/21/24 12:53:17.195
  I0921 12:53:17.210839 19 wait.go:40] Found 0 stateful pods, waiting for 3
  I0921 12:53:27.209387 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0921 12:53:27.209416 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0921 12:53:27.209424 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/21/24 12:53:27.223
  I0921 12:53:27.233950 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 09/21/24 12:53:27.233
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/21/24 12:53:37.244
  STEP: Performing a canary update @ 09/21/24 12:53:37.244
  I0921 12:53:37.254962 19 statefulset.go:2507] Updating stateful set ss2
  I0921 12:53:37.265789 19 wait.go:74] Waiting for Pod statefulset-1441/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/21/24 12:53:47.266
  I0921 12:53:47.310773 19 wait.go:40] Found 2 stateful pods, waiting for 3
  I0921 12:53:57.313548 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0921 12:53:57.313589 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0921 12:53:57.313603 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/21/24 12:53:57.325
  I0921 12:53:57.335871 19 statefulset.go:2507] Updating stateful set ss2
  I0921 12:53:57.345707 19 wait.go:74] Waiting for Pod statefulset-1441/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0921 12:54:07.359912 19 statefulset.go:2507] Updating stateful set ss2
  I0921 12:54:07.371564 19 wait.go:56] Waiting for StatefulSet statefulset-1441/ss2 to complete update
  I0921 12:54:07.371598 19 wait.go:63] Waiting for Pod statefulset-1441/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0921 12:54:17.371761 19 statefulset.go:138] Deleting all statefulset in ns statefulset-1441
  I0921 12:54:17.376604 19 rest.go:150] Scaling statefulset ss2 to 0
  I0921 12:54:27.393516 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0921 12:54:27.399252 19 rest.go:88] Deleting statefulset ss2
  I0921 12:54:27.417266 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1441" for this suite. @ 09/21/24 12:54:27.421
• [70.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/21/24 12:54:27.431
  I0921 12:54:27.431229 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename secrets @ 09/21/24 12:54:27.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:54:27.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:54:27.461
  STEP: Creating secret with name secret-test-map-d7a3b3ea-dac1-4e6f-a01b-2df2789c3a6d @ 09/21/24 12:54:27.464
  STEP: Creating a pod to test consume secrets @ 09/21/24 12:54:27.468
  STEP: Saw pod success @ 09/21/24 12:54:29.492
  I0921 12:54:29.495573 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-secrets-e27ff071-b3f4-41e9-bfa5-d31d675947db container secret-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 12:54:29.508
  I0921 12:54:29.530574 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5538" for this suite. @ 09/21/24 12:54:29.534
• [2.114 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 09/21/24 12:54:29.545
  I0921 12:54:29.545024 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-runtime @ 09/21/24 12:54:29.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:54:29.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:54:29.563
  STEP: create the container @ 09/21/24 12:54:29.567
  W0921 12:54:29.577320      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/21/24 12:54:29.577
  STEP: get the container status @ 09/21/24 12:54:31.592
  STEP: the container should be terminated @ 09/21/24 12:54:31.599
  STEP: the termination message should be set @ 09/21/24 12:54:31.599
  I0921 12:54:31.599137 19 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/21/24 12:54:31.599
  I0921 12:54:31.623522 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3727" for this suite. @ 09/21/24 12:54:31.628
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/21/24 12:54:31.637
  I0921 12:54:31.637766 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/21/24 12:54:31.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:54:31.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:54:31.663
  I0921 12:54:31.666928 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:54:37.902425 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9718" for this suite. @ 09/21/24 12:54:37.907
• [6.279 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 09/21/24 12:54:37.916
  I0921 12:54:37.916936 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 12:54:37.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:54:37.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:54:37.937
  STEP: Setting up server cert @ 09/21/24 12:54:37.96
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 12:54:38.211
  STEP: Deploying the webhook pod @ 09/21/24 12:54:38.221
  STEP: Wait for the deployment to be ready @ 09/21/24 12:54:38.233
  I0921 12:54:38.243334 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/21/24 12:54:40.257
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 12:54:40.271
  I0921 12:54:41.272056 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/21/24 12:54:41.281
  STEP: verifying the validating webhook match conditions @ 09/21/24 12:54:41.292
  STEP: updating the validating webhook match conditions @ 09/21/24 12:54:41.296
  STEP: verifying the validating webhook match conditions @ 09/21/24 12:54:41.305
  I0921 12:54:41.365841 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7207" for this suite. @ 09/21/24 12:54:41.369
  STEP: Destroying namespace "webhook-markers-9334" for this suite. @ 09/21/24 12:54:41.38
• [3.474 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/21/24 12:54:41.39
  I0921 12:54:41.390693 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pod-network-test @ 09/21/24 12:54:41.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:54:41.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:54:41.41
  STEP: Performing setup for networking test in namespace pod-network-test-1231 @ 09/21/24 12:54:41.412
  STEP: creating a selector @ 09/21/24 12:54:41.412
  STEP: Creating the service pods in kubernetes @ 09/21/24 12:54:41.412
  I0921 12:54:41.412975 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/21/24 12:54:53.515
  I0921 12:54:55.562755 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0921 12:54:55.562794 19 utils.go:496] Going to poll 192.168.171.180 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0921 12:54:55.567165 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.171.180:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1231 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:54:55.567188 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:54:55.567682 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:54:55.567725 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1231/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.171.180%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0921 12:54:55.614531 19 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0921 12:54:55.614584 19 utils.go:496] Going to poll 192.168.126.146 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0921 12:54:55.618489 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.126.146:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1231 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:54:55.618512 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:54:55.618953 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:54:55.619000 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1231/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.126.146%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0921 12:54:55.656277 19 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0921 12:54:55.656311 19 utils.go:496] Going to poll 192.168.27.15 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0921 12:54:55.661306 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.27.15:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1231 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:54:55.661330 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:54:55.661795 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:54:55.661839 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1231/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.27.15%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0921 12:54:55.700261 19 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0921 12:54:55.700427 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1231" for this suite. @ 09/21/24 12:54:55.705
• [14.323 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/21/24 12:54:55.714
  I0921 12:54:55.714229 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:54:55.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:54:55.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:54:55.739
  STEP: Creating projection with secret that has name projected-secret-test-map-7d697513-9543-44f2-acbe-bfc2fb57497f @ 09/21/24 12:54:55.742
  STEP: Creating a pod to test consume secrets @ 09/21/24 12:54:55.75
  STEP: Saw pod success @ 09/21/24 12:54:59.777
  I0921 12:54:59.782062 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod pod-projected-secrets-4b242319-b84a-4755-9889-074cc17d1585 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 12:54:59.794
  I0921 12:54:59.820094 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-81" for this suite. @ 09/21/24 12:54:59.825
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 09/21/24 12:54:59.833
  I0921 12:54:59.833497 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 12:54:59.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:54:59.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:54:59.856
  STEP: Setting up server cert @ 09/21/24 12:54:59.879
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 12:55:00.193
  STEP: Deploying the webhook pod @ 09/21/24 12:55:00.201
  STEP: Wait for the deployment to be ready @ 09/21/24 12:55:00.214
  I0921 12:55:00.230618 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 12:55:02.247
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 12:55:02.259
  I0921 12:55:03.261163 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/21/24 12:55:03.27
  STEP: create a configmap that should be updated by the webhook @ 09/21/24 12:55:03.285
  I0921 12:55:03.361156 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2819" for this suite. @ 09/21/24 12:55:03.373
  STEP: Destroying namespace "webhook-markers-2206" for this suite. @ 09/21/24 12:55:03.386
• [3.565 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 09/21/24 12:55:03.398
  I0921 12:55:03.398402 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 12:55:03.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:55:03.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:55:03.426
  STEP: Setting up server cert @ 09/21/24 12:55:03.461
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 12:55:03.83
  STEP: Deploying the webhook pod @ 09/21/24 12:55:03.838
  STEP: Wait for the deployment to be ready @ 09/21/24 12:55:03.859
  I0921 12:55:03.867785 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 12:55:05.882
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 12:55:05.896
  I0921 12:55:06.896653 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/21/24 12:55:06.906
  STEP: create the configmap with a random name @ 09/21/24 12:55:06.924
  STEP: verify the configmap is mutated @ 09/21/24 12:55:06.933
  STEP: create the configmap with 'skip-me' name @ 09/21/24 12:55:06.933
  I0921 12:55:06.997729 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4045" for this suite. @ 09/21/24 12:55:07.004
  STEP: Destroying namespace "webhook-markers-6025" for this suite. @ 09/21/24 12:55:07.014
• [3.624 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/21/24 12:55:07.022
  I0921 12:55:07.022385 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename replicaset @ 09/21/24 12:55:07.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:55:07.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:55:07.04
  I0921 12:55:07.043149 19 replica_set.go:191] Creating ReplicaSet my-hostname-basic-2809079b-fc06-49d3-87e0-ac438d6ff533
  I0921 12:55:07.054137 19 resource.go:87] Pod name my-hostname-basic-2809079b-fc06-49d3-87e0-ac438d6ff533: Found 0 pods out of 1
  I0921 12:55:12.060495 19 resource.go:87] Pod name my-hostname-basic-2809079b-fc06-49d3-87e0-ac438d6ff533: Found 1 pods out of 1
  I0921 12:55:12.060535 19 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-2809079b-fc06-49d3-87e0-ac438d6ff533" is running
  I0921 12:55:12.064464 19 replica_set.go:220] Pod "my-hostname-basic-2809079b-fc06-49d3-87e0-ac438d6ff533-mhdsg" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-21 12:55:08 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-21 12:55:07 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-21 12:55:08 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-21 12:55:08 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-21 12:55:07 +0000 UTC Reason: Message:}])
  I0921 12:55:12.064484 19 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/21/24 12:55:12.064
  I0921 12:55:12.078118 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6481" for this suite. @ 09/21/24 12:55:12.085
• [5.070 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 09/21/24 12:55:12.092
  I0921 12:55:12.092879 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 12:55:12.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:55:12.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:55:12.115
  STEP: Setting up server cert @ 09/21/24 12:55:12.141
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 12:55:12.335
  STEP: Deploying the webhook pod @ 09/21/24 12:55:12.345
  STEP: Wait for the deployment to be ready @ 09/21/24 12:55:12.361
  I0921 12:55:12.368331 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 12:55:14.382
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 12:55:14.395
  I0921 12:55:15.396002 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/21/24 12:55:15.405
  STEP: verifying the mutating webhook match conditions @ 09/21/24 12:55:15.414
  STEP: updating the mutating webhook match conditions @ 09/21/24 12:55:15.418
  STEP: verifying the mutating webhook match conditions @ 09/21/24 12:55:15.427
  I0921 12:55:15.489812 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7263" for this suite. @ 09/21/24 12:55:15.496
  STEP: Destroying namespace "webhook-markers-4724" for this suite. @ 09/21/24 12:55:15.505
• [3.421 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 09/21/24 12:55:15.514
  I0921 12:55:15.514970 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename sched-preemption @ 09/21/24 12:55:15.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:55:15.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:55:15.534
  I0921 12:55:15.554004 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0921 12:56:15.560133 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/21/24 12:56:15.564
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/21/24 12:56:15.572
  I0921 12:56:15.588659 19 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/21/24 12:56:15.588
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/21/24 12:56:17.598
  I0921 12:56:17.605743 19 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/21/24 12:56:17.605
  STEP: Verifying the pod has the pod disruption condition @ 09/21/24 12:56:19.62
  I0921 12:56:19.624983 19 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0921 12:56:20.142362 19 pod_client.go:173] Successfully updated pod "victim-pod"
  I0921 12:56:20.187298 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6054" for this suite. @ 09/21/24 12:56:20.192
• [64.687 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 09/21/24 12:56:20.202
  I0921 12:56:20.202252 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename resourcequota @ 09/21/24 12:56:20.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:56:20.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:56:20.219
  STEP: Counting existing ResourceQuota @ 09/21/24 12:56:37.228
  STEP: Creating a ResourceQuota @ 09/21/24 12:56:42.234
  STEP: Ensuring resource quota status is calculated @ 09/21/24 12:56:42.24
  STEP: Creating a ConfigMap @ 09/21/24 12:56:44.246
  STEP: Ensuring resource quota status captures configMap creation @ 09/21/24 12:56:44.259
  STEP: Deleting a ConfigMap @ 09/21/24 12:56:46.267
  STEP: Ensuring resource quota status released usage @ 09/21/24 12:56:46.276
  I0921 12:56:48.281459 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9362" for this suite. @ 09/21/24 12:56:48.287
• [28.094 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 09/21/24 12:56:48.296
  I0921 12:56:48.296299 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 12:56:48.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:56:48.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:56:48.317
  STEP: Creating a pod to test downward api env vars @ 09/21/24 12:56:48.319
  STEP: Saw pod success @ 09/21/24 12:56:52.346
  I0921 12:56:52.351703 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downward-api-3b430332-232b-4c1b-9a87-c5c96f7348b3 container dapi-container: <nil>
  STEP: delete the pod @ 09/21/24 12:56:52.37
  I0921 12:56:52.389167 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9079" for this suite. @ 09/21/24 12:56:52.394
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 09/21/24 12:56:52.405
  I0921 12:56:52.405872 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename statefulset @ 09/21/24 12:56:52.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:56:52.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:56:52.428
  STEP: Creating service test in namespace statefulset-1711 @ 09/21/24 12:56:52.43
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/21/24 12:56:52.437
  STEP: Creating stateful set ss in namespace statefulset-1711 @ 09/21/24 12:56:52.442
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1711 @ 09/21/24 12:56:52.448
  I0921 12:56:52.454249 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0921 12:57:02.457600 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/21/24 12:57:02.457
  I0921 12:57:02.462683 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-1711 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0921 12:57:02.582489 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0921 12:57:02.582530 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0921 12:57:02.582540 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0921 12:57:02.588443 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0921 12:57:12.589180 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0921 12:57:12.589221 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0921 12:57:12.607507 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999871s
  I0921 12:57:13.613579 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.996342372s
  I0921 12:57:14.620652 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.989608008s
  I0921 12:57:15.626592 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.982483824s
  I0921 12:57:16.633433 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.977162486s
  I0921 12:57:17.639136 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.970010945s
  I0921 12:57:18.645096 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.964683842s
  I0921 12:57:19.651396 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.958044158s
  I0921 12:57:20.656821 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.952411886s
  I0921 12:57:21.662437 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 946.997618ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1711 @ 09/21/24 12:57:22.662
  I0921 12:57:22.668692 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-1711 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0921 12:57:22.749325 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0921 12:57:22.749379 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0921 12:57:22.749389 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0921 12:57:22.754804 19 wait.go:40] Found 1 stateful pods, waiting for 3
  I0921 12:57:32.756498 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0921 12:57:32.756534 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0921 12:57:32.756541 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/21/24 12:57:32.756
  STEP: Scale down will halt with unhealthy stateful pod @ 09/21/24 12:57:32.756
  I0921 12:57:32.765571 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-1711 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0921 12:57:32.848663 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0921 12:57:32.848703 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0921 12:57:32.848714 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0921 12:57:32.848782 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-1711 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0921 12:57:32.937275 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0921 12:57:32.937325 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0921 12:57:32.937393 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0921 12:57:32.937452 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-1711 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0921 12:57:33.026375 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0921 12:57:33.026420 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0921 12:57:33.026431 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0921 12:57:33.026440 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0921 12:57:33.030470 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0921 12:57:43.036559 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0921 12:57:43.036595 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0921 12:57:43.036603 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0921 12:57:43.050494 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999762s
  I0921 12:57:44.056465 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.995786749s
  I0921 12:57:45.061302 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.989832297s
  I0921 12:57:46.066919 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.984989297s
  I0921 12:57:47.072274 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.979384714s
  I0921 12:57:48.078192 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.973979428s
  I0921 12:57:49.085576 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.967273783s
  I0921 12:57:50.091148 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.959973636s
  I0921 12:57:51.097255 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.954970849s
  I0921 12:57:52.103583 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 948.957304ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1711 @ 09/21/24 12:57:53.104
  I0921 12:57:53.111086 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-1711 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0921 12:57:53.193631 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0921 12:57:53.193682 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0921 12:57:53.193713 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0921 12:57:53.193765 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-1711 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0921 12:57:53.274494 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0921 12:57:53.274536 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0921 12:57:53.274551 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0921 12:57:53.274599 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-1711 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0921 12:57:53.357110 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0921 12:57:53.357149 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0921 12:57:53.357160 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0921 12:57:53.357170 19 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/21/24 12:58:03.368
  I0921 12:58:03.368107 19 statefulset.go:138] Deleting all statefulset in ns statefulset-1711
  I0921 12:58:03.371686 19 rest.go:150] Scaling statefulset ss to 0
  I0921 12:58:03.380028 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0921 12:58:03.384269 19 rest.go:88] Deleting statefulset ss
  I0921 12:58:03.401320 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1711" for this suite. @ 09/21/24 12:58:03.407
• [71.010 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 09/21/24 12:58:03.415
  I0921 12:58:03.415818 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 12:58:03.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:58:03.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:58:03.439
  STEP: Creating configMap with name projected-configmap-test-volume-2bbcb86f-2d53-4ac6-9d42-6288a06df1d3 @ 09/21/24 12:58:03.444
  STEP: Creating a pod to test consume configMaps @ 09/21/24 12:58:03.45
  STEP: Saw pod success @ 09/21/24 12:58:07.479
  I0921 12:58:07.483893 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-projected-configmaps-edac2fbf-f2ae-4e72-85df-275126454268 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 12:58:07.491
  I0921 12:58:07.510006 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3242" for this suite. @ 09/21/24 12:58:07.514
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/21/24 12:58:07.524
  I0921 12:58:07.524151 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename init-container @ 09/21/24 12:58:07.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:58:07.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:58:07.542
  STEP: creating the pod @ 09/21/24 12:58:07.544
  I0921 12:58:07.544662 19 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0921 12:58:10.647558 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9271" for this suite. @ 09/21/24 12:58:10.653
• [3.136 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/21/24 12:58:10.66
  I0921 12:58:10.660600 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/21/24 12:58:10.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:58:10.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:58:10.683
  I0921 12:58:10.685873 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:58:11.231588 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5120" for this suite. @ 09/21/24 12:58:11.237
• [0.587 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 09/21/24 12:58:11.247
  I0921 12:58:11.248003 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 12:58:11.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:58:11.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:58:11.268
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-732 @ 09/21/24 12:58:11.27
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/21/24 12:58:11.282
  STEP: creating service externalsvc in namespace services-732 @ 09/21/24 12:58:11.282
  STEP: creating replication controller externalsvc in namespace services-732 @ 09/21/24 12:58:11.298
  I0921 12:58:11.305495      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-732, replica count: 2
  I0921 12:58:14.356711      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/21/24 12:58:14.362
  I0921 12:58:14.381566 19 resource.go:361] Creating new exec pod
  I0921 12:58:16.400886 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-732 exec execpodk72ng -- /bin/sh -x -c nslookup clusterip-service.services-732.svc.cluster.local'
  I0921 12:58:16.504640 19 builder.go:146] stderr: "+ nslookup clusterip-service.services-732.svc.cluster.local\n"
  I0921 12:58:16.504684 19 builder.go:147] stdout: "Server:\t\t10.152.183.37\nAddress:\t10.152.183.37#53\n\nclusterip-service.services-732.svc.cluster.local\tcanonical name = externalsvc.services-732.svc.cluster.local.\nName:\texternalsvc.services-732.svc.cluster.local\nAddress: 10.152.183.87\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-732, will wait for the garbage collector to delete the pods @ 09/21/24 12:58:16.504
  I0921 12:58:16.570535 19 resources.go:139] Deleting ReplicationController externalsvc took: 10.78494ms
  I0921 12:58:16.671517 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.968692ms
  I0921 12:58:19.794002 19 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0921 12:58:19.808496 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-732" for this suite. @ 09/21/24 12:58:19.815
• [8.578 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/21/24 12:58:19.826
  I0921 12:58:19.826218 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename init-container @ 09/21/24 12:58:19.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:58:19.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:58:19.845
  STEP: creating the pod @ 09/21/24 12:58:19.848
  I0921 12:58:19.848738 19 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0921 12:58:24.830547 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3801" for this suite. @ 09/21/24 12:58:24.835
• [5.017 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 09/21/24 12:58:24.843
  I0921 12:58:24.843365 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename secrets @ 09/21/24 12:58:24.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:58:24.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:58:24.865
  STEP: creating a secret @ 09/21/24 12:58:24.867
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/21/24 12:58:24.874
  STEP: patching the secret @ 09/21/24 12:58:24.879
  STEP: deleting the secret using a LabelSelector @ 09/21/24 12:58:24.891
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/21/24 12:58:24.9
  I0921 12:58:24.905235 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8682" for this suite. @ 09/21/24 12:58:24.91
• [0.075 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/21/24 12:58:24.918
  I0921 12:58:24.918823 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/21/24 12:58:24.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:58:24.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:58:24.944
  I0921 12:58:24.951212 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-936" for this suite. @ 09/21/24 12:58:24.955
• [0.044 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/21/24 12:58:24.963
  I0921 12:58:24.963200 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pods @ 09/21/24 12:58:24.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:58:24.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:58:24.982
  I0921 12:58:24.985077 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: creating the pod @ 09/21/24 12:58:24.985
  STEP: submitting the pod to kubernetes @ 09/21/24 12:58:24.985
  I0921 12:58:27.020275 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2702" for this suite. @ 09/21/24 12:58:27.025
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 09/21/24 12:58:27.034
  I0921 12:58:27.034464 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename containers @ 09/21/24 12:58:27.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:58:27.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:58:27.055
  STEP: Creating a pod to test override all @ 09/21/24 12:58:27.057
  STEP: Saw pod success @ 09/21/24 12:58:29.082
  I0921 12:58:29.086970 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod client-containers-f4e13b8f-0f44-446c-8a89-0cdcc03ef04e container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 12:58:29.095
  I0921 12:58:29.118749 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2719" for this suite. @ 09/21/24 12:58:29.123
• [2.097 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 09/21/24 12:58:29.132
  I0921 12:58:29.132205 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename configmap @ 09/21/24 12:58:29.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:58:29.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:58:29.156
  STEP: Creating configMap with name configmap-test-volume-8f2a34f5-3a1e-4de8-b86d-e62f681b4d0c @ 09/21/24 12:58:29.158
  STEP: Creating a pod to test consume configMaps @ 09/21/24 12:58:29.164
  STEP: Saw pod success @ 09/21/24 12:58:33.193
  I0921 12:58:33.197851 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-configmaps-2daffbc4-eec1-49d8-a55b-9ad605a51374 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 12:58:33.207
  I0921 12:58:33.229176 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1495" for this suite. @ 09/21/24 12:58:33.233
• [4.109 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/21/24 12:58:33.241
  I0921 12:58:33.241293 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pod-network-test @ 09/21/24 12:58:33.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:58:33.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:58:33.261
  STEP: Performing setup for networking test in namespace pod-network-test-6587 @ 09/21/24 12:58:33.263
  STEP: creating a selector @ 09/21/24 12:58:33.263
  STEP: Creating the service pods in kubernetes @ 09/21/24 12:58:33.263
  I0921 12:58:33.263535 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/21/24 12:58:55.387
  I0921 12:58:57.427313 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0921 12:58:57.427368 19 utils.go:496] Going to poll 192.168.171.187 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0921 12:58:57.432522 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.171.187 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6587 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:58:57.432550 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:58:57.433008 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:58:57.433054 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6587/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.171.187+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0921 12:58:58.473578 19 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0921 12:58:58.473618 19 utils.go:496] Going to poll 192.168.126.170 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0921 12:58:58.477772 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.126.170 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6587 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:58:58.477790 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:58:58.478219 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:58:58.478269 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6587/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.126.170+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0921 12:58:59.516962 19 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0921 12:58:59.517010 19 utils.go:496] Going to poll 192.168.27.40 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0921 12:58:59.522315 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.27.40 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6587 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 12:58:59.522361 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 12:58:59.522787 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 12:58:59.522834 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6587/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.27.40+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0921 12:59:00.561916 19 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0921 12:59:00.562048 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6587" for this suite. @ 09/21/24 12:59:00.567
• [27.335 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 09/21/24 12:59:00.576
  I0921 12:59:00.576960 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename security-context-test @ 09/21/24 12:59:00.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:59:00.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:59:00.597
  I0921 12:59:04.650136 19 security_context.go:538] Got logs for pod "busybox-privileged-false-8dc14073-a9da-4197-bf3a-ab2af516405f": "ip: RTNETLINK answers: Operation not permitted\n"
  I0921 12:59:04.650265 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8957" for this suite. @ 09/21/24 12:59:04.654
• [4.086 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/21/24 12:59:04.662
  I0921 12:59:04.662800 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pods @ 09/21/24 12:59:04.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:59:04.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:59:04.685
  STEP: creating the pod @ 09/21/24 12:59:04.688
  STEP: setting up watch @ 09/21/24 12:59:04.688
  STEP: submitting the pod to kubernetes @ 09/21/24 12:59:04.793
  STEP: verifying the pod is in kubernetes @ 09/21/24 12:59:04.807
  STEP: verifying pod creation was observed @ 09/21/24 12:59:04.812
  STEP: deleting the pod gracefully @ 09/21/24 12:59:06.83
  STEP: verifying pod deletion was observed @ 09/21/24 12:59:06.84
  I0921 12:59:07.807749 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8472" for this suite. @ 09/21/24 12:59:07.812
• [3.160 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/21/24 12:59:07.822
  I0921 12:59:07.822931 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename daemonsets @ 09/21/24 12:59:07.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:59:07.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:59:07.84
  I0921 12:59:07.868403 19 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/21/24 12:59:07.875
  I0921 12:59:07.881252 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 12:59:07.881277 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/21/24 12:59:07.881
  I0921 12:59:07.902708 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 12:59:07.902742 19 fixtures.go:130] Node ip-172-31-69-84 is running 0 daemon pod, expected 1
  I0921 12:59:08.905719 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 12:59:08.905761 19 fixtures.go:130] Node ip-172-31-69-84 is running 0 daemon pod, expected 1
  I0921 12:59:09.903190 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0921 12:59:09.903226 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/21/24 12:59:09.908
  I0921 12:59:09.926673 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0921 12:59:09.926707 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I0921 12:59:10.928259 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 12:59:10.928291 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/21/24 12:59:10.928
  I0921 12:59:10.943959 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 12:59:10.943988 19 fixtures.go:130] Node ip-172-31-69-84 is running 0 daemon pod, expected 1
  I0921 12:59:11.942903 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 12:59:11.942939 19 fixtures.go:130] Node ip-172-31-69-84 is running 0 daemon pod, expected 1
  I0921 12:59:12.941599 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0921 12:59:12.941636 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/21/24 12:59:12.948
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9252, will wait for the garbage collector to delete the pods @ 09/21/24 12:59:12.948
  I0921 12:59:13.014513 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 11.649572ms
  I0921 12:59:13.115790 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.270911ms
  I0921 12:59:14.222045 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 12:59:14.222084 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0921 12:59:14.226677 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30048"},"items":null}

  I0921 12:59:14.230657 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30048"},"items":null}

  I0921 12:59:14.256133 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9252" for this suite. @ 09/21/24 12:59:14.262
• [6.450 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 09/21/24 12:59:14.272
  I0921 12:59:14.272985 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename containers @ 09/21/24 12:59:14.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:59:14.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:59:14.292
  STEP: Creating a pod to test override arguments @ 09/21/24 12:59:14.295
  STEP: Saw pod success @ 09/21/24 12:59:18.323
  I0921 12:59:18.328694 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod client-containers-cc94be7d-3e87-4460-a35c-a0a053d2841f container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 12:59:18.336
  I0921 12:59:18.354805 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8518" for this suite. @ 09/21/24 12:59:18.358
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 09/21/24 12:59:18.366
  I0921 12:59:18.366873 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 12:59:18.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:59:18.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:59:18.39
  STEP: Creating a pod to test downward api env vars @ 09/21/24 12:59:18.392
  STEP: Saw pod success @ 09/21/24 12:59:22.423
  I0921 12:59:22.428122 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downward-api-17afc691-531b-4368-bdca-863184d0a468 container dapi-container: <nil>
  STEP: delete the pod @ 09/21/24 12:59:22.437
  I0921 12:59:22.460042 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7992" for this suite. @ 09/21/24 12:59:22.465
• [4.107 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/21/24 12:59:22.473
  I0921 12:59:22.473571 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename secrets @ 09/21/24 12:59:22.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:59:22.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:59:22.495
  STEP: Creating secret with name secret-test-map-a7bd96a9-02b2-4aa9-b20d-6b0e3e141a4c @ 09/21/24 12:59:22.5
  STEP: Creating a pod to test consume secrets @ 09/21/24 12:59:22.507
  STEP: Saw pod success @ 09/21/24 12:59:26.535
  I0921 12:59:26.540552 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-secrets-e578b158-0486-453f-8660-ee76e5917c85 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 12:59:26.55
  I0921 12:59:26.572751 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6869" for this suite. @ 09/21/24 12:59:26.577
• [4.114 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/21/24 12:59:26.587
  I0921 12:59:26.587513 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename subpath @ 09/21/24 12:59:26.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:59:26.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:59:26.618
  STEP: Setting up data @ 09/21/24 12:59:26.623
  STEP: Creating pod pod-subpath-test-projected-hlkf @ 09/21/24 12:59:26.639
  STEP: Creating a pod to test atomic-volume-subpath @ 09/21/24 12:59:26.639
  STEP: Saw pod success @ 09/21/24 12:59:50.737
  I0921 12:59:50.741256 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-subpath-test-projected-hlkf container test-container-subpath-projected-hlkf: <nil>
  STEP: delete the pod @ 09/21/24 12:59:50.76
  STEP: Deleting pod pod-subpath-test-projected-hlkf @ 09/21/24 12:59:50.781
  I0921 12:59:50.781802 19 delete.go:62] Deleting pod "pod-subpath-test-projected-hlkf" in namespace "subpath-1187"
  I0921 12:59:50.786336 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1187" for this suite. @ 09/21/24 12:59:50.79
• [24.211 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 09/21/24 12:59:50.798
  I0921 12:59:50.798402 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 12:59:50.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:59:50.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:59:50.818
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 12:59:50.821
  STEP: Saw pod success @ 09/21/24 12:59:54.849
  I0921 12:59:54.855062 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downwardapi-volume-561f6c37-7772-4690-8f23-07c3a9d8bed1 container client-container: <nil>
  STEP: delete the pod @ 09/21/24 12:59:54.863
  I0921 12:59:54.882382 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6507" for this suite. @ 09/21/24 12:59:54.887
• [4.099 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 09/21/24 12:59:54.897
  I0921 12:59:54.897655 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename aggregator @ 09/21/24 12:59:54.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 12:59:54.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 12:59:54.921
  I0921 12:59:54.923449 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Registering the sample API server. @ 09/21/24 12:59:54.923
  I0921 12:59:55.376795 19 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0921 12:59:55.412184 19 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0921 12:59:57.473020 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 12:59:59.478850 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 13:00:01.479830 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 13:00:03.479025 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 13:00:05.479282 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 13:00:07.478664 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 13:00:09.479272 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 13:00:11.480450 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 13:00:13.479208 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 13:00:15.480042 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 13:00:17.479311 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 21, 12, 59, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0921 13:00:19.602112 19 aggregator.go:755] Waited 115.304674ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/21/24 13:00:19.638
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/21/24 13:00:19.644
  STEP: List APIServices @ 09/21/24 13:00:19.651
  I0921 13:00:19.657116 19 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/21/24 13:00:19.657
  I0921 13:00:19.671372 19 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/21/24 13:00:19.671
  I0921 13:00:19.683756 19 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.September, 21, 13, 0, 19, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/21/24 13:00:19.683
  I0921 13:00:19.687289 19 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-09-21 13:00:19 +0000 UTC Passed all checks passed}
  I0921 13:00:19.687310 19 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0921 13:00:19.687320 19 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/21/24 13:00:19.687
  I0921 13:00:19.699675 19 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1107587881" @ 09/21/24 13:00:19.699
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/21/24 13:00:19.708
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/21/24 13:00:19.714
  STEP: Patch APIService Status @ 09/21/24 13:00:19.718
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/21/24 13:00:19.727
  I0921 13:00:19.732148 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-09-21 13:00:19 +0000 UTC Passed all checks passed}
  I0921 13:00:19.732173 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0921 13:00:19.732186 19 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0921 13:00:19.732198 19 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/21/24 13:00:19.732
  STEP: Confirm that the generated APIService has been deleted @ 09/21/24 13:00:19.744
  I0921 13:00:19.744076 19 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0921 13:00:19.748206 19 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0921 13:00:19.748233 19 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0921 13:00:19.873217 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-67" for this suite. @ 09/21/24 13:00:19.877
• [24.989 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/21/24 13:00:19.886
  I0921 13:00:19.886973 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename podtemplate @ 09/21/24 13:00:19.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:00:19.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:00:19.907
  STEP: Create set of pod templates @ 09/21/24 13:00:19.91
  I0921 13:00:19.916759 19 podtemplates.go:143] created test-podtemplate-1
  I0921 13:00:19.922320 19 podtemplates.go:143] created test-podtemplate-2
  I0921 13:00:19.928957 19 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/21/24 13:00:19.928
  STEP: delete collection of pod templates @ 09/21/24 13:00:19.933
  I0921 13:00:19.933306 19 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/21/24 13:00:19.957
  I0921 13:00:19.957129 19 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0921 13:00:19.960499 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2817" for this suite. @ 09/21/24 13:00:19.964
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 09/21/24 13:00:19.972
  I0921 13:00:19.972506 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename resourcequota @ 09/21/24 13:00:19.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:00:19.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:00:19.992
  STEP: Creating a ResourceQuota with terminating scope @ 09/21/24 13:00:19.994
  STEP: Ensuring ResourceQuota status is calculated @ 09/21/24 13:00:19.999
  STEP: Creating a ResourceQuota with not terminating scope @ 09/21/24 13:00:22.005
  STEP: Ensuring ResourceQuota status is calculated @ 09/21/24 13:00:22.012
  STEP: Creating a long running pod @ 09/21/24 13:00:24.017
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/21/24 13:00:24.036
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/21/24 13:00:26.041
  STEP: Deleting the pod @ 09/21/24 13:00:28.046
  STEP: Ensuring resource quota status released the pod usage @ 09/21/24 13:00:28.067
  STEP: Creating a terminating pod @ 09/21/24 13:00:30.073
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/21/24 13:00:30.085
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/21/24 13:00:32.092
  STEP: Deleting the pod @ 09/21/24 13:00:34.097
  STEP: Ensuring resource quota status released the pod usage @ 09/21/24 13:00:34.118
  I0921 13:00:36.124709 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3020" for this suite. @ 09/21/24 13:00:36.129
• [16.166 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/21/24 13:00:36.138
  I0921 13:00:36.138571 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pv @ 09/21/24 13:00:36.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:00:36.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:00:36.16
  STEP: Creating initial PV and PVC @ 09/21/24 13:00:36.162
  I0921 13:00:36.162832 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3013" @ 09/21/24 13:00:36.18
  STEP: Listing PVCs in namespace "pv-3013" @ 09/21/24 13:00:36.189
  STEP: Patching the PV "pv-3013-6mdch" @ 09/21/24 13:00:36.196
  STEP: Patching the PVC "pvc-r2pr8" @ 09/21/24 13:00:36.211
  STEP: Getting PV "pv-3013-6mdch" @ 09/21/24 13:00:36.221
  STEP: Getting PVC "pvc-r2pr8" @ 09/21/24 13:00:36.224
  STEP: Deleting PVC "pvc-r2pr8" @ 09/21/24 13:00:36.228
  STEP: Confirm deletion of PVC "pvc-r2pr8" @ 09/21/24 13:00:36.239
  STEP: Deleting PV "pv-3013-6mdch" @ 09/21/24 13:00:38.249
  STEP: Confirm deletion of PV "pv-3013-6mdch" @ 09/21/24 13:00:38.259
  STEP: Recreating another PV & PVC @ 09/21/24 13:00:40.269
  I0921 13:00:40.269659 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-3013-dn7pf" @ 09/21/24 13:00:40.283
  STEP: Updating the PVC "pvc-8k5lk" @ 09/21/24 13:00:40.316
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-8k5lk=updated" @ 09/21/24 13:00:40.327
  STEP: Deleting PVC "pvc-8k5lk" via DeleteCollection @ 09/21/24 13:00:40.331
  STEP: Confirm deletion of PVC "pvc-8k5lk" @ 09/21/24 13:00:40.342
  STEP: Deleting PV "pv-3013-dn7pf" via DeleteCollection @ 09/21/24 13:00:42.353
  STEP: Confirm deletion of PV "pv-3013-dn7pf" @ 09/21/24 13:00:42.365
  I0921 13:00:44.374417 19 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0921 13:00:44.374450 19 pv.go:205] Deleting PersistentVolumeClaim "pvc-8k5lk"
  I0921 13:00:44.378025 19 pv.go:193] Deleting PersistentVolume "pv-3013-dn7pf"
  I0921 13:00:44.382066 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3013" for this suite. @ 09/21/24 13:00:44.387
• [8.258 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 09/21/24 13:00:44.396
  I0921 13:00:44.396979 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 13:00:44.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:00:44.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:00:44.416
  STEP: Creating configMap with name projected-configmap-test-volume-map-3a9c9fbc-2062-416a-9ee3-96f2302b258f @ 09/21/24 13:00:44.419
  STEP: Creating a pod to test consume configMaps @ 09/21/24 13:00:44.427
  STEP: Saw pod success @ 09/21/24 13:00:48.454
  I0921 13:00:48.459257 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-projected-configmaps-90b2f9d3-ba06-42ce-81cd-1255cb287cfc container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 13:00:48.467
  I0921 13:00:48.491090 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-169" for this suite. @ 09/21/24 13:00:48.496
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 09/21/24 13:00:48.504
  I0921 13:00:48.504549 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir @ 09/21/24 13:00:48.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:00:48.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:00:48.526
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/21/24 13:00:48.529
  STEP: Saw pod success @ 09/21/24 13:00:52.559
  I0921 13:00:52.572554 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-3af61043-ed54-438c-92fa-c8f0f2fb07d5 container test-container: <nil>
  STEP: delete the pod @ 09/21/24 13:00:52.582
  I0921 13:00:52.604874 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-182" for this suite. @ 09/21/24 13:00:52.608
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 09/21/24 13:00:52.617
  I0921 13:00:52.617585 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 13:00:52.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:00:52.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:00:52.638
  STEP: creating service in namespace services-1991 @ 09/21/24 13:00:52.64
  STEP: creating service affinity-nodeport in namespace services-1991 @ 09/21/24 13:00:52.64
  STEP: creating replication controller affinity-nodeport in namespace services-1991 @ 09/21/24 13:00:52.659
  I0921 13:00:52.667687      19 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-1991, replica count: 3
  I0921 13:00:55.718387      19 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0921 13:00:55.734210 19 resource.go:361] Creating new exec pod
  I0921 13:00:58.756489 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1991 exec execpod-affinitytbh87 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0921 13:00:58.838993 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0921 13:00:58.839041 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 13:00:58.839135 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1991 exec execpod-affinitytbh87 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.66 80'
  I0921 13:00:58.920337 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.66 80\nConnection to 10.152.183.66 80 port [tcp/http] succeeded!\n"
  I0921 13:00:58.920398 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 13:00:58.920556 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1991 exec execpod-affinitytbh87 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.95.123 30339'
  I0921 13:00:59.005202 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.95.123 30339\nConnection to 172.31.95.123 30339 port [tcp/*] succeeded!\n"
  I0921 13:00:59.005270 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 13:00:59.005377 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1991 exec execpod-affinitytbh87 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.2.8 30339'
  I0921 13:00:59.085260 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.2.8 30339\nConnection to 172.31.2.8 30339 port [tcp/*] succeeded!\n"
  I0921 13:00:59.085303 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 13:00:59.085601 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1991 exec execpod-affinitytbh87 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.2.8:30339/ ; done'
  I0921 13:00:59.237186 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:30339/\n"
  I0921 13:00:59.237235 19 builder.go:147] stdout: "\naffinity-nodeport-f9pz7\naffinity-nodeport-f9pz7\naffinity-nodeport-f9pz7\naffinity-nodeport-f9pz7\naffinity-nodeport-f9pz7\naffinity-nodeport-f9pz7\naffinity-nodeport-f9pz7\naffinity-nodeport-f9pz7\naffinity-nodeport-f9pz7\naffinity-nodeport-f9pz7\naffinity-nodeport-f9pz7\naffinity-nodeport-f9pz7\naffinity-nodeport-f9pz7\naffinity-nodeport-f9pz7\naffinity-nodeport-f9pz7\naffinity-nodeport-f9pz7"
  I0921 13:00:59.237252 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237260 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237318 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237325 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237333 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237384 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237393 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237399 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237412 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237419 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237425 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237440 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237446 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237453 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237458 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237464 19 service.go:242] Received response from host: affinity-nodeport-f9pz7
  I0921 13:00:59.237535 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1991, will wait for the garbage collector to delete the pods @ 09/21/24 13:00:59.256
  I0921 13:00:59.322630 19 resources.go:139] Deleting ReplicationController affinity-nodeport took: 11.311757ms
  I0921 13:00:59.422801 19 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.16548ms
  I0921 13:01:02.353725 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1991" for this suite. @ 09/21/24 13:01:02.357
• [9.750 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 09/21/24 13:01:02.368
  I0921 13:01:02.368083 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename configmap @ 09/21/24 13:01:02.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:01:02.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:01:02.392
  STEP: Creating configMap with name configmap-test-volume-475b264e-83f4-4f19-9bb5-88f19f2d88e0 @ 09/21/24 13:01:02.394
  STEP: Creating a pod to test consume configMaps @ 09/21/24 13:01:02.402
  STEP: Saw pod success @ 09/21/24 13:01:06.432
  I0921 13:01:06.436140 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-configmaps-9a2a84f2-5043-45b8-87c2-10f2489cf16e container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 13:01:06.445
  I0921 13:01:06.468883 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7610" for this suite. @ 09/21/24 13:01:06.473
• [4.116 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 09/21/24 13:01:06.484
  I0921 13:01:06.484616 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename dns @ 09/21/24 13:01:06.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:01:06.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:01:06.503
  STEP: Creating a test externalName service @ 09/21/24 13:01:06.505
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3488.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3488.svc.cluster.local; sleep 1; done
   @ 09/21/24 13:01:06.512
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3488.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3488.svc.cluster.local; sleep 1; done
   @ 09/21/24 13:01:06.512
  STEP: creating a pod to probe DNS @ 09/21/24 13:01:06.513
  STEP: submitting the pod to kubernetes @ 09/21/24 13:01:06.513
  STEP: retrieving the pod @ 09/21/24 13:01:08.538
  STEP: looking for the results for each expected name from probers @ 09/21/24 13:01:08.543
  I0921 13:01:08.553793 19 dns_common.go:552] DNS probes using dns-test-04a863e6-4630-4f31-b790-78b4df901914 succeeded

  STEP: changing the externalName to bar.example.com @ 09/21/24 13:01:08.554
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3488.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3488.svc.cluster.local; sleep 1; done
   @ 09/21/24 13:01:08.565
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3488.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3488.svc.cluster.local; sleep 1; done
   @ 09/21/24 13:01:08.565
  STEP: creating a second pod to probe DNS @ 09/21/24 13:01:08.565
  STEP: submitting the pod to kubernetes @ 09/21/24 13:01:08.565
  STEP: retrieving the pod @ 09/21/24 13:01:10.585
  STEP: looking for the results for each expected name from probers @ 09/21/24 13:01:10.589
  I0921 13:01:10.596158 19 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-3488.svc.cluster.local from pod  dns-3488/dns-test-386022c6-568e-4c98-afeb-b33ea6ff0e6c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0921 13:01:10.601538 19 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-3488.svc.cluster.local from pod  dns-3488/dns-test-386022c6-568e-4c98-afeb-b33ea6ff0e6c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0921 13:01:10.601563 19 dns_common.go:489] Lookups using dns-3488/dns-test-386022c6-568e-4c98-afeb-b33ea6ff0e6c failed for: [wheezy_udp@dns-test-service-3.dns-3488.svc.cluster.local jessie_udp@dns-test-service-3.dns-3488.svc.cluster.local]

  I0921 13:01:10.612464 19 dns_common.go:495] Pod client logs for webserver: 
  I0921 13:01:10.620255 19 dns_common.go:495] Pod client logs for querier: 
  I0921 13:01:10.629142 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0921 13:01:15.601654 19 dns_common.go:552] DNS probes using dns-test-386022c6-568e-4c98-afeb-b33ea6ff0e6c succeeded

  STEP: changing the service to type=ClusterIP @ 09/21/24 13:01:15.601
  W0921 13:01:15.619855      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3488.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-3488.svc.cluster.local; sleep 1; done
   @ 09/21/24 13:01:15.619
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3488.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3488.svc.cluster.local; sleep 1; done
   @ 09/21/24 13:01:15.619
  STEP: creating a third pod to probe DNS @ 09/21/24 13:01:15.62
  STEP: submitting the pod to kubernetes @ 09/21/24 13:01:15.625
  STEP: retrieving the pod @ 09/21/24 13:01:17.649
  STEP: looking for the results for each expected name from probers @ 09/21/24 13:01:17.653
  I0921 13:01:17.664817 19 dns_common.go:552] DNS probes using dns-test-ce74ae9a-9915-4a22-931b-568d6561244c succeeded

  STEP: deleting the pod @ 09/21/24 13:01:17.664
  STEP: deleting the pod @ 09/21/24 13:01:17.684
  STEP: deleting the pod @ 09/21/24 13:01:17.7
  STEP: deleting the test externalName service @ 09/21/24 13:01:17.721
  I0921 13:01:17.742643 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3488" for this suite. @ 09/21/24 13:01:17.746
• [11.271 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 09/21/24 13:01:17.756
  I0921 13:01:17.756057 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 13:01:17.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:01:17.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:01:17.776
  STEP: Setting up server cert @ 09/21/24 13:01:17.802
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 13:01:18.058
  STEP: Deploying the webhook pod @ 09/21/24 13:01:18.069
  STEP: Wait for the deployment to be ready @ 09/21/24 13:01:18.083
  I0921 13:01:18.101954 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 13:01:20.117
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 13:01:20.131
  I0921 13:01:21.131299 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/21/24 13:01:21.14
  STEP: create a pod @ 09/21/24 13:01:21.154
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/21/24 13:01:23.171
  I0921 13:01:23.171835 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=webhook-9850 attach --namespace=webhook-9850 to-be-attached-pod -i -c=container1'
  I0921 13:01:23.228793 19 builder.go:135] rc: 1
  I0921 13:01:23.290366 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9850" for this suite. @ 09/21/24 13:01:23.296
  STEP: Destroying namespace "webhook-markers-652" for this suite. @ 09/21/24 13:01:23.305
• [5.559 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 09/21/24 13:01:23.315
  I0921 13:01:23.315033 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir @ 09/21/24 13:01:23.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:01:23.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:01:23.336
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/21/24 13:01:23.338
  STEP: Saw pod success @ 09/21/24 13:01:27.368
  I0921 13:01:27.373266 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod pod-7100e068-82d4-49c6-8515-c74e65b08e0d container test-container: <nil>
  STEP: delete the pod @ 09/21/24 13:01:27.382
  I0921 13:01:27.404233 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-315" for this suite. @ 09/21/24 13:01:27.407
• [4.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 09/21/24 13:01:27.415
  I0921 13:01:27.415780 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 13:01:27.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:01:27.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:01:27.44
  STEP: creating service in namespace services-6321 @ 09/21/24 13:01:27.442
  STEP: creating service affinity-nodeport-transition in namespace services-6321 @ 09/21/24 13:01:27.442
  STEP: creating replication controller affinity-nodeport-transition in namespace services-6321 @ 09/21/24 13:01:27.461
  I0921 13:01:27.472893      19 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-6321, replica count: 3
  I0921 13:01:30.524409      19 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0921 13:01:30.538649 19 resource.go:361] Creating new exec pod
  I0921 13:01:33.566145 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-6321 exec execpod-affinityd7v2t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0921 13:01:33.648179 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0921 13:01:33.648222 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 13:01:33.648403 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-6321 exec execpod-affinityd7v2t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.167 80'
  I0921 13:01:33.731021 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.167 80\nConnection to 10.152.183.167 80 port [tcp/http] succeeded!\n"
  I0921 13:01:33.731073 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 13:01:33.731161 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-6321 exec execpod-affinityd7v2t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.95.123 32563'
  I0921 13:01:33.819792 19 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.95.123 32563\n+ echo hostName\nConnection to 172.31.95.123 32563 port [tcp/*] succeeded!\n"
  I0921 13:01:33.819844 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 13:01:33.820017 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-6321 exec execpod-affinityd7v2t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.69.84 32563'
  I0921 13:01:33.908035 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.69.84 32563\nConnection to 172.31.69.84 32563 port [tcp/*] succeeded!\n"
  I0921 13:01:33.908079 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 13:01:33.919469 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-6321 exec execpod-affinityd7v2t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.2.8:32563/ ; done'
  I0921 13:01:34.080014 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n"
  I0921 13:01:34.080076 19 builder.go:147] stdout: "\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-hd9s4\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-hd9s4\naffinity-nodeport-transition-d976l\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-hd9s4\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-d976l\naffinity-nodeport-transition-d976l\naffinity-nodeport-transition-hd9s4\naffinity-nodeport-transition-d976l"
  I0921 13:01:34.080094 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.080103 19 service.go:242] Received response from host: affinity-nodeport-transition-hd9s4
  I0921 13:01:34.080111 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.080117 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.080135 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.080216 19 service.go:242] Received response from host: affinity-nodeport-transition-hd9s4
  I0921 13:01:34.080313 19 service.go:242] Received response from host: affinity-nodeport-transition-d976l
  I0921 13:01:34.080321 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.080328 19 service.go:242] Received response from host: affinity-nodeport-transition-hd9s4
  I0921 13:01:34.080356 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.080362 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.080369 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.080375 19 service.go:242] Received response from host: affinity-nodeport-transition-d976l
  I0921 13:01:34.080386 19 service.go:242] Received response from host: affinity-nodeport-transition-d976l
  I0921 13:01:34.080392 19 service.go:242] Received response from host: affinity-nodeport-transition-hd9s4
  I0921 13:01:34.080398 19 service.go:242] Received response from host: affinity-nodeport-transition-d976l
  I0921 13:01:34.093083 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-6321 exec execpod-affinityd7v2t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.2.8:32563/ ; done'
  I0921 13:01:34.266211 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.2.8:32563/\n"
  I0921 13:01:34.266265 19 builder.go:147] stdout: "\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv\naffinity-nodeport-transition-wbckv"
  I0921 13:01:34.266279 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266287 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266294 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266300 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266306 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266312 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266318 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266324 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266331 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266353 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266361 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266367 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266373 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266379 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266384 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266390 19 service.go:242] Received response from host: affinity-nodeport-transition-wbckv
  I0921 13:01:34.266470 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-6321, will wait for the garbage collector to delete the pods @ 09/21/24 13:01:34.286
  I0921 13:01:34.351505 19 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 10.358641ms
  I0921 13:01:34.452478 19 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.969216ms
  I0921 13:01:37.484426 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6321" for this suite. @ 09/21/24 13:01:37.491
• [10.084 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 09/21/24 13:01:37.499
  I0921 13:01:37.499798 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 13:01:37.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:01:37.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:01:37.523
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 13:01:37.525
  STEP: Saw pod success @ 09/21/24 13:01:41.553
  I0921 13:01:41.557917 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downwardapi-volume-4ffa352a-544d-4d41-ae88-29b1c29caa01 container client-container: <nil>
  STEP: delete the pod @ 09/21/24 13:01:41.566
  I0921 13:01:41.589711 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4143" for this suite. @ 09/21/24 13:01:41.595
• [4.105 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 09/21/24 13:01:41.605
  I0921 13:01:41.605202 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 13:01:41.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:01:41.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:01:41.625
  STEP: Setting up server cert @ 09/21/24 13:01:41.655
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 13:01:42.004
  STEP: Deploying the webhook pod @ 09/21/24 13:01:42.011
  STEP: Wait for the deployment to be ready @ 09/21/24 13:01:42.024
  I0921 13:01:42.034455 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/21/24 13:01:44.048
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 13:01:44.066
  I0921 13:01:45.066649 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0921 13:01:45.077453 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/21/24 13:01:45.586
  STEP: Creating a custom resource that should be denied by the webhook @ 09/21/24 13:01:45.6
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/21/24 13:01:47.616
  STEP: Updating the custom resource with disallowed data should be denied @ 09/21/24 13:01:47.624
  STEP: Deleting the custom resource should be denied @ 09/21/24 13:01:47.633
  STEP: Remove the offending key and value from the custom resource data @ 09/21/24 13:01:47.643
  STEP: Deleting the updated custom resource should be successful @ 09/21/24 13:01:47.654
  I0921 13:01:48.236801 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6962" for this suite. @ 09/21/24 13:01:48.242
  STEP: Destroying namespace "webhook-markers-7222" for this suite. @ 09/21/24 13:01:48.251
• [6.655 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 09/21/24 13:01:48.26
  I0921 13:01:48.260244 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir @ 09/21/24 13:01:48.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:01:48.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:01:48.287
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/21/24 13:01:48.289
  STEP: Saw pod success @ 09/21/24 13:01:50.311
  I0921 13:01:50.315593 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-8ae665d2-d9a0-4f29-86ed-3ae498c33c4f container test-container: <nil>
  STEP: delete the pod @ 09/21/24 13:01:50.323
  I0921 13:01:50.345250 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5011" for this suite. @ 09/21/24 13:01:50.35
• [2.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 09/21/24 13:01:50.36
  I0921 13:01:50.360247 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 13:01:50.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:01:50.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:01:50.377
  STEP: Setting up server cert @ 09/21/24 13:01:50.403
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 13:01:50.651
  STEP: Deploying the webhook pod @ 09/21/24 13:01:50.662
  STEP: Wait for the deployment to be ready @ 09/21/24 13:01:50.675
  I0921 13:01:50.686866 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 13:01:52.702
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 13:01:52.715
  I0921 13:01:53.716444 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/21/24 13:01:53.727
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/21/24 13:01:53.741
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/21/24 13:01:53.746
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/21/24 13:01:53.759
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/21/24 13:01:53.772
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/21/24 13:01:53.779
  I0921 13:01:53.843135 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5378" for this suite. @ 09/21/24 13:01:53.848
  STEP: Destroying namespace "webhook-markers-7509" for this suite. @ 09/21/24 13:01:53.863
• [3.516 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/21/24 13:01:53.876
  I0921 13:01:53.876432 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename apf @ 09/21/24 13:01:53.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:01:53.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:01:53.949
  STEP: getting /apis @ 09/21/24 13:01:53.953
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/21/24 13:01:53.957
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/21/24 13:01:53.958
  STEP: creating @ 09/21/24 13:01:53.959
  STEP: getting @ 09/21/24 13:01:53.98
  STEP: listing @ 09/21/24 13:01:53.985
  STEP: watching @ 09/21/24 13:01:53.99
  I0921 13:01:53.990074 19 flowcontrol.go:620] starting watch
  STEP: patching @ 09/21/24 13:01:53.991
  STEP: updating @ 09/21/24 13:01:53.997
  I0921 13:01:54.008372 19 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/21/24 13:01:54.008
  STEP: patching /status @ 09/21/24 13:01:54.012
  STEP: updating /status @ 09/21/24 13:01:54.019
  STEP: deleting @ 09/21/24 13:01:54.029
  STEP: deleting a collection @ 09/21/24 13:01:54.048
  I0921 13:01:54.078756 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5316" for this suite. @ 09/21/24 13:01:54.083
• [0.217 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/21/24 13:01:54.093
  I0921 13:01:54.093803 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename cronjob @ 09/21/24 13:01:54.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:01:54.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:01:54.115
  STEP: Creating a ForbidConcurrent cronjob @ 09/21/24 13:01:54.119
  STEP: Ensuring a job is scheduled @ 09/21/24 13:01:54.126
  STEP: Ensuring exactly one is scheduled @ 09/21/24 13:02:00.13
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/21/24 13:02:00.138
  STEP: Ensuring no more jobs are scheduled @ 09/21/24 13:02:00.153
  STEP: Removing cronjob @ 09/21/24 13:02:00.159
  I0921 13:02:00.175373 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4357" for this suite. @ 09/21/24 13:02:00.18
• [6.097 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 09/21/24 13:02:00.19
  I0921 13:02:00.190656 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename configmap @ 09/21/24 13:02:00.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:02:00.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:02:00.229
  I0921 13:02:00.280241 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3439" for this suite. @ 09/21/24 13:02:00.284
• [0.103 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 09/21/24 13:02:00.294
  I0921 13:02:00.294194 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-probe @ 09/21/24 13:02:00.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:02:00.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:02:00.31
  STEP: Creating pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830 @ 09/21/24 13:02:00.313
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/21/24 13:02:02.339
  I0921 13:02:02.346514 19 container_probe.go:1749] Initial restart count of pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 is 0
  I0921 13:02:02.350128 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:04.355929 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:06.361585 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:08.367267 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:10.372035 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:12.377602 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:14.384321 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:16.389962 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:18.396319 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:20.403670 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:22.409980 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:22.410018 19 container_probe.go:1763] Restart count of pod container-probe-5830/liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 is now 1 (20.063464756s elapsed)
  I0921 13:02:24.416549 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:26.422007 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:28.428542 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:30.435217 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:32.441145 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:34.447254 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:36.452966 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:38.459500 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:40.466502 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:42.473111 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:42.473149 19 container_probe.go:1763] Restart count of pod container-probe-5830/liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 is now 2 (40.126596058s elapsed)
  I0921 13:02:44.480039 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:46.485888 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:48.492853 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:50.498478 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:52.506562 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:54.511664 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:56.517837 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:02:58.524109 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:00.530439 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:02.538756 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:02.538817 19 container_probe.go:1763] Restart count of pod container-probe-5830/liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 is now 3 (1m0.192262657s elapsed)
  I0921 13:03:04.544500 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:06.550964 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:08.558556 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:10.564094 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:12.570009 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:14.576165 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:16.582238 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:18.588742 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:20.594520 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:22.600177 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:22.600212 19 container_probe.go:1763] Restart count of pod container-probe-5830/liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 is now 4 (1m20.253659662s elapsed)
  I0921 13:03:24.606688 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:26.612587 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:28.619531 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:30.627208 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:32.633474 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:34.640212 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:36.645362 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:38.651918 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:40.658276 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:42.664288 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:44.671025 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:46.677203 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:48.683642 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:50.688730 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:52.694652 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:54.700299 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:56.706159 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:03:58.714545 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:00.719583 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:02.728021 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:04.735048 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:06.740633 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:08.747572 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:10.753247 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:12.759184 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:14.765890 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:16.771806 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:18.778533 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:20.784133 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:22.790294 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:24.795644 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:26.802712 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:28.810236 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:30.816025 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:32.822207 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:34.828940 19 container_probe.go:1759] Get pod liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 in namespace container-probe-5830
  I0921 13:04:34.828975 19 container_probe.go:1763] Restart count of pod container-probe-5830/liveness-ff9f233a-697d-45c1-af2b-d478b39d92f7 is now 5 (2m32.482422529s elapsed)
  STEP: deleting the pod @ 09/21/24 13:04:34.829
  I0921 13:04:34.849810 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5830" for this suite. @ 09/21/24 13:04:34.855
• [154.570 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/21/24 13:04:34.864
  I0921 13:04:34.864242 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename sched-pred @ 09/21/24 13:04:34.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:04:34.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:04:34.883
  I0921 13:04:34.886861 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0921 13:04:34.894841 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I0921 13:04:34.899185 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-2-8 before test
  I0921 13:04:34.904460 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-72drx from ingress-nginx-kubernetes-worker started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 13:04:34.904489 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0921 13:04:34.904497 19 predicates.go:957] calico-node-698gv from kube-system started at 2024-09-21 12:09:22 +0000 UTC (1 container statuses recorded)
  I0921 13:04:34.904502 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0921 13:04:34.904509 19 predicates.go:957] coredns-5b4857d7c8-w6vks from kube-system started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 13:04:34.904513 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0921 13:04:34.904519 19 predicates.go:957] kube-state-metrics-5d7bdccd49-b422z from kube-system started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 13:04:34.904524 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0921 13:04:34.904531 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-g9gpw from kube-system started at 2024-09-21 12:06:02 +0000 UTC (2 container statuses recorded)
  I0921 13:04:34.904541 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0921 13:04:34.904545 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0921 13:04:34.904551 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-5v9dx from kubernetes-dashboard started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 13:04:34.904556 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0921 13:04:34.904561 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-cj2rk from kubernetes-dashboard started at 2024-09-21 12:06:02 +0000 UTC (1 container statuses recorded)
  I0921 13:04:34.904565 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0921 13:04:34.904599 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-5wrw9 from sonobuoy started at 2024-09-21 12:12:34 +0000 UTC (2 container statuses recorded)
  I0921 13:04:34.904605 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 13:04:34.904610 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0921 13:04:34.904616 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-69-84 before test
  I0921 13:04:34.910659 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-l9lt9 from ingress-nginx-kubernetes-worker started at 2024-09-21 12:08:37 +0000 UTC (1 container statuses recorded)
  I0921 13:04:34.910680 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0921 13:04:34.910687 19 predicates.go:957] calico-node-rw7c2 from kube-system started at 2024-09-21 12:09:12 +0000 UTC (1 container statuses recorded)
  I0921 13:04:34.910693 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0921 13:04:34.910698 19 predicates.go:957] sonobuoy-e2e-job-b3f4395adb4247d5 from sonobuoy started at 2024-09-21 12:12:33 +0000 UTC (2 container statuses recorded)
  I0921 13:04:34.910704 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0921 13:04:34.910710 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 13:04:34.910716 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-2g2mv from sonobuoy started at 2024-09-21 12:12:34 +0000 UTC (2 container statuses recorded)
  I0921 13:04:34.910721 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 13:04:34.910726 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0921 13:04:34.910731 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-95-123 before test
  I0921 13:04:34.917603 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-nkb4x from ingress-nginx-kubernetes-worker started at 2024-09-21 12:17:48 +0000 UTC (1 container statuses recorded)
  I0921 13:04:34.917642 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0921 13:04:34.917650 19 predicates.go:957] calico-node-tb2z2 from kube-system started at 2024-09-21 12:09:53 +0000 UTC (1 container statuses recorded)
  I0921 13:04:34.917656 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0921 13:04:34.917662 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-21 12:12:31 +0000 UTC (1 container statuses recorded)
  I0921 13:04:34.917667 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0921 13:04:34.917689 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-thrjz from sonobuoy started at 2024-09-21 12:12:34 +0000 UTC (2 container statuses recorded)
  I0921 13:04:34.917693 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0921 13:04:34.917698 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/21/24 13:04:34.917
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17f7441d58042bc6], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 09/21/24 13:04:34.952
  I0921 13:04:35.947191 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8248" for this suite. @ 09/21/24 13:04:35.952
• [1.096 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 09/21/24 13:04:35.96
  I0921 13:04:35.960537 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 13:04:35.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:04:35.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:04:35.98
  STEP: Creating configMap with name projected-configmap-test-volume-e1b2dfeb-f4fe-4e31-92c6-35442789dc8c @ 09/21/24 13:04:35.983
  STEP: Creating a pod to test consume configMaps @ 09/21/24 13:04:35.989
  STEP: Saw pod success @ 09/21/24 13:04:40.019
  I0921 13:04:40.023096 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-projected-configmaps-d29f2e29-9640-421f-851c-015220b35c03 container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 13:04:40.039
  I0921 13:04:40.060441 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2700" for this suite. @ 09/21/24 13:04:40.064
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 09/21/24 13:04:40.072
  I0921 13:04:40.072485 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename configmap @ 09/21/24 13:04:40.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:04:40.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:04:40.094
  STEP: Creating configMap with name configmap-test-volume-map-7268c704-43c0-423f-81bb-6fc9eaf0b820 @ 09/21/24 13:04:40.096
  STEP: Creating a pod to test consume configMaps @ 09/21/24 13:04:40.102
  STEP: Saw pod success @ 09/21/24 13:04:44.134
  I0921 13:04:44.138422 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-configmaps-2d19727c-685b-4279-b62e-141a38b8cc04 container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 13:04:44.147
  I0921 13:04:44.170704 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8449" for this suite. @ 09/21/24 13:04:44.175
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 09/21/24 13:04:44.184
  I0921 13:04:44.184222 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename secrets @ 09/21/24 13:04:44.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:04:44.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:04:44.204
  STEP: Creating projection with secret that has name secret-emptykey-test-7f94ac6c-bf70-4bf5-897a-319fe9b719b6 @ 09/21/24 13:04:44.206
  I0921 13:04:44.208208 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1423" for this suite. @ 09/21/24 13:04:44.212
• [0.036 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 09/21/24 13:04:44.22
  I0921 13:04:44.220106 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename sched-preemption @ 09/21/24 13:04:44.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:04:44.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:04:44.239
  I0921 13:04:44.261328 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0921 13:05:44.269782 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/21/24 13:05:44.275
  I0921 13:05:44.298118 19 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I0921 13:05:44.307807 19 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I0921 13:05:44.326982 19 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I0921 13:05:44.337166 19 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I0921 13:05:44.360602 19 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I0921 13:05:44.368376 19 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/21/24 13:05:44.368
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/21/24 13:05:46.401
  I0921 13:05:50.556202 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-243" for this suite. @ 09/21/24 13:05:50.56
• [66.349 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 09/21/24 13:05:50.568
  I0921 13:05:50.568722 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename resourcequota @ 09/21/24 13:05:50.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:05:50.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:05:50.59
  STEP: Creating resourceQuota "e2e-rq-status-m6nhq" @ 09/21/24 13:05:50.595
  I0921 13:05:50.606938 19 resource_quota.go:1102] Resource quota "e2e-rq-status-m6nhq" reports spec: hard cpu limit of 500m
  I0921 13:05:50.606965 19 resource_quota.go:1104] Resource quota "e2e-rq-status-m6nhq" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-m6nhq" /status @ 09/21/24 13:05:50.606
  STEP: Confirm /status for "e2e-rq-status-m6nhq" resourceQuota via watch @ 09/21/24 13:05:50.62
  I0921 13:05:50.621490 19 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-m6nhq" in namespace "resourcequota-6835" with hard status: v1.ResourceList(nil)
  I0921 13:05:50.621555 19 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-m6nhq" in namespace "resourcequota-6835" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0921 13:05:50.621570 19 resource_quota.go:1141] ResourceQuota "e2e-rq-status-m6nhq" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/21/24 13:05:50.624
  I0921 13:05:50.634088 19 resource_quota.go:1152] Resource quota "e2e-rq-status-m6nhq" reports spec: hard cpu limit of 1
  I0921 13:05:50.634118 19 resource_quota.go:1153] Resource quota "e2e-rq-status-m6nhq" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-m6nhq" /status @ 09/21/24 13:05:50.634
  STEP: Confirm /status for "e2e-rq-status-m6nhq" resourceQuota via watch @ 09/21/24 13:05:50.639
  I0921 13:05:50.641386 19 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-m6nhq" in namespace "resourcequota-6835" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0921 13:05:50.642224 19 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-m6nhq" in namespace "resourcequota-6835" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0921 13:05:50.642242 19 resource_quota.go:1185] ResourceQuota "e2e-rq-status-m6nhq" /status was patched
  STEP: Get "e2e-rq-status-m6nhq" /status @ 09/21/24 13:05:50.642
  I0921 13:05:50.646706 19 resource_quota.go:1196] Resourcequota "e2e-rq-status-m6nhq" reports status: hard cpu of 1
  I0921 13:05:50.646728 19 resource_quota.go:1198] Resourcequota "e2e-rq-status-m6nhq" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-m6nhq" /status before checking Spec is unchanged @ 09/21/24 13:05:50.654
  I0921 13:05:50.660227 19 resource_quota.go:1218] Resourcequota "e2e-rq-status-m6nhq" reports status: hard cpu of 2
  I0921 13:05:50.660255 19 resource_quota.go:1220] Resourcequota "e2e-rq-status-m6nhq" reports status: hard memory of 2Gi
  I0921 13:05:50.661630 19 resource_quota.go:1229] observed resourceQuota "e2e-rq-status-m6nhq" in namespace "resourcequota-6835" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0921 13:05:50.661665 19 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-m6nhq" in namespace "resourcequota-6835" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0921 13:05:50.666315 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046f70c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046f72a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046f72d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:05:55.666223 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004047878), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040478c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040478f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:06:00.668561 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040479e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004047a40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004047aa0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:06:05.667152 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046f75a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046f7608), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046f7680), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:06:10.668834 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046f78c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046f7908), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046f79c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:06:15.667762 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046f7cc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046f7cf8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046f7d70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:06:20.667481 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046f7f38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4048), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4090), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:06:25.668175 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4240), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4288), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b42b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:06:30.666795 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b43f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4450), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:06:35.668033 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4690), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b46c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4720), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:06:40.668384 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004047ce0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004047d10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004047d58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:06:45.667099 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b48e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4930), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4978), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:06:50.668265 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4f30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4f78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b5008), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:06:55.667835 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f80d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8198), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:07:00.666529 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b52f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b5320), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b5380), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:07:05.668394 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f83c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8408), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8468), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:07:10.669124 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8648), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f86a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f86d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:07:15.666234 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f88b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8918), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8978), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:07:20.667779 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f80d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8198), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:07:25.668193 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8348), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f83c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:07:30.667061 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8618), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8648), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f86a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:07:35.668491 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f88b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8918), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:07:40.668223 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8af8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8b28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8ba0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:07:45.667656 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b42a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b42d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:07:50.667420 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8e58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8ea0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f8f00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:07:55.667457 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f91b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f91e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f9260), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:08:00.666978 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f93c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f9428), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f9458), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:08:05.667413 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f95c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f95f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f9698), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:08:10.668227 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f9968), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f99e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f9ab8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:08:15.666945 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f9c08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f9c68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f9c98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:08:20.668203 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f9f38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f9f68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40018), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:08:25.666791 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a401b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:08:30.667426 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a402e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40360), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40390), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:08:35.667761 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a404e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40540), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:08:40.666748 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40690), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a406c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a406f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:08:45.668676 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a407f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40828), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:08:50.668017 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a409a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40a20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40a80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:08:55.668325 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40ba0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40c00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40c30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:09:00.667239 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40d50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40d80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40db0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:09:05.668520 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b48d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4948), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:09:10.667361 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40ed0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40f00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40f30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:09:15.668535 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a41020), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a41050), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a41080), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:09:20.670323 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a41290), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a412d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a41350), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:09:25.667980 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b40c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b40f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:09:30.668149 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a400c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a400f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:09:35.666362 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40258), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a402a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a402d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:09:40.668107 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a404c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:09:45.667828 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40600), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40648), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40678), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:09:50.668718 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b43c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b43f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:09:55.667777 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4540), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4570), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b45d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:10:00.668931 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b47c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4840), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:10:05.666613 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4978), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b49d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b4a98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:10:10.667370 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b5038), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b5080), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b5128), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:10:15.667898 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b5368), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b53b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b53f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:10:20.667939 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b55c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b55f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041b5638), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:10:25.668117 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a408e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40918), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40960), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:10:30.669851 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40b10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40b58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40b88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:10:35.667298 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40cd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40d08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40d38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:10:40.667940 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m6nhq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m6nhq", GenerateName:"", Namespace:"resourcequota-6835", SelfLink:"", UID:"c90293f8-558b-431a-8ecd-a04bed349c54", ResourceVersion:"32462", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m6nhq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40e28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40e58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 5, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a40e88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0921 13:10:45.667889 19 resource_quota.go:1260] ResourceQuota "e2e-rq-status-m6nhq" Spec was unchanged and /status reset
  I0921 13:10:45.668024 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6835" for this suite. @ 09/21/24 13:10:45.672
• [295.113 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/21/24 13:10:45.682
  I0921 13:10:45.682204 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename disruption @ 09/21/24 13:10:45.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:10:45.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:10:45.703
  STEP: Waiting for the pdb to be processed @ 09/21/24 13:10:45.711
  STEP: Updating PodDisruptionBudget status @ 09/21/24 13:10:47.717
  STEP: Waiting for all pods to be running @ 09/21/24 13:10:47.728
  I0921 13:10:47.737826 19 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 09/21/24 13:10:49.735
  STEP: Waiting for the pdb to be processed @ 09/21/24 13:10:49.751
  STEP: Patching PodDisruptionBudget status @ 09/21/24 13:10:49.761
  STEP: Waiting for the pdb to be processed @ 09/21/24 13:10:49.771
  I0921 13:10:49.776668 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5531" for this suite. @ 09/21/24 13:10:49.78
• [4.106 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 09/21/24 13:10:49.793
  I0921 13:10:49.793206 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename secrets @ 09/21/24 13:10:49.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:10:49.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:10:49.812
  STEP: creating secret secrets-6169/secret-test-194aae17-443a-4275-8bdd-18c66e4c8298 @ 09/21/24 13:10:49.814
  STEP: Creating a pod to test consume secrets @ 09/21/24 13:10:49.82
  STEP: Saw pod success @ 09/21/24 13:10:53.845
  I0921 13:10:53.850846 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod pod-configmaps-0ea05e61-72a7-435f-a180-0e5e2bfd7561 container env-test: <nil>
  STEP: delete the pod @ 09/21/24 13:10:53.873
  I0921 13:10:53.894502 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6169" for this suite. @ 09/21/24 13:10:53.899
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/21/24 13:10:53.909
  I0921 13:10:53.909313 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename daemonsets @ 09/21/24 13:10:53.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:10:53.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:10:53.93
  I0921 13:10:53.956768 19 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/21/24 13:10:53.963
  I0921 13:10:53.966685 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:10:53.966723 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:10:53.970892 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 13:10:53.970912 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  I0921 13:10:54.967962 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:10:54.968014 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:10:54.971306 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0921 13:10:54.971326 19 fixtures.go:130] Node ip-172-31-69-84 is running 0 daemon pod, expected 1
  I0921 13:10:55.968982 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:10:55.969038 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:10:55.972994 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0921 13:10:55.973015 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/21/24 13:10:55.988
  STEP: Check that daemon pods images are updated. @ 09/21/24 13:10:55.999
  I0921 13:10:56.003577 19 daemon_set.go:1193] Wrong image for pod: daemon-set-668xq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0921 13:10:56.003605 19 daemon_set.go:1193] Wrong image for pod: daemon-set-hjfsn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0921 13:10:56.003611 19 daemon_set.go:1193] Wrong image for pod: daemon-set-lgkzv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0921 13:10:56.015150 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:10:56.015194 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:10:57.007006 19 daemon_set.go:1193] Wrong image for pod: daemon-set-668xq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0921 13:10:57.012613 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:10:57.012662 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:10:58.005885 19 daemon_set.go:1193] Wrong image for pod: daemon-set-668xq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0921 13:10:58.005922 19 daemon_set.go:1198] Pod daemon-set-rpv6q is not available
  I0921 13:10:58.009908 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:10:58.009948 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:10:59.004156 19 daemon_set.go:1198] Pod daemon-set-w9whz is not available
  I0921 13:10:59.009618 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:10:59.009654 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/21/24 13:10:59.009
  I0921 13:10:59.014057 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:10:59.014098 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:10:59.017952 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0921 13:10:59.017973 19 fixtures.go:130] Node ip-172-31-95-123 is running 0 daemon pod, expected 1
  I0921 13:11:00.015137 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:11:00.015218 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:11:00.019950 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0921 13:11:00.019973 19 fixtures.go:130] Node ip-172-31-95-123 is running 0 daemon pod, expected 1
  I0921 13:11:01.015746 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:11:01.015811 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:11:01.020424 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0921 13:11:01.020449 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/21/24 13:11:01.042
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2907, will wait for the garbage collector to delete the pods @ 09/21/24 13:11:01.043
  I0921 13:11:01.108464 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 11.462537ms
  I0921 13:11:01.209016 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.548834ms
  I0921 13:11:02.314601 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 13:11:02.314653 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0921 13:11:02.318217 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33384"},"items":null}

  I0921 13:11:02.322811 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33384"},"items":null}

  I0921 13:11:02.339459 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2907" for this suite. @ 09/21/24 13:11:02.343
• [8.442 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/21/24 13:11:02.351
  I0921 13:11:02.351960 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 13:11:02.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:11:02.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:11:02.371
  STEP: Creating secret with name s-test-opt-del-63c59a5e-2331-4114-a114-5f94dd565e84 @ 09/21/24 13:11:02.377
  STEP: Creating secret with name s-test-opt-upd-8ea42a96-8aad-4d59-9ad7-a57f23ed5e7a @ 09/21/24 13:11:02.383
  STEP: Creating the pod @ 09/21/24 13:11:02.389
  STEP: Deleting secret s-test-opt-del-63c59a5e-2331-4114-a114-5f94dd565e84 @ 09/21/24 13:11:04.446
  STEP: Updating secret s-test-opt-upd-8ea42a96-8aad-4d59-9ad7-a57f23ed5e7a @ 09/21/24 13:11:04.454
  STEP: Creating secret with name s-test-opt-create-8a011ddf-8dd4-4e60-be07-8a55099f4563 @ 09/21/24 13:11:04.46
  STEP: waiting to observe update in volume @ 09/21/24 13:11:04.465
  I0921 13:11:08.512461 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2262" for this suite. @ 09/21/24 13:11:08.517
• [6.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/21/24 13:11:08.525
  I0921 13:11:08.525906 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pods @ 09/21/24 13:11:08.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:11:08.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:11:08.546
  STEP: creating the pod @ 09/21/24 13:11:08.55
  STEP: submitting the pod to kubernetes @ 09/21/24 13:11:08.55
  STEP: verifying QOS class is set on the pod @ 09/21/24 13:11:08.564
  I0921 13:11:08.572121 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9660" for this suite. @ 09/21/24 13:11:08.576
• [0.058 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 09/21/24 13:11:08.583
  I0921 13:11:08.583575 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename svcaccounts @ 09/21/24 13:11:08.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:11:08.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:11:08.607
  STEP: creating a ServiceAccount @ 09/21/24 13:11:08.609
  STEP: watching for the ServiceAccount to be added @ 09/21/24 13:11:08.619
  STEP: patching the ServiceAccount @ 09/21/24 13:11:08.62
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/21/24 13:11:08.626
  STEP: deleting the ServiceAccount @ 09/21/24 13:11:08.63
  I0921 13:11:08.648206 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3970" for this suite. @ 09/21/24 13:11:08.652
• [0.079 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 09/21/24 13:11:08.662
  I0921 13:11:08.662635 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir @ 09/21/24 13:11:08.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:11:08.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:11:08.684
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/21/24 13:11:08.687
  STEP: Saw pod success @ 09/21/24 13:11:12.715
  I0921 13:11:12.719869 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod pod-3d63cf11-6003-44d8-bd89-f0512016d6d5 container test-container: <nil>
  STEP: delete the pod @ 09/21/24 13:11:12.729
  I0921 13:11:12.751447 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5429" for this suite. @ 09/21/24 13:11:12.756
• [4.102 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 09/21/24 13:11:12.764
  I0921 13:11:12.764913 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 13:11:12.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:11:12.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:11:12.781
  STEP: Setting up server cert @ 09/21/24 13:11:12.805
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 13:11:12.968
  STEP: Deploying the webhook pod @ 09/21/24 13:11:12.979
  STEP: Wait for the deployment to be ready @ 09/21/24 13:11:12.996
  I0921 13:11:13.010247 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 13:11:15.025
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 13:11:15.038
  I0921 13:11:16.038888 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/21/24 13:11:16.048
  I0921 13:11:16.100232 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6418" for this suite. @ 09/21/24 13:11:16.103
  STEP: Destroying namespace "webhook-markers-9337" for this suite. @ 09/21/24 13:11:16.113
• [3.360 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 09/21/24 13:11:16.124
  I0921 13:11:16.124805 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 13:11:16.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:11:16.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:11:16.144
  STEP: Creating configMap with name projected-configmap-test-volume-212d3498-8efd-4690-93f9-0b12ca752031 @ 09/21/24 13:11:16.147
  STEP: Creating a pod to test consume configMaps @ 09/21/24 13:11:16.152
  STEP: Saw pod success @ 09/21/24 13:11:20.178
  I0921 13:11:20.183071 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-projected-configmaps-d95833a4-e626-42ff-8328-33dd28fc5545 container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 13:11:20.192
  I0921 13:11:20.215432 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8320" for this suite. @ 09/21/24 13:11:20.22
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 09/21/24 13:11:20.231
  I0921 13:11:20.231414 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename security-context-test @ 09/21/24 13:11:20.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:11:20.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:11:20.251
  I0921 13:11:24.292621 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4821" for this suite. @ 09/21/24 13:11:24.297
• [4.078 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 09/21/24 13:11:24.308
  I0921 13:11:24.309002 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 13:11:24.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:11:24.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:11:24.325
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 13:11:24.328
  STEP: Saw pod success @ 09/21/24 13:11:26.351
  I0921 13:11:26.355269 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downwardapi-volume-caa066c6-cecb-44c8-87f9-69f73f9841e0 container client-container: <nil>
  STEP: delete the pod @ 09/21/24 13:11:26.366
  I0921 13:11:26.387482 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-310" for this suite. @ 09/21/24 13:11:26.391
• [2.090 seconds]
------------------------------
SSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/21/24 13:11:26.398
  I0921 13:11:26.398683 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/21/24 13:11:26.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:11:26.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:11:26.416
  I0921 13:11:26.419462 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0921 13:12:26.419729 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I0921 13:12:26.424701 19 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/21/24 13:12:26.424
  I0921 13:12:26.647008 19 taints.go:463] Pod1 is running on ip-172-31-95-123. Tainting Node
  I0921 13:12:28.872711 19 taints.go:471] Pod2 is running on ip-172-31-95-123. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/21/24 13:12:28.872
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/21/24 13:12:28.882
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/21/24 13:12:28.888
  I0921 13:12:34.515436 19 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0921 13:12:54.544509 19 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/21/24 13:12:54.555
  I0921 13:12:54.560669 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-635" for this suite. @ 09/21/24 13:12:54.564
• [88.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 09/21/24 13:12:54.58
  I0921 13:12:54.580116 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-runtime @ 09/21/24 13:12:54.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:12:54.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:12:54.599
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/21/24 13:12:54.614
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/21/24 13:13:13.731
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/21/24 13:13:13.735
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/21/24 13:13:13.744
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/21/24 13:13:13.744
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/21/24 13:13:13.774
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/21/24 13:13:16.797
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/21/24 13:13:17.808
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/21/24 13:13:17.815
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/21/24 13:13:17.815
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/21/24 13:13:17.843
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/21/24 13:13:18.853
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/21/24 13:13:20.871
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/21/24 13:13:20.879
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/21/24 13:13:20.879
  I0921 13:13:20.915249 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1773" for this suite. @ 09/21/24 13:13:20.92
• [26.349 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/21/24 13:13:20.929
  I0921 13:13:20.929068 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename chunking @ 09/21/24 13:13:20.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:13:20.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:13:20.952
  STEP: creating a large number of resources @ 09/21/24 13:13:20.954
  STEP: retrieving the first page @ 09/21/24 13:13:38.637
  I0921 13:13:38.686484 19 chunking.go:163] Retrieved 40/40 results with rv 34632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 09/21/24 13:13:38.686
  I0921 13:13:58.696037 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:14:18.696910 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:14:38.696306 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:14:58.696697 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:15:18.696909 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:15:38.694948 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:15:58.695937 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:16:18.694035 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:16:38.696185 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:16:58.697739 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:17:18.696057 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:17:38.696516 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:17:58.693421 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:18:18.693020 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:18:38.696906 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:18:58.695189 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:19:18.692755 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:19:38.692877 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:19:58.692091 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:20:18.693649 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0921 13:20:38.694902 19 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0921 13:20:38.694938 19 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/21/24 13:20:38.694
  STEP: retrieving all remaining pages @ 09/21/24 13:20:38.7
  I0921 13:20:38.705302 19 chunking.go:221] Retrieved 40/40 results with rv 35435 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0921 13:20:38.709393 19 chunking.go:221] Retrieved 40/40 results with rv 35435 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0921 13:20:38.714375 19 chunking.go:221] Retrieved 40/40 results with rv 35435 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0921 13:20:38.719624 19 chunking.go:221] Retrieved 40/40 results with rv 35435 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0921 13:20:38.723548 19 chunking.go:221] Retrieved 40/40 results with rv 35435 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0921 13:20:38.728463 19 chunking.go:221] Retrieved 40/40 results with rv 35435 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0921 13:20:38.733664 19 chunking.go:221] Retrieved 40/40 results with rv 35435 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU0MzUsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0921 13:20:38.737528 19 chunking.go:221] Retrieved 40/40 results with rv 35435 and continue 
  I0921 13:20:38.737692 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2922" for this suite. @ 09/21/24 13:20:38.742
• [437.821 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 09/21/24 13:20:38.75
  I0921 13:20:38.750603 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 13:20:38.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:20:38.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:20:38.772
  STEP: validating cluster-info @ 09/21/24 13:20:38.774
  I0921 13:20:38.774581 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-619 cluster-info'
  I0921 13:20:38.820618 19 builder.go:146] stderr: ""
  I0921 13:20:38.820656 19 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0921 13:20:38.820848 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-619" for this suite. @ 09/21/24 13:20:38.825
• [0.084 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 09/21/24 13:20:38.834
  I0921 13:20:38.834981 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-probe @ 09/21/24 13:20:38.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:20:38.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:20:38.853
  STEP: Creating pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749 @ 09/21/24 13:20:38.859
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/21/24 13:20:40.899
  I0921 13:20:40.903254 19 container_probe.go:1749] Initial restart count of pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c is 0
  I0921 13:20:40.907535 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:20:42.914475 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:20:44.918540 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:20:46.925146 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:20:48.930570 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:20:50.937874 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:20:52.943677 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:20:54.949560 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:20:56.956058 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:20:58.961433 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:00.968071 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:02.973885 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:04.978871 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:06.984779 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:08.991433 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:10.996607 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:13.005635 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:15.010725 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:17.017873 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:19.023456 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:21.030052 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:23.035929 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:25.042020 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:27.048927 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:29.054930 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:31.061039 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:33.066696 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:35.072467 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:37.079507 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:39.084638 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:41.091097 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:43.098735 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:45.103630 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:47.110897 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:49.116742 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:51.123288 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:53.129440 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:55.135978 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:57.143169 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:21:59.148408 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:01.153853 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:03.159768 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:05.164881 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:07.170847 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:09.177412 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:11.182245 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:13.188699 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:15.193938 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:17.200870 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:19.208711 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:21.215538 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:23.222540 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:25.228784 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:27.235173 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:29.240608 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:31.246510 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:33.252003 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:35.257940 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:37.265488 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:39.270818 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:41.277835 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:43.284215 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:45.289269 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:47.295497 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:49.301374 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:51.309075 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:53.314958 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:55.320945 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:57.328509 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:22:59.335030 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:01.341107 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:03.348361 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:05.353084 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:07.359654 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:09.366676 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:11.371844 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:13.379049 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:15.383991 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:17.388848 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:19.395464 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:21.402733 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:23.407831 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:25.413417 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:27.420892 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:29.426828 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:31.432811 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:33.438385 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:35.444444 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:37.450244 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:39.455744 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:41.461712 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:43.468489 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:45.473316 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:47.479465 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:49.484334 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:51.491104 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:53.497827 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:55.503599 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:57.508751 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:23:59.515719 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:01.521725 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:03.526672 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:05.532770 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:07.539502 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:09.544484 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:11.550148 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:13.555033 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:15.560960 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:17.567080 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:19.573057 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:21.580202 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:23.586425 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:25.591965 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:27.598724 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:29.603544 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:31.610064 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:33.615073 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:35.620961 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:37.628594 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  I0921 13:24:39.634586 19 container_probe.go:1759] Get pod test-grpc-743b15fb-85fe-4e65-95c5-6d620bdf788c in namespace container-probe-7749
  STEP: deleting the pod @ 09/21/24 13:24:41.635
  I0921 13:24:41.656726 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7749" for this suite. @ 09/21/24 13:24:41.66
• [242.834 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 09/21/24 13:24:41.669
  I0921 13:24:41.669382 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename namespaces @ 09/21/24 13:24:41.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:24:41.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:24:41.689
  STEP: Creating namespace "e2e-ns-dw5f4" @ 09/21/24 13:24:41.692
  I0921 13:24:41.709114 19 namespace.go:411] Namespace "e2e-ns-dw5f4-5708" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-dw5f4-5708" @ 09/21/24 13:24:41.709
  I0921 13:24:41.718379 19 namespace.go:434] Namespace "e2e-ns-dw5f4-5708" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-dw5f4-5708" @ 09/21/24 13:24:41.718
  I0921 13:24:41.729448 19 namespace.go:463] Namespace "e2e-ns-dw5f4-5708" has []v1.FinalizerName{"kubernetes"}
  I0921 13:24:41.729542 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-988" for this suite. @ 09/21/24 13:24:41.734
  STEP: Destroying namespace "e2e-ns-dw5f4-5708" for this suite. @ 09/21/24 13:24:41.743
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/21/24 13:24:41.75
  I0921 13:24:41.750873 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename podtemplate @ 09/21/24 13:24:41.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:24:41.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:24:41.773
  I0921 13:24:41.819956 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8020" for this suite. @ 09/21/24 13:24:41.823
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 09/21/24 13:24:41.83
  I0921 13:24:41.830919 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 13:24:41.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:24:41.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:24:41.85
  STEP: Creating the pod @ 09/21/24 13:24:41.852
  I0921 13:24:44.412987 19 pod_client.go:173] Successfully updated pod "annotationupdate182fda6a-91be-4b4b-87f1-a61ea8184b01"
  I0921 13:24:46.431860 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6602" for this suite. @ 09/21/24 13:24:46.437
• [4.615 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/21/24 13:24:46.446
  I0921 13:24:46.446111 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename field-validation @ 09/21/24 13:24:46.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:24:46.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:24:46.468
  STEP: apply creating a deployment @ 09/21/24 13:24:46.471
  I0921 13:24:46.488904 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3300" for this suite. @ 09/21/24 13:24:46.494
• [0.056 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/21/24 13:24:46.502
  I0921 13:24:46.502459 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename ingress @ 09/21/24 13:24:46.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:24:46.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:24:46.524
  STEP: getting /apis @ 09/21/24 13:24:46.528
  STEP: getting /apis/networking.k8s.io @ 09/21/24 13:24:46.531
  STEP: getting /apis/networking.k8s.iov1 @ 09/21/24 13:24:46.533
  STEP: creating @ 09/21/24 13:24:46.534
  STEP: getting @ 09/21/24 13:24:46.554
  STEP: listing @ 09/21/24 13:24:46.559
  STEP: watching @ 09/21/24 13:24:46.563
  I0921 13:24:46.563557 19 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/21/24 13:24:46.564
  STEP: cluster-wide watching @ 09/21/24 13:24:46.568
  I0921 13:24:46.568872 19 ingress.go:198] starting watch
  STEP: patching @ 09/21/24 13:24:46.569
  STEP: updating @ 09/21/24 13:24:46.576
  I0921 13:24:46.590435 19 ingress.go:221] waiting for watch events with expected annotations
  I0921 13:24:46.590514 19 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/21/24 13:24:46.59
  STEP: updating /status @ 09/21/24 13:24:46.597
  STEP: get /status @ 09/21/24 13:24:46.611
  STEP: deleting @ 09/21/24 13:24:46.617
  STEP: deleting a collection @ 09/21/24 13:24:46.634
  I0921 13:24:46.658575 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-8290" for this suite. @ 09/21/24 13:24:46.662
• [0.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/21/24 13:24:46.674
  I0921 13:24:46.674886 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename replicaset @ 09/21/24 13:24:46.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:24:46.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:24:46.691
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/21/24 13:24:46.693
  I0921 13:24:46.703813 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0921 13:24:51.711630 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/21/24 13:24:51.711
  STEP: getting scale subresource @ 09/21/24 13:24:51.711
  STEP: updating a scale subresource @ 09/21/24 13:24:51.717
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/21/24 13:24:51.727
  STEP: Patch a scale subresource @ 09/21/24 13:24:51.731
  I0921 13:24:51.747372 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4063" for this suite. @ 09/21/24 13:24:51.752
• [5.090 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 09/21/24 13:24:51.764
  I0921 13:24:51.764562 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename gc @ 09/21/24 13:24:51.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:24:51.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:24:51.791
  STEP: create the rc1 @ 09/21/24 13:24:51.799
  STEP: create the rc2 @ 09/21/24 13:24:51.805
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/21/24 13:24:57.816
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/21/24 13:24:58.429
  STEP: wait for the rc to be deleted @ 09/21/24 13:24:58.438
  I0921 13:25:03.452663 19 garbage_collector.go:762] 67 pods remaining
  I0921 13:25:03.452705 19 garbage_collector.go:769] 67 pods has nil DeletionTimestamp
  I0921 13:25:03.452713 19 garbage_collector.go:770] 
  STEP: Gathering metrics @ 09/21/24 13:25:08.453
  W0921 13:25:08.460771      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0921 13:25:08.460802 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0921 13:25:08.460851 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-29cb2" in namespace "gc-8672"
  I0921 13:25:08.472587 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2sqgp" in namespace "gc-8672"
  I0921 13:25:08.489566 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-494hx" in namespace "gc-8672"
  I0921 13:25:08.507881 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4f252" in namespace "gc-8672"
  I0921 13:25:08.525380 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4grbp" in namespace "gc-8672"
  I0921 13:25:08.544833 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4sscq" in namespace "gc-8672"
  I0921 13:25:08.560870 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-55x26" in namespace "gc-8672"
  I0921 13:25:08.575473 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-59dgf" in namespace "gc-8672"
  I0921 13:25:08.592767 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5b8qz" in namespace "gc-8672"
  I0921 13:25:08.610511 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5v9ft" in namespace "gc-8672"
  I0921 13:25:08.625910 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-62wtq" in namespace "gc-8672"
  I0921 13:25:08.641953 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6zfgn" in namespace "gc-8672"
  I0921 13:25:08.653533 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7266p" in namespace "gc-8672"
  I0921 13:25:08.666982 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-74lgw" in namespace "gc-8672"
  I0921 13:25:08.682047 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7hxsd" in namespace "gc-8672"
  I0921 13:25:08.698451 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8kdsf" in namespace "gc-8672"
  I0921 13:25:08.714494 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8n766" in namespace "gc-8672"
  I0921 13:25:08.732077 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8q99j" in namespace "gc-8672"
  I0921 13:25:08.754448 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8rpt9" in namespace "gc-8672"
  I0921 13:25:08.775537 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9cnjp" in namespace "gc-8672"
  I0921 13:25:08.796420 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9txn9" in namespace "gc-8672"
  I0921 13:25:08.813960 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9zpn8" in namespace "gc-8672"
  I0921 13:25:08.829038 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b7c92" in namespace "gc-8672"
  I0921 13:25:08.841256 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bd6ft" in namespace "gc-8672"
  I0921 13:25:08.855654 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bh6c7" in namespace "gc-8672"
  I0921 13:25:08.875335 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bjp8t" in namespace "gc-8672"
  I0921 13:25:08.896301 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bjqlc" in namespace "gc-8672"
  I0921 13:25:08.915999 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bkt4c" in namespace "gc-8672"
  I0921 13:25:08.935501 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bmk4p" in namespace "gc-8672"
  I0921 13:25:08.949774 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bqhmv" in namespace "gc-8672"
  I0921 13:25:08.969219 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bqs4q" in namespace "gc-8672"
  I0921 13:25:08.988834 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c25nj" in namespace "gc-8672"
  I0921 13:25:09.005556 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d654c" in namespace "gc-8672"
  I0921 13:25:09.025516 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dfzlh" in namespace "gc-8672"
  I0921 13:25:09.042520 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dtw7g" in namespace "gc-8672"
  I0921 13:25:09.059837 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f5tkk" in namespace "gc-8672"
  I0921 13:25:09.076117 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fq52k" in namespace "gc-8672"
  I0921 13:25:09.091052 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fx8zl" in namespace "gc-8672"
  I0921 13:25:09.110413 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g86zd" in namespace "gc-8672"
  I0921 13:25:09.133936 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hl4pv" in namespace "gc-8672"
  I0921 13:25:09.155516 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hlfdd" in namespace "gc-8672"
  I0921 13:25:09.175429 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hpmk5" in namespace "gc-8672"
  I0921 13:25:09.193432 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hwpxf" in namespace "gc-8672"
  I0921 13:25:09.207371 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jn45k" in namespace "gc-8672"
  I0921 13:25:09.227138 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jpgc9" in namespace "gc-8672"
  I0921 13:25:09.242606 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jvj8p" in namespace "gc-8672"
  I0921 13:25:09.256958 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k896j" in namespace "gc-8672"
  I0921 13:25:09.269730 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kv2tn" in namespace "gc-8672"
  I0921 13:25:09.281609 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-m6tr5" in namespace "gc-8672"
  I0921 13:25:09.295883 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-mjjmr" in namespace "gc-8672"
  I0921 13:25:09.315296 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8672" for this suite. @ 09/21/24 13:25:09.319
• [17.570 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 09/21/24 13:25:09.334
  I0921 13:25:09.334080 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 13:25:09.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:25:09.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:25:09.378
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 13:25:09.383
  STEP: Saw pod success @ 09/21/24 13:25:13.414
  I0921 13:25:13.420093 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downwardapi-volume-076ccbee-f38d-4934-a2b6-36e352177344 container client-container: <nil>
  STEP: delete the pod @ 09/21/24 13:25:13.429
  I0921 13:25:13.452877 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4726" for this suite. @ 09/21/24 13:25:13.458
• [4.132 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 09/21/24 13:25:13.466
  I0921 13:25:13.466534 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename var-expansion @ 09/21/24 13:25:13.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:25:13.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:25:13.485
  I0921 13:25:15.509581 19 delete.go:62] Deleting pod "var-expansion-b8ffb501-8aa2-4875-a3a2-19030bae5d12" in namespace "var-expansion-7144"
  I0921 13:25:15.518689 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-b8ffb501-8aa2-4875-a3a2-19030bae5d12" to be fully deleted
  I0921 13:25:17.529572 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7144" for this suite. @ 09/21/24 13:25:17.533
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 09/21/24 13:25:17.54
  I0921 13:25:17.540666 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 13:25:17.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:25:17.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:25:17.559
  STEP: Creating the pod @ 09/21/24 13:25:17.561
  I0921 13:25:20.117704 19 pod_client.go:173] Successfully updated pod "annotationupdate83b0e13d-2bbc-4d74-8600-a6bb7b71b0aa"
  I0921 13:25:22.137604 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4883" for this suite. @ 09/21/24 13:25:22.142
• [4.611 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 09/21/24 13:25:22.151
  I0921 13:25:22.151314 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 13:25:22.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:25:22.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:25:22.168
  STEP: Setting up server cert @ 09/21/24 13:25:22.193
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 13:25:22.506
  STEP: Deploying the webhook pod @ 09/21/24 13:25:22.517
  STEP: Wait for the deployment to be ready @ 09/21/24 13:25:22.537
  I0921 13:25:22.549923 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 13:25:24.565
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 13:25:24.578
  I0921 13:25:25.579473 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/21/24 13:25:25.59
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/21/24 13:25:25.591
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/21/24 13:25:25.591
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/21/24 13:25:25.591
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/21/24 13:25:25.592
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/21/24 13:25:25.592
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/21/24 13:25:25.593
  I0921 13:25:25.643073 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-116" for this suite. @ 09/21/24 13:25:25.65
  STEP: Destroying namespace "webhook-markers-6907" for this suite. @ 09/21/24 13:25:25.657
• [3.515 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 09/21/24 13:25:25.666
  I0921 13:25:25.666786 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 13:25:25.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:25:25.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:25:25.685
  STEP: Setting up server cert @ 09/21/24 13:25:25.709
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 13:25:25.925
  STEP: Deploying the webhook pod @ 09/21/24 13:25:25.933
  STEP: Wait for the deployment to be ready @ 09/21/24 13:25:25.947
  I0921 13:25:25.960234 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 13:25:27.973
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 13:25:27.985
  I0921 13:25:28.985603 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/21/24 13:25:28.996
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/21/24 13:25:29.015
  STEP: Creating a configMap that should not be mutated @ 09/21/24 13:25:29.023
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/21/24 13:25:29.035
  STEP: Creating a configMap that should be mutated @ 09/21/24 13:25:29.044
  I0921 13:25:29.112835 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4789" for this suite. @ 09/21/24 13:25:29.116
  STEP: Destroying namespace "webhook-markers-192" for this suite. @ 09/21/24 13:25:29.127
• [3.470 seconds]
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 09/21/24 13:25:29.137
  I0921 13:25:29.137042 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename replication-controller @ 09/21/24 13:25:29.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:25:29.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:25:29.156
  STEP: Creating ReplicationController "e2e-rc-rgvc4" @ 09/21/24 13:25:29.159
  I0921 13:25:29.166186 19 rc.go:792] Get Replication Controller "e2e-rc-rgvc4" to confirm replicas
  I0921 13:25:30.166395 19 rc.go:792] Get Replication Controller "e2e-rc-rgvc4" to confirm replicas
  I0921 13:25:30.171770 19 rc.go:801] Found 1 replicas for "e2e-rc-rgvc4" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-rgvc4" @ 09/21/24 13:25:30.171
  STEP: Updating a scale subresource @ 09/21/24 13:25:30.175
  STEP: Verifying replicas where modified for replication controller "e2e-rc-rgvc4" @ 09/21/24 13:25:30.182
  I0921 13:25:30.182242 19 rc.go:792] Get Replication Controller "e2e-rc-rgvc4" to confirm replicas
  I0921 13:25:31.182499 19 rc.go:792] Get Replication Controller "e2e-rc-rgvc4" to confirm replicas
  I0921 13:25:31.186825 19 rc.go:801] Found 2 replicas for "e2e-rc-rgvc4" replication controller
  I0921 13:25:31.187208 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2908" for this suite. @ 09/21/24 13:25:31.195
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 09/21/24 13:25:31.204
  I0921 13:25:31.204926 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 13:25:31.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:25:31.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:25:31.226
  STEP: creating service nodeport-test with type=NodePort in namespace services-1629 @ 09/21/24 13:25:31.231
  STEP: creating replication controller nodeport-test in namespace services-1629 @ 09/21/24 13:25:31.252
  I0921 13:25:31.262595      19 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-1629, replica count: 2
  I0921 13:25:34.314411      19 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0921 13:25:34.314448 19 resource.go:361] Creating new exec pod
  I0921 13:25:37.338477 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1629 exec execpod9tgnl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0921 13:25:37.426445 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0921 13:25:37.426488 19 builder.go:147] stdout: "nodeport-test-sn272"
  I0921 13:25:37.426575 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1629 exec execpod9tgnl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.21 80'
  I0921 13:25:37.505274 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.21 80\nConnection to 10.152.183.21 80 port [tcp/http] succeeded!\n"
  I0921 13:25:37.505314 19 builder.go:147] stdout: ""
  I0921 13:25:38.427207 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1629 exec execpod9tgnl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.21 80'
  I0921 13:25:38.517384 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.21 80\nConnection to 10.152.183.21 80 port [tcp/http] succeeded!\n"
  I0921 13:25:38.517426 19 builder.go:147] stdout: "nodeport-test-d4xvl"
  I0921 13:25:38.517694 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1629 exec execpod9tgnl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.69.84 32681'
  I0921 13:25:38.598783 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.69.84 32681\nConnection to 172.31.69.84 32681 port [tcp/*] succeeded!\n"
  I0921 13:25:38.598831 19 builder.go:147] stdout: "nodeport-test-d4xvl"
  I0921 13:25:38.598914 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1629 exec execpod9tgnl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.2.8 32681'
  I0921 13:25:38.682834 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.2.8 32681\nConnection to 172.31.2.8 32681 port [tcp/*] succeeded!\n"
  I0921 13:25:38.682894 19 builder.go:147] stdout: ""
  I0921 13:25:39.599962 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1629 exec execpod9tgnl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.2.8 32681'
  I0921 13:25:39.682786 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.2.8 32681\nConnection to 172.31.2.8 32681 port [tcp/*] succeeded!\n"
  I0921 13:25:39.682828 19 builder.go:147] stdout: ""
  I0921 13:25:40.599437 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1629 exec execpod9tgnl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.2.8 32681'
  I0921 13:25:40.681939 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.2.8 32681\nConnection to 172.31.2.8 32681 port [tcp/*] succeeded!\n"
  I0921 13:25:40.681977 19 builder.go:147] stdout: ""
  I0921 13:25:41.599518 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-1629 exec execpod9tgnl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.2.8 32681'
  I0921 13:25:41.688473 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.2.8 32681\nConnection to 172.31.2.8 32681 port [tcp/*] succeeded!\n"
  I0921 13:25:41.688517 19 builder.go:147] stdout: "nodeport-test-sn272"
  I0921 13:25:41.688669 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1629" for this suite. @ 09/21/24 13:25:41.694
• [10.497 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 09/21/24 13:25:41.702
  I0921 13:25:41.702633 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 13:25:41.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:25:41.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:25:41.725
  STEP: creating service multiprotocol-test in namespace services-5845 @ 09/21/24 13:25:41.727
  STEP: creating pod pod1 in namespace services-5845 @ 09/21/24 13:25:41.74
  STEP: Creating pod pod1 in namespace services-5845 @ 09/21/24 13:25:41.741
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-5845 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 09/21/24 13:25:43.774
  I0921 13:25:43.788468 19 service.go:4392] successfully validated that service multiprotocol-test in namespace services-5845 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/21/24 13:25:43.788
  I0921 13:25:43.788521 19 resource.go:361] Creating new exec pod
  I0921 13:25:45.814275 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-5845 exec execpod7p582 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.245 80'
  I0921 13:25:45.905084 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.245 80\nConnection to 10.152.183.245 80 port [tcp/http] succeeded!\n"
  I0921 13:25:45.905127 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 13:25:45.905334 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-5845 exec execpod7p582 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.245 80'
  I0921 13:25:49.988819 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.245 80\nConnection to 10.152.183.245 80 port [udp/*] succeeded!\n"
  I0921 13:25:49.988859 19 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 09/21/24 13:25:49.988
  I0921 13:25:49.998683 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-5845 exec execpod7p582 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.245 80'
  I0921 13:25:50.092926 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.245 80\nConnection to 10.152.183.245 80 port [tcp/http] succeeded!\n"
  I0921 13:25:50.092973 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 13:25:50.093063 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-5845 exec execpod7p582 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.245 80'
  I0921 13:25:54.181104 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.245 80\nConnection to 10.152.183.245 80 port [udp/*] succeeded!\n"
  I0921 13:25:54.181234 19 builder.go:147] stdout: ""
  I0921 13:25:54.181298 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-5845 exec execpod7p582 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.245 80'
  I0921 13:25:58.307098 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.245 80\nConnection to 10.152.183.245 80 port [udp/*] succeeded!\n"
  I0921 13:25:58.307153 19 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 09/21/24 13:25:58.307
  I0921 13:25:58.319601 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-5845 exec execpod7p582 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.245 80'
  I0921 13:26:02.413145 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.245 80\nConnection to 10.152.183.245 80 port [udp/*] succeeded!\n"
  I0921 13:26:02.413184 19 builder.go:147] stdout: "pod1"
  I0921 13:26:02.413283 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-5845 exec execpod7p582 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.245 80'
  I0921 13:26:04.505248 19 builder.go:135] rc: 1
  I0921 13:26:04.505312 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-5845 exec execpod7p582 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.245 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.245 80
  nc: connect to 10.152.183.245 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0921 13:26:04.505403 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-5845 exec execpod7p582 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.245 80'
  I0921 13:26:06.589740 19 builder.go:135] rc: 1
  I0921 13:26:06.589798 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-5845 exec execpod7p582 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.245 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.245 80
  nc: connect to 10.152.183.245 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0921 13:26:06.589870 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-5845 exec execpod7p582 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.245 80'
  I0921 13:26:08.673829 19 builder.go:135] rc: 1
  I0921 13:26:08.673894 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-5845 exec execpod7p582 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.245 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.245 80
  nc: connect to 10.152.183.245 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0921 13:26:08.674076 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5845" for this suite. @ 09/21/24 13:26:08.678
• [26.986 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/21/24 13:26:08.688
  I0921 13:26:08.688546 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename watch @ 09/21/24 13:26:08.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:26:08.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:26:08.71
  STEP: creating a new configmap @ 09/21/24 13:26:08.713
  STEP: modifying the configmap once @ 09/21/24 13:26:08.718
  STEP: modifying the configmap a second time @ 09/21/24 13:26:08.728
  STEP: deleting the configmap @ 09/21/24 13:26:08.737
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/21/24 13:26:08.746
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/21/24 13:26:08.747
  I0921 13:26:08.747600 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2984  116f9430-c07e-4d1f-a8ce-363046c498e5 39663 0 2024-09-21 13:26:08 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-09-21 13:26:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 13:26:08.747707 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2984  116f9430-c07e-4d1f-a8ce-363046c498e5 39664 0 2024-09-21 13:26:08 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-09-21 13:26:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 13:26:08.747800 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2984" for this suite. @ 09/21/24 13:26:08.752
• [0.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 09/21/24 13:26:08.761
  I0921 13:26:08.761217 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename cronjob @ 09/21/24 13:26:08.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:26:08.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:26:08.781
  STEP: Creating a cronjob @ 09/21/24 13:26:08.783
  STEP: creating @ 09/21/24 13:26:08.783
  STEP: getting @ 09/21/24 13:26:08.79
  STEP: listing @ 09/21/24 13:26:08.793
  STEP: watching @ 09/21/24 13:26:08.797
  I0921 13:26:08.797601 19 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 09/21/24 13:26:08.798
  STEP: cluster-wide watching @ 09/21/24 13:26:08.803
  I0921 13:26:08.803069 19 cronjob.go:382] starting watch
  STEP: patching @ 09/21/24 13:26:08.803
  STEP: updating @ 09/21/24 13:26:08.809
  I0921 13:26:08.819971 19 cronjob.go:406] waiting for watch events with expected annotations
  I0921 13:26:08.819998 19 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 09/21/24 13:26:08.82
  STEP: updating /status @ 09/21/24 13:26:08.825
  STEP: get /status @ 09/21/24 13:26:08.834
  STEP: deleting @ 09/21/24 13:26:08.838
  STEP: deleting a collection @ 09/21/24 13:26:08.857
  I0921 13:26:08.872471 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-588" for this suite. @ 09/21/24 13:26:08.877
• [0.125 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 09/21/24 13:26:08.885
  I0921 13:26:08.885901 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-runtime @ 09/21/24 13:26:08.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:26:08.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:26:08.906
  STEP: create the container @ 09/21/24 13:26:08.909
  W0921 13:26:08.918139      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/21/24 13:26:08.918
  STEP: get the container status @ 09/21/24 13:26:11.939
  STEP: the container should be terminated @ 09/21/24 13:26:11.943
  STEP: the termination message should be set @ 09/21/24 13:26:11.943
  I0921 13:26:11.943767 19 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/21/24 13:26:11.943
  I0921 13:26:11.966708 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7289" for this suite. @ 09/21/24 13:26:11.97
• [3.093 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 09/21/24 13:26:11.978
  I0921 13:26:11.978904 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 13:26:11.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:26:11.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:26:12
  STEP: creating a collection of services @ 09/21/24 13:26:12.003
  I0921 13:26:12.003132 19 service.go:3655] Creating e2e-svc-a-v7sqp
  I0921 13:26:12.015998 19 service.go:3655] Creating e2e-svc-b-9ftlh
  I0921 13:26:12.030084 19 service.go:3655] Creating e2e-svc-c-277f9
  STEP: deleting service collection @ 09/21/24 13:26:12.046
  I0921 13:26:12.084815 19 service.go:3690] Collection of services has been deleted
  I0921 13:26:12.084940 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4393" for this suite. @ 09/21/24 13:26:12.089
• [0.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 09/21/24 13:26:12.097
  I0921 13:26:12.097782 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 13:26:12.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:26:12.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:26:12.115
  STEP: Setting up server cert @ 09/21/24 13:26:12.135
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 13:26:12.376
  STEP: Deploying the webhook pod @ 09/21/24 13:26:12.384
  STEP: Wait for the deployment to be ready @ 09/21/24 13:26:12.398
  I0921 13:26:12.410025 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 13:26:14.422
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 13:26:14.437
  I0921 13:26:15.437547 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/21/24 13:26:15.521
  STEP: Creating a configMap that should be mutated @ 09/21/24 13:26:15.532
  STEP: Deleting the collection of validation webhooks @ 09/21/24 13:26:15.559
  STEP: Creating a configMap that should not be mutated @ 09/21/24 13:26:15.632
  I0921 13:26:15.691331 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9214" for this suite. @ 09/21/24 13:26:15.698
  STEP: Destroying namespace "webhook-markers-6823" for this suite. @ 09/21/24 13:26:15.708
• [3.618 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/21/24 13:26:15.716
  I0921 13:26:15.716438 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pod-network-test @ 09/21/24 13:26:15.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:26:15.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:26:15.738
  STEP: Performing setup for networking test in namespace pod-network-test-256 @ 09/21/24 13:26:15.74
  STEP: creating a selector @ 09/21/24 13:26:15.74
  STEP: Creating the service pods in kubernetes @ 09/21/24 13:26:15.74
  I0921 13:26:15.740673 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/21/24 13:26:27.841
  I0921 13:26:29.863586 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0921 13:26:29.863625 19 networking.go:42] Breadth first check of 192.168.171.160 on host 172.31.2.8...
  I0921 13:26:29.868402 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.27.4:9080/dial?request=hostname&protocol=http&host=192.168.171.160&port=8083&tries=1'] Namespace:pod-network-test-256 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 13:26:29.868428 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 13:26:29.868876 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 13:26:29.868919 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-256/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.27.4%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.171.160%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0921 13:26:29.908003 19 utils.go:356] Waiting for responses: map[]
  I0921 13:26:29.908039 19 utils.go:360] reached 192.168.171.160 after 0/1 tries
  I0921 13:26:29.908050 19 networking.go:42] Breadth first check of 192.168.126.147 on host 172.31.69.84...
  I0921 13:26:29.912794 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.27.4:9080/dial?request=hostname&protocol=http&host=192.168.126.147&port=8083&tries=1'] Namespace:pod-network-test-256 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 13:26:29.912818 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 13:26:29.913215 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 13:26:29.913253 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-256/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.27.4%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.126.147%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0921 13:26:29.956196 19 utils.go:356] Waiting for responses: map[]
  I0921 13:26:29.956234 19 utils.go:360] reached 192.168.126.147 after 0/1 tries
  I0921 13:26:29.956247 19 networking.go:42] Breadth first check of 192.168.27.3 on host 172.31.95.123...
  I0921 13:26:29.960158 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.27.4:9080/dial?request=hostname&protocol=http&host=192.168.27.3&port=8083&tries=1'] Namespace:pod-network-test-256 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0921 13:26:29.960180 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 13:26:29.960621 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0921 13:26:29.960668 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-256/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.27.4%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.27.3%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0921 13:26:29.997969 19 utils.go:356] Waiting for responses: map[]
  I0921 13:26:29.998007 19 utils.go:360] reached 192.168.27.3 after 0/1 tries
  I0921 13:26:29.998017 19 networking.go:53] Going to retry 0 out of 3 pods....
  I0921 13:26:29.998117 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-256" for this suite. @ 09/21/24 13:26:30.003
• [14.296 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 09/21/24 13:26:30.012
  I0921 13:26:30.012464 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename resourcequota @ 09/21/24 13:26:30.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:26:30.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:26:30.031
  STEP: Counting existing ResourceQuota @ 09/21/24 13:26:30.034
  STEP: Creating a ResourceQuota @ 09/21/24 13:26:35.038
  STEP: Ensuring resource quota status is calculated @ 09/21/24 13:26:35.045
  STEP: Creating a Service @ 09/21/24 13:26:37.05
  STEP: Creating a NodePort Service @ 09/21/24 13:26:37.07
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/21/24 13:26:37.099
  STEP: Ensuring resource quota status captures service creation @ 09/21/24 13:26:37.128
  STEP: Deleting Services @ 09/21/24 13:26:39.133
  STEP: Ensuring resource quota status released usage @ 09/21/24 13:26:39.179
  I0921 13:26:41.186866 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9483" for this suite. @ 09/21/24 13:26:41.192
• [11.189 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 09/21/24 13:26:41.201
  I0921 13:26:41.201772 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-probe @ 09/21/24 13:26:41.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:26:41.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:26:41.22
  I0921 13:27:41.239828 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4951" for this suite. @ 09/21/24 13:27:41.245
• [60.052 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/21/24 13:27:41.253
  I0921 13:27:41.253907 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename endpointslice @ 09/21/24 13:27:41.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:27:41.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:27:41.274
  STEP: referencing a single matching pod @ 09/21/24 13:27:43.359
  STEP: referencing matching pods with named port @ 09/21/24 13:27:43.366
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/21/24 13:27:43.375
  STEP: recreating EndpointSlices after they've been deleted @ 09/21/24 13:27:43.383
  I0921 13:27:43.407587 19 endpointslice.go:938] EndpointSlice for Service endpointslice-659/example-named-port not found
  I0921 13:27:45.415953 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-659" for this suite. @ 09/21/24 13:27:45.42
• [4.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 09/21/24 13:27:45.428
  I0921 13:27:45.428770 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 13:27:45.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:27:45.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:27:45.449
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-71311a4a-1b5e-4e04-8907-2cfe50ede568 @ 09/21/24 13:27:45.456
  STEP: Creating the pod @ 09/21/24 13:27:45.461
  STEP: Updating configmap projected-configmap-test-upd-71311a4a-1b5e-4e04-8907-2cfe50ede568 @ 09/21/24 13:27:47.5
  STEP: waiting to observe update in volume @ 09/21/24 13:27:47.506
  I0921 13:29:05.935836 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-254" for this suite. @ 09/21/24 13:29:05.94
• [80.520 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/21/24 13:29:05.949
  I0921 13:29:05.949228 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename replicaset @ 09/21/24 13:29:05.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:29:05.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:29:05.97
  STEP: Create a ReplicaSet @ 09/21/24 13:29:05.973
  STEP: Verify that the required pods have come up @ 09/21/24 13:29:05.979
  I0921 13:29:05.984034 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0921 13:29:10.988824 19 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/21/24 13:29:10.988
  I0921 13:29:10.993310 19 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/21/24 13:29:10.993
  STEP: DeleteCollection of the ReplicaSets @ 09/21/24 13:29:10.996
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/21/24 13:29:11.006
  I0921 13:29:11.011560 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9429" for this suite. @ 09/21/24 13:29:11.016
• [5.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 09/21/24 13:29:11.034
  I0921 13:29:11.034821 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename resourcequota @ 09/21/24 13:29:11.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:29:11.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:29:11.056
  STEP: Counting existing ResourceQuota @ 09/21/24 13:29:11.059
  STEP: Creating a ResourceQuota @ 09/21/24 13:29:16.063
  STEP: Ensuring resource quota status is calculated @ 09/21/24 13:29:16.071
  I0921 13:29:18.076908 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6165" for this suite. @ 09/21/24 13:29:18.08
• [7.055 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 09/21/24 13:29:18.089
  I0921 13:29:18.089734 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename configmap @ 09/21/24 13:29:18.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:29:18.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:29:18.11
  STEP: Creating configMap with name cm-test-opt-del-2b1c77ab-cef1-438a-b669-b132a24ed1c5 @ 09/21/24 13:29:18.116
  STEP: Creating configMap with name cm-test-opt-upd-7fc9d780-1c55-4f27-99c6-8419416a2c56 @ 09/21/24 13:29:18.123
  STEP: Creating the pod @ 09/21/24 13:29:18.129
  STEP: Deleting configmap cm-test-opt-del-2b1c77ab-cef1-438a-b669-b132a24ed1c5 @ 09/21/24 13:29:20.183
  STEP: Updating configmap cm-test-opt-upd-7fc9d780-1c55-4f27-99c6-8419416a2c56 @ 09/21/24 13:29:20.192
  STEP: Creating configMap with name cm-test-opt-create-c5d772e9-f11d-44d6-bd9a-a081891e5407 @ 09/21/24 13:29:20.198
  STEP: waiting to observe update in volume @ 09/21/24 13:29:20.203
  I0921 13:30:26.582948 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6673" for this suite. @ 09/21/24 13:30:26.587
• [68.506 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 09/21/24 13:30:26.596
  I0921 13:30:26.596217 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-probe @ 09/21/24 13:30:26.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:30:26.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:30:26.613
  I0921 13:30:48.705606 19 container_probe.go:92] Container started at 2024-09-21 13:30:27 +0000 UTC, pod became ready at 2024-09-21 13:30:46 +0000 UTC
  I0921 13:30:48.705721 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3956" for this suite. @ 09/21/24 13:30:48.71
• [22.123 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 09/21/24 13:30:48.718
  I0921 13:30:48.718893 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 13:30:48.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:30:48.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:30:48.739
  STEP: Setting up server cert @ 09/21/24 13:30:48.763
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 13:30:49.007
  STEP: Deploying the webhook pod @ 09/21/24 13:30:49.019
  STEP: Wait for the deployment to be ready @ 09/21/24 13:30:49.033
  I0921 13:30:49.050248 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 13:30:51.064
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 13:30:51.078
  I0921 13:30:52.078916 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/21/24 13:30:52.087
  I0921 13:30:52.134181 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2817" for this suite. @ 09/21/24 13:30:52.139
  STEP: Destroying namespace "webhook-markers-2353" for this suite. @ 09/21/24 13:30:52.148
• [3.438 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/21/24 13:30:52.157
  I0921 13:30:52.157074 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename endpointslice @ 09/21/24 13:30:52.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:30:52.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:30:52.176
  I0921 13:30:54.233818 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5794" for this suite. @ 09/21/24 13:30:54.237
• [2.088 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/21/24 13:30:54.245
  I0921 13:30:54.245358 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename watch @ 09/21/24 13:30:54.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:30:54.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:30:54.262
  STEP: getting a starting resourceVersion @ 09/21/24 13:30:54.265
  STEP: starting a background goroutine to produce watch events @ 09/21/24 13:30:54.268
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/21/24 13:30:54.268
  I0921 13:30:57.052297 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8954" for this suite. @ 09/21/24 13:30:57.102
• [2.910 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 09/21/24 13:30:57.155
  I0921 13:30:57.155949 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename svcaccounts @ 09/21/24 13:30:57.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:30:57.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:30:57.182
  I0921 13:30:57.199085 19 service_accounts.go:618] created pod
  STEP: Saw pod success @ 09/21/24 13:31:01.216
  I0921 13:31:31.217390 19 service_accounts.go:624] polling logs
  I0921 13:31:31.226739 19 service_accounts.go:634] Pod logs: 
  I0921 13:30:57.754022       1 log.go:245] OK: Got token
  I0921 13:30:57.754093       1 log.go:245] validating with in-cluster discovery
  I0921 13:30:57.754318       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0921 13:30:57.754542       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-1678:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002c4f60), NotBefore:(*jwt.NumericDate)(0xc0002c5050), IssuedAt:(*jwt.NumericDate)(0xc0002c4f70), ID:"3e052dea-034b-47e8-bc05-0c93c25d58ae"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1678", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"cb83dea2-445f-4571-9952-9cdb4b9c5043"}}}
  I0921 13:30:57.760238       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0921 13:30:57.763037       1 log.go:245] OK: Validated signature on JWT
  I0921 13:30:57.763128       1 log.go:245] OK: Got valid claims from token!
  I0921 13:30:57.763145       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-1678:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012a38), NotBefore:(*jwt.NumericDate)(0xc000012a80), IssuedAt:(*jwt.NumericDate)(0xc000012a40), ID:"3e052dea-034b-47e8-bc05-0c93c25d58ae"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1678", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"cb83dea2-445f-4571-9952-9cdb4b9c5043"}}}

  I0921 13:31:31.226779 19 service_accounts.go:638] completed pod
  I0921 13:31:31.235616 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1678" for this suite. @ 09/21/24 13:31:31.24
• [34.093 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 09/21/24 13:31:31.249
  I0921 13:31:31.249166 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 13:31:31.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:31:31.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:31:31.27
  STEP: creating service multi-endpoint-test in namespace services-6524 @ 09/21/24 13:31:31.272
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6524 to expose endpoints map[] @ 09/21/24 13:31:31.284
  I0921 13:31:31.295653 19 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I0921 13:31:32.310445 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-6524 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-6524 @ 09/21/24 13:31:32.31
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6524 to expose endpoints map[pod1:[100]] @ 09/21/24 13:31:34.337
  I0921 13:31:34.349616 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-6524 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-6524 @ 09/21/24 13:31:34.349
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6524 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/21/24 13:31:36.372
  I0921 13:31:36.393093 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-6524 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/21/24 13:31:36.393
  I0921 13:31:36.393135 19 resource.go:361] Creating new exec pod
  I0921 13:31:39.412837 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-6524 exec execpodn7lq2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0921 13:31:39.501640 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0921 13:31:39.501684 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 13:31:39.501759 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-6524 exec execpodn7lq2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.202 80'
  I0921 13:31:39.589705 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.202 80\nConnection to 10.152.183.202 80 port [tcp/http] succeeded!\n"
  I0921 13:31:39.589749 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 13:31:39.589829 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-6524 exec execpodn7lq2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0921 13:31:39.672313 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0921 13:31:39.672369 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0921 13:31:39.672490 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=services-6524 exec execpodn7lq2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.202 81'
  I0921 13:31:39.753169 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.202 81\nConnection to 10.152.183.202 81 port [tcp/*] succeeded!\n"
  I0921 13:31:39.753210 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-6524 @ 09/21/24 13:31:39.753
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6524 to expose endpoints map[pod2:[101]] @ 09/21/24 13:31:39.767
  I0921 13:31:39.785884 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-6524 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-6524 @ 09/21/24 13:31:39.785
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6524 to expose endpoints map[] @ 09/21/24 13:31:39.806
  I0921 13:31:39.816572 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-6524 exposes endpoints map[]
  I0921 13:31:39.835722 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6524" for this suite. @ 09/21/24 13:31:39.84
• [8.600 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 09/21/24 13:31:39.849
  I0921 13:31:39.849360 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename var-expansion @ 09/21/24 13:31:39.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:31:39.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:31:39.867
  STEP: Creating a pod to test substitution in volume subpath @ 09/21/24 13:31:39.871
  STEP: Saw pod success @ 09/21/24 13:31:43.897
  I0921 13:31:43.902950 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod var-expansion-61d57150-673b-47a8-85b5-cfa906217cd0 container dapi-container: <nil>
  STEP: delete the pod @ 09/21/24 13:31:43.911
  I0921 13:31:43.929816 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3412" for this suite. @ 09/21/24 13:31:43.935
• [4.095 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 09/21/24 13:31:43.944
  I0921 13:31:43.944183 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename svcaccounts @ 09/21/24 13:31:43.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:31:43.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:31:43.961
  STEP: reading a file in the container @ 09/21/24 13:31:45.992
  I0921 13:31:45.992808 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2388 pod-service-account-b6cfbe48-4d89-4c81-acac-aa89c8f0f569 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/21/24 13:31:46.08
  I0921 13:31:46.080694 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2388 pod-service-account-b6cfbe48-4d89-4c81-acac-aa89c8f0f569 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/21/24 13:31:46.165
  I0921 13:31:46.165179 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2388 pod-service-account-b6cfbe48-4d89-4c81-acac-aa89c8f0f569 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0921 13:31:46.251874 19 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-2388"
  I0921 13:31:46.253495 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2388" for this suite. @ 09/21/24 13:31:46.257
• [2.321 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/21/24 13:31:46.265
  I0921 13:31:46.265673 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename daemonsets @ 09/21/24 13:31:46.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:31:46.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:31:46.284
  STEP: Creating simple DaemonSet "daemon-set" @ 09/21/24 13:31:46.309
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/21/24 13:31:46.315
  I0921 13:31:46.322781 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:31:46.322820 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:31:46.326640 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 13:31:46.326660 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  I0921 13:31:47.321891 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:31:47.321931 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:31:47.325940 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 13:31:47.325960 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  I0921 13:31:48.322199 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:31:48.322249 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:31:48.326614 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0921 13:31:48.326637 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/21/24 13:31:48.33
  I0921 13:31:48.350661 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:31:48.350708 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:31:48.355509 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0921 13:31:48.355530 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  I0921 13:31:49.350410 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:31:49.350462 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:31:49.355548 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0921 13:31:49.355577 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  I0921 13:31:50.350231 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:31:50.350279 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:31:50.355160 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0921 13:31:50.355177 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/21/24 13:31:50.359
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2843, will wait for the garbage collector to delete the pods @ 09/21/24 13:31:50.359
  I0921 13:31:50.423267 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.080165ms
  I0921 13:31:50.523512 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.239442ms
  I0921 13:31:51.629528 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 13:31:51.629560 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0921 13:31:51.634455 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41534"},"items":null}

  I0921 13:31:51.638986 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41534"},"items":null}

  I0921 13:31:51.657509 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2843" for this suite. @ 09/21/24 13:31:51.661
• [5.406 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/21/24 13:31:51.671
  I0921 13:31:51.671603 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename limitrange @ 09/21/24 13:31:51.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:31:51.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:31:51.692
  STEP: Creating a LimitRange @ 09/21/24 13:31:51.694
  STEP: Setting up watch @ 09/21/24 13:31:51.694
  STEP: Submitting a LimitRange @ 09/21/24 13:31:51.798
  STEP: Verifying LimitRange creation was observed @ 09/21/24 13:31:51.805
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/21/24 13:31:51.806
  I0921 13:31:51.809818 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0921 13:31:51.809848 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/21/24 13:31:51.809
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/21/24 13:31:51.815
  I0921 13:31:51.819501 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0921 13:31:51.819530 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/21/24 13:31:51.819
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/21/24 13:31:51.825
  I0921 13:31:51.829713 19 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0921 13:31:51.829735 19 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/21/24 13:31:51.829
  STEP: Failing to create a Pod with more than max resources @ 09/21/24 13:31:51.831
  STEP: Updating a LimitRange @ 09/21/24 13:31:51.832
  STEP: Verifying LimitRange updating is effective @ 09/21/24 13:31:51.839
  STEP: Creating a Pod with less than former min resources @ 09/21/24 13:31:53.848
  STEP: Failing to create a Pod with more than max resources @ 09/21/24 13:31:53.859
  STEP: Deleting a LimitRange @ 09/21/24 13:31:53.864
  STEP: Verifying the LimitRange was deleted @ 09/21/24 13:31:53.877
  I0921 13:31:58.885189 19 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/21/24 13:31:58.885
  I0921 13:31:58.899550 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5911" for this suite. @ 09/21/24 13:31:58.908
• [7.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/21/24 13:31:58.921
  I0921 13:31:58.921781 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename lease-test @ 09/21/24 13:31:58.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:31:58.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:31:58.952
  I0921 13:31:59.027738 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-8019" for this suite. @ 09/21/24 13:31:59.032
• [0.119 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 09/21/24 13:31:59.04
  I0921 13:31:59.040864 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename containers @ 09/21/24 13:31:59.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:31:59.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:31:59.06
  I0921 13:32:01.093378 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8497" for this suite. @ 09/21/24 13:32:01.097
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 09/21/24 13:32:01.107
  I0921 13:32:01.107134 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename security-context @ 09/21/24 13:32:01.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:32:01.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:32:01.13
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/21/24 13:32:01.132
  STEP: Saw pod success @ 09/21/24 13:32:05.158
  I0921 13:32:05.162533 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod security-context-9764ec15-cad6-4439-ad11-4304d3e4fce9 container test-container: <nil>
  STEP: delete the pod @ 09/21/24 13:32:05.171
  I0921 13:32:05.192371 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7464" for this suite. @ 09/21/24 13:32:05.195
• [4.097 seconds]
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 09/21/24 13:32:05.204
  I0921 13:32:05.204324 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename job @ 09/21/24 13:32:05.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:32:05.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:32:05.224
  STEP: Creating a job @ 09/21/24 13:32:05.226
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/21/24 13:32:05.231
  STEP: patching /status @ 09/21/24 13:32:07.236
  STEP: updating /status @ 09/21/24 13:32:07.245
  STEP: get /status @ 09/21/24 13:32:07.253
  I0921 13:32:07.258122 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4261" for this suite. @ 09/21/24 13:32:07.262
• [2.067 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/21/24 13:32:07.271
  I0921 13:32:07.271717 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename disruption @ 09/21/24 13:32:07.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:32:07.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:32:07.291
  STEP: Waiting for the pdb to be processed @ 09/21/24 13:32:07.3
  STEP: Waiting for all pods to be running @ 09/21/24 13:32:07.337
  I0921 13:32:07.347447 19 disruption.go:691] running pods: 0 < 3
  I0921 13:32:09.349464 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4507" for this suite. @ 09/21/24 13:32:09.354
• [2.091 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/21/24 13:32:09.363
  I0921 13:32:09.363117 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename csi-storageclass @ 09/21/24 13:32:09.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:32:09.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:32:09.383
  STEP: Creating a StorageClass @ 09/21/24 13:32:09.385
  STEP: Get StorageClass "e2e-j8vpx" @ 09/21/24 13:32:09.391
  STEP: Patching the StorageClass "e2e-j8vpx" @ 09/21/24 13:32:09.395
  STEP: Delete StorageClass "e2e-j8vpx" @ 09/21/24 13:32:09.402
  STEP: Confirm deletion of StorageClass "e2e-j8vpx" @ 09/21/24 13:32:09.41
  STEP: Create a replacement StorageClass @ 09/21/24 13:32:09.414
  STEP: Updating StorageClass "e2e-v2-tf7l9" @ 09/21/24 13:32:09.418
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-tf7l9=updated" @ 09/21/24 13:32:09.428
  STEP: Deleting StorageClass "e2e-v2-tf7l9" via DeleteCollection @ 09/21/24 13:32:09.431
  STEP: Confirm deletion of StorageClass "e2e-v2-tf7l9" @ 09/21/24 13:32:09.442
  I0921 13:32:09.447385 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-1795" for this suite. @ 09/21/24 13:32:09.451
• [0.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/21/24 13:32:09.459
  I0921 13:32:09.459226 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 13:32:09.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:32:09.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:32:09.478
  STEP: Creating projection with secret that has name projected-secret-test-map-cbecf328-26f5-4f4f-b878-3e4cc3982408 @ 09/21/24 13:32:09.48
  STEP: Creating a pod to test consume secrets @ 09/21/24 13:32:09.486
  STEP: Saw pod success @ 09/21/24 13:32:13.512
  I0921 13:32:13.517248 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-projected-secrets-ecea761d-bd16-4e19-9666-a05d881bf815 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 13:32:13.525
  I0921 13:32:13.546485 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4038" for this suite. @ 09/21/24 13:32:13.55
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 09/21/24 13:32:13.56
  I0921 13:32:13.560389 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir @ 09/21/24 13:32:13.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:32:13.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:32:13.579
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/21/24 13:32:13.582
  STEP: Saw pod success @ 09/21/24 13:32:17.606
  I0921 13:32:17.611059 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-1320e6d8-c601-4064-9081-ac5ffd6eaccb container test-container: <nil>
  STEP: delete the pod @ 09/21/24 13:32:17.619
  I0921 13:32:17.639841 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9278" for this suite. @ 09/21/24 13:32:17.644
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 09/21/24 13:32:17.652
  I0921 13:32:17.652227 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 13:32:17.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:32:17.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:32:17.675
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 13:32:17.677
  STEP: Saw pod success @ 09/21/24 13:32:21.705
  I0921 13:32:21.710294 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downwardapi-volume-3e21bd8f-2313-4534-808e-19988734ad8b container client-container: <nil>
  STEP: delete the pod @ 09/21/24 13:32:21.717
  I0921 13:32:21.738729 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-298" for this suite. @ 09/21/24 13:32:21.743
• [4.100 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/21/24 13:32:21.752
  I0921 13:32:21.752051 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename deployment @ 09/21/24 13:32:21.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:32:21.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:32:21.772
  I0921 13:32:21.785924 19 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0921 13:32:26.792745 19 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/21/24 13:32:26.792
  I0921 13:32:26.792813 19 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/21/24 13:32:26.804
  I0921 13:32:28.829534 19 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6198",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b57ffe4e-c181-4bdc-aab9-28e7e534302b",
      ResourceVersion: (string) (len=5) "42098",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862522346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862522346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862522347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862522346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862522346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862522347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862522346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=75) "ReplicaSet \"test-cleanup-deployment-898f8f847\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0921 13:32:28.835934 19 deployment.go:39] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6198",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2c679da-b177-4aca-bfe3-25339bb22d5f",
      ResourceVersion: (string) (len=5) "42088",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862522346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "b57ffe4e-c181-4bdc-aab9-28e7e534302b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862522346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 35 37 66 66 65  34 65 2d 63 31 38 31 2d  |\"b57ffe4e-c181-|
              00000120  34 62 64 63 2d 61 61 62  39 2d 32 38 65 37 65 35  |4bdc-aab9-28e7e5|
              00000130  33 34 33 30 32 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |34302b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862522347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0921 13:32:28.840559 19 deployment.go:67] Pod "test-cleanup-deployment-898f8f847-t9zdg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-cleanup-deployment-898f8f847-t9zdg",
      GenerateName: (string) (len=34) "test-cleanup-deployment-898f8f847-",
      Namespace: (string) (len=15) "deployment-6198",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a615476-681c-44f7-8afa-edaa4201a123",
      ResourceVersion: (string) (len=5) "42087",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862522346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
          UID: (types.UID) (len=36) "d2c679da-b177-4aca-bfe3-25339bb22d5f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862522346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  63 36 37 39 64 61 2d 62  |d\":\"d2c679da-b|
              00000090  31 37 37 2d 34 61 63 61  2d 62 66 65 33 2d 32 35  |177-4aca-bfe3-25|
              000000a0  33 33 39 62 62 32 32 64  35 66 5c 22 7d 22 3a 7b  |339bb22d5f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862522347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 37  2e 31 33 5c 22 7d 22 3a  |2.168.27.13\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x87rz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x87rz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-95-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862522347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862522346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862522347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862522347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63862522346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.95.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.95.123"
        }
      },
      PodIP: (string) (len=13) "192.168.27.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.27.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63862522346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63862522347,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://d7c7704a0d8e9062c8bcb94caf9c99674a8dec60dcceabd068e4488e2fe63d95",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x87rz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0921 13:32:28.841686 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6198" for this suite. @ 09/21/24 13:32:28.846
• [7.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/21/24 13:32:28.857
  I0921 13:32:28.857204 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pods @ 09/21/24 13:32:28.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:32:28.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:32:28.875
  STEP: Saw pod success @ 09/21/24 13:32:34.949
  I0921 13:32:34.953997 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod client-envvars-625de94c-e3e1-41d8-ad39-c063728d5686 container env3cont: <nil>
  STEP: delete the pod @ 09/21/24 13:32:34.97
  I0921 13:32:34.992979 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3840" for this suite. @ 09/21/24 13:32:34.997
• [6.149 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 09/21/24 13:32:35.006
  I0921 13:32:35.006785 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/21/24 13:32:35.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:32:35.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:32:35.027
  STEP: getting /apis @ 09/21/24 13:32:35.034
  STEP: getting /apis/admissionregistration.k8s.io @ 09/21/24 13:32:35.037
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/21/24 13:32:35.038
  STEP: creating @ 09/21/24 13:32:35.039
  STEP: getting @ 09/21/24 13:32:35.061
  STEP: listing @ 09/21/24 13:32:35.068
  STEP: watching @ 09/21/24 13:32:35.074
  I0921 13:32:35.074562 19 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 09/21/24 13:32:35.075
  STEP: updating @ 09/21/24 13:32:35.08
  I0921 13:32:35.093843 19 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  I0921 13:32:35.093876 19 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 09/21/24 13:32:35.093
  STEP: patching /status @ 09/21/24 13:32:35.097
  STEP: updating /status @ 09/21/24 13:32:35.106
  STEP: deleting @ 09/21/24 13:32:35.14
  STEP: deleting a collection @ 09/21/24 13:32:35.157
  I0921 13:32:35.183832 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6973" for this suite. @ 09/21/24 13:32:35.188
• [0.192 seconds]
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/21/24 13:32:35.198
  I0921 13:32:35.198671 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename certificates @ 09/21/24 13:32:35.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:32:35.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:32:35.217
  STEP: getting /apis @ 09/21/24 13:32:35.56
  STEP: getting /apis/certificates.k8s.io @ 09/21/24 13:32:35.563
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/21/24 13:32:35.564
  STEP: creating @ 09/21/24 13:32:35.565
  STEP: getting @ 09/21/24 13:32:35.585
  STEP: listing @ 09/21/24 13:32:35.589
  STEP: watching @ 09/21/24 13:32:35.594
  I0921 13:32:35.594165 19 certificates.go:316] starting watch
  STEP: patching @ 09/21/24 13:32:35.595
  STEP: updating @ 09/21/24 13:32:35.602
  I0921 13:32:35.608021 19 certificates.go:332] waiting for watch events with expected annotations
  I0921 13:32:35.608063 19 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/21/24 13:32:35.608
  STEP: patching /approval @ 09/21/24 13:32:35.612
  STEP: updating /approval @ 09/21/24 13:32:35.618
  STEP: getting /status @ 09/21/24 13:32:35.626
  STEP: patching /status @ 09/21/24 13:32:35.631
  STEP: updating /status @ 09/21/24 13:32:35.639
  STEP: deleting @ 09/21/24 13:32:35.647
  STEP: deleting a collection @ 09/21/24 13:32:35.663
  I0921 13:32:35.687046 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-3665" for this suite. @ 09/21/24 13:32:35.691
• [0.503 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/21/24 13:32:35.702
  I0921 13:32:35.702442 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename init-container @ 09/21/24 13:32:35.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:32:35.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:32:35.718
  STEP: creating the pod @ 09/21/24 13:32:35.721
  I0921 13:32:35.721162 19 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0921 13:33:18.577019 19 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-339c304b-2cc5-4f60-8fc0-4f288ce8d063", GenerateName:"", Namespace:"init-container-4339", SelfLink:"", UID:"68e190c3-012b-4a9b-b005-0c6a6fdf5a89", ResourceVersion:"42376", Generation:0, CreationTimestamp:time.Date(2024, time.September, 21, 13, 32, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"721154248"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 32, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c8150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 21, 13, 33, 18, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c8198), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-v9dnp", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc003aa02c0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-v9dnp", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-v9dnp", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-v9dnp", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0056592d8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-69-84", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc005640700), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005659360)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005659380)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc005659388), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00565938c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00505f1e0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 21, 13, 32, 36, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 21, 13, 32, 35, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 21, 13, 32, 35, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 21, 13, 32, 35, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 21, 13, 32, 35, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.69.84", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.69.84"}}, PodIP:"192.168.126.159", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.126.159"}}, StartTime:time.Date(2024, time.September, 21, 13, 32, 35, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004edc00)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004edc70)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://519c8a4c418e79d61cb148b38536fe901875dd5508461921810bdcb6e4387db8", Started:(*bool)(0xc00565943a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-v9dnp", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00505f210)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003aa0320), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00565944d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-v9dnp", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00505f230)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003aa0300), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc00565940f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-v9dnp", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00505f1f0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0921 13:33:18.577268 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4339" for this suite. @ 09/21/24 13:33:18.583
• [42.891 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 09/21/24 13:33:18.593
  I0921 13:33:18.593990 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir @ 09/21/24 13:33:18.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:33:18.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:33:18.618
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/21/24 13:33:18.621
  STEP: Saw pod success @ 09/21/24 13:33:22.648
  I0921 13:33:22.652853 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-9e4f95dd-c43b-477f-88b3-39916f2aea91 container test-container: <nil>
  STEP: delete the pod @ 09/21/24 13:33:22.661
  I0921 13:33:22.683016 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5981" for this suite. @ 09/21/24 13:33:22.687
• [4.101 seconds]
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/21/24 13:33:22.694
  I0921 13:33:22.694882 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename chunking @ 09/21/24 13:33:22.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:33:22.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:33:22.713
  STEP: creating a large number of resources @ 09/21/24 13:33:22.716
  STEP: retrieving those results in paged fashion several times @ 09/21/24 13:33:40.401
  I0921 13:33:40.450304 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0921 13:33:40.500917 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0921 13:33:40.549103 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0921 13:33:40.600287 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0921 13:33:40.651000 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0921 13:33:40.699802 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0921 13:33:40.750317 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0921 13:33:40.801493 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0921 13:33:40.849902 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0921 13:33:40.900899 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0921 13:33:40.950626 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0921 13:33:41.000589 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0921 13:33:41.051110 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0921 13:33:41.101564 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0921 13:33:41.149942 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0921 13:33:41.200641 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0921 13:33:41.250732 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0921 13:33:41.299676 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0921 13:33:41.349852 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0921 13:33:41.400773 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0921 13:33:41.449052 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0921 13:33:41.499888 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0921 13:33:41.550485 19 chunking.go:98] Retrieved 17/17 results with rv 42878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0921 13:33:41.600267 19 chunking.go:98] Retrieved 9/17 results with rv 42878 and continue 
  I0921 13:33:41.650434 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0921 13:33:41.701249 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0921 13:33:41.749902 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0921 13:33:41.800243 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0921 13:33:41.850729 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0921 13:33:41.899769 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0921 13:33:41.950512 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0921 13:33:42.001659 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0921 13:33:42.049020 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0921 13:33:42.100254 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0921 13:33:42.150961 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0921 13:33:42.199727 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0921 13:33:42.250548 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0921 13:33:42.301490 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0921 13:33:42.351366 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0921 13:33:42.400999 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0921 13:33:42.450646 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0921 13:33:42.499222 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0921 13:33:42.550734 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0921 13:33:42.600624 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0921 13:33:42.650167 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0921 13:33:42.700508 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0921 13:33:42.750608 19 chunking.go:98] Retrieved 17/17 results with rv 42880 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0921 13:33:42.800282 19 chunking.go:98] Retrieved 9/17 results with rv 42880 and continue 
  I0921 13:33:42.850811 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0921 13:33:42.900799 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0921 13:33:42.949279 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0921 13:33:43.000971 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0921 13:33:43.050871 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0921 13:33:43.099263 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0921 13:33:43.150429 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0921 13:33:43.201177 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0921 13:33:43.249868 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0921 13:33:43.300457 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0921 13:33:43.350935 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0921 13:33:43.399534 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0921 13:33:43.450294 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0921 13:33:43.501187 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0921 13:33:43.549667 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0921 13:33:43.600425 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0921 13:33:43.651093 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0921 13:33:43.699721 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0921 13:33:43.750388 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0921 13:33:43.801376 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0921 13:33:43.849958 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0921 13:33:43.901421 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0921 13:33:43.951307 19 chunking.go:98] Retrieved 17/17 results with rv 42881 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI4ODEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0921 13:33:44.000443 19 chunking.go:98] Retrieved 9/17 results with rv 42881 and continue 
  STEP: retrieving those results all at once @ 09/21/24 13:33:44
  I0921 13:33:44.056026 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9658" for this suite. @ 09/21/24 13:33:44.107
• [21.466 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 09/21/24 13:33:44.16
  I0921 13:33:44.160844 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename resourcequota @ 09/21/24 13:33:44.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:33:44.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:33:44.189
  STEP: Counting existing ResourceQuota @ 09/21/24 13:33:44.191
  STEP: Creating a ResourceQuota @ 09/21/24 13:33:49.197
  STEP: Ensuring resource quota status is calculated @ 09/21/24 13:33:49.202
  STEP: Creating a ReplicaSet @ 09/21/24 13:33:51.207
  STEP: Ensuring resource quota status captures replicaset creation @ 09/21/24 13:33:51.22
  STEP: Deleting a ReplicaSet @ 09/21/24 13:33:53.227
  STEP: Ensuring resource quota status released usage @ 09/21/24 13:33:53.236
  I0921 13:33:55.243175 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5229" for this suite. @ 09/21/24 13:33:55.247
• [11.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 09/21/24 13:33:55.258
  I0921 13:33:55.258140 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename namespaces @ 09/21/24 13:33:55.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:33:55.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:33:55.28
  STEP: Creating a test namespace @ 09/21/24 13:33:55.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:33:55.298
  STEP: Creating a pod in the namespace @ 09/21/24 13:33:55.302
  STEP: Waiting for the pod to have running status @ 09/21/24 13:33:55.31
  STEP: Deleting the namespace @ 09/21/24 13:33:57.32
  STEP: Waiting for the namespace to be removed. @ 09/21/24 13:33:57.328
  STEP: Recreating the namespace @ 09/21/24 13:34:08.334
  STEP: Verifying there are no pods in the namespace @ 09/21/24 13:34:08.352
  I0921 13:34:08.358221 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5618" for this suite. @ 09/21/24 13:34:08.362
  STEP: Destroying namespace "nsdeletetest-775" for this suite. @ 09/21/24 13:34:08.371
  I0921 13:34:08.374419 19 framework.go:370] Namespace nsdeletetest-775 was already deleted
  STEP: Destroying namespace "nsdeletetest-9360" for this suite. @ 09/21/24 13:34:08.374
• [13.125 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 09/21/24 13:34:08.383
  I0921 13:34:08.383249 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir @ 09/21/24 13:34:08.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:34:08.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:34:08.401
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/21/24 13:34:08.403
  STEP: Saw pod success @ 09/21/24 13:34:12.432
  I0921 13:34:12.435616 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-1ba7eb67-526e-4f2b-8640-570c99663c01 container test-container: <nil>
  STEP: delete the pod @ 09/21/24 13:34:12.443
  I0921 13:34:12.463269 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5668" for this suite. @ 09/21/24 13:34:12.468
• [4.094 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 09/21/24 13:34:12.477
  I0921 13:34:12.477779 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename sched-preemption @ 09/21/24 13:34:12.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:34:12.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:34:12.497
  I0921 13:34:12.518488 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0921 13:35:12.528182 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/21/24 13:35:12.533
  I0921 13:35:12.533716 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/21/24 13:35:12.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:35:12.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:35:12.564
  I0921 13:35:12.583526 19 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0921 13:35:12.587679 19 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0921 13:35:12.678617 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9746" for this suite. @ 09/21/24 13:35:12.685
  I0921 13:35:12.694013 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1331" for this suite. @ 09/21/24 13:35:12.698
• [60.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 09/21/24 13:35:12.707
  I0921 13:35:12.707871 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 13:35:12.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:35:12.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:35:12.727
  STEP: creating a replication controller @ 09/21/24 13:35:12.729
  I0921 13:35:12.729820 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 create -f -'
  I0921 13:35:12.816325 19 builder.go:146] stderr: ""
  I0921 13:35:12.816384 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/21/24 13:35:12.816
  I0921 13:35:12.816525 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0921 13:35:12.875858 19 builder.go:146] stderr: ""
  I0921 13:35:12.875959 19 builder.go:147] stdout: "update-demo-nautilus-fg4hv update-demo-nautilus-ftsfl "
  I0921 13:35:12.876041 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods update-demo-nautilus-fg4hv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0921 13:35:12.923961 19 builder.go:146] stderr: ""
  I0921 13:35:12.923996 19 builder.go:147] stdout: ""
  I0921 13:35:12.924008 19 kubectl.go:2502] update-demo-nautilus-fg4hv is created but not running
  I0921 13:35:17.924915 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0921 13:35:17.971375 19 builder.go:146] stderr: ""
  I0921 13:35:17.971407 19 builder.go:147] stdout: "update-demo-nautilus-fg4hv update-demo-nautilus-ftsfl "
  I0921 13:35:17.971492 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods update-demo-nautilus-fg4hv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0921 13:35:18.014994 19 builder.go:146] stderr: ""
  I0921 13:35:18.015025 19 builder.go:147] stdout: "true"
  I0921 13:35:18.015058 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods update-demo-nautilus-fg4hv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0921 13:35:18.058434 19 builder.go:146] stderr: ""
  I0921 13:35:18.058463 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0921 13:35:18.058474 19 kubectl.go:2393] validating pod update-demo-nautilus-fg4hv
  I0921 13:35:18.065897 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0921 13:35:18.065938 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0921 13:35:18.065949 19 kubectl.go:2520] update-demo-nautilus-fg4hv is verified up and running
  I0921 13:35:18.065979 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods update-demo-nautilus-ftsfl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0921 13:35:18.107692 19 builder.go:146] stderr: ""
  I0921 13:35:18.107715 19 builder.go:147] stdout: "true"
  I0921 13:35:18.107753 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods update-demo-nautilus-ftsfl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0921 13:35:18.149992 19 builder.go:146] stderr: ""
  I0921 13:35:18.150016 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0921 13:35:18.150030 19 kubectl.go:2393] validating pod update-demo-nautilus-ftsfl
  I0921 13:35:18.154926 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0921 13:35:18.154965 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0921 13:35:18.154978 19 kubectl.go:2520] update-demo-nautilus-ftsfl is verified up and running
  STEP: scaling down the replication controller @ 09/21/24 13:35:18.154
  I0921 13:35:18.155712 19 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0921 13:35:18.155735 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0921 13:35:19.218697 19 builder.go:146] stderr: ""
  I0921 13:35:19.218733 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/21/24 13:35:19.218
  I0921 13:35:19.218819 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0921 13:35:19.265098 19 builder.go:146] stderr: ""
  I0921 13:35:19.265132 19 builder.go:147] stdout: "update-demo-nautilus-ftsfl "
  I0921 13:35:19.265204 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods update-demo-nautilus-ftsfl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0921 13:35:19.307920 19 builder.go:146] stderr: ""
  I0921 13:35:19.307947 19 builder.go:147] stdout: "true"
  I0921 13:35:19.307994 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods update-demo-nautilus-ftsfl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0921 13:35:19.349964 19 builder.go:146] stderr: ""
  I0921 13:35:19.349991 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0921 13:35:19.350001 19 kubectl.go:2393] validating pod update-demo-nautilus-ftsfl
  I0921 13:35:19.355490 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0921 13:35:19.355531 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0921 13:35:19.355546 19 kubectl.go:2520] update-demo-nautilus-ftsfl is verified up and running
  STEP: scaling up the replication controller @ 09/21/24 13:35:19.355
  I0921 13:35:19.356223 19 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0921 13:35:19.356244 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0921 13:35:20.419153 19 builder.go:146] stderr: ""
  I0921 13:35:20.419191 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/21/24 13:35:20.419
  I0921 13:35:20.419277 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0921 13:35:20.466895 19 builder.go:146] stderr: ""
  I0921 13:35:20.466932 19 builder.go:147] stdout: "update-demo-nautilus-ftsfl update-demo-nautilus-r7vnc "
  I0921 13:35:20.466982 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods update-demo-nautilus-ftsfl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0921 13:35:20.511776 19 builder.go:146] stderr: ""
  I0921 13:35:20.511815 19 builder.go:147] stdout: "true"
  I0921 13:35:20.511861 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods update-demo-nautilus-ftsfl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0921 13:35:20.555921 19 builder.go:146] stderr: ""
  I0921 13:35:20.555957 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0921 13:35:20.555970 19 kubectl.go:2393] validating pod update-demo-nautilus-ftsfl
  I0921 13:35:20.561325 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0921 13:35:20.561404 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0921 13:35:20.561418 19 kubectl.go:2520] update-demo-nautilus-ftsfl is verified up and running
  I0921 13:35:20.561475 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods update-demo-nautilus-r7vnc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0921 13:35:20.605389 19 builder.go:146] stderr: ""
  I0921 13:35:20.605423 19 builder.go:147] stdout: ""
  I0921 13:35:20.605432 19 kubectl.go:2502] update-demo-nautilus-r7vnc is created but not running
  I0921 13:35:25.605595 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0921 13:35:25.652718 19 builder.go:146] stderr: ""
  I0921 13:35:25.652764 19 builder.go:147] stdout: "update-demo-nautilus-ftsfl update-demo-nautilus-r7vnc "
  I0921 13:35:25.652807 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods update-demo-nautilus-ftsfl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0921 13:35:25.699281 19 builder.go:146] stderr: ""
  I0921 13:35:25.699320 19 builder.go:147] stdout: "true"
  I0921 13:35:25.699386 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods update-demo-nautilus-ftsfl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0921 13:35:25.743464 19 builder.go:146] stderr: ""
  I0921 13:35:25.743503 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0921 13:35:25.743517 19 kubectl.go:2393] validating pod update-demo-nautilus-ftsfl
  I0921 13:35:25.749334 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0921 13:35:25.749397 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0921 13:35:25.749411 19 kubectl.go:2520] update-demo-nautilus-ftsfl is verified up and running
  I0921 13:35:25.749449 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods update-demo-nautilus-r7vnc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0921 13:35:25.794982 19 builder.go:146] stderr: ""
  I0921 13:35:25.795014 19 builder.go:147] stdout: "true"
  I0921 13:35:25.795053 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods update-demo-nautilus-r7vnc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0921 13:35:25.840573 19 builder.go:146] stderr: ""
  I0921 13:35:25.840612 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0921 13:35:25.840623 19 kubectl.go:2393] validating pod update-demo-nautilus-r7vnc
  I0921 13:35:25.846721 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0921 13:35:25.846771 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0921 13:35:25.846781 19 kubectl.go:2520] update-demo-nautilus-r7vnc is verified up and running
  STEP: using delete to clean up resources @ 09/21/24 13:35:25.846
  I0921 13:35:25.846877 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 delete --grace-period=0 --force -f -'
  I0921 13:35:25.898689 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0921 13:35:25.898727 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0921 13:35:25.898790 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get rc,svc -l name=update-demo --no-headers'
  I0921 13:35:25.968381 19 builder.go:146] stderr: "No resources found in kubectl-9925 namespace.\n"
  I0921 13:35:25.968437 19 builder.go:147] stdout: ""
  I0921 13:35:25.968483 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-9925 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0921 13:35:26.040878 19 builder.go:146] stderr: ""
  I0921 13:35:26.040921 19 builder.go:147] stdout: ""
  I0921 13:35:26.041062 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9925" for this suite. @ 09/21/24 13:35:26.045
• [13.347 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 09/21/24 13:35:26.054
  I0921 13:35:26.054779 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename volumeattachment @ 09/21/24 13:35:26.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:35:26.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:35:26.081
  STEP: Create VolumeAttachment "va-e2e-zqqws" on node "ip-172-31-11-53" @ 09/21/24 13:35:26.089
  STEP: Get VolumeAttachment "va-e2e-zqqws" on node "ip-172-31-11-53" @ 09/21/24 13:35:26.095
  STEP: Patch VolumeAttachment "va-e2e-zqqws" on node "ip-172-31-11-53" @ 09/21/24 13:35:26.1
  STEP: List VolumeAttachments with "va-e2e-zqqws=patched" label @ 09/21/24 13:35:26.105
  STEP: Delete VolumeAttachment "va-e2e-zqqws" on node "ip-172-31-11-53" @ 09/21/24 13:35:26.11
  STEP: Confirm deletion of VolumeAttachment "va-e2e-zqqws" on node "ip-172-31-11-53" @ 09/21/24 13:35:26.121
  STEP: Create VolumeAttachment "va-e2e-cqzd7" on node "ip-172-31-2-8" @ 09/21/24 13:35:26.13
  STEP: Update the VolumeAttachment "va-e2e-cqzd7" on node "ip-172-31-2-8" with label "va-e2e=updated" @ 09/21/24 13:35:26.14
  STEP: Create VolumeAttachment "va-e2e-klmrv" on node "ip-172-31-2-8" @ 09/21/24 13:35:26.155
  STEP: Update the VolumeAttachment "va-e2e-klmrv" on node "ip-172-31-2-8" with label "va-e2e=updated" @ 09/21/24 13:35:26.161
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/21/24 13:35:26.17
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/21/24 13:35:26.187
  I0921 13:35:26.191553 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-1734" for this suite. @ 09/21/24 13:35:26.197
• [0.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 09/21/24 13:35:26.205
  I0921 13:35:26.205107 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename replication-controller @ 09/21/24 13:35:26.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:35:26.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:35:26.224
  STEP: Given a ReplicationController is created @ 09/21/24 13:35:26.227
  STEP: When the matched label of one of its pods change @ 09/21/24 13:35:26.233
  I0921 13:35:26.238013 19 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0921 13:35:31.242254 19 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/21/24 13:35:31.253
  I0921 13:35:32.263508 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1819" for this suite. @ 09/21/24 13:35:32.267
• [6.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 09/21/24 13:35:32.276
  I0921 13:35:32.276273 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 13:35:32.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:35:32.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:35:32.298
  STEP: Starting the proxy @ 09/21/24 13:35:32.3
  I0921 13:35:32.301064 19 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-5496 proxy --unix-socket=/tmp/kubectl-proxy-unix3471732884/test'
  STEP: retrieving proxy /api/ output @ 09/21/24 13:35:32.333
  I0921 13:35:32.334397 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5496" for this suite. @ 09/21/24 13:35:32.339
• [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/21/24 13:35:32.346
  I0921 13:35:32.346988 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename secrets @ 09/21/24 13:35:32.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:35:32.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:35:32.366
  STEP: Creating secret with name secret-test-77d72208-e598-4ff6-ae1a-d51b4e0c5ec0 @ 09/21/24 13:35:32.368
  STEP: Creating a pod to test consume secrets @ 09/21/24 13:35:32.373
  STEP: Saw pod success @ 09/21/24 13:35:36.398
  I0921 13:35:36.403131 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-secrets-8bd8ea54-ccd5-4575-8e28-62f916a6fbe4 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 13:35:36.417
  I0921 13:35:36.434674 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9957" for this suite. @ 09/21/24 13:35:36.438
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 09/21/24 13:35:36.47
  I0921 13:35:36.470616 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/21/24 13:35:36.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:35:36.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:35:36.491
  STEP: create the container to handle the HTTPGet hook request. @ 09/21/24 13:35:36.5
  STEP: create the pod with lifecycle hook @ 09/21/24 13:35:38.526
  STEP: check poststart hook @ 09/21/24 13:35:40.546
  STEP: delete the pod with lifecycle hook @ 09/21/24 13:35:40.56
  I0921 13:35:42.580733 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-735" for this suite. @ 09/21/24 13:35:42.584
• [6.122 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/21/24 13:35:42.592
  I0921 13:35:42.592912 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubelet-test @ 09/21/24 13:35:42.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:35:42.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:35:42.613
  STEP: Waiting for pod completion @ 09/21/24 13:35:42.626
  I0921 13:35:46.653714 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6720" for this suite. @ 09/21/24 13:35:46.658
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 09/21/24 13:35:46.667
  I0921 13:35:46.667669 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename sched-preemption @ 09/21/24 13:35:46.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:35:46.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:35:46.691
  I0921 13:35:46.713237 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0921 13:36:46.719772 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/21/24 13:36:46.724
  I0921 13:36:46.751046 19 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I0921 13:36:46.761418 19 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I0921 13:36:46.778715 19 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I0921 13:36:46.789305 19 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I0921 13:36:46.814280 19 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I0921 13:36:46.820320 19 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/21/24 13:36:46.82
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/21/24 13:36:48.853
  I0921 13:36:52.950631 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2676" for this suite. @ 09/21/24 13:36:52.955
• [66.296 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/21/24 13:36:52.963
  I0921 13:36:52.963930 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename subpath @ 09/21/24 13:36:52.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:36:52.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:36:52.984
  STEP: Setting up data @ 09/21/24 13:36:52.989
  STEP: Creating pod pod-subpath-test-secret-rzqm @ 09/21/24 13:36:53.006
  STEP: Creating a pod to test atomic-volume-subpath @ 09/21/24 13:36:53.006
  STEP: Saw pod success @ 09/21/24 13:37:17.092
  I0921 13:37:17.097227 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-subpath-test-secret-rzqm container test-container-subpath-secret-rzqm: <nil>
  STEP: delete the pod @ 09/21/24 13:37:17.108
  STEP: Deleting pod pod-subpath-test-secret-rzqm @ 09/21/24 13:37:17.126
  I0921 13:37:17.126862 19 delete.go:62] Deleting pod "pod-subpath-test-secret-rzqm" in namespace "subpath-4580"
  I0921 13:37:17.132208 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4580" for this suite. @ 09/21/24 13:37:17.136
• [24.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 09/21/24 13:37:17.146
  I0921 13:37:17.146455 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename job @ 09/21/24 13:37:17.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:37:17.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:37:17.165
  STEP: Looking for a node to schedule job pod @ 09/21/24 13:37:17.167
  STEP: Creating a job @ 09/21/24 13:37:17.171
  STEP: Ensuring job fails @ 09/21/24 13:37:17.176
  I0921 13:37:21.186382 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-405" for this suite. @ 09/21/24 13:37:21.192
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/21/24 13:37:21.2
  I0921 13:37:21.200984 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubelet-test @ 09/21/24 13:37:21.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:37:21.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:37:21.22
  I0921 13:37:21.255282 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8435" for this suite. @ 09/21/24 13:37:21.259
• [0.067 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 09/21/24 13:37:21.267
  I0921 13:37:21.267696 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/21/24 13:37:21.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:37:21.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:37:21.286
  I0921 13:37:21.289493 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/21/24 13:37:22.526
  I0921 13:37:22.526613 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-8950 --namespace=crd-publish-openapi-8950 create -f -'
  I0921 13:37:24.620664 19 builder.go:146] stderr: ""
  I0921 13:37:24.620707 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2515-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0921 13:37:24.620757 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-8950 --namespace=crd-publish-openapi-8950 delete e2e-test-crd-publish-openapi-2515-crds test-cr'
  I0921 13:37:24.683188 19 builder.go:146] stderr: ""
  I0921 13:37:24.683242 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2515-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0921 13:37:24.683324 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-8950 --namespace=crd-publish-openapi-8950 apply -f -'
  I0921 13:37:24.744009 19 builder.go:146] stderr: ""
  I0921 13:37:24.744052 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2515-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0921 13:37:24.744093 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-8950 --namespace=crd-publish-openapi-8950 delete e2e-test-crd-publish-openapi-2515-crds test-cr'
  I0921 13:37:24.798246 19 builder.go:146] stderr: ""
  I0921 13:37:24.798282 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2515-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/21/24 13:37:24.798
  I0921 13:37:24.798367 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-8950 explain e2e-test-crd-publish-openapi-2515-crds'
  I0921 13:37:24.840846 19 builder.go:146] stderr: ""
  I0921 13:37:24.840896 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2515-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0921 13:37:26.186570 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8950" for this suite. @ 09/21/24 13:37:26.194
• [4.937 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 09/21/24 13:37:26.205
  I0921 13:37:26.205207 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 13:37:26.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:37:26.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:37:26.227
  STEP: Creating a pod to test downward api env vars @ 09/21/24 13:37:26.23
  STEP: Saw pod success @ 09/21/24 13:37:30.26
  I0921 13:37:30.264331 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downward-api-ca72a412-0d7e-4000-8557-7cf1b4d3637e container dapi-container: <nil>
  STEP: delete the pod @ 09/21/24 13:37:30.273
  I0921 13:37:30.295592 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7138" for this suite. @ 09/21/24 13:37:30.3
• [4.104 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 09/21/24 13:37:30.309
  I0921 13:37:30.309215 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/21/24 13:37:30.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:37:30.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:37:30.332
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/21/24 13:37:30.334
  I0921 13:37:30.334854 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 13:37:31.555469 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 13:37:36.516028 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8304" for this suite. @ 09/21/24 13:37:36.524
• [6.223 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/21/24 13:37:36.532
  I0921 13:37:36.532055 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename events @ 09/21/24 13:37:36.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:37:36.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:37:36.552
  STEP: creating a test event @ 09/21/24 13:37:36.554
  STEP: listing events in all namespaces @ 09/21/24 13:37:36.561
  STEP: listing events in test namespace @ 09/21/24 13:37:36.565
  STEP: listing events with field selection filtering on source @ 09/21/24 13:37:36.569
  STEP: listing events with field selection filtering on reportingController @ 09/21/24 13:37:36.573
  STEP: getting the test event @ 09/21/24 13:37:36.577
  STEP: patching the test event @ 09/21/24 13:37:36.581
  STEP: getting the test event @ 09/21/24 13:37:36.589
  STEP: updating the test event @ 09/21/24 13:37:36.592
  STEP: getting the test event @ 09/21/24 13:37:36.605
  STEP: deleting the test event @ 09/21/24 13:37:36.609
  STEP: listing events in all namespaces @ 09/21/24 13:37:36.621
  STEP: listing events in test namespace @ 09/21/24 13:37:36.625
  I0921 13:37:36.631057 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6568" for this suite. @ 09/21/24 13:37:36.635
• [0.111 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/21/24 13:37:36.642
  I0921 13:37:36.642814 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename disruption @ 09/21/24 13:37:36.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:37:36.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:37:36.663
  STEP: creating the pdb @ 09/21/24 13:37:36.666
  STEP: Waiting for the pdb to be processed @ 09/21/24 13:37:36.673
  STEP: updating the pdb @ 09/21/24 13:37:38.679
  STEP: Waiting for the pdb to be processed @ 09/21/24 13:37:38.689
  STEP: patching the pdb @ 09/21/24 13:37:40.695
  STEP: Waiting for the pdb to be processed @ 09/21/24 13:37:40.713
  STEP: Waiting for the pdb to be deleted @ 09/21/24 13:37:40.727
  I0921 13:37:40.731543 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-459" for this suite. @ 09/21/24 13:37:40.736
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/21/24 13:37:40.744
  I0921 13:37:40.744238 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pods @ 09/21/24 13:37:40.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:37:40.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:37:40.762
  STEP: creating pod @ 09/21/24 13:37:40.765
  I0921 13:37:42.793735 19 pods.go:83] Pod pod-hostip-5709aa22-3e27-4659-8d11-89698c6c3095 has hostIP: 172.31.95.123
  I0921 13:37:42.793858 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-215" for this suite. @ 09/21/24 13:37:42.798
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 09/21/24 13:37:42.807
  I0921 13:37:42.807143 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 13:37:42.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:37:42.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:37:42.824
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 13:37:42.828
  STEP: Saw pod success @ 09/21/24 13:37:46.855
  I0921 13:37:46.859147 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod downwardapi-volume-e9ce8cd8-ffd6-43e5-86fd-0bbb0c5dc3e2 container client-container: <nil>
  STEP: delete the pod @ 09/21/24 13:37:46.874
  I0921 13:37:46.897377 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6542" for this suite. @ 09/21/24 13:37:46.902
• [4.104 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/21/24 13:37:46.911
  I0921 13:37:46.911539 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename daemonsets @ 09/21/24 13:37:46.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:37:46.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:37:46.929
  I0921 13:37:46.956617 19 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0921 13:37:46.961779 19 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0921 13:37:46.968753 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:37:46.968785 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:37:46.972582 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 13:37:46.972601 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  I0921 13:37:47.967643 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:37:47.967695 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:37:47.973515 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 13:37:47.973536 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  I0921 13:37:48.968004 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:37:48.968047 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:37:48.971570 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0921 13:37:48.971593 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0921 13:37:48.971607 19 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0921 13:37:48.984024 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I0921 13:37:50.000645 19 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0921 13:37:50.010273 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I0921 13:37:50.010308 19 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0921 13:37:50.014093 19 daemon_set.go:1193] Wrong image for pod: daemon-set-hsrl4. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0921 13:37:50.014111 19 daemon_set.go:1198] Pod daemon-set-hsrl4 is not available
  I0921 13:37:50.017592 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:37:50.017632 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:37:51.021868 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:37:51.021913 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:37:52.014301 19 daemon_set.go:1198] Pod daemon-set-nr5xm is not available
  I0921 13:37:52.018668 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:37:52.018711 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 09/21/24 13:37:52.026
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7226, will wait for the garbage collector to delete the pods @ 09/21/24 13:37:52.026
  I0921 13:37:52.089619 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.833165ms
  I0921 13:37:52.190682 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.056964ms
  I0921 13:37:54.196370 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0921 13:37:54.196405 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0921 13:37:54.199765 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"44886"},"items":null}

  I0921 13:37:54.204264 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"44886"},"items":null}

  I0921 13:37:54.220416 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7226" for this suite. @ 09/21/24 13:37:54.224
• [7.323 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 09/21/24 13:37:54.234
  I0921 13:37:54.234755 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename resourcequota @ 09/21/24 13:37:54.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:37:54.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:37:54.253
  STEP: Creating a ResourceQuota @ 09/21/24 13:37:54.256
  STEP: Getting a ResourceQuota @ 09/21/24 13:37:54.26
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/21/24 13:37:54.265
  STEP: Patching the ResourceQuota @ 09/21/24 13:37:54.268
  STEP: Deleting a Collection of ResourceQuotas @ 09/21/24 13:37:54.275
  STEP: Verifying the deleted ResourceQuota @ 09/21/24 13:37:54.288
  I0921 13:37:54.291327 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5881" for this suite. @ 09/21/24 13:37:54.296
• [0.073 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 09/21/24 13:37:54.308
  I0921 13:37:54.308026 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-probe @ 09/21/24 13:37:54.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:37:54.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:37:54.327
  STEP: Creating pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144 @ 09/21/24 13:37:54.33
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/21/24 13:37:56.352
  I0921 13:37:56.358097 19 container_probe.go:1749] Initial restart count of pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 is 0
  I0921 13:37:56.361826 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:37:58.367099 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:00.372461 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:02.377733 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:04.383133 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:06.388471 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:08.393506 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:10.400111 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:12.406007 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:14.412202 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:16.418064 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:18.423924 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:20.430771 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:22.435782 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:24.441705 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:26.447969 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:28.453213 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:30.458615 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:32.463961 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:34.470414 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:36.477653 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:38.482560 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:40.488126 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:42.493906 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:44.499522 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:46.506134 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:48.512794 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:50.519328 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:52.526294 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:54.532128 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:56.538330 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:38:58.543838 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:39:00.549876 19 container_probe.go:1759] Get pod test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 in namespace container-probe-4144
  I0921 13:39:00.549915 19 container_probe.go:1763] Restart count of pod container-probe-4144/test-grpc-64cccecb-892d-49e6-b535-57d3304fa343 is now 1 (1m4.191795972s elapsed)
  STEP: deleting the pod @ 09/21/24 13:39:00.549
  I0921 13:39:00.567734 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4144" for this suite. @ 09/21/24 13:39:00.572
• [66.273 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/21/24 13:39:00.58
  I0921 13:39:00.580637 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/21/24 13:39:00.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:39:00.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:39:00.6
  I0921 13:39:00.602374 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 13:39:01.628032 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8274" for this suite. @ 09/21/24 13:39:01.633
• [1.061 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 09/21/24 13:39:01.642
  I0921 13:39:01.642096 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 13:39:01.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:39:01.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:39:01.661
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 13:39:01.665
  STEP: Saw pod success @ 09/21/24 13:39:03.687
  I0921 13:39:03.692153 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downwardapi-volume-8d6f9df9-0819-43ea-a692-287588c39286 container client-container: <nil>
  STEP: delete the pod @ 09/21/24 13:39:03.705
  I0921 13:39:03.727733 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1842" for this suite. @ 09/21/24 13:39:03.733
• [2.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/21/24 13:39:03.74
  I0921 13:39:03.740876 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl-logs @ 09/21/24 13:39:03.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:39:03.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:39:03.761
  STEP: creating a pod @ 09/21/24 13:39:03.763
  I0921 13:39:03.763446 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-logs-6922 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0921 13:39:03.817049 19 builder.go:146] stderr: ""
  I0921 13:39:03.817087 19 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/21/24 13:39:03.817
  I0921 13:39:03.817183 19 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0921 13:39:05.831113 19 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/21/24 13:39:05.831
  I0921 13:39:05.831213 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-logs-6922 logs logs-generator logs-generator'
  I0921 13:39:05.887708 19 builder.go:146] stderr: ""
  I0921 13:39:05.887759 19 builder.go:147] stdout: "I0921 13:39:04.432486       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/n26 310\nI0921 13:39:04.632572       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/vn6c 597\nI0921 13:39:04.833148       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/4pl 338\nI0921 13:39:05.033468       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/bbq 516\nI0921 13:39:05.232575       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/rgj8 560\nI0921 13:39:05.432871       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/4sjq 260\nI0921 13:39:05.633176       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/m8h 551\nI0921 13:39:05.833491       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/24c 307\n"
  STEP: limiting log lines @ 09/21/24 13:39:05.887
  I0921 13:39:05.887839 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-logs-6922 logs logs-generator logs-generator --tail=1'
  I0921 13:39:05.943677 19 builder.go:146] stderr: ""
  I0921 13:39:05.943719 19 builder.go:147] stdout: "I0921 13:39:05.833491       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/24c 307\n"
  I0921 13:39:05.943729 19 logs.go:180] got output "I0921 13:39:05.833491       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/24c 307\n"
  STEP: limiting log bytes @ 09/21/24 13:39:05.943
  I0921 13:39:05.943803 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-logs-6922 logs logs-generator logs-generator --limit-bytes=1'
  I0921 13:39:05.995354 19 builder.go:146] stderr: ""
  I0921 13:39:05.995390 19 builder.go:147] stdout: "I"
  I0921 13:39:05.995398 19 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/21/24 13:39:05.995
  I0921 13:39:05.995542 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-logs-6922 logs logs-generator logs-generator --tail=1 --timestamps'
  I0921 13:39:06.049047 19 builder.go:146] stderr: ""
  I0921 13:39:06.049085 19 builder.go:147] stdout: "2024-09-21T13:39:06.032900399Z I0921 13:39:06.032804       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/857 448\n"
  I0921 13:39:06.049095 19 logs.go:192] got output "2024-09-21T13:39:06.032900399Z I0921 13:39:06.032804       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/857 448\n"
  STEP: restricting to a time range @ 09/21/24 13:39:06.049
  I0921 13:39:08.549673 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-logs-6922 logs logs-generator logs-generator --since=1s'
  I0921 13:39:08.604971 19 builder.go:146] stderr: ""
  I0921 13:39:08.605013 19 builder.go:147] stdout: "I0921 13:39:07.633062       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/x92d 458\nI0921 13:39:07.833199       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/h9v 345\nI0921 13:39:08.033483       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/vn6 510\nI0921 13:39:08.232816       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/dcwb 389\nI0921 13:39:08.433026       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/vj7k 337\n"
  I0921 13:39:08.605059 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-logs-6922 logs logs-generator logs-generator --since=24h'
  I0921 13:39:08.659912 19 builder.go:146] stderr: ""
  I0921 13:39:08.659996 19 builder.go:147] stdout: "I0921 13:39:04.432486       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/n26 310\nI0921 13:39:04.632572       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/vn6c 597\nI0921 13:39:04.833148       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/4pl 338\nI0921 13:39:05.033468       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/bbq 516\nI0921 13:39:05.232575       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/rgj8 560\nI0921 13:39:05.432871       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/4sjq 260\nI0921 13:39:05.633176       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/m8h 551\nI0921 13:39:05.833491       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/24c 307\nI0921 13:39:06.032804       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/857 448\nI0921 13:39:06.233093       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/57zf 515\nI0921 13:39:06.433398       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/nrl 202\nI0921 13:39:06.632569       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/sbzw 427\nI0921 13:39:06.832867       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/2fx8 283\nI0921 13:39:07.033180       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/gnv4 532\nI0921 13:39:07.233491       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/95cc 284\nI0921 13:39:07.432798       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/v2z 548\nI0921 13:39:07.633062       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/x92d 458\nI0921 13:39:07.833199       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/h9v 345\nI0921 13:39:08.033483       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/vn6 510\nI0921 13:39:08.232816       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/dcwb 389\nI0921 13:39:08.433026       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/vj7k 337\nI0921 13:39:08.633339       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/j4m 330\n"
  I0921 13:39:08.660373 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-logs-6922 delete pod logs-generator'
  I0921 13:39:09.345546 19 builder.go:146] stderr: ""
  I0921 13:39:09.345594 19 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0921 13:39:09.345708 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6922" for this suite. @ 09/21/24 13:39:09.35
• [5.623 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 09/21/24 13:39:09.363
  I0921 13:39:09.363895 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 13:39:09.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:39:09.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:39:09.379
  STEP: validating api versions @ 09/21/24 13:39:09.382
  I0921 13:39:09.382502 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-1782 api-versions'
  I0921 13:39:09.425848 19 builder.go:146] stderr: ""
  I0921 13:39:09.425892 19 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0921 13:39:09.426002 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1782" for this suite. @ 09/21/24 13:39:09.429
• [0.075 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/21/24 13:39:09.439
  I0921 13:39:09.439279 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename proxy @ 09/21/24 13:39:09.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:39:09.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:39:09.458
  STEP: starting an echo server on multiple ports @ 09/21/24 13:39:09.473
  STEP: creating replication controller proxy-service-cf7zd in namespace proxy-5353 @ 09/21/24 13:39:09.473
  I0921 13:39:09.484405      19 runners.go:193] Created replication controller with name: proxy-service-cf7zd, namespace: proxy-5353, replica count: 1
  I0921 13:39:10.535587      19 runners.go:193] proxy-service-cf7zd Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0921 13:39:11.535751      19 runners.go:193] proxy-service-cf7zd Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0921 13:39:11.541686 19 proxy.go:230] setup took 2.080740936s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/21/24 13:39:11.541
  I0921 13:39:11.548800 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 6.869605ms)
  I0921 13:39:11.548805 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 6.769685ms)
  I0921 13:39:11.548835 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 6.754369ms)
  I0921 13:39:11.548847 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 7.05693ms)
  I0921 13:39:11.548847 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 6.838828ms)
  I0921 13:39:11.551081 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 9.309457ms)
  I0921 13:39:11.551078 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 9.021943ms)
  I0921 13:39:11.551099 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 9.000003ms)
  I0921 13:39:11.552294 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 10.449831ms)
  I0921 13:39:11.552294 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 10.423068ms)
  I0921 13:39:11.554730 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 12.738096ms)
  I0921 13:39:11.554731 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 12.760976ms)
  I0921 13:39:11.554748 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 12.854731ms)
  I0921 13:39:11.554792 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 12.681087ms)
  I0921 13:39:11.555167 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 13.031399ms)
  I0921 13:39:11.555387 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 13.442397ms)
  I0921 13:39:11.560263 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 4.843505ms)
  I0921 13:39:11.560460 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 4.908044ms)
  I0921 13:39:11.560459 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 4.991678ms)
  I0921 13:39:11.561166 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 5.629907ms)
  I0921 13:39:11.561230 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 5.487728ms)
  I0921 13:39:11.561403 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 5.715257ms)
  I0921 13:39:11.561871 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 6.166339ms)
  I0921 13:39:11.562147 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 6.528847ms)
  I0921 13:39:11.562321 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 6.670518ms)
  I0921 13:39:11.562686 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 7.117242ms)
  I0921 13:39:11.562687 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 7.102878ms)
  I0921 13:39:11.564010 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 8.407944ms)
  I0921 13:39:11.564088 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 8.591906ms)
  I0921 13:39:11.565125 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 9.405277ms)
  I0921 13:39:11.566078 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 10.41079ms)
  I0921 13:39:11.566829 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 11.191722ms)
  I0921 13:39:11.571188 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 4.308081ms)
  I0921 13:39:11.571219 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 4.27587ms)
  I0921 13:39:11.571650 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 4.671184ms)
  I0921 13:39:11.571825 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 4.797062ms)
  I0921 13:39:11.572037 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 4.975261ms)
  I0921 13:39:11.573029 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 5.851603ms)
  I0921 13:39:11.573481 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 6.379118ms)
  I0921 13:39:11.573586 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 6.424195ms)
  I0921 13:39:11.573599 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 6.638027ms)
  I0921 13:39:11.573609 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 6.613282ms)
  I0921 13:39:11.574036 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 6.911992ms)
  I0921 13:39:11.574683 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 7.638233ms)
  I0921 13:39:11.574754 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 7.852194ms)
  I0921 13:39:11.574869 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 7.790654ms)
  I0921 13:39:11.576160 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 9.148334ms)
  I0921 13:39:11.576498 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 9.35315ms)
  I0921 13:39:11.581176 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 4.543292ms)
  I0921 13:39:11.581203 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 4.595095ms)
  I0921 13:39:11.581679 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 5.142548ms)
  I0921 13:39:11.582087 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 5.350146ms)
  I0921 13:39:11.582510 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 5.689077ms)
  I0921 13:39:11.582610 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 5.962658ms)
  I0921 13:39:11.583443 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 6.669104ms)
  I0921 13:39:11.583559 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 7.020724ms)
  I0921 13:39:11.583559 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 6.856476ms)
  I0921 13:39:11.583882 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 7.076415ms)
  I0921 13:39:11.584512 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 7.928229ms)
  I0921 13:39:11.584755 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 7.964786ms)
  I0921 13:39:11.584952 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 8.198654ms)
  I0921 13:39:11.585941 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 9.276637ms)
  I0921 13:39:11.585962 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 9.27792ms)
  I0921 13:39:11.586335 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 9.612341ms)
  I0921 13:39:11.591231 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 4.849177ms)
  I0921 13:39:11.591966 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 5.3781ms)
  I0921 13:39:11.591966 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 5.489744ms)
  I0921 13:39:11.592085 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 5.422952ms)
  I0921 13:39:11.593539 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 7.036834ms)
  I0921 13:39:11.593539 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 6.983832ms)
  I0921 13:39:11.593716 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 7.260628ms)
  I0921 13:39:11.593713 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 7.038506ms)
  I0921 13:39:11.595130 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 8.610679ms)
  I0921 13:39:11.595126 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 8.688592ms)
  I0921 13:39:11.595258 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 8.636539ms)
  I0921 13:39:11.595280 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 8.677482ms)
  I0921 13:39:11.595310 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 8.922947ms)
  I0921 13:39:11.595325 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 8.754296ms)
  I0921 13:39:11.596074 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 9.434837ms)
  I0921 13:39:11.596772 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 10.236296ms)
  I0921 13:39:11.601604 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 4.750959ms)
  I0921 13:39:11.601604 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 4.68722ms)
  I0921 13:39:11.602649 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 5.512897ms)
  I0921 13:39:11.602727 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 5.648243ms)
  I0921 13:39:11.603322 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 6.519064ms)
  I0921 13:39:11.603433 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 6.285295ms)
  I0921 13:39:11.603502 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 6.544379ms)
  I0921 13:39:11.604116 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 7.176515ms)
  I0921 13:39:11.604464 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 7.459363ms)
  I0921 13:39:11.604473 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 7.418178ms)
  I0921 13:39:11.604501 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 7.515899ms)
  I0921 13:39:11.604645 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 7.75296ms)
  I0921 13:39:11.604944 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 7.829366ms)
  I0921 13:39:11.605148 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 8.050105ms)
  I0921 13:39:11.606139 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 9.117744ms)
  I0921 13:39:11.606798 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 9.759467ms)
  I0921 13:39:11.610744 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 3.824727ms)
  I0921 13:39:11.611586 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 4.530428ms)
  I0921 13:39:11.611614 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 4.479257ms)
  I0921 13:39:11.611848 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 4.742891ms)
  I0921 13:39:11.612063 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 5.234628ms)
  I0921 13:39:11.613956 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 6.83675ms)
  I0921 13:39:11.613974 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 6.88801ms)
  I0921 13:39:11.614872 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 7.989037ms)
  I0921 13:39:11.614886 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 7.723456ms)
  I0921 13:39:11.614984 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 8.043186ms)
  I0921 13:39:11.615003 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 8.022922ms)
  I0921 13:39:11.615135 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 8.131411ms)
  I0921 13:39:11.616274 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 9.310682ms)
  I0921 13:39:11.616288 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 9.253284ms)
  I0921 13:39:11.616399 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 9.218807ms)
  I0921 13:39:11.616557 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 9.5362ms)
  I0921 13:39:11.621394 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 4.649999ms)
  I0921 13:39:11.621394 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 4.802925ms)
  I0921 13:39:11.622025 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 5.218065ms)
  I0921 13:39:11.622241 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 5.387076ms)
  I0921 13:39:11.623310 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 6.518249ms)
  I0921 13:39:11.623362 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 6.523921ms)
  I0921 13:39:11.623487 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 6.662545ms)
  I0921 13:39:11.623904 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 7.28479ms)
  I0921 13:39:11.624789 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 7.886667ms)
  I0921 13:39:11.624822 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 8.099935ms)
  I0921 13:39:11.624976 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 8.205754ms)
  I0921 13:39:11.625164 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 8.480429ms)
  I0921 13:39:11.625234 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 8.530433ms)
  I0921 13:39:11.625840 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 8.964175ms)
  I0921 13:39:11.625982 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 9.227408ms)
  I0921 13:39:11.626681 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 10.029527ms)
  I0921 13:39:11.631799 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 5.091998ms)
  I0921 13:39:11.632117 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 5.147082ms)
  I0921 13:39:11.632277 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 5.370147ms)
  I0921 13:39:11.632291 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 5.408ms)
  I0921 13:39:11.632305 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 5.374879ms)
  I0921 13:39:11.633495 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 6.750329ms)
  I0921 13:39:11.633776 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 6.909399ms)
  I0921 13:39:11.633968 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 6.95711ms)
  I0921 13:39:11.634039 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 7.212774ms)
  I0921 13:39:11.634167 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 7.139235ms)
  I0921 13:39:11.634166 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 7.179427ms)
  I0921 13:39:11.635293 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 8.487002ms)
  I0921 13:39:11.635292 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 8.505933ms)
  I0921 13:39:11.635439 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 8.485899ms)
  I0921 13:39:11.637006 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 9.962656ms)
  I0921 13:39:11.637054 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 10.209277ms)
  I0921 13:39:11.641530 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 4.416234ms)
  I0921 13:39:11.641526 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 4.444996ms)
  I0921 13:39:11.641667 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 4.476439ms)
  I0921 13:39:11.641811 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 4.409647ms)
  I0921 13:39:11.642209 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 4.901285ms)
  I0921 13:39:11.643134 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 5.909955ms)
  I0921 13:39:11.643243 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 5.85983ms)
  I0921 13:39:11.644140 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 6.847441ms)
  I0921 13:39:11.644142 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 6.970818ms)
  I0921 13:39:11.644314 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 7.106729ms)
  I0921 13:39:11.644502 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 7.35045ms)
  I0921 13:39:11.645093 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 7.766374ms)
  I0921 13:39:11.646239 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 8.960191ms)
  I0921 13:39:11.646244 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 8.983689ms)
  I0921 13:39:11.646655 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 9.411387ms)
  I0921 13:39:11.647762 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 10.404117ms)
  I0921 13:39:11.651973 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 4.16279ms)
  I0921 13:39:11.652327 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 4.391008ms)
  I0921 13:39:11.652535 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 4.479288ms)
  I0921 13:39:11.652554 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 4.602141ms)
  I0921 13:39:11.653323 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 5.465852ms)
  I0921 13:39:11.653791 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 5.996714ms)
  I0921 13:39:11.653808 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 5.892069ms)
  I0921 13:39:11.653829 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 5.944218ms)
  I0921 13:39:11.654567 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 6.559527ms)
  I0921 13:39:11.655166 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 7.12851ms)
  I0921 13:39:11.655174 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 7.337192ms)
  I0921 13:39:11.655593 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 7.690303ms)
  I0921 13:39:11.655983 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 8.012626ms)
  I0921 13:39:11.656897 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 8.87037ms)
  I0921 13:39:11.656956 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 8.968152ms)
  I0921 13:39:11.657697 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 9.622909ms)
  I0921 13:39:11.661709 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 3.978991ms)
  I0921 13:39:11.662279 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 4.471999ms)
  I0921 13:39:11.662465 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 4.566731ms)
  I0921 13:39:11.662480 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 4.390391ms)
  I0921 13:39:11.662869 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 5.103575ms)
  I0921 13:39:11.662975 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 4.928714ms)
  I0921 13:39:11.664549 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 6.686351ms)
  I0921 13:39:11.664734 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 6.659743ms)
  I0921 13:39:11.664764 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 6.656052ms)
  I0921 13:39:11.664781 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 6.789163ms)
  I0921 13:39:11.664894 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 6.917672ms)
  I0921 13:39:11.666308 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 8.276666ms)
  I0921 13:39:11.666333 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 8.412264ms)
  I0921 13:39:11.666756 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 8.80177ms)
  I0921 13:39:11.667946 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 10.007362ms)
  I0921 13:39:11.668304 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 10.289198ms)
  I0921 13:39:11.672514 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 4.178378ms)
  I0921 13:39:11.673369 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 4.727528ms)
  I0921 13:39:11.673392 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 4.897611ms)
  I0921 13:39:11.673506 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 4.991986ms)
  I0921 13:39:11.673748 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 5.331776ms)
  I0921 13:39:11.674749 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 6.381467ms)
  I0921 13:39:11.674851 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 6.261452ms)
  I0921 13:39:11.674998 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 6.554766ms)
  I0921 13:39:11.675471 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 6.866186ms)
  I0921 13:39:11.675488 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 7.092885ms)
  I0921 13:39:11.675487 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 7.027083ms)
  I0921 13:39:11.676589 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 7.97153ms)
  I0921 13:39:11.676667 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 8.118131ms)
  I0921 13:39:11.676777 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 8.245999ms)
  I0921 13:39:11.678077 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 9.597418ms)
  I0921 13:39:11.678641 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 10.074605ms)
  I0921 13:39:11.682796 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 4.130719ms)
  I0921 13:39:11.684446 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 5.58478ms)
  I0921 13:39:11.684567 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 5.603356ms)
  I0921 13:39:11.684554 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 5.742839ms)
  I0921 13:39:11.684750 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 5.753816ms)
  I0921 13:39:11.684756 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 5.910414ms)
  I0921 13:39:11.684769 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 5.819611ms)
  I0921 13:39:11.684884 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 6.13867ms)
  I0921 13:39:11.685904 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 6.923992ms)
  I0921 13:39:11.686132 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 7.302482ms)
  I0921 13:39:11.686310 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 7.417811ms)
  I0921 13:39:11.686441 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 7.679221ms)
  I0921 13:39:11.686488 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 7.695477ms)
  I0921 13:39:11.686607 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 7.695581ms)
  I0921 13:39:11.687632 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 8.756854ms)
  I0921 13:39:11.689426 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 10.491263ms)
  I0921 13:39:11.694158 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 4.695361ms)
  I0921 13:39:11.695654 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 5.907179ms)
  I0921 13:39:11.696124 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 6.414771ms)
  I0921 13:39:11.696291 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 6.502249ms)
  I0921 13:39:11.696311 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 6.735105ms)
  I0921 13:39:11.696428 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 6.65513ms)
  I0921 13:39:11.696445 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 6.623178ms)
  I0921 13:39:11.696455 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 6.729398ms)
  I0921 13:39:11.696734 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 7.044483ms)
  I0921 13:39:11.696739 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 6.901553ms)
  I0921 13:39:11.696749 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 7.081321ms)
  I0921 13:39:11.697427 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 7.864103ms)
  I0921 13:39:11.698003 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 8.242426ms)
  I0921 13:39:11.698358 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 8.552043ms)
  I0921 13:39:11.698906 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 9.255431ms)
  I0921 13:39:11.699395 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 9.778499ms)
  I0921 13:39:11.703183 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 3.719113ms)
  I0921 13:39:11.704875 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 5.2719ms)
  I0921 13:39:11.704883 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 5.361126ms)
  I0921 13:39:11.704896 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 5.213442ms)
  I0921 13:39:11.704906 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 5.346494ms)
  I0921 13:39:11.706786 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 7.289738ms)
  I0921 13:39:11.706804 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 7.186623ms)
  I0921 13:39:11.706816 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 7.179763ms)
  I0921 13:39:11.706829 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 7.176494ms)
  I0921 13:39:11.706828 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 7.286549ms)
  I0921 13:39:11.706839 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 7.173672ms)
  I0921 13:39:11.708061 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 8.644421ms)
  I0921 13:39:11.708726 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 9.142331ms)
  I0921 13:39:11.708730 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 9.030358ms)
  I0921 13:39:11.709666 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 9.95039ms)
  I0921 13:39:11.710638 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 10.906115ms)
  I0921 13:39:11.715360 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 4.684063ms)
  I0921 13:39:11.716661 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 5.689071ms)
  I0921 13:39:11.716695 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 5.862224ms)
  I0921 13:39:11.716696 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 5.806619ms)
  I0921 13:39:11.716749 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 5.843638ms)
  I0921 13:39:11.717091 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 6.223678ms)
  I0921 13:39:11.717112 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 6.15794ms)
  I0921 13:39:11.717149 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 6.229122ms)
  I0921 13:39:11.717169 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 6.365629ms)
  I0921 13:39:11.718510 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 7.571933ms)
  I0921 13:39:11.718876 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 8.026204ms)
  I0921 13:39:11.718878 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 7.89542ms)
  I0921 13:39:11.718889 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 8.105039ms)
  I0921 13:39:11.719004 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 8.287496ms)
  I0921 13:39:11.720029 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 9.262542ms)
  I0921 13:39:11.721149 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 10.149219ms)
  I0921 13:39:11.726031 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 4.845046ms)
  I0921 13:39:11.726304 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 5.058557ms)
  I0921 13:39:11.726957 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 5.570673ms)
  I0921 13:39:11.727024 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 5.7025ms)
  I0921 13:39:11.727295 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 5.961926ms)
  I0921 13:39:11.728414 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 6.897669ms)
  I0921 13:39:11.728418 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 6.94692ms)
  I0921 13:39:11.728432 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 7.007252ms)
  I0921 13:39:11.728439 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 6.95253ms)
  I0921 13:39:11.728578 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 7.173702ms)
  I0921 13:39:11.728595 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 7.095397ms)
  I0921 13:39:11.729947 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 8.492102ms)
  I0921 13:39:11.730011 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 8.572374ms)
  I0921 13:39:11.730192 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 8.822642ms)
  I0921 13:39:11.731812 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 10.539579ms)
  I0921 13:39:11.731933 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 10.397578ms)
  I0921 13:39:11.736920 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 4.878882ms)
  I0921 13:39:11.736922 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 4.925169ms)
  I0921 13:39:11.736949 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 4.884168ms)
  I0921 13:39:11.736940 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 4.725542ms)
  I0921 13:39:11.736961 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 4.879666ms)
  I0921 13:39:11.738087 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 5.93515ms)
  I0921 13:39:11.738523 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 6.288759ms)
  I0921 13:39:11.738529 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 6.333784ms)
  I0921 13:39:11.738549 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 6.414834ms)
  I0921 13:39:11.738706 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 6.60437ms)
  I0921 13:39:11.739046 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 7.085703ms)
  I0921 13:39:11.740153 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 7.885086ms)
  I0921 13:39:11.740290 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 8.038018ms)
  I0921 13:39:11.740594 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 8.413157ms)
  I0921 13:39:11.741354 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 9.172443ms)
  I0921 13:39:11.742179 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 10.061191ms)
  I0921 13:39:11.747473 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:460/proxy/: tls baz (200; 5.222417ms)
  I0921 13:39:11.747770 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">... (200; 5.499103ms)
  I0921 13:39:11.748203 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 5.883392ms)
  I0921 13:39:11.748247 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:462/proxy/: tls qux (200; 5.776676ms)
  I0921 13:39:11.748580 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname1/proxy/: foo (200; 6.209921ms)
  I0921 13:39:11.749224 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 6.712138ms)
  I0921 13:39:11.749235 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l:1080/proxy/rewriteme">test<... (200; 6.934514ms)
  I0921 13:39:11.749450 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/https:proxy-service-cf7zd-vj76l:443/proxy/tlsrewritem... (200; 7.113436ms)
  I0921 13:39:11.750009 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname2/proxy/: bar (200; 7.800594ms)
  I0921 13:39:11.750027 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:162/proxy/: bar (200; 7.587215ms)
  I0921 13:39:11.750033 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/: <a href="/api/v1/namespaces/proxy-5353/pods/proxy-service-cf7zd-vj76l/proxy/rewriteme">test</a> (200; 7.811858ms)
  I0921 13:39:11.750040 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/pods/http:proxy-service-cf7zd-vj76l:160/proxy/: foo (200; 7.63733ms)
  I0921 13:39:11.750716 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/services/proxy-service-cf7zd:portname1/proxy/: foo (200; 8.261017ms)
  I0921 13:39:11.750988 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname1/proxy/: tls baz (200; 8.568395ms)
  I0921 13:39:11.751531 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/services/http:proxy-service-cf7zd:portname2/proxy/: bar (200; 9.144515ms)
  I0921 13:39:11.752053 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5353/services/https:proxy-service-cf7zd:tlsportname2/proxy/: tls qux (200; 9.557468ms)
  STEP: deleting ReplicationController proxy-service-cf7zd in namespace proxy-5353, will wait for the garbage collector to delete the pods @ 09/21/24 13:39:11.752
  I0921 13:39:11.816476 19 resources.go:139] Deleting ReplicationController proxy-service-cf7zd took: 9.357249ms
  I0921 13:39:11.917228 19 resources.go:163] Terminating ReplicationController proxy-service-cf7zd pods took: 100.730516ms
  I0921 13:39:14.417895 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5353" for this suite. @ 09/21/24 13:39:14.425
• [4.995 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/21/24 13:39:14.433
  I0921 13:39:14.433973 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename crd-webhook @ 09/21/24 13:39:14.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:39:14.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:39:14.454
  STEP: Setting up server cert @ 09/21/24 13:39:14.458
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/21/24 13:39:14.769
  STEP: Deploying the custom resource conversion webhook pod @ 09/21/24 13:39:14.778
  STEP: Wait for the deployment to be ready @ 09/21/24 13:39:14.793
  I0921 13:39:14.805864 19 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 13:39:16.819
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 13:39:16.831
  I0921 13:39:17.831931 19 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0921 13:39:17.841595 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Creating a v1 custom resource @ 09/21/24 13:39:20.393
  STEP: Create a v2 custom resource @ 09/21/24 13:39:20.411
  STEP: List CRs in v1 @ 09/21/24 13:39:20.437
  STEP: List CRs in v2 @ 09/21/24 13:39:20.442
  I0921 13:39:21.011892 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5256" for this suite. @ 09/21/24 13:39:21.015
• [6.592 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/21/24 13:39:21.025
  I0921 13:39:21.025927 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename secrets @ 09/21/24 13:39:21.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:39:21.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:39:21.044
  STEP: Creating secret with name secret-test-f5c1a1b9-3dd5-4d32-b432-86e84fa479ce @ 09/21/24 13:39:21.067
  STEP: Creating a pod to test consume secrets @ 09/21/24 13:39:21.072
  STEP: Saw pod success @ 09/21/24 13:39:25.1
  I0921 13:39:25.103984 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-secrets-1d6231bb-2e48-4196-8df5-d934bb6ce60a container secret-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 13:39:25.113
  I0921 13:39:25.136718 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5820" for this suite. @ 09/21/24 13:39:25.142
  STEP: Destroying namespace "secret-namespace-5923" for this suite. @ 09/21/24 13:39:25.15
• [4.134 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 09/21/24 13:39:25.159
  I0921 13:39:25.159665 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename runtimeclass @ 09/21/24 13:39:25.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:39:25.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:39:25.178
  STEP: getting /apis @ 09/21/24 13:39:25.18
  STEP: getting /apis/node.k8s.io @ 09/21/24 13:39:25.183
  STEP: getting /apis/node.k8s.io/v1 @ 09/21/24 13:39:25.184
  STEP: creating @ 09/21/24 13:39:25.185
  STEP: watching @ 09/21/24 13:39:25.207
  I0921 13:39:25.207295 19 runtimeclass.go:275] starting watch
  STEP: getting @ 09/21/24 13:39:25.212
  STEP: listing @ 09/21/24 13:39:25.216
  STEP: patching @ 09/21/24 13:39:25.221
  STEP: updating @ 09/21/24 13:39:25.226
  I0921 13:39:25.232231 19 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 09/21/24 13:39:25.232
  STEP: deleting a collection @ 09/21/24 13:39:25.249
  I0921 13:39:25.272025 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4322" for this suite. @ 09/21/24 13:39:25.276
• [0.126 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/21/24 13:39:25.285
  I0921 13:39:25.285834 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename field-validation @ 09/21/24 13:39:25.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:39:25.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:39:25.304
  STEP: apply creating a deployment @ 09/21/24 13:39:25.307
  I0921 13:39:25.325290 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6669" for this suite. @ 09/21/24 13:39:25.329
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 09/21/24 13:39:25.338
  I0921 13:39:25.338853 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename emptydir @ 09/21/24 13:39:25.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:39:25.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:39:25.356
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/21/24 13:39:25.359
  STEP: Saw pod success @ 09/21/24 13:39:29.388
  I0921 13:39:29.392087 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-59937b1e-fb4f-495a-bafc-cd6c8ec3d779 container test-container: <nil>
  STEP: delete the pod @ 09/21/24 13:39:29.402
  I0921 13:39:29.425586 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2501" for this suite. @ 09/21/24 13:39:29.429
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 09/21/24 13:39:29.438
  I0921 13:39:29.438200 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename projected @ 09/21/24 13:39:29.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:39:29.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:39:29.461
  STEP: Creating a pod to test downward API volume plugin @ 09/21/24 13:39:29.464
  STEP: Saw pod success @ 09/21/24 13:39:33.488
  I0921 13:39:33.493626 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod downwardapi-volume-c9d7f447-2da8-493d-aab8-ea656884d672 container client-container: <nil>
  STEP: delete the pod @ 09/21/24 13:39:33.502
  I0921 13:39:33.525840 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-719" for this suite. @ 09/21/24 13:39:33.531
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 09/21/24 13:39:33.541
  I0921 13:39:33.541803 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename configmap @ 09/21/24 13:39:33.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:39:33.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:39:33.562
  STEP: Creating configMap with name configmap-test-volume-map-2ed457d9-8280-43eb-b660-326e748e4a18 @ 09/21/24 13:39:33.564
  STEP: Creating a pod to test consume configMaps @ 09/21/24 13:39:33.569
  STEP: Saw pod success @ 09/21/24 13:39:35.589
  I0921 13:39:35.593276 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-configmaps-31259ae9-40b6-401f-9915-04ab58e53bb3 container agnhost-container: <nil>
  STEP: delete the pod @ 09/21/24 13:39:35.6
  I0921 13:39:35.622558 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-815" for this suite. @ 09/21/24 13:39:35.627
• [2.095 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/21/24 13:39:35.636
  I0921 13:39:35.636677 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename cronjob @ 09/21/24 13:39:35.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:39:35.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:39:35.652
  STEP: Creating a suspended cronjob @ 09/21/24 13:39:35.654
  STEP: Ensuring no jobs are scheduled @ 09/21/24 13:39:35.66
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/21/24 13:44:35.66
  STEP: Removing cronjob @ 09/21/24 13:44:35.664
  I0921 13:44:35.672941 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1848" for this suite. @ 09/21/24 13:44:35.678
• [300.049 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 09/21/24 13:44:35.686
  I0921 13:44:35.686159 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-probe @ 09/21/24 13:44:35.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:44:35.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:44:35.714
  STEP: Creating pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333 @ 09/21/24 13:44:35.717
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/21/24 13:44:37.735
  I0921 13:44:37.739659 19 container_probe.go:1749] Initial restart count of pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 is 0
  I0921 13:44:37.744520 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:44:39.748756 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:44:41.754174 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:44:43.759405 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:44:45.765463 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:44:47.771859 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:44:49.778390 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:44:51.783283 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:44:53.791570 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:44:55.797039 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:44:57.805012 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:44:59.811302 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:45:01.815850 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:45:03.823876 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:45:05.829872 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:45:07.836701 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:45:09.843132 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:45:11.850506 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:45:13.858303 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:45:15.863903 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:45:17.869373 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:45:19.874853 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:45:21.881503 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:45:23.889578 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:45:25.895327 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:45:27.901878 19 container_probe.go:1759] Get pod busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 in namespace container-probe-7333
  I0921 13:45:27.901910 19 container_probe.go:1763] Restart count of pod container-probe-7333/busybox-3dc6080d-8d15-48c9-a863-70f0fd693a33 is now 1 (50.162223009s elapsed)
  STEP: deleting the pod @ 09/21/24 13:45:27.901
  I0921 13:45:27.915792 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7333" for this suite. @ 09/21/24 13:45:27.92
• [52.242 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 09/21/24 13:45:27.928
  I0921 13:45:27.928217 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 13:45:27.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:45:27.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:45:27.95
  STEP: Setting up server cert @ 09/21/24 13:45:27.975
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 13:45:28.413
  STEP: Deploying the webhook pod @ 09/21/24 13:45:28.425
  STEP: Wait for the deployment to be ready @ 09/21/24 13:45:28.438
  I0921 13:45:28.446305 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/21/24 13:45:30.461
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 13:45:30.473
  I0921 13:45:31.474094 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0921 13:45:31.483223 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1546-crds.webhook.example.com via the AdmissionRegistration API @ 09/21/24 13:45:31.997
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/21/24 13:45:32.012
  I0921 13:45:34.620819 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9667" for this suite. @ 09/21/24 13:45:34.626
  STEP: Destroying namespace "webhook-markers-8765" for this suite. @ 09/21/24 13:45:34.635
• [6.717 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/21/24 13:45:34.644
  I0921 13:45:34.644918 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pods @ 09/21/24 13:45:34.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:45:34.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:45:34.664
  STEP: Create a pod @ 09/21/24 13:45:34.666
  STEP: patching /status @ 09/21/24 13:45:36.689
  I0921 13:45:36.698239 19 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0921 13:45:36.698376 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-985" for this suite. @ 09/21/24 13:45:36.702
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 09/21/24 13:45:36.712
  I0921 13:45:36.712081 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename downward-api @ 09/21/24 13:45:36.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:45:36.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:45:36.783
  STEP: Creating a pod to test downward api env vars @ 09/21/24 13:45:36.786
  STEP: Saw pod success @ 09/21/24 13:45:40.815
  I0921 13:45:40.820300 19 output.go:196] Trying to get logs from node ip-172-31-69-84 pod downward-api-81ab3063-a443-409c-b716-8197f0ee63a7 container dapi-container: <nil>
  STEP: delete the pod @ 09/21/24 13:45:40.842
  I0921 13:45:40.865417 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4527" for this suite. @ 09/21/24 13:45:40.869
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/21/24 13:45:40.88
  I0921 13:45:40.880166 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename secrets @ 09/21/24 13:45:40.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:45:40.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:45:40.897
  STEP: Creating secret with name secret-test-a10367c1-1dc4-4c99-9d30-6d1d33d1495f @ 09/21/24 13:45:40.9
  STEP: Creating a pod to test consume secrets @ 09/21/24 13:45:40.904
  STEP: Saw pod success @ 09/21/24 13:45:44.93
  I0921 13:45:44.935486 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-secrets-64f70332-c412-4a45-9e8d-4da3676de44e container secret-volume-test: <nil>
  STEP: delete the pod @ 09/21/24 13:45:44.951
  I0921 13:45:44.972932 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6767" for this suite. @ 09/21/24 13:45:44.977
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/21/24 13:45:44.985
  I0921 13:45:44.985639 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename events @ 09/21/24 13:45:44.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:45:45.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:45:45.011
  STEP: creating a test event @ 09/21/24 13:45:45.013
  STEP: listing all events in all namespaces @ 09/21/24 13:45:45.019
  STEP: patching the test event @ 09/21/24 13:45:45.023
  STEP: fetching the test event @ 09/21/24 13:45:45.031
  STEP: updating the test event @ 09/21/24 13:45:45.036
  STEP: getting the test event @ 09/21/24 13:45:45.051
  STEP: deleting the test event @ 09/21/24 13:45:45.055
  STEP: listing all events in all namespaces @ 09/21/24 13:45:45.065
  I0921 13:45:45.070462 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8822" for this suite. @ 09/21/24 13:45:45.075
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 09/21/24 13:45:45.083
  I0921 13:45:45.083893 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 13:45:45.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:45:45.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:45:45.103
  I0921 13:45:45.105626 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-7529 create -f -'
  I0921 13:45:45.196384 19 builder.go:146] stderr: ""
  I0921 13:45:45.196419 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0921 13:45:45.196485 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-7529 create -f -'
  I0921 13:45:45.292380 19 builder.go:146] stderr: ""
  I0921 13:45:45.292439 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/21/24 13:45:45.292
  I0921 13:45:46.299016 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0921 13:45:46.299048 19 framework.go:733] Found 1 / 1
  I0921 13:45:46.299064 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0921 13:45:46.303241 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0921 13:45:46.303261 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0921 13:45:46.303308 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-7529 describe pod agnhost-primary-br2vb'
  I0921 13:45:46.363008 19 builder.go:146] stderr: ""
  I0921 13:45:46.363058 19 builder.go:147] stdout: "Name:             agnhost-primary-br2vb\nNamespace:        kubectl-7529\nPriority:         0\nService Account:  default\nNode:             ip-172-31-95-123/172.31.95.123\nStart Time:       Sat, 21 Sep 2024 13:45:45 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.27.48\nIPs:\n  IP:           192.168.27.48\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://739fc3a6fa97ff6aa4b3b531db69d5623c0b3d25dcad6914039e38a10b20e3f3\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 21 Sep 2024 13:45:45 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-n7vs8 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-n7vs8:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-7529/agnhost-primary-br2vb to ip-172-31-95-123\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0921 13:45:46.363108 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-7529 describe rc agnhost-primary'
  I0921 13:45:46.421725 19 builder.go:146] stderr: ""
  I0921 13:45:46.421895 19 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7529\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-br2vb\n"
  I0921 13:45:46.421940 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-7529 describe service agnhost-primary'
  I0921 13:45:46.477502 19 builder.go:146] stderr: ""
  I0921 13:45:46.477538 19 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-7529\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.34\nIPs:                      10.152.183.34\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.27.48:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0921 13:45:46.481914 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-7529 describe node ip-172-31-11-53'
  I0921 13:45:46.548736 19 builder.go:146] stderr: ""
  I0921 13:45:46.548858 19 builder.go:147] stdout: "Name:               ip-172-31-11-53\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-11-53\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 21 Sep 2024 11:52:25 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-11-53\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 21 Sep 2024 13:45:40 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 21 Sep 2024 12:09:45 +0000   Sat, 21 Sep 2024 12:09:45 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 21 Sep 2024 13:44:50 +0000   Sat, 21 Sep 2024 11:52:25 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 21 Sep 2024 13:44:50 +0000   Sat, 21 Sep 2024 11:52:25 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 21 Sep 2024 13:44:50 +0000   Sat, 21 Sep 2024 11:52:25 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 21 Sep 2024 13:44:50 +0000   Sat, 21 Sep 2024 12:05:51 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.11.53\n  Hostname:    ip-172-31-11-53\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967648Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865248Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec212eacb22720cd842360062f466e09\n  System UUID:                ec212eac-b227-20cd-8423-60062f466e09\n  Boot ID:                    26a58ad4-5c5a-4189-a793-9dd5f099d2cf\n  Kernel Version:             6.8.0-1015-aws\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.31.1\n  Kube-Proxy Version:         v1.31.1\nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-kube-controllers-648f8f47c9-7jfvs                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         96m\n  kube-system                 calico-node-gtb6r                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         96m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-3c52ba53bf544530-dn9zc    0 (0%)        0 (0%)      0 (0%)           0 (0%)         93m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0921 13:45:46.548966 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-7529 describe namespace kubectl-7529'
  I0921 13:45:46.603078 19 builder.go:146] stderr: ""
  I0921 13:45:46.603142 19 builder.go:147] stdout: "Name:         kubectl-7529\nLabels:       e2e-framework=kubectl\n              e2e-run=9303cc22-061c-4ec3-b88e-0f49b5a33cfb\n              kubernetes.io/metadata.name=kubectl-7529\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0921 13:45:46.603321 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7529" for this suite. @ 09/21/24 13:45:46.608
• [1.535 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/21/24 13:45:46.618
  I0921 13:45:46.618801 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename crd-watch @ 09/21/24 13:45:46.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:45:46.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:45:46.64
  I0921 13:45:46.642914 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Creating first CR  @ 09/21/24 13:45:49.18
  I0921 13:45:49.186890 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-21T13:45:49Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-21T13:45:49Z]] name:name1 resourceVersion:46594 uid:521e4431-6d3d-4357-bd4a-33c29a23edfe] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 09/21/24 13:45:59.187
  I0921 13:45:59.195721 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-21T13:45:59Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-21T13:45:59Z]] name:name2 resourceVersion:46658 uid:83f3b8c5-554b-49ce-99db-350cf94cd10f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 09/21/24 13:46:09.2
  I0921 13:46:09.208237 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-21T13:45:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-21T13:46:09Z]] name:name1 resourceVersion:46678 uid:521e4431-6d3d-4357-bd4a-33c29a23edfe] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 09/21/24 13:46:19.208
  I0921 13:46:19.217548 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-21T13:45:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-21T13:46:19Z]] name:name2 resourceVersion:46698 uid:83f3b8c5-554b-49ce-99db-350cf94cd10f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 09/21/24 13:46:29.217
  I0921 13:46:29.227406 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-21T13:45:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-21T13:46:09Z]] name:name1 resourceVersion:46718 uid:521e4431-6d3d-4357-bd4a-33c29a23edfe] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 09/21/24 13:46:39.23
  I0921 13:46:39.240805 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-21T13:45:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-21T13:46:19Z]] name:name2 resourceVersion:46738 uid:83f3b8c5-554b-49ce-99db-350cf94cd10f] num:map[num1:9223372036854775807 num2:1000000]]}
  I0921 13:46:49.760205 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7863" for this suite. @ 09/21/24 13:46:49.765
• [63.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 09/21/24 13:46:49.774
  I0921 13:46:49.774732 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename var-expansion @ 09/21/24 13:46:49.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:46:49.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:46:49.797
  STEP: creating the pod with failed condition @ 09/21/24 13:46:49.799
  STEP: updating the pod @ 09/21/24 13:48:49.808
  I0921 13:48:50.327190 19 pod_client.go:173] Successfully updated pod "var-expansion-6a05b1a9-aabf-4e28-8f41-f6909404d7bc"
  STEP: waiting for pod running @ 09/21/24 13:48:50.327
  STEP: deleting the pod gracefully @ 09/21/24 13:48:52.339
  I0921 13:48:52.339329 19 delete.go:62] Deleting pod "var-expansion-6a05b1a9-aabf-4e28-8f41-f6909404d7bc" in namespace "var-expansion-6939"
  I0921 13:48:52.349158 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-6a05b1a9-aabf-4e28-8f41-f6909404d7bc" to be fully deleted
  I0921 13:49:24.451331 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6939" for this suite. @ 09/21/24 13:49:24.456
• [154.691 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 09/21/24 13:49:24.466
  I0921 13:49:24.466167 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 13:49:24.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:49:24.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:49:24.486
  STEP: Setting up server cert @ 09/21/24 13:49:24.511
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 13:49:24.692
  STEP: Deploying the webhook pod @ 09/21/24 13:49:24.703
  STEP: Wait for the deployment to be ready @ 09/21/24 13:49:24.718
  I0921 13:49:24.727808 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/21/24 13:49:26.744
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 13:49:26.758
  I0921 13:49:27.759032 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/21/24 13:49:27.769
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/21/24 13:49:27.789
  STEP: Creating a dummy validating-webhook-configuration object @ 09/21/24 13:49:27.803
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/21/24 13:49:27.812
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/21/24 13:49:27.821
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/21/24 13:49:27.83
  I0921 13:49:27.900834 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5328" for this suite. @ 09/21/24 13:49:27.904
  STEP: Destroying namespace "webhook-markers-3250" for this suite. @ 09/21/24 13:49:27.913
• [3.455 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 09/21/24 13:49:27.921
  I0921 13:49:27.921647 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename kubectl @ 09/21/24 13:49:27.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:49:27.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:49:27.945
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/21/24 13:49:27.947
  I0921 13:49:27.947336 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-6360 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0921 13:49:28.000928 19 builder.go:146] stderr: ""
  I0921 13:49:28.000972 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/21/24 13:49:28
  I0921 13:49:28.004679 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=kubectl-6360 delete pods e2e-test-httpd-pod'
  I0921 13:49:29.366362 19 builder.go:146] stderr: ""
  I0921 13:49:29.366399 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0921 13:49:29.366506 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6360" for this suite. @ 09/21/24 13:49:29.372
• [1.460 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 09/21/24 13:49:29.381
  I0921 13:49:29.381449 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename var-expansion @ 09/21/24 13:49:29.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:49:29.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:49:29.398
  STEP: Creating a pod to test substitution in container's command @ 09/21/24 13:49:29.4
  STEP: Saw pod success @ 09/21/24 13:49:33.428
  I0921 13:49:33.433552 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod var-expansion-8650c003-74a0-4284-809d-36a4f11fec81 container dapi-container: <nil>
  STEP: delete the pod @ 09/21/24 13:49:33.448
  I0921 13:49:33.467266 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2733" for this suite. @ 09/21/24 13:49:33.47
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 09/21/24 13:49:33.479
  I0921 13:49:33.479848 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename configmap @ 09/21/24 13:49:33.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:49:33.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:49:33.504
  STEP: Creating configMap with name configmap-test-upd-9dbddfa8-7a25-415c-99c0-7103b9ff7095 @ 09/21/24 13:49:33.511
  STEP: Creating the pod @ 09/21/24 13:49:33.516
  STEP: Updating configmap configmap-test-upd-9dbddfa8-7a25-415c-99c0-7103b9ff7095 @ 09/21/24 13:49:35.548
  STEP: waiting to observe update in volume @ 09/21/24 13:49:35.554
  I0921 13:50:49.961789 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3605" for this suite. @ 09/21/24 13:50:49.967
• [76.495 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 09/21/24 13:50:49.975
  I0921 13:50:49.975229 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename job @ 09/21/24 13:50:49.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:50:49.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:50:49.996
  STEP: Creating Indexed job @ 09/21/24 13:50:49.998
  STEP: Ensuring job reaches completions @ 09/21/24 13:50:50.005
  STEP: Ensuring pods with index for job exist @ 09/21/24 13:51:00.017
  I0921 13:51:00.022282 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3428" for this suite. @ 09/21/24 13:51:00.027
• [10.061 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 09/21/24 13:51:00.036
  I0921 13:51:00.036331 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename statefulset @ 09/21/24 13:51:00.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:51:00.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:51:00.058
  STEP: Creating service test in namespace statefulset-8122 @ 09/21/24 13:51:00.06
  STEP: Creating stateful set ss in namespace statefulset-8122 @ 09/21/24 13:51:00.066
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8122 @ 09/21/24 13:51:00.076
  I0921 13:51:00.079950 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0921 13:51:10.081559 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/21/24 13:51:10.081
  I0921 13:51:10.085999 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-8122 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0921 13:51:10.176219 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0921 13:51:10.176259 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0921 13:51:10.176269 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0921 13:51:10.181532 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0921 13:51:20.181815 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0921 13:51:20.181854 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0921 13:51:20.201805 19 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0921 13:51:20.201858 19 resource.go:175] ss-0  ip-172-31-95-123  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:00 +0000 UTC  }]
  I0921 13:51:20.201866 19 resource.go:178] 
  I0921 13:51:20.201872 19 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  I0921 13:51:21.207222 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.995164943s
  I0921 13:51:22.213062 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.98976848s
  I0921 13:51:23.219381 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.983683368s
  I0921 13:51:24.223697 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.97765867s
  I0921 13:51:25.229606 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.972760395s
  I0921 13:51:26.235849 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.967430949s
  I0921 13:51:27.240913 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.960684946s
  I0921 13:51:28.246702 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.956108954s
  I0921 13:51:29.252762 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 949.701694ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8122 @ 09/21/24 13:51:30.253
  I0921 13:51:30.258595 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-8122 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0921 13:51:30.339934 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0921 13:51:30.339975 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0921 13:51:30.339988 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0921 13:51:30.340072 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-8122 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0921 13:51:30.429436 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0921 13:51:30.429486 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0921 13:51:30.429499 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0921 13:51:30.429549 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-8122 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0921 13:51:30.516197 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0921 13:51:30.516235 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0921 13:51:30.516251 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0921 13:51:30.521513 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0921 13:51:40.523128 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0921 13:51:40.523163 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0921 13:51:40.523169 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/21/24 13:51:40.523
  I0921 13:51:40.527365 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-8122 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0921 13:51:40.609488 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0921 13:51:40.609526 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0921 13:51:40.609537 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0921 13:51:40.609584 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-8122 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0921 13:51:40.694750 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0921 13:51:40.694792 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0921 13:51:40.694803 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0921 13:51:40.694853 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=statefulset-8122 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0921 13:51:40.797463 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0921 13:51:40.797505 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0921 13:51:40.797515 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0921 13:51:40.797525 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0921 13:51:40.802535 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0921 13:51:50.808386 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0921 13:51:50.808417 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0921 13:51:50.808425 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0921 13:51:50.823559 19 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0921 13:51:50.823615 19 resource.go:175] ss-0  ip-172-31-95-123  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:00 +0000 UTC  }]
  I0921 13:51:50.823637 19 resource.go:175] ss-1  ip-172-31-2-8     Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:21 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:20 +0000 UTC  }]
  I0921 13:51:50.823658 19 resource.go:175] ss-2  ip-172-31-69-84   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:21 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:51:20 +0000 UTC  }]
  I0921 13:51:50.823664 19 resource.go:178] 
  I0921 13:51:50.823672 19 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I0921 13:51:51.828623 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 8.996003178s
  I0921 13:51:52.834021 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.991003432s
  I0921 13:51:53.839551 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.985205567s
  I0921 13:51:54.845703 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.979323825s
  I0921 13:51:55.852126 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.973303105s
  I0921 13:51:56.856880 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.967495769s
  I0921 13:51:57.863294 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.962282194s
  I0921 13:51:58.869228 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.956348521s
  I0921 13:51:59.875805 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 950.192286ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8122 @ 09/21/24 13:52:00.875
  I0921 13:52:00.881670 19 rest.go:150] Scaling statefulset ss to 0
  I0921 13:52:00.890249 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0921 13:52:00.894934 19 statefulset.go:138] Deleting all statefulset in ns statefulset-8122
  I0921 13:52:00.899823 19 rest.go:150] Scaling statefulset ss to 0
  I0921 13:52:00.906404 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0921 13:52:00.910632 19 rest.go:88] Deleting statefulset ss
  I0921 13:52:00.927995 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8122" for this suite. @ 09/21/24 13:52:00.933
• [60.905 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 09/21/24 13:52:00.941
  I0921 13:52:00.941767 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-probe @ 09/21/24 13:52:00.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:52:00.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:52:00.961
  STEP: Creating pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460 @ 09/21/24 13:52:00.964
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/21/24 13:52:02.985
  I0921 13:52:02.991399 19 container_probe.go:1749] Initial restart count of pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b is 0
  I0921 13:52:02.996729 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:05.003432 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:07.009402 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:09.015178 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:11.021434 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:13.026466 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:15.033261 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:17.038110 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:19.044773 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:21.051214 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:23.056038 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:25.061560 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:27.068176 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:29.073544 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:31.080115 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:33.085201 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:35.091124 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:37.098082 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:39.103985 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:41.110534 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:43.116797 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:45.122200 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:47.128613 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:49.134539 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:51.141474 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:53.146281 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:55.151618 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:57.158213 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:52:59.163140 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:01.170851 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:03.176865 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:05.181975 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:07.189403 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:09.194434 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:11.201169 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:13.207331 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:15.212707 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:17.218571 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:19.224607 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:21.231760 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:23.236905 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:25.243214 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:27.249037 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:29.253820 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:31.259529 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:33.264698 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:35.270759 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:37.278364 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:39.284114 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:41.290220 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:43.296549 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:45.303093 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:47.308745 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:49.314642 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:51.321806 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:53.328592 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:55.335780 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:57.341114 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:53:59.347145 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:01.356233 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:03.360898 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:05.366636 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:07.373010 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:09.378402 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:11.385029 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:13.390140 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:15.395899 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:17.401153 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:19.407161 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:21.414227 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:23.419331 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:25.425188 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:27.430657 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:29.435546 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:31.442289 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:33.447808 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:35.453158 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:37.460124 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:39.465328 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:41.472139 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:43.478757 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:45.484624 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:47.491387 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:49.495930 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:51.502201 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:53.507535 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:55.513954 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:57.519301 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:54:59.524510 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:01.530843 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:03.537594 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:05.542837 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:07.548997 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:09.555612 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:11.561403 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:13.568084 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:15.573408 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:17.579876 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:19.586507 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:21.593558 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:23.598925 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:25.604736 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:27.611659 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:29.616865 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:31.623155 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:33.628366 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:35.634715 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:37.640464 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:39.645710 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:41.652199 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:43.658145 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:45.662665 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:47.669547 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:49.674371 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:51.681444 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:53.687028 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:55.693664 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:57.700835 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:55:59.706754 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  I0921 13:56:01.714571 19 container_probe.go:1759] Get pod test-webserver-76852036-d040-441f-b3dd-c95c6251372b in namespace container-probe-5460
  STEP: deleting the pod @ 09/21/24 13:56:03.714
  I0921 13:56:03.734434 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5460" for this suite. @ 09/21/24 13:56:03.739
• [242.806 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/21/24 13:56:03.748
  I0921 13:56:03.748041 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/21/24 13:56:03.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:56:03.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:56:03.773
  STEP: creating the policy @ 09/21/24 13:56:03.78
  STEP: waiting until the marker is denied @ 09/21/24 13:56:03.796
  STEP: testing a replicated Deployment to be allowed @ 09/21/24 13:56:04.403
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/21/24 13:56:04.424
  I0921 13:56:04.483126 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8136" for this suite. @ 09/21/24 13:56:04.486
• [0.748 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 09/21/24 13:56:04.496
  I0921 13:56:04.496207 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/21/24 13:56:04.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:56:04.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:56:04.517
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/21/24 13:56:04.519
  I0921 13:56:04.520356 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/21/24 13:56:09.378
  I0921 13:56:09.378913 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 13:56:10.629692 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  I0921 13:56:15.541952 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1488" for this suite. @ 09/21/24 13:56:15.549
• [11.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/21/24 13:56:15.559
  I0921 13:56:15.559230 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename pods @ 09/21/24 13:56:15.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:56:15.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:56:15.577
  STEP: creating a Pod with a static label @ 09/21/24 13:56:15.586
  STEP: watching for Pod to be ready @ 09/21/24 13:56:15.595
  I0921 13:56:15.597361 19 pods.go:945] observed Pod pod-test in namespace pods-833 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0921 13:56:15.602712 19 pods.go:945] observed Pod pod-test in namespace pods-833 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:56:15 +0000 UTC  }]
  I0921 13:56:15.620741 19 pods.go:945] observed Pod pod-test in namespace pods-833 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:56:15 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:56:15 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:56:15 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:56:15 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:56:15 +0000 UTC  }]
  I0921 13:56:16.965868 19 pods.go:948] Found Pod pod-test in namespace pods-833 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:56:16 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:56:15 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:56:16 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:56:16 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-21 13:56:15 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/21/24 13:56:16.971
  STEP: getting the Pod and ensuring that it's patched @ 09/21/24 13:56:16.984
  STEP: replacing the Pod's status Ready condition to False @ 09/21/24 13:56:16.99
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/21/24 13:56:17.003
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/21/24 13:56:17.003
  STEP: watching for the Pod to be deleted @ 09/21/24 13:56:17.017
  I0921 13:56:17.019972 19 pods.go:1058] observed event type MODIFIED
  I0921 13:56:18.969842 19 pods.go:1058] observed event type MODIFIED
  I0921 13:56:19.120362 19 pods.go:1058] observed event type MODIFIED
  I0921 13:56:19.973716 19 pods.go:1058] observed event type MODIFIED
  I0921 13:56:19.981130 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-833" for this suite. @ 09/21/24 13:56:19.986
• [4.437 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 09/21/24 13:56:19.996
  I0921 13:56:19.996417 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/21/24 13:56:19.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:56:20.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:56:20.016
  STEP: create the container to handle the HTTPGet hook request. @ 09/21/24 13:56:20.023
  STEP: create the pod with lifecycle hook @ 09/21/24 13:56:22.05
  STEP: delete the pod with lifecycle hook @ 09/21/24 13:56:24.075
  STEP: check prestop hook @ 09/21/24 13:56:26.095
  I0921 13:56:26.111944 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8698" for this suite. @ 09/21/24 13:56:26.117
• [6.130 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/21/24 13:56:26.126
  I0921 13:56:26.126521 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename field-validation @ 09/21/24 13:56:26.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:56:26.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:56:26.143
  I0921 13:56:26.147202 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  W0921 13:56:28.684055      19 warnings.go:70] unknown field "alpha"
  W0921 13:56:28.684078      19 warnings.go:70] unknown field "beta"
  W0921 13:56:28.684082      19 warnings.go:70] unknown field "delta"
  W0921 13:56:28.684085      19 warnings.go:70] unknown field "epsilon"
  W0921 13:56:28.684088      19 warnings.go:70] unknown field "gamma"
  I0921 13:56:29.239162 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1004" for this suite. @ 09/21/24 13:56:29.243
• [3.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/21/24 13:56:29.251
  I0921 13:56:29.251651 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename podtemplate @ 09/21/24 13:56:29.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:56:29.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:56:29.272
  STEP: Create a pod template @ 09/21/24 13:56:29.274
  STEP: Replace a pod template @ 09/21/24 13:56:29.28
  I0921 13:56:29.290156 19 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0921 13:56:29.290231 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1538" for this suite. @ 09/21/24 13:56:29.294
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/21/24 13:56:29.303
  I0921 13:56:29.303268 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/21/24 13:56:29.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:56:29.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:56:29.322
  STEP: fetching the /apis discovery document @ 09/21/24 13:56:29.325
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/21/24 13:56:29.326
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/21/24 13:56:29.326
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/21/24 13:56:29.326
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/21/24 13:56:29.327
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/21/24 13:56:29.327
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/21/24 13:56:29.328
  I0921 13:56:29.328331 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6892" for this suite. @ 09/21/24 13:56:29.333
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 09/21/24 13:56:29.34
  I0921 13:56:29.340661 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename replication-controller @ 09/21/24 13:56:29.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:56:29.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:56:29.361
  STEP: creating a ReplicationController @ 09/21/24 13:56:29.367
  STEP: waiting for RC to be added @ 09/21/24 13:56:29.373
  STEP: waiting for available Replicas @ 09/21/24 13:56:29.373
  STEP: patching ReplicationController @ 09/21/24 13:56:29.995
  STEP: waiting for RC to be modified @ 09/21/24 13:56:30.004
  STEP: patching ReplicationController status @ 09/21/24 13:56:30.004
  STEP: waiting for RC to be modified @ 09/21/24 13:56:30.011
  STEP: waiting for available Replicas @ 09/21/24 13:56:30.011
  STEP: fetching ReplicationController status @ 09/21/24 13:56:30.017
  STEP: patching ReplicationController scale @ 09/21/24 13:56:30.022
  STEP: waiting for RC to be modified @ 09/21/24 13:56:30.027
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/21/24 13:56:30.028
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/21/24 13:56:30.773
  STEP: updating ReplicationController status @ 09/21/24 13:56:30.777
  STEP: waiting for RC to be modified @ 09/21/24 13:56:30.784
  STEP: listing all ReplicationControllers @ 09/21/24 13:56:30.785
  STEP: checking that ReplicationController has expected values @ 09/21/24 13:56:30.789
  STEP: deleting ReplicationControllers by collection @ 09/21/24 13:56:30.789
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/21/24 13:56:30.8
  I0921 13:56:30.830919 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0921 13:56:30.831035      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-4304" for this suite. @ 09/21/24 13:56:30.835
• [1.504 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 09/21/24 13:56:30.844
  I0921 13:56:30.844717 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/21/24 13:56:30.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:56:30.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:56:30.863
  I0921 13:56:30.865664 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  E0921 13:56:31.831241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/21/24 13:56:32.087
  I0921 13:56:32.087127 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-178 --namespace=crd-publish-openapi-178 create -f -'
  I0921 13:56:32.156842 19 builder.go:146] stderr: ""
  I0921 13:56:32.156880 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8214-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0921 13:56:32.156925 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-178 --namespace=crd-publish-openapi-178 delete e2e-test-crd-publish-openapi-8214-crds test-cr'
  I0921 13:56:32.210176 19 builder.go:146] stderr: ""
  I0921 13:56:32.210221 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8214-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0921 13:56:32.210261 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-178 --namespace=crd-publish-openapi-178 apply -f -'
  I0921 13:56:32.268892 19 builder.go:146] stderr: ""
  I0921 13:56:32.268929 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8214-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0921 13:56:32.268991 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-178 --namespace=crd-publish-openapi-178 delete e2e-test-crd-publish-openapi-8214-crds test-cr'
  I0921 13:56:32.321409 19 builder.go:146] stderr: ""
  I0921 13:56:32.321445 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8214-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/21/24 13:56:32.321
  I0921 13:56:32.321526 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1579949906 --namespace=crd-publish-openapi-178 explain e2e-test-crd-publish-openapi-8214-crds'
  I0921 13:56:32.365657 19 builder.go:146] stderr: ""
  I0921 13:56:32.365704 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-8214-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0921 13:56:32.831305      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0921 13:56:33.561592 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-178" for this suite. @ 09/21/24 13:56:33.568
• [2.732 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/21/24 13:56:33.577
  I0921 13:56:33.577015 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename controllerrevisions @ 09/21/24 13:56:33.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:56:33.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:56:33.602
  STEP: Creating DaemonSet "e2e-bzffq-daemon-set" @ 09/21/24 13:56:33.627
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/21/24 13:56:33.633
  I0921 13:56:33.638516 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:56:33.638552 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:56:33.641778 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-bzffq-daemon-set: 0
  I0921 13:56:33.641800 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  E0921 13:56:33.831539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0921 13:56:34.639097 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:56:34.639142 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:56:34.643863 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-bzffq-daemon-set: 0
  I0921 13:56:34.643881 19 fixtures.go:130] Node ip-172-31-2-8 is running 0 daemon pod, expected 1
  E0921 13:56:34.832153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0921 13:56:35.639739 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-11-53 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:56:35.639789 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-80-71 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0921 13:56:35.644638 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-bzffq-daemon-set: 3
  I0921 13:56:35.644659 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-bzffq-daemon-set
  STEP: Confirm DaemonSet "e2e-bzffq-daemon-set" successfully created with "daemonset-name=e2e-bzffq-daemon-set" label @ 09/21/24 13:56:35.649
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-bzffq-daemon-set" @ 09/21/24 13:56:35.657
  I0921 13:56:35.662302 19 controller_revision.go:162] Located ControllerRevision: "e2e-bzffq-daemon-set-6c78648b9"
  STEP: Patching ControllerRevision "e2e-bzffq-daemon-set-6c78648b9" @ 09/21/24 13:56:35.666
  I0921 13:56:35.673454 19 controller_revision.go:173] e2e-bzffq-daemon-set-6c78648b9 has been patched
  STEP: Create a new ControllerRevision @ 09/21/24 13:56:35.673
  I0921 13:56:35.679826 19 controller_revision.go:191] Created ControllerRevision: e2e-bzffq-daemon-set-776f46ffcc
  STEP: Confirm that there are two ControllerRevisions @ 09/21/24 13:56:35.679
  I0921 13:56:35.679876 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0921 13:56:35.683416 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-bzffq-daemon-set-6c78648b9" @ 09/21/24 13:56:35.683
  STEP: Confirm that there is only one ControllerRevision @ 09/21/24 13:56:35.692
  I0921 13:56:35.692468 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0921 13:56:35.695777 19 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-bzffq-daemon-set-776f46ffcc" @ 09/21/24 13:56:35.699
  I0921 13:56:35.709647 19 controller_revision.go:220] e2e-bzffq-daemon-set-776f46ffcc has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/21/24 13:56:35.709
  W0921 13:56:35.716461      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/21/24 13:56:35.716
  I0921 13:56:35.716582 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0921 13:56:35.833009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0921 13:56:36.717464 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0921 13:56:36.723009 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-bzffq-daemon-set-776f46ffcc=updated" @ 09/21/24 13:56:36.723
  STEP: Confirm that there is only one ControllerRevision @ 09/21/24 13:56:36.734
  I0921 13:56:36.734485 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0921 13:56:36.738406 19 controller_revision.go:265] Found 1 ControllerRevisions
  I0921 13:56:36.742105 19 controller_revision.go:246] ControllerRevision "e2e-bzffq-daemon-set-7466dd785b" has revision 3
  STEP: Deleting DaemonSet "e2e-bzffq-daemon-set" @ 09/21/24 13:56:36.745
  STEP: deleting DaemonSet.extensions e2e-bzffq-daemon-set in namespace controllerrevisions-4271, will wait for the garbage collector to delete the pods @ 09/21/24 13:56:36.745
  I0921 13:56:36.807984 19 resources.go:139] Deleting DaemonSet.extensions e2e-bzffq-daemon-set took: 8.187239ms
  E0921 13:56:36.833681      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0921 13:56:36.908150 19 resources.go:163] Terminating DaemonSet.extensions e2e-bzffq-daemon-set pods took: 100.159873ms
  E0921 13:56:37.834053      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0921 13:56:38.113580 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-bzffq-daemon-set: 0
  I0921 13:56:38.113614 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-bzffq-daemon-set
  I0921 13:56:38.118186 19 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"49048"},"items":null}

  I0921 13:56:38.121181 19 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"49048"},"items":null}

  I0921 13:56:38.138239 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-4271" for this suite. @ 09/21/24 13:56:38.142
• [4.574 seconds]
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/21/24 13:56:38.151
  I0921 13:56:38.151175 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename watch @ 09/21/24 13:56:38.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:56:38.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:56:38.173
  STEP: creating a watch on configmaps with label A @ 09/21/24 13:56:38.175
  STEP: creating a watch on configmaps with label B @ 09/21/24 13:56:38.176
  STEP: creating a watch on configmaps with label A or B @ 09/21/24 13:56:38.177
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/21/24 13:56:38.178
  I0921 13:56:38.182885 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5617  a1e16e4e-97e8-40aa-8276-6292462fec63 49056 0 2024-09-21 13:56:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-21 13:56:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 13:56:38.182975 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5617  a1e16e4e-97e8-40aa-8276-6292462fec63 49056 0 2024-09-21 13:56:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-21 13:56:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/21/24 13:56:38.183
  I0921 13:56:38.191078 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5617  a1e16e4e-97e8-40aa-8276-6292462fec63 49057 0 2024-09-21 13:56:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-21 13:56:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 13:56:38.191140 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5617  a1e16e4e-97e8-40aa-8276-6292462fec63 49057 0 2024-09-21 13:56:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-21 13:56:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/21/24 13:56:38.191
  I0921 13:56:38.199237 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5617  a1e16e4e-97e8-40aa-8276-6292462fec63 49058 0 2024-09-21 13:56:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-21 13:56:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 13:56:38.199301 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5617  a1e16e4e-97e8-40aa-8276-6292462fec63 49058 0 2024-09-21 13:56:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-21 13:56:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/21/24 13:56:38.199
  I0921 13:56:38.208016 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5617  a1e16e4e-97e8-40aa-8276-6292462fec63 49059 0 2024-09-21 13:56:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-21 13:56:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 13:56:38.208057 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5617  a1e16e4e-97e8-40aa-8276-6292462fec63 49059 0 2024-09-21 13:56:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-21 13:56:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/21/24 13:56:38.208
  I0921 13:56:38.212971 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5617  693cc09b-0a94-4f37-92ab-05b88c476fa9 49060 0 2024-09-21 13:56:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-21 13:56:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 13:56:38.213073 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5617  693cc09b-0a94-4f37-92ab-05b88c476fa9 49060 0 2024-09-21 13:56:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-21 13:56:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0921 13:56:38.834726      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:39.835551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:40.836087      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:41.836914      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:42.837963      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:43.838802      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:44.839296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:45.840200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:46.840437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:47.840516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/21/24 13:56:48.214
  I0921 13:56:48.224379 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5617  693cc09b-0a94-4f37-92ab-05b88c476fa9 49119 0 2024-09-21 13:56:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-21 13:56:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0921 13:56:48.225237 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5617  693cc09b-0a94-4f37-92ab-05b88c476fa9 49119 0 2024-09-21 13:56:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-21 13:56:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0921 13:56:48.841575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:49.841709      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:50.841801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:51.841939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:52.842132      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:53.842377      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:54.842481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:55.842683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:56.842801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:57.843017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0921 13:56:58.226565 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5617" for this suite. @ 09/21/24 13:56:58.232
• [20.091 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 09/21/24 13:56:58.242
  I0921 13:56:58.242572 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename configmap @ 09/21/24 13:56:58.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:56:58.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:56:58.263
  STEP: Creating configMap configmap-3442/configmap-test-e142cb7a-7234-4e3f-b34a-d6cdb8bbc0ea @ 09/21/24 13:56:58.266
  STEP: Creating a pod to test consume configMaps @ 09/21/24 13:56:58.27
  E0921 13:56:58.844046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:56:59.844075      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:57:00.844800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:57:01.844897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/21/24 13:57:02.294
  I0921 13:57:02.299198 19 output.go:196] Trying to get logs from node ip-172-31-95-123 pod pod-configmaps-73e76121-885a-4766-b938-ef5659b3327c container env-test: <nil>
  STEP: delete the pod @ 09/21/24 13:57:02.315
  I0921 13:57:02.332838 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3442" for this suite. @ 09/21/24 13:57:02.337
• [4.103 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/21/24 13:57:02.345
  I0921 13:57:02.345705 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename runtimeclass @ 09/21/24 13:57:02.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:57:02.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:57:02.366
  I0921 13:57:02.375480 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-752" for this suite. @ 09/21/24 13:57:02.38
• [0.043 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/21/24 13:57:02.388
  I0921 13:57:02.388354 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/21/24 13:57:02.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:57:02.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:57:02.408
  I0921 13:57:02.410430 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  E0921 13:57:02.845254      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:57:03.845832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:57:04.845944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0921 13:57:05.465318 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9049" for this suite. @ 09/21/24 13:57:05.469
• [3.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 09/21/24 13:57:05.477
  I0921 13:57:05.477992 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename services @ 09/21/24 13:57:05.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:57:05.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:57:05.5
  STEP: creating a Service @ 09/21/24 13:57:05.506
  STEP: watching for the Service to be added @ 09/21/24 13:57:05.526
  I0921 13:57:05.527724 19 service.go:3445] Found Service test-service-fn426 in namespace services-9228 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31010}]
  I0921 13:57:05.527755 19 service.go:3452] Service test-service-fn426 created
  STEP: Getting /status @ 09/21/24 13:57:05.527
  I0921 13:57:05.532566 19 service.go:3463] Service test-service-fn426 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/21/24 13:57:05.532
  STEP: watching for the Service to be patched @ 09/21/24 13:57:05.537
  I0921 13:57:05.539197 19 service.go:3486] observed Service test-service-fn426 in namespace services-9228 with annotations: map[] & LoadBalancer: {[]}
  I0921 13:57:05.539228 19 service.go:3489] Found Service test-service-fn426 in namespace services-9228 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0057a2160 []}]}
  I0921 13:57:05.539238 19 service.go:3496] Service test-service-fn426 has service status patched
  STEP: updating the ServiceStatus @ 09/21/24 13:57:05.539
  I0921 13:57:05.550196 19 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/21/24 13:57:05.55
  I0921 13:57:05.551296 19 service.go:3527] Observed Service test-service-fn426 in namespace services-9228 with annotations: map[] & Conditions: []
  I0921 13:57:05.551323 19 service.go:3538] Observed Service test-service-fn426 in namespace services-9228 with annotations: map[patchedstatus:true] & Conditions: []
  I0921 13:57:05.551494 19 service.go:3534] Found Service test-service-fn426 in namespace services-9228 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0921 13:57:05.551506 19 service.go:3545] Service test-service-fn426 has service status updated
  STEP: patching the service @ 09/21/24 13:57:05.551
  STEP: watching for the Service to be patched @ 09/21/24 13:57:05.561
  I0921 13:57:05.561991 19 service.go:3568] observed Service test-service-fn426 in namespace services-9228 with labels: map[test-service-static:true]
  I0921 13:57:05.562072 19 service.go:3568] observed Service test-service-fn426 in namespace services-9228 with labels: map[test-service-static:true]
  I0921 13:57:05.562081 19 service.go:3568] observed Service test-service-fn426 in namespace services-9228 with labels: map[test-service-static:true]
  I0921 13:57:05.562104 19 service.go:3571] Found Service test-service-fn426 in namespace services-9228 with labels: map[test-service:patched test-service-static:true]
  I0921 13:57:05.562111 19 service.go:3578] Service test-service-fn426 patched
  STEP: deleting the service @ 09/21/24 13:57:05.562
  STEP: watching for the Service to be deleted @ 09/21/24 13:57:05.584
  I0921 13:57:05.586144 19 service.go:3602] Observed event: ADDED
  I0921 13:57:05.586247 19 service.go:3602] Observed event: MODIFIED
  I0921 13:57:05.586257 19 service.go:3602] Observed event: MODIFIED
  I0921 13:57:05.586266 19 service.go:3602] Observed event: MODIFIED
  I0921 13:57:05.586300 19 service.go:3598] Found Service test-service-fn426 in namespace services-9228 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0921 13:57:05.586310 19 service.go:3607] Service test-service-fn426 deleted
  I0921 13:57:05.586429 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9228" for this suite. @ 09/21/24 13:57:05.591
• [0.120 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 09/21/24 13:57:05.598
  I0921 13:57:05.598389 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename resourcequota @ 09/21/24 13:57:05.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:57:05.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:57:05.617
  STEP: Counting existing ResourceQuota @ 09/21/24 13:57:05.62
  E0921 13:57:05.846940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:57:06.847331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:57:07.847577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:57:08.848647      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:57:09.849367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/21/24 13:57:10.626
  STEP: Ensuring resource quota status is calculated @ 09/21/24 13:57:10.631
  E0921 13:57:10.850083      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:57:11.850303      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/21/24 13:57:12.637
  STEP: Ensuring resource quota status captures replication controller creation @ 09/21/24 13:57:12.652
  E0921 13:57:12.851329      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:57:13.851568      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/21/24 13:57:14.657
  STEP: Ensuring resource quota status released usage @ 09/21/24 13:57:14.665
  E0921 13:57:14.852105      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:57:15.852199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0921 13:57:16.671044 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4224" for this suite. @ 09/21/24 13:57:16.676
• [11.086 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 09/21/24 13:57:16.684
  I0921 13:57:16.684499 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1579949906
  STEP: Building a namespace api object, basename webhook @ 09/21/24 13:57:16.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/21/24 13:57:16.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/21/24 13:57:16.706
  STEP: Setting up server cert @ 09/21/24 13:57:16.728
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/21/24 13:57:16.838
  STEP: Deploying the webhook pod @ 09/21/24 13:57:16.847
  E0921 13:57:16.852979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 09/21/24 13:57:16.861
  I0921 13:57:16.869023 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0921 13:57:17.853124      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0921 13:57:18.853276      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/21/24 13:57:18.882
  STEP: Verifying the service has paired with the endpoint @ 09/21/24 13:57:18.894
  E0921 13:57:19.854193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0921 13:57:19.894383 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/21/24 13:57:19.973
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/21/24 13:57:20.005
  STEP: Deleting the collection of validation webhooks @ 09/21/24 13:57:20.03
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/21/24 13:57:20.105
  I0921 13:57:20.161250 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-303" for this suite. @ 09/21/24 13:57:20.164
  STEP: Destroying namespace "webhook-markers-4253" for this suite. @ 09/21/24 13:57:20.173
• [3.497 seconds]
------------------------------
S
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0921 13:57:20.181525 19 suites.go:34] Running AfterSuite actions on node 1
  I0921 13:57:20.181592 19 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.044 seconds]
------------------------------

Ran 404 of 6603 Specs in 6275.601 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6199 Skipped
PASS

Ginkgo ran 1 suite in 1h44m36.575752975s
Test Suite Passed
