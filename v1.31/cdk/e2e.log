  I1116 12:12:50.595829      18 e2e.go:109] Starting e2e run "30407c67-fec0-46eb-b860-1f59b109a5a2" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1731759170 - will randomize all specs

Will run 404 of 6605 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1116 12:12:50.840152 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:12:50.841271 18 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1116 12:12:50.876152 18 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1116 12:12:50.881182 18 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I1116 12:12:50.881222 18 e2e.go:245] e2e test version: v1.31.2
  I1116 12:12:50.882210 18 e2e.go:254] kube-apiserver version: v1.31.2
  I1116 12:12:50.882428 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:12:50.887952 18 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.048 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 11/16/24 12:12:51.067
  I1116 12:12:51.067238 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename runtimeclass @ 11/16/24 12:12:51.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:12:51.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:12:51.09
  STEP: getting /apis @ 11/16/24 12:12:51.094
  STEP: getting /apis/node.k8s.io @ 11/16/24 12:12:51.098
  STEP: getting /apis/node.k8s.io/v1 @ 11/16/24 12:12:51.099
  STEP: creating @ 11/16/24 12:12:51.1
  STEP: watching @ 11/16/24 12:12:51.121
  I1116 12:12:51.121591 18 runtimeclass.go:275] starting watch
  STEP: getting @ 11/16/24 12:12:51.128
  STEP: listing @ 11/16/24 12:12:51.131
  STEP: patching @ 11/16/24 12:12:51.135
  STEP: updating @ 11/16/24 12:12:51.142
  I1116 12:12:51.146939 18 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 11/16/24 12:12:51.146
  STEP: deleting a collection @ 11/16/24 12:12:51.162
  I1116 12:12:51.188860 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7022" for this suite. @ 11/16/24 12:12:51.193
• [0.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 11/16/24 12:12:51.202
  I1116 12:12:51.202823 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir @ 11/16/24 12:12:51.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:12:51.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:12:51.224
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/16/24 12:12:51.227
  STEP: Saw pod success @ 11/16/24 12:13:17.324
  I1116 12:13:17.329739 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-3046d01c-6522-4e78-9a0a-9b860a414663 container test-container: <nil>
  STEP: delete the pod @ 11/16/24 12:13:17.348
  I1116 12:13:17.366362 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1104" for this suite. @ 11/16/24 12:13:17.371
• [26.177 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 11/16/24 12:13:17.38
  I1116 12:13:17.380120 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename daemonsets @ 11/16/24 12:13:17.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:13:17.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:13:17.4
  I1116 12:13:17.432411 18 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1116 12:13:17.438432 18 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1116 12:13:17.444835 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:13:17.444872 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:13:17.449302 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 12:13:17.449321 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  I1116 12:13:18.445243 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:13:18.445313 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:13:18.449828 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 12:13:18.449899 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  I1116 12:13:19.443327 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:13:19.443381 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:13:19.447371 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 12:13:19.447503 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  I1116 12:13:20.445451 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:13:20.445502 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:13:20.450962 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1116 12:13:20.450979 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  I1116 12:13:21.445241 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:13:21.445285 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:13:21.450391 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1116 12:13:21.450413 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I1116 12:13:21.450426 18 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1116 12:13:21.462383 18 daemon_set.go:102] Updating DaemonSet daemon-set
  I1116 12:13:23.476964 18 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1116 12:13:23.488672 18 daemon_set.go:102] Updating DaemonSet daemon-set
  I1116 12:13:23.488697 18 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1116 12:13:23.491998 18 daemon_set.go:1193] Wrong image for pod: daemon-set-wbnqq. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1116 12:13:23.492022 18 daemon_set.go:1198] Pod daemon-set-wbnqq is not available
  I1116 12:13:23.497206 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:13:23.497241 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:13:24.498560 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:13:24.498610 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:13:25.493906 18 daemon_set.go:1198] Pod daemon-set-ktjz4 is not available
  I1116 12:13:25.497868 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:13:25.497906 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 11/16/24 12:13:25.506
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4737, will wait for the garbage collector to delete the pods @ 11/16/24 12:13:25.506
  I1116 12:13:25.570796 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.47337ms
  I1116 12:13:25.671313 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.515468ms
  I1116 12:13:30.276191 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 12:13:30.276221 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1116 12:13:30.281277 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5252"},"items":null}

  I1116 12:13:30.285815 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5252"},"items":null}

  I1116 12:13:30.303594 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4737" for this suite. @ 11/16/24 12:13:30.308
• [12.936 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 11/16/24 12:13:30.316
  I1116 12:13:30.316192 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename statefulset @ 11/16/24 12:13:30.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:13:30.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:13:30.339
  STEP: Creating service test in namespace statefulset-6683 @ 11/16/24 12:13:30.341
  I1116 12:13:30.368186 18 wait.go:40] Found 0 stateful pods, waiting for 1
  I1116 12:13:40.371013 18 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 11/16/24 12:13:40.384
  I1116 12:13:40.420807 18 wait.go:40] Found 1 stateful pods, waiting for 2
  I1116 12:13:50.423651 18 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1116 12:13:50.423686 18 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 11/16/24 12:13:50.433
  STEP: Delete all of the StatefulSets @ 11/16/24 12:13:50.437
  STEP: Verify that StatefulSets have been deleted @ 11/16/24 12:13:50.448
  I1116 12:13:50.453643 18 statefulset.go:138] Deleting all statefulset in ns statefulset-6683
  I1116 12:13:50.477369 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6683" for this suite. @ 11/16/24 12:13:50.482
• [20.174 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 11/16/24 12:13:50.49
  I1116 12:13:50.490490 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename subpath @ 11/16/24 12:13:50.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:13:50.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:13:50.51
  STEP: Setting up data @ 11/16/24 12:13:50.512
  STEP: Creating pod pod-subpath-test-secret-bsg9 @ 11/16/24 12:13:50.523
  STEP: Creating a pod to test atomic-volume-subpath @ 11/16/24 12:13:50.523
  STEP: Saw pod success @ 11/16/24 12:14:12.609
  I1116 12:14:12.614363 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-subpath-test-secret-bsg9 container test-container-subpath-secret-bsg9: <nil>
  STEP: delete the pod @ 11/16/24 12:14:12.624
  STEP: Deleting pod pod-subpath-test-secret-bsg9 @ 11/16/24 12:14:12.646
  I1116 12:14:12.646849 18 delete.go:62] Deleting pod "pod-subpath-test-secret-bsg9" in namespace "subpath-1447"
  I1116 12:14:12.651009 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1447" for this suite. @ 11/16/24 12:14:12.654
• [22.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 11/16/24 12:14:12.662
  I1116 12:14:12.662894 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 12:14:12.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:14:12.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:14:12.684
  STEP: Setting up server cert @ 11/16/24 12:14:12.71
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 12:14:12.827
  STEP: Deploying the webhook pod @ 11/16/24 12:14:12.838
  STEP: Wait for the deployment to be ready @ 11/16/24 12:14:12.861
  I1116 12:14:12.869637 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/16/24 12:14:14.885
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 12:14:14.9
  I1116 12:14:15.901523 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 11/16/24 12:14:15.912
  STEP: verifying the mutating webhook match conditions @ 11/16/24 12:14:15.928
  STEP: updating the mutating webhook match conditions @ 11/16/24 12:14:15.933
  STEP: verifying the mutating webhook match conditions @ 11/16/24 12:14:15.942
  I1116 12:14:15.999675 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7719" for this suite. @ 11/16/24 12:14:16.004
  STEP: Destroying namespace "webhook-markers-7498" for this suite. @ 11/16/24 12:14:16.012
• [3.359 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 11/16/24 12:14:16.022
  I1116 12:14:16.022158 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename resourcequota @ 11/16/24 12:14:16.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:14:16.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:14:16.04
  STEP: Counting existing ResourceQuota @ 11/16/24 12:14:16.042
  STEP: Creating a ResourceQuota @ 11/16/24 12:14:21.048
  STEP: Ensuring resource quota status is calculated @ 11/16/24 12:14:21.055
  STEP: Creating a Pod that fits quota @ 11/16/24 12:14:23.061
  STEP: Ensuring ResourceQuota status captures the pod usage @ 11/16/24 12:14:23.081
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 11/16/24 12:14:25.088
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 11/16/24 12:14:25.09
  STEP: Ensuring a pod cannot update its resource requirements @ 11/16/24 12:14:25.092
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 11/16/24 12:14:25.098
  STEP: Deleting the pod @ 11/16/24 12:14:27.103
  STEP: Ensuring resource quota status released the pod usage @ 11/16/24 12:14:27.126
  I1116 12:14:29.133522 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7154" for this suite. @ 11/16/24 12:14:29.138
• [13.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 11/16/24 12:14:29.151
  I1116 12:14:29.151874 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename field-validation @ 11/16/24 12:14:29.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:14:29.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:14:29.178
  I1116 12:14:29.182286 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  W1116 12:14:31.726104      18 warnings.go:70] unknown field "alpha"
  W1116 12:14:31.726126      18 warnings.go:70] unknown field "beta"
  W1116 12:14:31.726130      18 warnings.go:70] unknown field "delta"
  W1116 12:14:31.726133      18 warnings.go:70] unknown field "epsilon"
  W1116 12:14:31.726137      18 warnings.go:70] unknown field "gamma"
  I1116 12:14:32.280603 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4393" for this suite. @ 11/16/24 12:14:32.285
• [3.144 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 11/16/24 12:14:32.295
  I1116 12:14:32.295997 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 12:14:32.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:14:32.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:14:32.317
  STEP: Setting up server cert @ 11/16/24 12:14:32.342
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 12:14:32.559
  STEP: Deploying the webhook pod @ 11/16/24 12:14:32.566
  STEP: Wait for the deployment to be ready @ 11/16/24 12:14:32.581
  I1116 12:14:32.593668 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/16/24 12:14:34.609
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 12:14:34.626
  I1116 12:14:35.627259 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 11/16/24 12:14:35.637
  STEP: Creating a custom resource definition that should be denied by the webhook @ 11/16/24 12:14:35.654
  I1116 12:14:35.654732 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:14:35.720862 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3335" for this suite. @ 11/16/24 12:14:35.727
  STEP: Destroying namespace "webhook-markers-4092" for this suite. @ 11/16/24 12:14:35.735
• [3.448 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 11/16/24 12:14:35.744
  I1116 12:14:35.744613 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir @ 11/16/24 12:14:35.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:14:35.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:14:35.763
  STEP: Creating a pod to test emptydir volume type on node default medium @ 11/16/24 12:14:35.768
  STEP: Saw pod success @ 11/16/24 12:14:39.798
  I1116 12:14:39.803691 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-f81a0392-3ab0-4304-8704-5f222599fe41 container test-container: <nil>
  STEP: delete the pod @ 11/16/24 12:14:39.812
  I1116 12:14:39.829788 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8846" for this suite. @ 11/16/24 12:14:39.834
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 11/16/24 12:14:39.843
  I1116 12:14:39.843369 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/16/24 12:14:39.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:14:39.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:14:39.87
  STEP: creating the policy @ 11/16/24 12:14:39.88
  STEP: waiting until the marker is denied @ 11/16/24 12:14:39.897
  STEP: testing a replicated Deployment to be allowed @ 11/16/24 12:14:40.607
  STEP: testing a non-replicated ReplicaSet not to be denied @ 11/16/24 12:14:40.624
  I1116 12:14:40.687229 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2887" for this suite. @ 11/16/24 12:14:40.69
• [0.856 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 11/16/24 12:14:40.699
  I1116 12:14:40.699579 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 12:14:40.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:14:40.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:14:40.719
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 12:14:40.722
  STEP: Saw pod success @ 11/16/24 12:14:44.749
  I1116 12:14:44.753142 18 output.go:196] Trying to get logs from node ip-172-31-72-246 pod downwardapi-volume-ef055ade-8a93-48fa-a379-edf039031014 container client-container: <nil>
  STEP: delete the pod @ 11/16/24 12:14:44.772
  I1116 12:14:44.795323 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3351" for this suite. @ 11/16/24 12:14:44.8
• [4.110 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 11/16/24 12:14:44.809
  I1116 12:14:44.809813 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/16/24 12:14:44.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:14:44.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:14:44.83
  I1116 12:14:44.835714 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6438" for this suite. @ 11/16/24 12:14:44.84
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 11/16/24 12:14:44.849
  I1116 12:14:44.849963 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/16/24 12:14:44.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:14:44.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:14:44.869
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 11/16/24 12:14:44.875
  I1116 12:14:44.876331 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:14:46.358999 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:14:51.299754 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1423" for this suite. @ 11/16/24 12:14:51.307
• [6.466 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 11/16/24 12:14:51.316
  I1116 12:14:51.316498 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename configmap @ 11/16/24 12:14:51.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:14:51.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:14:51.337
  STEP: Creating configMap with name configmap-test-volume-d1f9ae73-3032-486f-9e4a-28159f85435a @ 11/16/24 12:14:51.341
  STEP: Creating a pod to test consume configMaps @ 11/16/24 12:14:51.349
  STEP: Saw pod success @ 11/16/24 12:14:55.374
  I1116 12:14:55.379199 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-configmaps-b62f9e03-f794-4711-8b17-eeb82bb57b7b container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 12:14:55.388
  I1116 12:14:55.406233 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5330" for this suite. @ 11/16/24 12:14:55.41
• [4.104 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 11/16/24 12:14:55.42
  I1116 12:14:55.420249 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 12:14:55.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:14:55.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:14:55.437
  STEP: fetching services @ 11/16/24 12:14:55.44
  I1116 12:14:55.443691 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2896" for this suite. @ 11/16/24 12:14:55.447
• [0.036 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 11/16/24 12:14:55.456
  I1116 12:14:55.456385 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-probe @ 11/16/24 12:14:55.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:14:55.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:14:55.476
  STEP: Creating pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314 @ 11/16/24 12:14:55.478
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/16/24 12:14:57.502
  I1116 12:14:57.506987 18 container_probe.go:1749] Initial restart count of pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 is 0
  I1116 12:14:57.511358 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:14:59.516342 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:01.522002 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:03.528452 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:05.534193 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:07.542059 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:09.547060 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:11.553108 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:13.560723 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:15.566202 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:17.571968 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:19.577841 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:21.583487 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:23.590175 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:25.596222 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:27.602131 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:29.609004 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:31.615937 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:33.623152 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:35.629737 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:37.635525 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:39.642181 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:41.647671 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:43.655320 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:45.662672 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:47.668293 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:49.674963 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:51.679571 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:53.685103 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:55.689987 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:57.694996 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:15:59.701338 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:01.706738 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:03.712968 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:05.719812 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:07.726211 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:09.731520 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:11.737834 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:13.744085 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:15.749717 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:17.756775 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:19.763305 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:21.769960 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:23.777872 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:25.784144 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:27.790091 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:29.796311 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:31.802258 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:33.809105 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:35.814587 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:37.819585 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:39.827008 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:41.832888 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:43.839547 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:45.846810 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:47.853277 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:49.859271 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:51.867482 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:53.874213 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:55.879206 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:57.885184 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:16:59.891322 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:01.898892 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:03.905482 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:05.911877 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:07.918754 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:09.924085 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:11.928972 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:13.935491 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:15.942208 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:17.948025 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:19.955517 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:21.961141 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:23.967772 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:25.973947 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:27.980107 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:29.985741 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:31.991834 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:33.998705 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:36.004891 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:38.011211 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:40.017932 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:42.024100 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:44.030331 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:46.036011 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:48.043434 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:50.050121 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:52.056199 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:54.063087 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:56.069207 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:17:58.075019 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:00.082276 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:02.088762 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:04.094665 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:06.101201 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:08.108131 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:10.114995 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:12.119500 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:14.125160 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:16.132812 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:18.139337 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:20.145005 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:22.150248 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:24.156326 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:26.163575 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:28.169661 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:30.174564 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:32.180896 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:34.187152 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:36.192681 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:38.199033 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:40.204187 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:42.211130 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:44.216168 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:46.222980 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:48.230444 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:50.236611 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:52.245112 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:54.251222 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  I1116 12:18:56.257708 18 container_probe.go:1759] Get pod test-webserver-46c9ae91-908f-4f4a-985b-867677428be2 in namespace container-probe-9314
  STEP: deleting the pod @ 11/16/24 12:18:58.257
  I1116 12:18:58.279119 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9314" for this suite. @ 11/16/24 12:18:58.286
• [242.844 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 11/16/24 12:18:58.3
  I1116 12:18:58.300572 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename endpointslice @ 11/16/24 12:18:58.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:18:58.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:18:58.341
  I1116 12:18:58.363791 18 endpointslice.go:1045] Endpoints addresses: [172.31.13.41 172.31.75.83] , ports: [6443]
  I1116 12:18:58.363814 18 endpointslice.go:1075] EndpointSlices addresses: [172.31.13.41 172.31.75.83] , ports: [6443]
  I1116 12:18:58.363930 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9499" for this suite. @ 11/16/24 12:18:58.367
• [0.075 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 11/16/24 12:18:58.375
  I1116 12:18:58.375674 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 12:18:58.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:18:58.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:18:58.398
  STEP: Creating secret with name projected-secret-test-44a75560-3e81-452c-a4a9-79ef34a35f5f @ 11/16/24 12:18:58.4
  STEP: Creating a pod to test consume secrets @ 11/16/24 12:18:58.408
  STEP: Saw pod success @ 11/16/24 12:19:02.436
  I1116 12:19:02.441232 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-projected-secrets-617ce1ee-70de-4e36-a2c9-2882e6acba70 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 12:19:02.462
  I1116 12:19:02.481747 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7510" for this suite. @ 11/16/24 12:19:02.487
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 11/16/24 12:19:02.495
  I1116 12:19:02.495927 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename events @ 11/16/24 12:19:02.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:19:02.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:19:02.515
  STEP: Create set of events @ 11/16/24 12:19:02.518
  I1116 12:19:02.522881 18 core_events.go:198] created test-event-1
  I1116 12:19:02.528818 18 core_events.go:198] created test-event-2
  I1116 12:19:02.534336 18 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 11/16/24 12:19:02.534
  STEP: delete collection of events @ 11/16/24 12:19:02.538
  I1116 12:19:02.538212 18 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/16/24 12:19:02.568
  I1116 12:19:02.568593 18 core_events.go:230] requesting list of events to confirm quantity
  I1116 12:19:02.573481 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8896" for this suite. @ 11/16/24 12:19:02.577
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 11/16/24 12:19:02.586
  I1116 12:19:02.586583 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename replicaset @ 11/16/24 12:19:02.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:19:02.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:19:02.606
  STEP: Create a ReplicaSet @ 11/16/24 12:19:02.608
  STEP: Verify that the required pods have come up @ 11/16/24 12:19:02.614
  I1116 12:19:02.619968 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I1116 12:19:07.626708 18 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 11/16/24 12:19:07.626
  I1116 12:19:07.629860 18 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 11/16/24 12:19:07.629
  STEP: DeleteCollection of the ReplicaSets @ 11/16/24 12:19:07.633
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 11/16/24 12:19:07.644
  I1116 12:19:07.649901 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9962" for this suite. @ 11/16/24 12:19:07.655
• [5.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 11/16/24 12:19:07.666
  I1116 12:19:07.666394 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename disruption @ 11/16/24 12:19:07.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:19:07.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:19:07.688
  STEP: Creating a pdb that targets all three pods in a test replica set @ 11/16/24 12:19:07.691
  STEP: Waiting for the pdb to be processed @ 11/16/24 12:19:07.697
  STEP: First trying to evict a pod which shouldn't be evictable @ 11/16/24 12:19:09.709
  STEP: Waiting for all pods to be running @ 11/16/24 12:19:09.709
  I1116 12:19:09.713575 18 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 11/16/24 12:19:11.715
  STEP: Updating the pdb to allow a pod to be evicted @ 11/16/24 12:19:11.729
  STEP: Waiting for the pdb to be processed @ 11/16/24 12:19:11.74
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/16/24 12:19:13.746
  STEP: Waiting for all pods to be running @ 11/16/24 12:19:13.746
  STEP: Waiting for the pdb to observed all healthy pods @ 11/16/24 12:19:13.75
  STEP: Patching the pdb to disallow a pod to be evicted @ 11/16/24 12:19:13.782
  STEP: Waiting for the pdb to be processed @ 11/16/24 12:19:13.81
  STEP: Waiting for all pods to be running @ 11/16/24 12:19:15.816
  STEP: locating a running pod @ 11/16/24 12:19:15.822
  STEP: Deleting the pdb to allow a pod to be evicted @ 11/16/24 12:19:15.834
  STEP: Waiting for the pdb to be deleted @ 11/16/24 12:19:15.842
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/16/24 12:19:15.846
  STEP: Waiting for all pods to be running @ 11/16/24 12:19:15.846
  I1116 12:19:15.873333 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1694" for this suite. @ 11/16/24 12:19:15.877
• [8.222 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 11/16/24 12:19:15.888
  I1116 12:19:15.888664 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 12:19:15.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:19:15.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:19:15.912
  STEP: Creating the pod @ 11/16/24 12:19:15.914
  I1116 12:19:18.464118 18 pod_client.go:173] Successfully updated pod "annotationupdate26bfc5df-8db6-4376-9571-f0eeb887fa14"
  I1116 12:19:20.483833 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4411" for this suite. @ 11/16/24 12:19:20.488
• [4.609 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 11/16/24 12:19:20.497
  I1116 12:19:20.497818 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pods @ 11/16/24 12:19:20.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:19:20.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:19:20.518
  I1116 12:19:20.520525 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: creating the pod @ 11/16/24 12:19:20.52
  STEP: submitting the pod to kubernetes @ 11/16/24 12:19:20.521
  I1116 12:19:22.561120 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6448" for this suite. @ 11/16/24 12:19:22.564
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 11/16/24 12:19:22.573
  I1116 12:19:22.573765 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/16/24 12:19:22.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:19:22.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:19:22.593
  STEP: fetching the /apis discovery document @ 11/16/24 12:19:22.595
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 11/16/24 12:19:22.596
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 11/16/24 12:19:22.596
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 11/16/24 12:19:22.596
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 11/16/24 12:19:22.597
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 11/16/24 12:19:22.597
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 11/16/24 12:19:22.598
  I1116 12:19:22.598571 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1652" for this suite. @ 11/16/24 12:19:22.602
• [0.038 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 11/16/24 12:19:22.612
  I1116 12:19:22.612188 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 12:19:22.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:19:22.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:19:22.632
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 12:19:22.634
  STEP: Saw pod success @ 11/16/24 12:19:26.664
  I1116 12:19:26.668814 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downwardapi-volume-85ac4148-908a-4d89-ae9a-6c5c17e39db4 container client-container: <nil>
  STEP: delete the pod @ 11/16/24 12:19:26.677
  I1116 12:19:26.696936 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-359" for this suite. @ 11/16/24 12:19:26.701
• [4.098 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 11/16/24 12:19:26.71
  I1116 12:19:26.710506 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename sched-preemption @ 11/16/24 12:19:26.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:19:26.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:19:26.786
  I1116 12:19:26.811452 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1116 12:20:26.818253 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/16/24 12:20:26.822
  I1116 12:20:26.822541 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/16/24 12:20:26.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:20:26.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:20:26.841
  STEP: Finding an available node @ 11/16/24 12:20:26.844
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/16/24 12:20:26.844
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/16/24 12:20:28.868
  I1116 12:20:28.887836 18 preemption.go:585] found a healthy node: ip-172-31-45-197
  I1116 12:20:34.964195 18 preemption.go:708] pods created so far: [1 1 1]
  I1116 12:20:34.964225 18 preemption.go:709] length of pods created so far: 3
  I1116 12:20:36.976113 18 preemption.go:726] pods created so far: [2 2 1]
  I1116 12:20:44.057289 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8070" for this suite. @ 11/16/24 12:20:44.062
  I1116 12:20:44.070241 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7725" for this suite. @ 11/16/24 12:20:44.073
• [77.372 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 11/16/24 12:20:44.082
  I1116 12:20:44.082216 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename crd-webhook @ 11/16/24 12:20:44.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:20:44.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:20:44.101
  STEP: Setting up server cert @ 11/16/24 12:20:44.103
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/16/24 12:20:44.294
  STEP: Deploying the custom resource conversion webhook pod @ 11/16/24 12:20:44.306
  STEP: Wait for the deployment to be ready @ 11/16/24 12:20:44.319
  I1116 12:20:44.327531 18 deployment.go:222] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/16/24 12:20:46.342
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 12:20:46.355
  I1116 12:20:47.356153 18 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1116 12:20:47.365955 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Creating a v1 custom resource @ 11/16/24 12:20:49.922
  STEP: Create a v2 custom resource @ 11/16/24 12:20:49.948
  STEP: List CRs in v1 @ 11/16/24 12:20:50.021
  STEP: List CRs in v2 @ 11/16/24 12:20:50.033
  I1116 12:20:50.616347 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3653" for this suite. @ 11/16/24 12:20:50.622
• [6.552 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 11/16/24 12:20:50.633
  I1116 12:20:50.633878 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 12:20:50.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:20:50.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:20:50.653
  STEP: creating service in namespace services-30 @ 11/16/24 12:20:50.655
  STEP: creating service affinity-nodeport in namespace services-30 @ 11/16/24 12:20:50.656
  STEP: creating replication controller affinity-nodeport in namespace services-30 @ 11/16/24 12:20:50.673
  I1116 12:20:50.682360      18 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-30, replica count: 3
  I1116 12:20:53.734115      18 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1116 12:20:56.735101      18 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1116 12:20:56.748475 18 resource.go:361] Creating new exec pod
  I1116 12:20:59.772899 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-30 exec execpod-affinity2dfb6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1116 12:20:59.873484 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I1116 12:20:59.873526 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 12:20:59.873595 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-30 exec execpod-affinity2dfb6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.243 80'
  I1116 12:20:59.965170 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.243 80\nConnection to 10.152.183.243 80 port [tcp/http] succeeded!\n"
  I1116 12:20:59.965299 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 12:20:59.965373 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-30 exec execpod-affinity2dfb6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.72.246 30976'
  I1116 12:21:00.073826 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.72.246 30976\nConnection to 172.31.72.246 30976 port [tcp/*] succeeded!\n"
  I1116 12:21:00.073865 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 12:21:00.073935 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-30 exec execpod-affinity2dfb6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.197 30976'
  I1116 12:21:00.153350 18 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.45.197 30976\n+ echo hostName\nConnection to 172.31.45.197 30976 port [tcp/*] succeeded!\n"
  I1116 12:21:00.153394 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 12:21:00.153449 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-30 exec execpod-affinity2dfb6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.107:30976/ ; done'
  I1116 12:21:00.323778 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:30976/\n"
  I1116 12:21:00.323826 18 builder.go:147] stdout: "\naffinity-nodeport-zln9b\naffinity-nodeport-zln9b\naffinity-nodeport-zln9b\naffinity-nodeport-zln9b\naffinity-nodeport-zln9b\naffinity-nodeport-zln9b\naffinity-nodeport-zln9b\naffinity-nodeport-zln9b\naffinity-nodeport-zln9b\naffinity-nodeport-zln9b\naffinity-nodeport-zln9b\naffinity-nodeport-zln9b\naffinity-nodeport-zln9b\naffinity-nodeport-zln9b\naffinity-nodeport-zln9b\naffinity-nodeport-zln9b"
  I1116 12:21:00.323841 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.323849 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.323856 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.323862 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.323869 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.323875 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.323880 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.323886 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.323892 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.323954 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.323961 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.323968 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.323974 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.323981 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.323987 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.324002 18 service.go:242] Received response from host: affinity-nodeport-zln9b
  I1116 12:21:00.324160 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-30, will wait for the garbage collector to delete the pods @ 11/16/24 12:21:00.338
  I1116 12:21:00.403112 18 resources.go:139] Deleting ReplicationController affinity-nodeport took: 9.947495ms
  I1116 12:21:00.503271 18 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.152592ms
  I1116 12:21:06.335287 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-30" for this suite. @ 11/16/24 12:21:06.34
• [15.714 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 11/16/24 12:21:06.348
  I1116 12:21:06.348011 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename namespaces @ 11/16/24 12:21:06.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:21:06.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:21:06.368
  STEP: Creating namespace "e2e-ns-499dm" @ 11/16/24 12:21:06.37
  I1116 12:21:06.391265 18 namespace.go:411] Namespace "e2e-ns-499dm-5362" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-499dm-5362" @ 11/16/24 12:21:06.391
  I1116 12:21:06.402574 18 namespace.go:434] Namespace "e2e-ns-499dm-5362" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-499dm-5362" @ 11/16/24 12:21:06.402
  I1116 12:21:06.412766 18 namespace.go:463] Namespace "e2e-ns-499dm-5362" has []v1.FinalizerName{"kubernetes"}
  I1116 12:21:06.412846 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6592" for this suite. @ 11/16/24 12:21:06.417
  STEP: Destroying namespace "e2e-ns-499dm-5362" for this suite. @ 11/16/24 12:21:06.425
• [0.086 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 11/16/24 12:21:06.434
  I1116 12:21:06.434424 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 12:21:06.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:21:06.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:21:06.452
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 12:21:06.455
  STEP: Saw pod success @ 11/16/24 12:21:10.481
  I1116 12:21:10.486463 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downwardapi-volume-b2b0da39-dd4a-42bd-bf6e-2542889ee185 container client-container: <nil>
  STEP: delete the pod @ 11/16/24 12:21:10.499
  I1116 12:21:10.578541 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5714" for this suite. @ 11/16/24 12:21:10.583
• [4.158 seconds]
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 11/16/24 12:21:10.592
  I1116 12:21:10.592088 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename svcaccounts @ 11/16/24 12:21:10.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:21:10.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:21:10.611
  I1116 12:21:10.630018 18 service_accounts.go:618] created pod
  STEP: Saw pod success @ 11/16/24 12:21:14.646
  I1116 12:21:44.650133 18 service_accounts.go:624] polling logs
  I1116 12:21:44.661568 18 service_accounts.go:634] Pod logs: 
  I1116 12:21:11.187825       1 log.go:245] OK: Got token
  I1116 12:21:11.187869       1 log.go:245] validating with in-cluster discovery
  I1116 12:21:11.188084       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I1116 12:21:11.188244       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6252:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000259aa0), NotBefore:(*jwt.NumericDate)(0xc000259b90), IssuedAt:(*jwt.NumericDate)(0xc000259ab0), ID:"e59e5872-a8ae-43e1-a85f-a7101de1775f"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6252", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"b6cbb84a-71d2-4901-a343-8e6d4c8166bc"}}}
  I1116 12:21:11.198025       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1116 12:21:11.202610       1 log.go:245] OK: Validated signature on JWT
  I1116 12:21:11.202690       1 log.go:245] OK: Got valid claims from token!
  I1116 12:21:11.202738       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6252:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000135b0), NotBefore:(*jwt.NumericDate)(0xc0000135d8), IssuedAt:(*jwt.NumericDate)(0xc0000135b8), ID:"e59e5872-a8ae-43e1-a85f-a7101de1775f"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6252", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"b6cbb84a-71d2-4901-a343-8e6d4c8166bc"}}}

  I1116 12:21:44.661614 18 service_accounts.go:638] completed pod
  I1116 12:21:44.670698 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6252" for this suite. @ 11/16/24 12:21:44.675
• [34.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 11/16/24 12:21:44.683
  I1116 12:21:44.683398 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename svcaccounts @ 11/16/24 12:21:44.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:21:44.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:21:44.702
  STEP: creating a ServiceAccount @ 11/16/24 12:21:44.704
  STEP: watching for the ServiceAccount to be added @ 11/16/24 12:21:44.713
  STEP: patching the ServiceAccount @ 11/16/24 12:21:44.714
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 11/16/24 12:21:44.722
  STEP: deleting the ServiceAccount @ 11/16/24 12:21:44.726
  I1116 12:21:44.744822 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7763" for this suite. @ 11/16/24 12:21:44.749
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 11/16/24 12:21:44.758
  I1116 12:21:44.758069 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/16/24 12:21:44.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:21:44.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:21:44.779
  STEP: create the container to handle the HTTPGet hook request. @ 11/16/24 12:21:44.786
  STEP: create the pod with lifecycle hook @ 11/16/24 12:21:46.813
  STEP: check poststart hook @ 11/16/24 12:21:48.835
  STEP: delete the pod with lifecycle hook @ 11/16/24 12:21:48.843
  I1116 12:21:50.863990 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1776" for this suite. @ 11/16/24 12:21:50.868
• [6.120 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 11/16/24 12:21:50.878
  I1116 12:21:50.878379 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 12:21:50.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:21:50.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:21:50.897
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 12:21:50.9
  STEP: Saw pod success @ 11/16/24 12:21:54.924
  I1116 12:21:54.928938 18 output.go:196] Trying to get logs from node ip-172-31-72-246 pod downwardapi-volume-134f53b3-bb64-4d0f-a14a-cda17cae1f1d container client-container: <nil>
  STEP: delete the pod @ 11/16/24 12:21:54.946
  I1116 12:21:54.965890 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5358" for this suite. @ 11/16/24 12:21:54.97
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 11/16/24 12:21:54.979
  I1116 12:21:54.979074 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename aggregator @ 11/16/24 12:21:54.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:21:54.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:21:54.999
  I1116 12:21:55.001793 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Registering the sample API server. @ 11/16/24 12:21:55.002
  I1116 12:21:55.221524 18 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I1116 12:21:55.253328 18 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I1116 12:21:57.310435 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:21:59.317697 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:22:01.317406 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:22:03.315651 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:22:05.318798 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:22:07.317302 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:22:09.316946 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:22:11.316408 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:22:13.316639 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:22:15.315866 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:22:17.317170 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 21, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:22:19.438423 18 aggregator.go:755] Waited 115.39278ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 11/16/24 12:22:19.468
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 11/16/24 12:22:19.473
  STEP: List APIServices @ 11/16/24 12:22:19.48
  I1116 12:22:19.485802 18 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 11/16/24 12:22:19.485
  I1116 12:22:19.497612 18 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 11/16/24 12:22:19.497
  I1116 12:22:19.510383 18 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.November, 16, 12, 22, 19, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 11/16/24 12:22:19.51
  I1116 12:22:19.514664 18 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-11-16 12:22:19 +0000 UTC Passed all checks passed}
  I1116 12:22:19.514695 18 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1116 12:22:19.514706 18 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 11/16/24 12:22:19.514
  I1116 12:22:19.528066 18 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-356573985" @ 11/16/24 12:22:19.528
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 11/16/24 12:22:19.536
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 11/16/24 12:22:19.543
  STEP: Patch APIService Status @ 11/16/24 12:22:19.547
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 11/16/24 12:22:19.557
  I1116 12:22:19.561513 18 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-11-16 12:22:19 +0000 UTC Passed all checks passed}
  I1116 12:22:19.561541 18 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1116 12:22:19.561554 18 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1116 12:22:19.561628 18 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 11/16/24 12:22:19.561
  STEP: Confirm that the generated APIService has been deleted @ 11/16/24 12:22:19.574
  I1116 12:22:19.574880 18 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I1116 12:22:19.579485 18 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1116 12:22:19.579510 18 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I1116 12:22:19.709353 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1559" for this suite. @ 11/16/24 12:22:19.714
• [24.744 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 11/16/24 12:22:19.723
  I1116 12:22:19.723616 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename secrets @ 11/16/24 12:22:19.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:22:19.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:22:19.747
  I1116 12:22:19.792113 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9120" for this suite. @ 11/16/24 12:22:19.795
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 11/16/24 12:22:19.804
  I1116 12:22:19.804369 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename configmap @ 11/16/24 12:22:19.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:22:19.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:22:19.823
  STEP: Creating configMap with name cm-test-opt-del-80a2c8d8-8679-465c-9d6f-1af1740fdf20 @ 11/16/24 12:22:19.829
  STEP: Creating configMap with name cm-test-opt-upd-fbd86267-fd29-45ea-bd98-96966f63f77f @ 11/16/24 12:22:19.834
  STEP: Creating the pod @ 11/16/24 12:22:19.84
  STEP: Deleting configmap cm-test-opt-del-80a2c8d8-8679-465c-9d6f-1af1740fdf20 @ 11/16/24 12:22:21.897
  STEP: Updating configmap cm-test-opt-upd-fbd86267-fd29-45ea-bd98-96966f63f77f @ 11/16/24 12:22:21.905
  STEP: Creating configMap with name cm-test-opt-create-f20b27a1-7777-4275-a0a0-694b5e713f71 @ 11/16/24 12:22:21.911
  STEP: waiting to observe update in volume @ 11/16/24 12:22:21.916
  I1116 12:23:34.333354 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7014" for this suite. @ 11/16/24 12:23:34.337
• [74.542 seconds]
------------------------------
SSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 11/16/24 12:23:34.346
  I1116 12:23:34.346712 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 11/16/24 12:23:34.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:23:34.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:23:34.371
  STEP: Setting up the test @ 11/16/24 12:23:34.373
  STEP: Creating hostNetwork=false pod @ 11/16/24 12:23:34.373
  STEP: Creating hostNetwork=true pod @ 11/16/24 12:23:36.4
  STEP: Running the test @ 11/16/24 12:23:38.427
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 11/16/24 12:23:38.427
  I1116 12:23:38.427574 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1398 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:23:38.427592 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:23:38.427999 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:23:38.428058 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1398/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1116 12:23:38.473400 18 exec_util.go:111] Exec stderr: ""
  I1116 12:23:38.473449 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1398 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:23:38.473464 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:23:38.473834 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:23:38.473885 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1398/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1116 12:23:38.510068 18 exec_util.go:111] Exec stderr: ""
  I1116 12:23:38.510107 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1398 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:23:38.510121 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:23:38.510549 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:23:38.510593 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1398/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1116 12:23:38.542697 18 exec_util.go:111] Exec stderr: ""
  I1116 12:23:38.542730 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1398 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:23:38.542738 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:23:38.543157 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:23:38.543207 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1398/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1116 12:23:38.578165 18 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 11/16/24 12:23:38.578
  I1116 12:23:38.578260 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1398 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:23:38.578296 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:23:38.578640 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:23:38.578677 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1398/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1116 12:23:38.615265 18 exec_util.go:111] Exec stderr: ""
  I1116 12:23:38.615307 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1398 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:23:38.615318 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:23:38.615723 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:23:38.615765 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1398/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1116 12:23:38.646659 18 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 11/16/24 12:23:38.646
  I1116 12:23:38.646714 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1398 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:23:38.646736 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:23:38.647144 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:23:38.647204 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1398/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1116 12:23:38.687399 18 exec_util.go:111] Exec stderr: ""
  I1116 12:23:38.687435 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1398 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:23:38.687450 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:23:38.687885 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:23:38.687927 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1398/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1116 12:23:38.723171 18 exec_util.go:111] Exec stderr: ""
  I1116 12:23:38.723210 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1398 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:23:38.723219 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:23:38.723587 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:23:38.723623 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1398/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1116 12:23:38.762080 18 exec_util.go:111] Exec stderr: ""
  I1116 12:23:38.762110 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1398 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:23:38.762118 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:23:38.762504 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:23:38.762541 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1398/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1116 12:23:38.795993 18 exec_util.go:111] Exec stderr: ""
  I1116 12:23:38.796112 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-1398" for this suite. @ 11/16/24 12:23:38.8
• [4.463 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 11/16/24 12:23:38.809
  I1116 12:23:38.809404 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename replicaset @ 11/16/24 12:23:38.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:23:38.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:23:38.83
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 11/16/24 12:23:38.832
  STEP: When a replicaset with a matching selector is created @ 11/16/24 12:23:40.859
  STEP: Then the orphan pod is adopted @ 11/16/24 12:23:40.865
  STEP: When the matched label of one of its pods change @ 11/16/24 12:23:41.875
  I1116 12:23:41.880886 18 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/16/24 12:23:41.893
  I1116 12:23:41.901063 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8007" for this suite. @ 11/16/24 12:23:41.911
• [3.113 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 11/16/24 12:23:41.922
  I1116 12:23:41.922885 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename secrets @ 11/16/24 12:23:41.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:23:41.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:23:41.95
  STEP: Creating secret with name secret-test-e0e736a0-bf5f-4b22-8c13-06fd9620bd79 @ 11/16/24 12:23:41.953
  STEP: Creating a pod to test consume secrets @ 11/16/24 12:23:41.96
  STEP: Saw pod success @ 11/16/24 12:23:45.989
  I1116 12:23:45.993839 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-secrets-a16cc55e-768f-4573-93d1-c22eccbcd9dd container secret-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 12:23:46.002
  I1116 12:23:46.020884 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6052" for this suite. @ 11/16/24 12:23:46.024
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 11/16/24 12:23:46.033
  I1116 12:23:46.033182 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/16/24 12:23:46.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:23:46.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:23:46.051
  I1116 12:23:46.054050 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/16/24 12:23:47.431
  I1116 12:23:47.431427 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-307 --namespace=crd-publish-openapi-307 create -f -'
  I1116 12:23:49.489227 18 builder.go:146] stderr: ""
  I1116 12:23:49.489272 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-651-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1116 12:23:49.489324 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-307 --namespace=crd-publish-openapi-307 delete e2e-test-crd-publish-openapi-651-crds test-cr'
  I1116 12:23:49.547484 18 builder.go:146] stderr: ""
  I1116 12:23:49.547532 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-651-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1116 12:23:49.547575 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-307 --namespace=crd-publish-openapi-307 apply -f -'
  I1116 12:23:49.606149 18 builder.go:146] stderr: ""
  I1116 12:23:49.606183 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-651-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1116 12:23:49.606220 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-307 --namespace=crd-publish-openapi-307 delete e2e-test-crd-publish-openapi-651-crds test-cr'
  I1116 12:23:49.656335 18 builder.go:146] stderr: ""
  I1116 12:23:49.656421 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-651-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/16/24 12:23:49.656
  I1116 12:23:49.656508 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-307 explain e2e-test-crd-publish-openapi-651-crds'
  I1116 12:23:49.695209 18 builder.go:146] stderr: ""
  I1116 12:23:49.695258 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-651-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I1116 12:23:50.920769 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-307" for this suite. @ 11/16/24 12:23:50.928
• [4.903 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 11/16/24 12:23:50.936
  I1116 12:23:50.936598 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename statefulset @ 11/16/24 12:23:50.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:23:50.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:23:50.96
  STEP: Creating service test in namespace statefulset-4817 @ 11/16/24 12:23:50.962
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 11/16/24 12:23:50.97
  STEP: Creating stateful set ss in namespace statefulset-4817 @ 11/16/24 12:23:50.974
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4817 @ 11/16/24 12:23:50.981
  I1116 12:23:50.986834 18 wait.go:40] Found 0 stateful pods, waiting for 1
  I1116 12:24:00.986773 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 11/16/24 12:24:00.986
  I1116 12:24:00.990968 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-4817 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1116 12:24:01.078309 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1116 12:24:01.078338 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1116 12:24:01.078346 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1116 12:24:01.083898 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1116 12:24:11.083832 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1116 12:24:11.083869 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1116 12:24:11.104510 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999813s
  I1116 12:24:12.110766 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.994543841s
  I1116 12:24:13.116499 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.98912654s
  I1116 12:24:14.121544 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.983396134s
  I1116 12:24:15.126575 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.978360235s
  I1116 12:24:16.133539 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.972586952s
  I1116 12:24:17.139153 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.96638421s
  I1116 12:24:18.145380 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.960726931s
  I1116 12:24:19.151308 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.953864311s
  I1116 12:24:20.158721 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 947.868182ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4817 @ 11/16/24 12:24:21.158
  I1116 12:24:21.163328 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-4817 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1116 12:24:21.256824 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1116 12:24:21.256857 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1116 12:24:21.256866 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1116 12:24:21.262571 18 wait.go:40] Found 1 stateful pods, waiting for 3
  I1116 12:24:31.261800 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1116 12:24:31.261825 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1116 12:24:31.261831 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 11/16/24 12:24:31.261
  STEP: Scale down will halt with unhealthy stateful pod @ 11/16/24 12:24:31.261
  I1116 12:24:31.270303 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-4817 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1116 12:24:31.355896 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1116 12:24:31.355919 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1116 12:24:31.355929 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1116 12:24:31.355963 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-4817 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1116 12:24:31.437571 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1116 12:24:31.437596 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1116 12:24:31.437605 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1116 12:24:31.437639 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-4817 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1116 12:24:31.524853 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1116 12:24:31.524883 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1116 12:24:31.524893 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1116 12:24:31.524902 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1116 12:24:31.528004 18 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1116 12:24:41.534823 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1116 12:24:41.534855 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1116 12:24:41.534861 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1116 12:24:41.548553 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999741s
  I1116 12:24:42.553968 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.99657081s
  I1116 12:24:43.560446 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.990466712s
  I1116 12:24:44.564790 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.984763474s
  I1116 12:24:45.569991 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.980431603s
  I1116 12:24:46.575469 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.974582248s
  I1116 12:24:47.581640 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.969162558s
  I1116 12:24:48.588865 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.963166451s
  I1116 12:24:49.593571 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.956343974s
  I1116 12:24:50.599365 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 951.086189ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4817 @ 11/16/24 12:24:51.6
  I1116 12:24:51.605566 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-4817 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1116 12:24:51.686899 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1116 12:24:51.686928 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1116 12:24:51.686937 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1116 12:24:51.687052 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-4817 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1116 12:24:51.764526 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1116 12:24:51.764553 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1116 12:24:51.764567 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1116 12:24:51.764603 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-4817 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1116 12:24:51.841562 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1116 12:24:51.841602 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1116 12:24:51.841610 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1116 12:24:51.841619 18 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 11/16/24 12:25:01.851
  I1116 12:25:01.852117 18 statefulset.go:138] Deleting all statefulset in ns statefulset-4817
  I1116 12:25:01.856105 18 rest.go:150] Scaling statefulset ss to 0
  I1116 12:25:01.862014 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1116 12:25:01.865397 18 rest.go:88] Deleting statefulset ss
  I1116 12:25:01.881323 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4817" for this suite. @ 11/16/24 12:25:01.886
• [70.957 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 11/16/24 12:25:01.894
  I1116 12:25:01.894122 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename discovery @ 11/16/24 12:25:01.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:25:01.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:25:01.917
  STEP: Setting up server cert @ 11/16/24 12:25:01.919
  STEP: Requesting APIResourceList from "/api/v1" @ 11/16/24 12:25:02.015
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 11/16/24 12:25:02.016
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 11/16/24 12:25:02.017
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 11/16/24 12:25:02.018
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 11/16/24 12:25:02.018
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 11/16/24 12:25:02.019
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 11/16/24 12:25:02.019
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 11/16/24 12:25:02.02
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 11/16/24 12:25:02.021
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 11/16/24 12:25:02.021
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 11/16/24 12:25:02.022
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 11/16/24 12:25:02.022
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 11/16/24 12:25:02.023
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 11/16/24 12:25:02.023
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 11/16/24 12:25:02.024
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 11/16/24 12:25:02.025
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 11/16/24 12:25:02.025
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 11/16/24 12:25:02.026
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 11/16/24 12:25:02.026
  I1116 12:25:02.027496 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4039" for this suite. @ 11/16/24 12:25:02.032
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 11/16/24 12:25:02.04
  I1116 12:25:02.040840 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename csistoragecapacity @ 11/16/24 12:25:02.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:25:02.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:25:02.061
  STEP: getting /apis @ 11/16/24 12:25:02.063
  STEP: getting /apis/storage.k8s.io @ 11/16/24 12:25:02.065
  STEP: getting /apis/storage.k8s.io/v1 @ 11/16/24 12:25:02.066
  STEP: creating @ 11/16/24 12:25:02.067
  STEP: watching @ 11/16/24 12:25:02.086
  I1116 12:25:02.086115 18 csistoragecapacity.go:143] starting watch
  STEP: getting @ 11/16/24 12:25:02.093
  STEP: listing in namespace @ 11/16/24 12:25:02.096
  STEP: listing across namespaces @ 11/16/24 12:25:02.1
  STEP: patching @ 11/16/24 12:25:02.104
  STEP: updating @ 11/16/24 12:25:02.11
  I1116 12:25:02.115613 18 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1116 12:25:02.115765 18 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 11/16/24 12:25:02.115
  STEP: deleting a collection @ 11/16/24 12:25:02.13
  I1116 12:25:02.149999 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-9309" for this suite. @ 11/16/24 12:25:02.154
• [0.125 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 11/16/24 12:25:02.165
  I1116 12:25:02.165642 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename svc-latency @ 11/16/24 12:25:02.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:25:02.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:25:02.197
  I1116 12:25:02.199909 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1021 @ 11/16/24 12:25:02.2
  I1116 12:25:02.215516      18 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1021, replica count: 1
  I1116 12:25:03.267164      18 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1116 12:25:04.268228      18 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1116 12:25:04.382695 18 service_latency.go:356] Created: latency-svc-8l8bv
  I1116 12:25:04.394582 18 service_latency.go:363] Got endpoints: latency-svc-8l8bv [25.373156ms]
  I1116 12:25:04.409949 18 service_latency.go:356] Created: latency-svc-cmkr4
  I1116 12:25:04.417054 18 service_latency.go:363] Got endpoints: latency-svc-cmkr4 [22.384553ms]
  I1116 12:25:04.417548 18 service_latency.go:356] Created: latency-svc-7cr2n
  I1116 12:25:04.423347 18 service_latency.go:356] Created: latency-svc-qftz9
  I1116 12:25:04.426199 18 service_latency.go:363] Got endpoints: latency-svc-7cr2n [31.286838ms]
  I1116 12:25:04.433373 18 service_latency.go:356] Created: latency-svc-5n875
  I1116 12:25:04.433529 18 service_latency.go:363] Got endpoints: latency-svc-qftz9 [38.578088ms]
  I1116 12:25:04.438174 18 service_latency.go:363] Got endpoints: latency-svc-5n875 [43.187875ms]
  I1116 12:25:04.444681 18 service_latency.go:356] Created: latency-svc-lgqj5
  I1116 12:25:04.453224 18 service_latency.go:363] Got endpoints: latency-svc-lgqj5 [58.454058ms]
  I1116 12:25:04.453874 18 service_latency.go:356] Created: latency-svc-jdlm5
  I1116 12:25:04.461067 18 service_latency.go:363] Got endpoints: latency-svc-jdlm5 [66.043417ms]
  I1116 12:25:04.464624 18 service_latency.go:356] Created: latency-svc-92nxl
  I1116 12:25:04.471743 18 service_latency.go:363] Got endpoints: latency-svc-92nxl [76.925667ms]
  I1116 12:25:04.474913 18 service_latency.go:356] Created: latency-svc-sgssz
  I1116 12:25:04.480082 18 service_latency.go:356] Created: latency-svc-fljp6
  I1116 12:25:04.482278 18 service_latency.go:363] Got endpoints: latency-svc-sgssz [87.199731ms]
  I1116 12:25:04.491242 18 service_latency.go:356] Created: latency-svc-z2fgq
  I1116 12:25:04.493094 18 service_latency.go:363] Got endpoints: latency-svc-fljp6 [97.951713ms]
  I1116 12:25:04.502215 18 service_latency.go:356] Created: latency-svc-m66tm
  I1116 12:25:04.506360 18 service_latency.go:363] Got endpoints: latency-svc-z2fgq [111.50815ms]
  I1116 12:25:04.508369 18 service_latency.go:363] Got endpoints: latency-svc-m66tm [113.160978ms]
  I1116 12:25:04.511406 18 service_latency.go:356] Created: latency-svc-2wbmr
  I1116 12:25:04.520442 18 service_latency.go:363] Got endpoints: latency-svc-2wbmr [125.330758ms]
  I1116 12:25:04.522934 18 service_latency.go:356] Created: latency-svc-9vgr6
  I1116 12:25:04.529334 18 service_latency.go:363] Got endpoints: latency-svc-9vgr6 [134.062526ms]
  I1116 12:25:04.532231 18 service_latency.go:356] Created: latency-svc-vn4cd
  I1116 12:25:04.539742 18 service_latency.go:363] Got endpoints: latency-svc-vn4cd [144.501382ms]
  I1116 12:25:04.539745 18 service_latency.go:356] Created: latency-svc-rkf9n
  I1116 12:25:04.547355 18 service_latency.go:363] Got endpoints: latency-svc-rkf9n [152.177267ms]
  I1116 12:25:04.551507 18 service_latency.go:356] Created: latency-svc-mzdr7
  I1116 12:25:04.558253 18 service_latency.go:363] Got endpoints: latency-svc-mzdr7 [141.161929ms]
  I1116 12:25:04.560613 18 service_latency.go:356] Created: latency-svc-d7ntj
  I1116 12:25:04.565454 18 service_latency.go:356] Created: latency-svc-xqw5r
  I1116 12:25:04.566723 18 service_latency.go:363] Got endpoints: latency-svc-d7ntj [140.502622ms]
  I1116 12:25:04.573924 18 service_latency.go:363] Got endpoints: latency-svc-xqw5r [140.368262ms]
  I1116 12:25:04.576600 18 service_latency.go:356] Created: latency-svc-xww7l
  I1116 12:25:04.583442 18 service_latency.go:363] Got endpoints: latency-svc-xww7l [145.242767ms]
  I1116 12:25:04.588077 18 service_latency.go:356] Created: latency-svc-wsprd
  I1116 12:25:04.594559 18 service_latency.go:356] Created: latency-svc-54mk8
  I1116 12:25:04.595171 18 service_latency.go:363] Got endpoints: latency-svc-wsprd [141.913215ms]
  I1116 12:25:04.604509 18 service_latency.go:356] Created: latency-svc-v5tt2
  I1116 12:25:04.611375 18 service_latency.go:363] Got endpoints: latency-svc-54mk8 [150.283895ms]
  I1116 12:25:04.614382 18 service_latency.go:363] Got endpoints: latency-svc-v5tt2 [142.617497ms]
  I1116 12:25:04.618240 18 service_latency.go:356] Created: latency-svc-zr7sx
  I1116 12:25:04.624917 18 service_latency.go:363] Got endpoints: latency-svc-zr7sx [142.618172ms]
  I1116 12:25:04.626243 18 service_latency.go:356] Created: latency-svc-jgq7l
  I1116 12:25:04.634443 18 service_latency.go:363] Got endpoints: latency-svc-jgq7l [141.327249ms]
  I1116 12:25:04.636187 18 service_latency.go:356] Created: latency-svc-h4g9c
  I1116 12:25:04.644264 18 service_latency.go:363] Got endpoints: latency-svc-h4g9c [137.880334ms]
  I1116 12:25:04.646235 18 service_latency.go:356] Created: latency-svc-glwfv
  I1116 12:25:04.653192 18 service_latency.go:363] Got endpoints: latency-svc-glwfv [144.796515ms]
  I1116 12:25:04.653747 18 service_latency.go:356] Created: latency-svc-zcvvn
  I1116 12:25:04.662606 18 service_latency.go:363] Got endpoints: latency-svc-zcvvn [142.117349ms]
  I1116 12:25:04.664596 18 service_latency.go:356] Created: latency-svc-xwp9d
  I1116 12:25:04.674744 18 service_latency.go:363] Got endpoints: latency-svc-xwp9d [145.386726ms]
  I1116 12:25:04.675245 18 service_latency.go:356] Created: latency-svc-28lg6
  I1116 12:25:04.680563 18 service_latency.go:356] Created: latency-svc-s9mqw
  I1116 12:25:04.681223 18 service_latency.go:363] Got endpoints: latency-svc-28lg6 [141.450954ms]
  I1116 12:25:04.690062 18 service_latency.go:363] Got endpoints: latency-svc-s9mqw [142.646034ms]
  I1116 12:25:04.691630 18 service_latency.go:356] Created: latency-svc-c6w8j
  I1116 12:25:04.697652 18 service_latency.go:363] Got endpoints: latency-svc-c6w8j [139.367858ms]
  I1116 12:25:04.700224 18 service_latency.go:356] Created: latency-svc-dcdtj
  I1116 12:25:04.706311 18 service_latency.go:363] Got endpoints: latency-svc-dcdtj [139.569961ms]
  I1116 12:25:04.708227 18 service_latency.go:356] Created: latency-svc-85t8x
  I1116 12:25:04.715861 18 service_latency.go:363] Got endpoints: latency-svc-85t8x [141.914183ms]
  I1116 12:25:04.719420 18 service_latency.go:356] Created: latency-svc-c99zl
  I1116 12:25:04.729416 18 service_latency.go:363] Got endpoints: latency-svc-c99zl [145.821344ms]
  I1116 12:25:04.729920 18 service_latency.go:356] Created: latency-svc-vbcwr
  I1116 12:25:04.736421 18 service_latency.go:363] Got endpoints: latency-svc-vbcwr [141.231559ms]
  I1116 12:25:04.737810 18 service_latency.go:356] Created: latency-svc-hpfgs
  I1116 12:25:04.744730 18 service_latency.go:363] Got endpoints: latency-svc-hpfgs [133.333294ms]
  I1116 12:25:04.747986 18 service_latency.go:356] Created: latency-svc-kqbcp
  I1116 12:25:04.755868 18 service_latency.go:356] Created: latency-svc-mpcfr
  I1116 12:25:04.761014 18 service_latency.go:356] Created: latency-svc-xr4mn
  I1116 12:25:04.769145 18 service_latency.go:356] Created: latency-svc-j8kqm
  I1116 12:25:04.779199 18 service_latency.go:356] Created: latency-svc-rr5hp
  I1116 12:25:04.783265 18 service_latency.go:356] Created: latency-svc-bkbvx
  I1116 12:25:04.789507 18 service_latency.go:363] Got endpoints: latency-svc-kqbcp [175.067395ms]
  I1116 12:25:04.793549 18 service_latency.go:356] Created: latency-svc-q5jcm
  I1116 12:25:04.802179 18 service_latency.go:356] Created: latency-svc-gbhmt
  I1116 12:25:04.808240 18 service_latency.go:356] Created: latency-svc-dlfxw
  I1116 12:25:04.817071 18 service_latency.go:356] Created: latency-svc-t78xl
  I1116 12:25:04.822446 18 service_latency.go:356] Created: latency-svc-wz6pd
  I1116 12:25:04.829673 18 service_latency.go:356] Created: latency-svc-ljdcd
  I1116 12:25:04.837962 18 service_latency.go:356] Created: latency-svc-j64kq
  I1116 12:25:04.841023 18 service_latency.go:363] Got endpoints: latency-svc-mpcfr [216.074435ms]
  I1116 12:25:04.849475 18 service_latency.go:356] Created: latency-svc-h658q
  I1116 12:25:04.858859 18 service_latency.go:356] Created: latency-svc-m4mct
  I1116 12:25:04.868213 18 service_latency.go:356] Created: latency-svc-vkbc2
  I1116 12:25:04.874393 18 service_latency.go:356] Created: latency-svc-mh7qn
  I1116 12:25:04.891942 18 service_latency.go:363] Got endpoints: latency-svc-xr4mn [257.46255ms]
  I1116 12:25:04.905433 18 service_latency.go:356] Created: latency-svc-j2h6p
  I1116 12:25:04.942590 18 service_latency.go:363] Got endpoints: latency-svc-j8kqm [298.282978ms]
  I1116 12:25:04.957151 18 service_latency.go:356] Created: latency-svc-v9bgl
  I1116 12:25:04.992646 18 service_latency.go:363] Got endpoints: latency-svc-rr5hp [339.424494ms]
  I1116 12:25:05.006847 18 service_latency.go:356] Created: latency-svc-rtjgd
  I1116 12:25:05.041409 18 service_latency.go:363] Got endpoints: latency-svc-bkbvx [378.776262ms]
  I1116 12:25:05.055294 18 service_latency.go:356] Created: latency-svc-xgjxv
  I1116 12:25:05.090552 18 service_latency.go:363] Got endpoints: latency-svc-q5jcm [415.778023ms]
  I1116 12:25:05.104259 18 service_latency.go:356] Created: latency-svc-2wlfc
  I1116 12:25:05.140933 18 service_latency.go:363] Got endpoints: latency-svc-gbhmt [459.476397ms]
  I1116 12:25:05.154854 18 service_latency.go:356] Created: latency-svc-nrtbr
  I1116 12:25:05.191830 18 service_latency.go:363] Got endpoints: latency-svc-dlfxw [501.739426ms]
  I1116 12:25:05.203791 18 service_latency.go:356] Created: latency-svc-5hfq8
  I1116 12:25:05.242593 18 service_latency.go:363] Got endpoints: latency-svc-t78xl [544.914962ms]
  I1116 12:25:05.255283 18 service_latency.go:356] Created: latency-svc-tnkxg
  I1116 12:25:05.289351 18 service_latency.go:363] Got endpoints: latency-svc-wz6pd [583.010759ms]
  I1116 12:25:05.303853 18 service_latency.go:356] Created: latency-svc-7lnpj
  I1116 12:25:05.342626 18 service_latency.go:363] Got endpoints: latency-svc-ljdcd [626.739723ms]
  I1116 12:25:05.353542 18 service_latency.go:356] Created: latency-svc-8gdrt
  I1116 12:25:05.391491 18 service_latency.go:363] Got endpoints: latency-svc-j64kq [662.020707ms]
  I1116 12:25:05.404603 18 service_latency.go:356] Created: latency-svc-gv5k7
  I1116 12:25:05.441753 18 service_latency.go:363] Got endpoints: latency-svc-h658q [705.302369ms]
  I1116 12:25:05.557585 18 service_latency.go:356] Created: latency-svc-zbk7k
  I1116 12:25:05.560943 18 service_latency.go:363] Got endpoints: latency-svc-vkbc2 [771.405789ms]
  I1116 12:25:05.561016 18 service_latency.go:363] Got endpoints: latency-svc-m4mct [816.265108ms]
  I1116 12:25:05.573218 18 service_latency.go:356] Created: latency-svc-p4m2s
  I1116 12:25:05.581227 18 service_latency.go:356] Created: latency-svc-f8w4k
  I1116 12:25:05.590409 18 service_latency.go:363] Got endpoints: latency-svc-mh7qn [749.324104ms]
  I1116 12:25:05.603329 18 service_latency.go:356] Created: latency-svc-dg8s6
  I1116 12:25:05.641725 18 service_latency.go:363] Got endpoints: latency-svc-j2h6p [749.75087ms]
  I1116 12:25:05.652901 18 service_latency.go:356] Created: latency-svc-dsvnl
  I1116 12:25:05.690981 18 service_latency.go:363] Got endpoints: latency-svc-v9bgl [748.348457ms]
  I1116 12:25:05.704204 18 service_latency.go:356] Created: latency-svc-5gswg
  I1116 12:25:05.740834 18 service_latency.go:363] Got endpoints: latency-svc-rtjgd [748.160759ms]
  I1116 12:25:05.754483 18 service_latency.go:356] Created: latency-svc-9j8cl
  I1116 12:25:05.790597 18 service_latency.go:363] Got endpoints: latency-svc-xgjxv [749.021471ms]
  I1116 12:25:05.801750 18 service_latency.go:356] Created: latency-svc-x4qk8
  I1116 12:25:05.842138 18 service_latency.go:363] Got endpoints: latency-svc-2wlfc [751.552894ms]
  I1116 12:25:05.853671 18 service_latency.go:356] Created: latency-svc-xq6gg
  I1116 12:25:05.891923 18 service_latency.go:363] Got endpoints: latency-svc-nrtbr [750.96123ms]
  I1116 12:25:05.906086 18 service_latency.go:356] Created: latency-svc-7ld2s
  I1116 12:25:05.940586 18 service_latency.go:363] Got endpoints: latency-svc-5hfq8 [748.729948ms]
  I1116 12:25:05.954602 18 service_latency.go:356] Created: latency-svc-n4zcf
  I1116 12:25:05.991696 18 service_latency.go:363] Got endpoints: latency-svc-tnkxg [749.066907ms]
  I1116 12:25:06.003317 18 service_latency.go:356] Created: latency-svc-44kkx
  I1116 12:25:06.041570 18 service_latency.go:363] Got endpoints: latency-svc-7lnpj [752.189608ms]
  I1116 12:25:06.055559 18 service_latency.go:356] Created: latency-svc-65qqk
  I1116 12:25:06.092919 18 service_latency.go:363] Got endpoints: latency-svc-8gdrt [750.2673ms]
  I1116 12:25:06.105020 18 service_latency.go:356] Created: latency-svc-blvt4
  I1116 12:25:06.141144 18 service_latency.go:363] Got endpoints: latency-svc-gv5k7 [749.62462ms]
  I1116 12:25:06.153299 18 service_latency.go:356] Created: latency-svc-pstbw
  I1116 12:25:06.190585 18 service_latency.go:363] Got endpoints: latency-svc-zbk7k [748.785545ms]
  I1116 12:25:06.206228 18 service_latency.go:356] Created: latency-svc-tkxl9
  I1116 12:25:06.240567 18 service_latency.go:363] Got endpoints: latency-svc-p4m2s [679.409404ms]
  I1116 12:25:06.252469 18 service_latency.go:356] Created: latency-svc-j7nf5
  I1116 12:25:06.292331 18 service_latency.go:363] Got endpoints: latency-svc-f8w4k [731.229668ms]
  I1116 12:25:06.305256 18 service_latency.go:356] Created: latency-svc-x8lf2
  I1116 12:25:06.342516 18 service_latency.go:363] Got endpoints: latency-svc-dg8s6 [752.077126ms]
  I1116 12:25:06.354824 18 service_latency.go:356] Created: latency-svc-l2pkr
  I1116 12:25:06.391192 18 service_latency.go:363] Got endpoints: latency-svc-dsvnl [749.43571ms]
  I1116 12:25:06.404804 18 service_latency.go:356] Created: latency-svc-cmljh
  I1116 12:25:06.441178 18 service_latency.go:363] Got endpoints: latency-svc-5gswg [750.162605ms]
  I1116 12:25:06.453630 18 service_latency.go:356] Created: latency-svc-hj5vh
  I1116 12:25:06.491792 18 service_latency.go:363] Got endpoints: latency-svc-9j8cl [750.929278ms]
  I1116 12:25:06.504340 18 service_latency.go:356] Created: latency-svc-z6frk
  I1116 12:25:06.542691 18 service_latency.go:363] Got endpoints: latency-svc-x4qk8 [752.061602ms]
  I1116 12:25:06.554890 18 service_latency.go:356] Created: latency-svc-hd5rn
  I1116 12:25:06.591268 18 service_latency.go:363] Got endpoints: latency-svc-xq6gg [749.10165ms]
  I1116 12:25:06.605339 18 service_latency.go:356] Created: latency-svc-pftcb
  I1116 12:25:06.640200 18 service_latency.go:363] Got endpoints: latency-svc-7ld2s [748.220838ms]
  I1116 12:25:06.652765 18 service_latency.go:356] Created: latency-svc-6nhdn
  I1116 12:25:06.691107 18 service_latency.go:363] Got endpoints: latency-svc-n4zcf [750.487858ms]
  I1116 12:25:06.703430 18 service_latency.go:356] Created: latency-svc-cvqz4
  I1116 12:25:06.742396 18 service_latency.go:363] Got endpoints: latency-svc-44kkx [750.674687ms]
  I1116 12:25:06.754930 18 service_latency.go:356] Created: latency-svc-kk5lj
  I1116 12:25:06.792249 18 service_latency.go:363] Got endpoints: latency-svc-65qqk [750.615196ms]
  I1116 12:25:06.806807 18 service_latency.go:356] Created: latency-svc-84phs
  I1116 12:25:06.841027 18 service_latency.go:363] Got endpoints: latency-svc-blvt4 [748.069796ms]
  I1116 12:25:06.852854 18 service_latency.go:356] Created: latency-svc-wshfh
  I1116 12:25:06.890578 18 service_latency.go:363] Got endpoints: latency-svc-pstbw [749.40069ms]
  I1116 12:25:06.902935 18 service_latency.go:356] Created: latency-svc-rszgr
  I1116 12:25:06.946339 18 service_latency.go:363] Got endpoints: latency-svc-tkxl9 [755.668863ms]
  I1116 12:25:06.958698 18 service_latency.go:356] Created: latency-svc-s5z6t
  I1116 12:25:06.991279 18 service_latency.go:363] Got endpoints: latency-svc-j7nf5 [750.673507ms]
  I1116 12:25:07.001316 18 service_latency.go:356] Created: latency-svc-smvtx
  I1116 12:25:07.041365 18 service_latency.go:363] Got endpoints: latency-svc-x8lf2 [748.998238ms]
  I1116 12:25:07.053064 18 service_latency.go:356] Created: latency-svc-xjfxp
  I1116 12:25:07.095880 18 service_latency.go:363] Got endpoints: latency-svc-l2pkr [753.335821ms]
  I1116 12:25:07.108120 18 service_latency.go:356] Created: latency-svc-c2954
  I1116 12:25:07.140370 18 service_latency.go:363] Got endpoints: latency-svc-cmljh [749.148303ms]
  I1116 12:25:07.151445 18 service_latency.go:356] Created: latency-svc-rctmv
  I1116 12:25:07.190993 18 service_latency.go:363] Got endpoints: latency-svc-hj5vh [749.785486ms]
  I1116 12:25:07.202154 18 service_latency.go:356] Created: latency-svc-tw74x
  I1116 12:25:07.241596 18 service_latency.go:363] Got endpoints: latency-svc-z6frk [749.773645ms]
  I1116 12:25:07.252799 18 service_latency.go:356] Created: latency-svc-ngrdf
  I1116 12:25:07.288795 18 service_latency.go:363] Got endpoints: latency-svc-hd5rn [746.065361ms]
  I1116 12:25:07.300545 18 service_latency.go:356] Created: latency-svc-m2mrc
  I1116 12:25:07.343140 18 service_latency.go:363] Got endpoints: latency-svc-pftcb [751.834751ms]
  I1116 12:25:07.355520 18 service_latency.go:356] Created: latency-svc-4mmg4
  I1116 12:25:07.389732 18 service_latency.go:363] Got endpoints: latency-svc-6nhdn [749.501746ms]
  I1116 12:25:07.400694 18 service_latency.go:356] Created: latency-svc-wc6ts
  I1116 12:25:07.439248 18 service_latency.go:363] Got endpoints: latency-svc-cvqz4 [748.117986ms]
  I1116 12:25:07.450458 18 service_latency.go:356] Created: latency-svc-gxz5h
  I1116 12:25:07.490557 18 service_latency.go:363] Got endpoints: latency-svc-kk5lj [748.133729ms]
  I1116 12:25:07.503945 18 service_latency.go:356] Created: latency-svc-q2nqb
  I1116 12:25:07.542300 18 service_latency.go:363] Got endpoints: latency-svc-84phs [749.981022ms]
  I1116 12:25:07.554877 18 service_latency.go:356] Created: latency-svc-w9smg
  I1116 12:25:07.591454 18 service_latency.go:363] Got endpoints: latency-svc-wshfh [750.379225ms]
  I1116 12:25:07.603101 18 service_latency.go:356] Created: latency-svc-nhg85
  I1116 12:25:07.639519 18 service_latency.go:363] Got endpoints: latency-svc-rszgr [748.907379ms]
  I1116 12:25:07.654970 18 service_latency.go:356] Created: latency-svc-8m75s
  I1116 12:25:07.690989 18 service_latency.go:363] Got endpoints: latency-svc-s5z6t [744.614382ms]
  I1116 12:25:07.703403 18 service_latency.go:356] Created: latency-svc-9qlwq
  I1116 12:25:07.790960 18 service_latency.go:363] Got endpoints: latency-svc-smvtx [799.645288ms]
  I1116 12:25:07.803058 18 service_latency.go:356] Created: latency-svc-lqzcf
  I1116 12:25:07.842394 18 service_latency.go:363] Got endpoints: latency-svc-xjfxp [800.962778ms]
  I1116 12:25:07.854449 18 service_latency.go:356] Created: latency-svc-95fd5
  I1116 12:25:07.891493 18 service_latency.go:363] Got endpoints: latency-svc-c2954 [795.583234ms]
  I1116 12:25:07.904583 18 service_latency.go:356] Created: latency-svc-4rlfc
  I1116 12:25:07.939765 18 service_latency.go:363] Got endpoints: latency-svc-rctmv [799.33501ms]
  I1116 12:25:07.951845 18 service_latency.go:356] Created: latency-svc-tgn6p
  I1116 12:25:07.991559 18 service_latency.go:363] Got endpoints: latency-svc-tw74x [800.533072ms]
  I1116 12:25:08.002948 18 service_latency.go:356] Created: latency-svc-nxsw5
  I1116 12:25:08.041457 18 service_latency.go:363] Got endpoints: latency-svc-ngrdf [799.831988ms]
  I1116 12:25:08.053794 18 service_latency.go:356] Created: latency-svc-h6szs
  I1116 12:25:08.090062 18 service_latency.go:363] Got endpoints: latency-svc-m2mrc [801.207494ms]
  I1116 12:25:08.100686 18 service_latency.go:356] Created: latency-svc-plh69
  I1116 12:25:08.140356 18 service_latency.go:363] Got endpoints: latency-svc-4mmg4 [797.187296ms]
  I1116 12:25:08.152828 18 service_latency.go:356] Created: latency-svc-z6lt4
  I1116 12:25:08.191181 18 service_latency.go:363] Got endpoints: latency-svc-wc6ts [801.42157ms]
  I1116 12:25:08.203824 18 service_latency.go:356] Created: latency-svc-5j7zd
  I1116 12:25:08.240058 18 service_latency.go:363] Got endpoints: latency-svc-gxz5h [800.760527ms]
  I1116 12:25:08.253092 18 service_latency.go:356] Created: latency-svc-lk7l9
  I1116 12:25:08.293558 18 service_latency.go:363] Got endpoints: latency-svc-q2nqb [802.975194ms]
  I1116 12:25:08.305649 18 service_latency.go:356] Created: latency-svc-98xwp
  I1116 12:25:08.341191 18 service_latency.go:363] Got endpoints: latency-svc-w9smg [798.855357ms]
  I1116 12:25:08.355104 18 service_latency.go:356] Created: latency-svc-rp85n
  I1116 12:25:08.390249 18 service_latency.go:363] Got endpoints: latency-svc-nhg85 [798.760254ms]
  I1116 12:25:08.403548 18 service_latency.go:356] Created: latency-svc-9j4cc
  I1116 12:25:08.441651 18 service_latency.go:363] Got endpoints: latency-svc-8m75s [802.10333ms]
  I1116 12:25:08.453233 18 service_latency.go:356] Created: latency-svc-qqllf
  I1116 12:25:08.491483 18 service_latency.go:363] Got endpoints: latency-svc-9qlwq [800.461634ms]
  I1116 12:25:08.503887 18 service_latency.go:356] Created: latency-svc-fv424
  I1116 12:25:08.540350 18 service_latency.go:363] Got endpoints: latency-svc-lqzcf [749.35986ms]
  I1116 12:25:08.552400 18 service_latency.go:356] Created: latency-svc-lvpxp
  I1116 12:25:08.590646 18 service_latency.go:363] Got endpoints: latency-svc-95fd5 [748.218562ms]
  I1116 12:25:08.602601 18 service_latency.go:356] Created: latency-svc-wbls2
  I1116 12:25:08.640961 18 service_latency.go:363] Got endpoints: latency-svc-4rlfc [749.439717ms]
  I1116 12:25:08.654289 18 service_latency.go:356] Created: latency-svc-bxcdq
  I1116 12:25:08.689999 18 service_latency.go:363] Got endpoints: latency-svc-tgn6p [750.177565ms]
  I1116 12:25:08.702223 18 service_latency.go:356] Created: latency-svc-5tkcq
  I1116 12:25:08.740439 18 service_latency.go:363] Got endpoints: latency-svc-nxsw5 [748.847655ms]
  I1116 12:25:08.753158 18 service_latency.go:356] Created: latency-svc-pvhcg
  I1116 12:25:08.792207 18 service_latency.go:363] Got endpoints: latency-svc-h6szs [750.70111ms]
  I1116 12:25:08.804937 18 service_latency.go:356] Created: latency-svc-ps5ms
  I1116 12:25:08.842828 18 service_latency.go:363] Got endpoints: latency-svc-plh69 [752.730651ms]
  I1116 12:25:08.853775 18 service_latency.go:356] Created: latency-svc-m8tgm
  I1116 12:25:08.891575 18 service_latency.go:363] Got endpoints: latency-svc-z6lt4 [751.189592ms]
  I1116 12:25:08.902965 18 service_latency.go:356] Created: latency-svc-gmb66
  I1116 12:25:08.940613 18 service_latency.go:363] Got endpoints: latency-svc-5j7zd [749.401649ms]
  I1116 12:25:08.953776 18 service_latency.go:356] Created: latency-svc-2rvkx
  I1116 12:25:08.991532 18 service_latency.go:363] Got endpoints: latency-svc-lk7l9 [751.441144ms]
  I1116 12:25:09.004075 18 service_latency.go:356] Created: latency-svc-q2wdv
  I1116 12:25:09.040974 18 service_latency.go:363] Got endpoints: latency-svc-98xwp [747.381393ms]
  I1116 12:25:09.053352 18 service_latency.go:356] Created: latency-svc-9674r
  I1116 12:25:09.091489 18 service_latency.go:363] Got endpoints: latency-svc-rp85n [750.267008ms]
  I1116 12:25:09.104640 18 service_latency.go:356] Created: latency-svc-9f9gx
  I1116 12:25:09.140294 18 service_latency.go:363] Got endpoints: latency-svc-9j4cc [750.012345ms]
  I1116 12:25:09.152566 18 service_latency.go:356] Created: latency-svc-x8gbr
  I1116 12:25:09.191074 18 service_latency.go:363] Got endpoints: latency-svc-qqllf [749.396828ms]
  I1116 12:25:09.202866 18 service_latency.go:356] Created: latency-svc-9t5k7
  I1116 12:25:09.242229 18 service_latency.go:363] Got endpoints: latency-svc-fv424 [750.71187ms]
  I1116 12:25:09.256101 18 service_latency.go:356] Created: latency-svc-chg9g
  I1116 12:25:09.290895 18 service_latency.go:363] Got endpoints: latency-svc-lvpxp [750.328435ms]
  I1116 12:25:09.301820 18 service_latency.go:356] Created: latency-svc-4llmd
  I1116 12:25:09.341209 18 service_latency.go:363] Got endpoints: latency-svc-wbls2 [750.53284ms]
  I1116 12:25:09.353760 18 service_latency.go:356] Created: latency-svc-j4pq9
  I1116 12:25:09.391751 18 service_latency.go:363] Got endpoints: latency-svc-bxcdq [750.754936ms]
  I1116 12:25:09.404420 18 service_latency.go:356] Created: latency-svc-xf8tg
  I1116 12:25:09.440680 18 service_latency.go:363] Got endpoints: latency-svc-5tkcq [750.648772ms]
  I1116 12:25:09.451451 18 service_latency.go:356] Created: latency-svc-wb2tb
  I1116 12:25:09.491576 18 service_latency.go:363] Got endpoints: latency-svc-pvhcg [751.103535ms]
  I1116 12:25:09.504563 18 service_latency.go:356] Created: latency-svc-d7ttz
  I1116 12:25:09.540361 18 service_latency.go:363] Got endpoints: latency-svc-ps5ms [748.11558ms]
  I1116 12:25:09.552831 18 service_latency.go:356] Created: latency-svc-vxcs8
  I1116 12:25:09.590689 18 service_latency.go:363] Got endpoints: latency-svc-m8tgm [747.829895ms]
  I1116 12:25:09.601538 18 service_latency.go:356] Created: latency-svc-92nhj
  I1116 12:25:09.641943 18 service_latency.go:363] Got endpoints: latency-svc-gmb66 [750.337451ms]
  I1116 12:25:09.653598 18 service_latency.go:356] Created: latency-svc-ttqm5
  I1116 12:25:09.692290 18 service_latency.go:363] Got endpoints: latency-svc-2rvkx [751.642941ms]
  I1116 12:25:09.705133 18 service_latency.go:356] Created: latency-svc-5vbnc
  I1116 12:25:09.740947 18 service_latency.go:363] Got endpoints: latency-svc-q2wdv [749.382989ms]
  I1116 12:25:09.751504 18 service_latency.go:356] Created: latency-svc-np62j
  I1116 12:25:09.792396 18 service_latency.go:363] Got endpoints: latency-svc-9674r [751.388095ms]
  I1116 12:25:09.803726 18 service_latency.go:356] Created: latency-svc-4h9pc
  I1116 12:25:09.842407 18 service_latency.go:363] Got endpoints: latency-svc-9f9gx [750.884639ms]
  I1116 12:25:09.855288 18 service_latency.go:356] Created: latency-svc-s2646
  I1116 12:25:09.892370 18 service_latency.go:363] Got endpoints: latency-svc-x8gbr [752.020657ms]
  I1116 12:25:09.905153 18 service_latency.go:356] Created: latency-svc-sxp9d
  I1116 12:25:09.939729 18 service_latency.go:363] Got endpoints: latency-svc-9t5k7 [748.62298ms]
  I1116 12:25:09.951051 18 service_latency.go:356] Created: latency-svc-g29wk
  I1116 12:25:09.991268 18 service_latency.go:363] Got endpoints: latency-svc-chg9g [749.002341ms]
  I1116 12:25:10.003468 18 service_latency.go:356] Created: latency-svc-wk94b
  I1116 12:25:10.041757 18 service_latency.go:363] Got endpoints: latency-svc-4llmd [750.831674ms]
  I1116 12:25:10.052992 18 service_latency.go:356] Created: latency-svc-4t8jl
  I1116 12:25:10.092124 18 service_latency.go:363] Got endpoints: latency-svc-j4pq9 [750.881683ms]
  I1116 12:25:10.104349 18 service_latency.go:356] Created: latency-svc-jd5wk
  I1116 12:25:10.142164 18 service_latency.go:363] Got endpoints: latency-svc-xf8tg [750.383389ms]
  I1116 12:25:10.155104 18 service_latency.go:356] Created: latency-svc-ljt67
  I1116 12:25:10.189326 18 service_latency.go:363] Got endpoints: latency-svc-wb2tb [748.617375ms]
  I1116 12:25:10.200482 18 service_latency.go:356] Created: latency-svc-276jq
  I1116 12:25:10.242259 18 service_latency.go:363] Got endpoints: latency-svc-d7ttz [750.655744ms]
  I1116 12:25:10.254871 18 service_latency.go:356] Created: latency-svc-jtct7
  I1116 12:25:10.292309 18 service_latency.go:363] Got endpoints: latency-svc-vxcs8 [751.904914ms]
  I1116 12:25:10.305166 18 service_latency.go:356] Created: latency-svc-grf4x
  I1116 12:25:10.341175 18 service_latency.go:363] Got endpoints: latency-svc-92nhj [750.44993ms]
  I1116 12:25:10.352841 18 service_latency.go:356] Created: latency-svc-mh6fj
  I1116 12:25:10.393593 18 service_latency.go:363] Got endpoints: latency-svc-ttqm5 [751.606247ms]
  I1116 12:25:10.408154 18 service_latency.go:356] Created: latency-svc-zbzn2
  I1116 12:25:10.446093 18 service_latency.go:363] Got endpoints: latency-svc-5vbnc [753.772595ms]
  I1116 12:25:10.459079 18 service_latency.go:356] Created: latency-svc-h2tbx
  I1116 12:25:10.491736 18 service_latency.go:363] Got endpoints: latency-svc-np62j [750.751711ms]
  I1116 12:25:10.501872 18 service_latency.go:356] Created: latency-svc-sjzf5
  I1116 12:25:10.542208 18 service_latency.go:363] Got endpoints: latency-svc-4h9pc [749.7753ms]
  I1116 12:25:10.554879 18 service_latency.go:356] Created: latency-svc-8v4gx
  I1116 12:25:10.591058 18 service_latency.go:363] Got endpoints: latency-svc-s2646 [748.607623ms]
  I1116 12:25:10.604325 18 service_latency.go:356] Created: latency-svc-vlxgz
  I1116 12:25:10.640140 18 service_latency.go:363] Got endpoints: latency-svc-sxp9d [747.742131ms]
  I1116 12:25:10.653622 18 service_latency.go:356] Created: latency-svc-zhzht
  I1116 12:25:10.692394 18 service_latency.go:363] Got endpoints: latency-svc-g29wk [752.637268ms]
  I1116 12:25:10.704634 18 service_latency.go:356] Created: latency-svc-sbq8r
  I1116 12:25:10.743025 18 service_latency.go:363] Got endpoints: latency-svc-wk94b [751.721852ms]
  I1116 12:25:10.756006 18 service_latency.go:356] Created: latency-svc-kkwk9
  I1116 12:25:10.792028 18 service_latency.go:363] Got endpoints: latency-svc-4t8jl [750.239287ms]
  I1116 12:25:10.803664 18 service_latency.go:356] Created: latency-svc-xdxvk
  I1116 12:25:10.840620 18 service_latency.go:363] Got endpoints: latency-svc-jd5wk [748.458124ms]
  I1116 12:25:10.853171 18 service_latency.go:356] Created: latency-svc-595vt
  I1116 12:25:10.903092 18 service_latency.go:363] Got endpoints: latency-svc-ljt67 [760.901363ms]
  I1116 12:25:10.918559 18 service_latency.go:356] Created: latency-svc-pkjtr
  I1116 12:25:10.941390 18 service_latency.go:363] Got endpoints: latency-svc-276jq [752.033791ms]
  I1116 12:25:10.952082 18 service_latency.go:356] Created: latency-svc-x26d2
  I1116 12:25:10.991774 18 service_latency.go:363] Got endpoints: latency-svc-jtct7 [749.479066ms]
  I1116 12:25:11.002995 18 service_latency.go:356] Created: latency-svc-cfvkk
  I1116 12:25:11.041744 18 service_latency.go:363] Got endpoints: latency-svc-grf4x [749.386574ms]
  I1116 12:25:11.053593 18 service_latency.go:356] Created: latency-svc-ff4z9
  I1116 12:25:11.089688 18 service_latency.go:363] Got endpoints: latency-svc-mh6fj [748.483633ms]
  I1116 12:25:11.103117 18 service_latency.go:356] Created: latency-svc-m6wvf
  I1116 12:25:11.139803 18 service_latency.go:363] Got endpoints: latency-svc-zbzn2 [746.177194ms]
  I1116 12:25:11.151078 18 service_latency.go:356] Created: latency-svc-ffjcc
  I1116 12:25:11.191756 18 service_latency.go:363] Got endpoints: latency-svc-h2tbx [745.637956ms]
  I1116 12:25:11.203997 18 service_latency.go:356] Created: latency-svc-pzp7r
  I1116 12:25:11.241471 18 service_latency.go:363] Got endpoints: latency-svc-sjzf5 [749.69496ms]
  I1116 12:25:11.252239 18 service_latency.go:356] Created: latency-svc-8zgnj
  I1116 12:25:11.290553 18 service_latency.go:363] Got endpoints: latency-svc-8v4gx [748.313358ms]
  I1116 12:25:11.303279 18 service_latency.go:356] Created: latency-svc-279j8
  I1116 12:25:11.341946 18 service_latency.go:363] Got endpoints: latency-svc-vlxgz [750.858565ms]
  I1116 12:25:11.357331 18 service_latency.go:356] Created: latency-svc-m8qzl
  I1116 12:25:11.391132 18 service_latency.go:363] Got endpoints: latency-svc-zhzht [750.962097ms]
  I1116 12:25:11.402149 18 service_latency.go:356] Created: latency-svc-gn9q8
  I1116 12:25:11.441407 18 service_latency.go:363] Got endpoints: latency-svc-sbq8r [748.989404ms]
  I1116 12:25:11.452910 18 service_latency.go:356] Created: latency-svc-7w54b
  I1116 12:25:11.492982 18 service_latency.go:363] Got endpoints: latency-svc-kkwk9 [749.907712ms]
  I1116 12:25:11.506833 18 service_latency.go:356] Created: latency-svc-m4qcz
  I1116 12:25:11.539389 18 service_latency.go:363] Got endpoints: latency-svc-xdxvk [747.306535ms]
  I1116 12:25:11.552606 18 service_latency.go:356] Created: latency-svc-vkprg
  I1116 12:25:11.593442 18 service_latency.go:363] Got endpoints: latency-svc-595vt [752.793605ms]
  I1116 12:25:11.607545 18 service_latency.go:356] Created: latency-svc-mwthz
  I1116 12:25:11.642085 18 service_latency.go:363] Got endpoints: latency-svc-pkjtr [738.965167ms]
  I1116 12:25:11.654423 18 service_latency.go:356] Created: latency-svc-rtpb8
  I1116 12:25:11.691074 18 service_latency.go:363] Got endpoints: latency-svc-x26d2 [749.645557ms]
  I1116 12:25:11.701979 18 service_latency.go:356] Created: latency-svc-tgczt
  I1116 12:25:11.740618 18 service_latency.go:363] Got endpoints: latency-svc-cfvkk [748.800707ms]
  I1116 12:25:11.753767 18 service_latency.go:356] Created: latency-svc-rs9fq
  I1116 12:25:11.790744 18 service_latency.go:363] Got endpoints: latency-svc-ff4z9 [748.959542ms]
  I1116 12:25:11.802774 18 service_latency.go:356] Created: latency-svc-qml67
  I1116 12:25:11.841700 18 service_latency.go:363] Got endpoints: latency-svc-m6wvf [751.94111ms]
  I1116 12:25:11.853091 18 service_latency.go:356] Created: latency-svc-7fz2x
  I1116 12:25:11.892429 18 service_latency.go:363] Got endpoints: latency-svc-ffjcc [752.592475ms]
  I1116 12:25:11.904578 18 service_latency.go:356] Created: latency-svc-567hg
  I1116 12:25:11.941126 18 service_latency.go:363] Got endpoints: latency-svc-pzp7r [749.337042ms]
  I1116 12:25:11.956575 18 service_latency.go:356] Created: latency-svc-5rb5t
  I1116 12:25:11.989108 18 service_latency.go:363] Got endpoints: latency-svc-8zgnj [747.603518ms]
  I1116 12:25:12.001401 18 service_latency.go:356] Created: latency-svc-jkkcl
  I1116 12:25:12.039716 18 service_latency.go:363] Got endpoints: latency-svc-279j8 [749.132694ms]
  I1116 12:25:12.053400 18 service_latency.go:356] Created: latency-svc-n5lvp
  I1116 12:25:12.091369 18 service_latency.go:363] Got endpoints: latency-svc-m8qzl [749.390827ms]
  I1116 12:25:12.103609 18 service_latency.go:356] Created: latency-svc-phzmx
  I1116 12:25:12.141007 18 service_latency.go:363] Got endpoints: latency-svc-gn9q8 [749.843855ms]
  I1116 12:25:12.152572 18 service_latency.go:356] Created: latency-svc-2r8b7
  I1116 12:25:12.191602 18 service_latency.go:363] Got endpoints: latency-svc-7w54b [750.164434ms]
  I1116 12:25:12.204928 18 service_latency.go:356] Created: latency-svc-k7cln
  I1116 12:25:12.240362 18 service_latency.go:363] Got endpoints: latency-svc-m4qcz [747.348988ms]
  I1116 12:25:12.253375 18 service_latency.go:356] Created: latency-svc-wgh7f
  I1116 12:25:12.290778 18 service_latency.go:363] Got endpoints: latency-svc-vkprg [751.351403ms]
  I1116 12:25:12.340714 18 service_latency.go:363] Got endpoints: latency-svc-mwthz [747.241329ms]
  I1116 12:25:12.390877 18 service_latency.go:363] Got endpoints: latency-svc-rtpb8 [748.761862ms]
  I1116 12:25:12.439931 18 service_latency.go:363] Got endpoints: latency-svc-tgczt [748.82158ms]
  I1116 12:25:12.492905 18 service_latency.go:363] Got endpoints: latency-svc-rs9fq [752.260275ms]
  I1116 12:25:12.541864 18 service_latency.go:363] Got endpoints: latency-svc-qml67 [751.088366ms]
  I1116 12:25:12.590637 18 service_latency.go:363] Got endpoints: latency-svc-7fz2x [748.903774ms]
  I1116 12:25:12.641980 18 service_latency.go:363] Got endpoints: latency-svc-567hg [749.513665ms]
  I1116 12:25:12.690816 18 service_latency.go:363] Got endpoints: latency-svc-5rb5t [749.429192ms]
  I1116 12:25:12.742119 18 service_latency.go:363] Got endpoints: latency-svc-jkkcl [752.980948ms]
  I1116 12:25:12.790132 18 service_latency.go:363] Got endpoints: latency-svc-n5lvp [750.386137ms]
  I1116 12:25:12.841633 18 service_latency.go:363] Got endpoints: latency-svc-phzmx [750.229423ms]
  I1116 12:25:12.890668 18 service_latency.go:363] Got endpoints: latency-svc-2r8b7 [749.609924ms]
  I1116 12:25:12.942227 18 service_latency.go:363] Got endpoints: latency-svc-k7cln [750.595904ms]
  I1116 12:25:12.991127 18 service_latency.go:363] Got endpoints: latency-svc-wgh7f [750.733539ms]
  I1116 12:25:12.991216 18 service_latency.go:114] Latencies: [22.384553ms 31.286838ms 38.578088ms 43.187875ms 58.454058ms 66.043417ms 76.925667ms 87.199731ms 97.951713ms 111.50815ms 113.160978ms 125.330758ms 133.333294ms 134.062526ms 137.880334ms 139.367858ms 139.569961ms 140.368262ms 140.502622ms 141.161929ms 141.231559ms 141.327249ms 141.450954ms 141.913215ms 141.914183ms 142.117349ms 142.617497ms 142.618172ms 142.646034ms 144.501382ms 144.796515ms 145.242767ms 145.386726ms 145.821344ms 150.283895ms 152.177267ms 175.067395ms 216.074435ms 257.46255ms 298.282978ms 339.424494ms 378.776262ms 415.778023ms 459.476397ms 501.739426ms 544.914962ms 583.010759ms 626.739723ms 662.020707ms 679.409404ms 705.302369ms 731.229668ms 738.965167ms 744.614382ms 745.637956ms 746.065361ms 746.177194ms 747.241329ms 747.306535ms 747.348988ms 747.381393ms 747.603518ms 747.742131ms 747.829895ms 748.069796ms 748.11558ms 748.117986ms 748.133729ms 748.160759ms 748.218562ms 748.220838ms 748.313358ms 748.348457ms 748.458124ms 748.483633ms 748.607623ms 748.617375ms 748.62298ms 748.729948ms 748.761862ms 748.785545ms 748.800707ms 748.82158ms 748.847655ms 748.903774ms 748.907379ms 748.959542ms 748.989404ms 748.998238ms 749.002341ms 749.021471ms 749.066907ms 749.10165ms 749.132694ms 749.148303ms 749.324104ms 749.337042ms 749.35986ms 749.382989ms 749.386574ms 749.390827ms 749.396828ms 749.40069ms 749.401649ms 749.429192ms 749.43571ms 749.439717ms 749.479066ms 749.501746ms 749.513665ms 749.609924ms 749.62462ms 749.645557ms 749.69496ms 749.75087ms 749.773645ms 749.7753ms 749.785486ms 749.843855ms 749.907712ms 749.981022ms 750.012345ms 750.162605ms 750.164434ms 750.177565ms 750.229423ms 750.239287ms 750.267008ms 750.2673ms 750.328435ms 750.337451ms 750.379225ms 750.383389ms 750.386137ms 750.44993ms 750.487858ms 750.53284ms 750.595904ms 750.615196ms 750.648772ms 750.655744ms 750.673507ms 750.674687ms 750.70111ms 750.71187ms 750.733539ms 750.751711ms 750.754936ms 750.831674ms 750.858565ms 750.881683ms 750.884639ms 750.929278ms 750.96123ms 750.962097ms 751.088366ms 751.103535ms 751.189592ms 751.351403ms 751.388095ms 751.441144ms 751.552894ms 751.606247ms 751.642941ms 751.721852ms 751.834751ms 751.904914ms 751.94111ms 752.020657ms 752.033791ms 752.061602ms 752.077126ms 752.189608ms 752.260275ms 752.592475ms 752.637268ms 752.730651ms 752.793605ms 752.980948ms 753.335821ms 753.772595ms 755.668863ms 760.901363ms 771.405789ms 795.583234ms 797.187296ms 798.760254ms 798.855357ms 799.33501ms 799.645288ms 799.831988ms 800.461634ms 800.533072ms 800.760527ms 800.962778ms 801.207494ms 801.42157ms 802.10333ms 802.975194ms 816.265108ms]
  I1116 12:25:12.991232 18 service_latency.go:118] 50 %ile: 749.390827ms
  I1116 12:25:12.991240 18 service_latency.go:119] 90 %ile: 753.772595ms
  I1116 12:25:12.991246 18 service_latency.go:120] 99 %ile: 802.975194ms
  I1116 12:25:12.991252 18 service_latency.go:121] Total sample count: 200
  I1116 12:25:12.991336 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1021" for this suite. @ 11/16/24 12:25:12.996
• [10.840 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 11/16/24 12:25:13.005
  I1116 12:25:13.005673 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename chunking @ 11/16/24 12:25:13.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:25:13.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:25:13.03
  STEP: creating a large number of resources @ 11/16/24 12:25:13.031
  STEP: retrieving those results in paged fashion several times @ 11/16/24 12:25:30.712
  I1116 12:25:30.762726 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1116 12:25:30.811942 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1116 12:25:30.862188 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1116 12:25:30.911539 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1116 12:25:30.961166 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1116 12:25:31.011581 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1116 12:25:31.062543 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1116 12:25:31.111546 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1116 12:25:31.162103 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1116 12:25:31.212677 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1116 12:25:31.261177 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1116 12:25:31.311758 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1116 12:25:31.362289 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1116 12:25:31.410956 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1116 12:25:31.461911 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1116 12:25:31.512837 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1116 12:25:31.563534 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1116 12:25:31.612705 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1116 12:25:31.662926 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1116 12:25:31.711660 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1116 12:25:31.762157 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1116 12:25:31.811941 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1116 12:25:31.861567 18 chunking.go:98] Retrieved 17/17 results with rv 11334 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1116 12:25:31.911632 18 chunking.go:98] Retrieved 9/17 results with rv 11334 and continue 
  I1116 12:25:31.961302 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1116 12:25:32.010948 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1116 12:25:32.062336 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1116 12:25:32.111672 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1116 12:25:32.161109 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1116 12:25:32.212212 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1116 12:25:32.262186 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1116 12:25:32.310954 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1116 12:25:32.362197 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1116 12:25:32.412000 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1116 12:25:32.462275 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1116 12:25:32.511376 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1116 12:25:32.562340 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1116 12:25:32.611298 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1116 12:25:32.661524 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1116 12:25:32.712133 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1116 12:25:32.761072 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1116 12:25:32.812210 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1116 12:25:32.862271 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1116 12:25:32.911227 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1116 12:25:32.961148 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1116 12:25:33.011653 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1116 12:25:33.061551 18 chunking.go:98] Retrieved 17/17 results with rv 11335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1116 12:25:33.111619 18 chunking.go:98] Retrieved 9/17 results with rv 11335 and continue 
  I1116 12:25:33.162603 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1116 12:25:33.211273 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1116 12:25:33.261437 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1116 12:25:33.312027 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1116 12:25:33.361822 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1116 12:25:33.411840 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1116 12:25:33.462421 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1116 12:25:33.511411 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1116 12:25:33.561418 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1116 12:25:33.612116 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1116 12:25:33.660913 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1116 12:25:33.712258 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1116 12:25:33.761813 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1116 12:25:33.811572 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1116 12:25:33.861524 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1116 12:25:33.912440 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1116 12:25:33.960957 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1116 12:25:34.011595 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1116 12:25:34.062026 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1116 12:25:34.111153 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1116 12:25:34.162943 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1116 12:25:34.212180 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1116 12:25:34.260966 18 chunking.go:98] Retrieved 17/17 results with rv 11338 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzMzgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1116 12:25:34.312088 18 chunking.go:98] Retrieved 9/17 results with rv 11338 and continue 
  STEP: retrieving those results all at once @ 11/16/24 12:25:34.312
  I1116 12:25:34.367885 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4905" for this suite. @ 11/16/24 12:25:34.412
• [21.460 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 11/16/24 12:25:34.465
  I1116 12:25:34.465387 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename secrets @ 11/16/24 12:25:34.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:25:34.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:25:34.488
  STEP: Creating secret with name secret-test-604f32cf-4ea4-450e-98bf-5d95e9ec56ed @ 11/16/24 12:25:34.49
  STEP: Creating a pod to test consume secrets @ 11/16/24 12:25:34.496
  STEP: Saw pod success @ 11/16/24 12:25:38.522
  I1116 12:25:38.526412 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-secrets-0731387d-73f1-4343-90bd-b66ffef6bf67 container secret-env-test: <nil>
  STEP: delete the pod @ 11/16/24 12:25:38.545
  I1116 12:25:38.566423 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6269" for this suite. @ 11/16/24 12:25:38.57
• [4.112 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 11/16/24 12:25:38.577
  I1116 12:25:38.577415 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-probe @ 11/16/24 12:25:38.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:25:38.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:25:38.598
  STEP: Creating pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950 @ 11/16/24 12:25:38.599
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/16/24 12:25:40.624
  I1116 12:25:40.627028 18 container_probe.go:1749] Initial restart count of pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 is 0
  I1116 12:25:40.630671 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:25:42.636758 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:25:44.642709 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:25:46.648033 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:25:48.654700 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:25:50.661453 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:25:52.666637 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:25:54.672125 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:25:56.678436 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:25:58.685915 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:00.691951 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:00.691986 18 container_probe.go:1763] Restart count of pod container-probe-2950/liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 is now 1 (20.064922748s elapsed)
  I1116 12:26:02.699228 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:04.704406 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:06.711087 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:08.716852 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:10.722433 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:12.728232 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:14.734435 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:16.739908 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:18.745811 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:20.751450 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:20.751483 18 container_probe.go:1763] Restart count of pod container-probe-2950/liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 is now 2 (40.124419056s elapsed)
  I1116 12:26:22.757237 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:24.763200 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:26.768783 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:28.774269 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:30.780793 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:32.786861 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:34.792810 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:36.798509 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:38.804859 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:40.809949 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:40.809998 18 container_probe.go:1763] Restart count of pod container-probe-2950/liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 is now 3 (1m0.182933796s elapsed)
  I1116 12:26:42.816876 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:44.822314 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:46.829282 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:48.833841 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:50.839545 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:52.845324 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:54.851170 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:56.856093 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:26:58.861773 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:00.867627 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:00.867660 18 container_probe.go:1763] Restart count of pod container-probe-2950/liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 is now 4 (1m20.240596365s elapsed)
  I1116 12:27:02.872765 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:04.878256 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:06.883833 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:08.889410 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:10.896326 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:12.902829 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:14.909696 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:16.915299 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:18.920735 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:20.927145 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:22.933369 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:24.940015 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:26.946083 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:28.954680 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:30.959978 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:32.966754 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:34.971515 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:36.977290 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:38.982517 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:40.988513 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:42.995080 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:45.002321 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:47.008268 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:49.013846 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:51.019369 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:53.026238 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:55.032255 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:57.038575 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:27:59.044753 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:28:01.050279 18 container_probe.go:1759] Get pod liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 in namespace container-probe-2950
  I1116 12:28:01.050312 18 container_probe.go:1763] Restart count of pod container-probe-2950/liveness-af5229c8-c8b2-49ef-914a-eb36d28dd9e4 is now 5 (2m20.423248182s elapsed)
  STEP: deleting the pod @ 11/16/24 12:28:01.05
  I1116 12:28:01.064931 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2950" for this suite. @ 11/16/24 12:28:01.07
• [142.503 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 11/16/24 12:28:01.08
  I1116 12:28:01.080368 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename runtimeclass @ 11/16/24 12:28:01.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:28:01.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:28:01.104
  STEP: Deleting RuntimeClass runtimeclass-3915-delete-me @ 11/16/24 12:28:01.111
  STEP: Waiting for the RuntimeClass to disappear @ 11/16/24 12:28:01.118
  I1116 12:28:01.129672 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3915" for this suite. @ 11/16/24 12:28:01.132
• [0.060 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 11/16/24 12:28:01.14
  I1116 12:28:01.140167 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 12:28:01.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:28:01.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:28:01.162
  STEP: Setting up server cert @ 11/16/24 12:28:01.193
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 12:28:01.347
  STEP: Deploying the webhook pod @ 11/16/24 12:28:01.358
  STEP: Wait for the deployment to be ready @ 11/16/24 12:28:01.371
  I1116 12:28:01.380198 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/16/24 12:28:03.392
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 12:28:03.405
  I1116 12:28:04.406150 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 11/16/24 12:28:04.415
  I1116 12:28:04.463174 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9568" for this suite. @ 11/16/24 12:28:04.466
  STEP: Destroying namespace "webhook-markers-8683" for this suite. @ 11/16/24 12:28:04.477
• [3.344 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 11/16/24 12:28:04.484
  I1116 12:28:04.484670 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename containers @ 11/16/24 12:28:04.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:28:04.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:28:04.505
  STEP: Creating a pod to test override command @ 11/16/24 12:28:04.507
  STEP: Saw pod success @ 11/16/24 12:28:08.534
  I1116 12:28:08.537889 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod client-containers-c88bc70d-2593-413b-b7f4-a7113cea9b54 container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 12:28:08.551
  I1116 12:28:08.573018 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7102" for this suite. @ 11/16/24 12:28:08.576
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 11/16/24 12:28:08.584
  I1116 12:28:08.584758 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename controllerrevisions @ 11/16/24 12:28:08.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:28:08.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:28:08.605
  STEP: Creating DaemonSet "e2e-f6tw4-daemon-set" @ 11/16/24 12:28:08.625
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/16/24 12:28:08.63
  I1116 12:28:08.634318 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:28:08.634386 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:28:08.638721 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-f6tw4-daemon-set: 0
  I1116 12:28:08.638741 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  I1116 12:28:09.634659 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:28:09.634712 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:28:09.638161 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-f6tw4-daemon-set: 0
  I1116 12:28:09.638179 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  I1116 12:28:10.636301 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:28:10.636360 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 12:28:10.640537 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-f6tw4-daemon-set: 3
  I1116 12:28:10.640557 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-f6tw4-daemon-set
  STEP: Confirm DaemonSet "e2e-f6tw4-daemon-set" successfully created with "daemonset-name=e2e-f6tw4-daemon-set" label @ 11/16/24 12:28:10.644
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-f6tw4-daemon-set" @ 11/16/24 12:28:10.652
  I1116 12:28:10.657322 18 controller_revision.go:162] Located ControllerRevision: "e2e-f6tw4-daemon-set-7cf89c9677"
  STEP: Patching ControllerRevision "e2e-f6tw4-daemon-set-7cf89c9677" @ 11/16/24 12:28:10.66
  I1116 12:28:10.669804 18 controller_revision.go:173] e2e-f6tw4-daemon-set-7cf89c9677 has been patched
  STEP: Create a new ControllerRevision @ 11/16/24 12:28:10.669
  I1116 12:28:10.675916 18 controller_revision.go:191] Created ControllerRevision: e2e-f6tw4-daemon-set-64fcfd4c57
  STEP: Confirm that there are two ControllerRevisions @ 11/16/24 12:28:10.675
  I1116 12:28:10.675963 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1116 12:28:10.679901 18 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-f6tw4-daemon-set-7cf89c9677" @ 11/16/24 12:28:10.679
  STEP: Confirm that there is only one ControllerRevision @ 11/16/24 12:28:10.687
  I1116 12:28:10.687935 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1116 12:28:10.690863 18 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-f6tw4-daemon-set-64fcfd4c57" @ 11/16/24 12:28:10.694
  I1116 12:28:10.703716 18 controller_revision.go:220] e2e-f6tw4-daemon-set-64fcfd4c57 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 11/16/24 12:28:10.703
  W1116 12:28:10.710955      18 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 11/16/24 12:28:10.711
  I1116 12:28:10.711093 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1116 12:28:11.711169 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1116 12:28:11.715057 18 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-f6tw4-daemon-set-64fcfd4c57=updated" @ 11/16/24 12:28:11.715
  STEP: Confirm that there is only one ControllerRevision @ 11/16/24 12:28:11.726
  I1116 12:28:11.726229 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1116 12:28:11.729002 18 controller_revision.go:265] Found 1 ControllerRevisions
  I1116 12:28:11.733244 18 controller_revision.go:246] ControllerRevision "e2e-f6tw4-daemon-set-7fb4bcbf48" has revision 3
  STEP: Deleting DaemonSet "e2e-f6tw4-daemon-set" @ 11/16/24 12:28:11.738
  STEP: deleting DaemonSet.extensions e2e-f6tw4-daemon-set in namespace controllerrevisions-7118, will wait for the garbage collector to delete the pods @ 11/16/24 12:28:11.738
  I1116 12:28:11.800166 18 resources.go:139] Deleting DaemonSet.extensions e2e-f6tw4-daemon-set took: 8.461239ms
  I1116 12:28:11.901178 18 resources.go:163] Terminating DaemonSet.extensions e2e-f6tw4-daemon-set pods took: 101.007003ms
  I1116 12:28:13.805289 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-f6tw4-daemon-set: 0
  I1116 12:28:13.805322 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-f6tw4-daemon-set
  I1116 12:28:13.808392 18 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12374"},"items":null}

  I1116 12:28:13.811827 18 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12374"},"items":null}

  I1116 12:28:13.825420 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-7118" for this suite. @ 11/16/24 12:28:13.828
• [5.252 seconds]
------------------------------
SSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 11/16/24 12:28:13.836
  I1116 12:28:13.836376 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pv @ 11/16/24 12:28:13.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:28:13.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:28:13.886
  STEP: Creating initial PV and PVC @ 11/16/24 12:28:13.888
  I1116 12:28:13.888759 18 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5964" @ 11/16/24 12:28:13.904
  STEP: Listing PVCs in namespace "pv-5964" @ 11/16/24 12:28:13.908
  STEP: Reading "pvc-x5gvd" Status @ 11/16/24 12:28:13.911
  STEP: Reading "pv-5964-xpw49" Status @ 11/16/24 12:28:13.914
  STEP: Patching "pvc-x5gvd" Status @ 11/16/24 12:28:13.919
  STEP: Patching "pv-5964-xpw49" Status @ 11/16/24 12:28:13.924
  STEP: Updating "pvc-x5gvd" Status @ 11/16/24 12:28:13.936
  STEP: Updating "pv-5964-xpw49" Status @ 11/16/24 12:28:13.945
  I1116 12:28:13.953162 18 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1116 12:28:13.953184 18 pv.go:205] Deleting PersistentVolumeClaim "pvc-x5gvd"
  I1116 12:28:13.970706 18 pv.go:193] Deleting PersistentVolume "pv-5964-xpw49"
  I1116 12:28:13.979400 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5964" for this suite. @ 11/16/24 12:28:13.982
• [0.153 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 11/16/24 12:28:13.989
  I1116 12:28:13.989721 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir @ 11/16/24 12:28:13.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:28:14.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:28:14.012
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/16/24 12:28:14.014
  STEP: Saw pod success @ 11/16/24 12:28:16.031
  I1116 12:28:16.035379 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-246db539-ac46-41e7-be9a-528e743ebbf1 container test-container: <nil>
  STEP: delete the pod @ 11/16/24 12:28:16.044
  I1116 12:28:16.063310 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5814" for this suite. @ 11/16/24 12:28:16.067
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 11/16/24 12:28:16.076
  I1116 12:28:16.076939 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename watch @ 11/16/24 12:28:16.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:28:16.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:28:16.097
  STEP: creating a new configmap @ 11/16/24 12:28:16.098
  STEP: modifying the configmap once @ 11/16/24 12:28:16.103
  STEP: modifying the configmap a second time @ 11/16/24 12:28:16.111
  STEP: deleting the configmap @ 11/16/24 12:28:16.119
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 11/16/24 12:28:16.126
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 11/16/24 12:28:16.126
  I1116 12:28:16.127017 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4494  7f01ee95-1c99-4126-97a6-a1e84109f648 12437 0 2024-11-16 12:28:16 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-11-16 12:28:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 12:28:16.127127 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4494  7f01ee95-1c99-4126-97a6-a1e84109f648 12438 0 2024-11-16 12:28:16 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-11-16 12:28:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 12:28:16.127193 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4494" for this suite. @ 11/16/24 12:28:16.131
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 11/16/24 12:28:16.138
  I1116 12:28:16.138423 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir @ 11/16/24 12:28:16.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:28:16.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:28:16.159
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/16/24 12:28:16.161
  STEP: Saw pod success @ 11/16/24 12:28:20.187
  I1116 12:28:20.191396 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-20fe618f-90a9-4678-a909-aaa041c5ffb3 container test-container: <nil>
  STEP: delete the pod @ 11/16/24 12:28:20.199
  I1116 12:28:20.220057 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3379" for this suite. @ 11/16/24 12:28:20.223
• [4.092 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 11/16/24 12:28:20.23
  I1116 12:28:20.230316 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 12:28:20.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:28:20.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:28:20.251
  STEP: creating a Service @ 11/16/24 12:28:20.256
  STEP: watching for the Service to be added @ 11/16/24 12:28:20.271
  I1116 12:28:20.274022 18 service.go:3445] Found Service test-service-7k8cq in namespace services-7245 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30687}]
  I1116 12:28:20.274066 18 service.go:3452] Service test-service-7k8cq created
  STEP: Getting /status @ 11/16/24 12:28:20.274
  I1116 12:28:20.278347 18 service.go:3463] Service test-service-7k8cq has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 11/16/24 12:28:20.278
  STEP: watching for the Service to be patched @ 11/16/24 12:28:20.283
  I1116 12:28:20.285219 18 service.go:3486] observed Service test-service-7k8cq in namespace services-7245 with annotations: map[] & LoadBalancer: {[]}
  I1116 12:28:20.285252 18 service.go:3489] Found Service test-service-7k8cq in namespace services-7245 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0049d39c0 []}]}
  I1116 12:28:20.285263 18 service.go:3496] Service test-service-7k8cq has service status patched
  STEP: updating the ServiceStatus @ 11/16/24 12:28:20.285
  I1116 12:28:20.295790 18 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 11/16/24 12:28:20.296
  I1116 12:28:20.297184 18 service.go:3527] Observed Service test-service-7k8cq in namespace services-7245 with annotations: map[] & Conditions: []
  I1116 12:28:20.297223 18 service.go:3538] Observed Service test-service-7k8cq in namespace services-7245 with annotations: map[patchedstatus:true] & Conditions: []
  I1116 12:28:20.297253 18 service.go:3534] Found Service test-service-7k8cq in namespace services-7245 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1116 12:28:20.297263 18 service.go:3545] Service test-service-7k8cq has service status updated
  STEP: patching the service @ 11/16/24 12:28:20.297
  STEP: watching for the Service to be patched @ 11/16/24 12:28:20.307
  I1116 12:28:20.308912 18 service.go:3568] observed Service test-service-7k8cq in namespace services-7245 with labels: map[test-service-static:true]
  I1116 12:28:20.308929 18 service.go:3568] observed Service test-service-7k8cq in namespace services-7245 with labels: map[test-service-static:true]
  I1116 12:28:20.308939 18 service.go:3568] observed Service test-service-7k8cq in namespace services-7245 with labels: map[test-service-static:true]
  I1116 12:28:20.308963 18 service.go:3571] Found Service test-service-7k8cq in namespace services-7245 with labels: map[test-service:patched test-service-static:true]
  I1116 12:28:20.308975 18 service.go:3578] Service test-service-7k8cq patched
  STEP: deleting the service @ 11/16/24 12:28:20.308
  STEP: watching for the Service to be deleted @ 11/16/24 12:28:20.33
  I1116 12:28:20.330830 18 service.go:3602] Observed event: ADDED
  I1116 12:28:20.330895 18 service.go:3602] Observed event: MODIFIED
  I1116 12:28:20.330906 18 service.go:3602] Observed event: MODIFIED
  I1116 12:28:20.330960 18 service.go:3602] Observed event: MODIFIED
  I1116 12:28:20.330978 18 service.go:3598] Found Service test-service-7k8cq in namespace services-7245 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1116 12:28:20.331015 18 service.go:3607] Service test-service-7k8cq deleted
  I1116 12:28:20.331169 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7245" for this suite. @ 11/16/24 12:28:20.335
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 11/16/24 12:28:20.341
  I1116 12:28:20.341869 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pods @ 11/16/24 12:28:20.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:28:20.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:28:20.362
  STEP: Saw pod success @ 11/16/24 12:28:26.422
  I1116 12:28:26.426651 18 output.go:196] Trying to get logs from node ip-172-31-72-246 pod client-envvars-6c39582a-1243-4de5-bb90-ef40d5d02702 container env3cont: <nil>
  STEP: delete the pod @ 11/16/24 12:28:26.442
  I1116 12:28:26.463237 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6239" for this suite. @ 11/16/24 12:28:26.467
• [6.132 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 11/16/24 12:28:26.474
  I1116 12:28:26.474690 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename namespaces @ 11/16/24 12:28:26.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:28:26.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:28:26.496
  STEP: creating a Namespace @ 11/16/24 12:28:26.498
  STEP: patching the Namespace @ 11/16/24 12:28:26.518
  STEP: get the Namespace and ensuring it has the label @ 11/16/24 12:28:26.522
  I1116 12:28:26.526206 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3283" for this suite. @ 11/16/24 12:28:26.532
  STEP: Destroying namespace "nspatchtest-3382db57-a5fd-4112-947b-ec15f76b8057-2995" for this suite. @ 11/16/24 12:28:26.54
• [0.073 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 11/16/24 12:28:26.547
  I1116 12:28:26.547713 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 12:28:26.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:28:26.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:28:26.566
  STEP: creating service multiprotocol-test in namespace services-4184 @ 11/16/24 12:28:26.568
  STEP: creating pod pod1 in namespace services-4184 @ 11/16/24 12:28:26.579
  STEP: Creating pod pod1 in namespace services-4184 @ 11/16/24 12:28:26.579
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-4184 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 11/16/24 12:28:28.603
  I1116 12:28:28.617023 18 service.go:4392] successfully validated that service multiprotocol-test in namespace services-4184 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 11/16/24 12:28:28.617
  I1116 12:28:28.617089 18 resource.go:361] Creating new exec pod
  I1116 12:28:30.632821 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4184 exec execpodfjpf5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80'
  I1116 12:28:30.713517 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.165 80\nConnection to 10.152.183.165 80 port [tcp/http] succeeded!\n"
  I1116 12:28:30.713560 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 12:28:30.713631 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4184 exec execpodfjpf5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.165 80'
  I1116 12:28:34.795611 18 builder.go:146] stderr: "+ nc -v -u -w 2 10.152.183.165 80\n+ echo hostName\nConnection to 10.152.183.165 80 port [udp/*] succeeded!\n"
  I1116 12:28:34.795649 18 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 11/16/24 12:28:34.795
  I1116 12:28:34.804657 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4184 exec execpodfjpf5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80'
  I1116 12:28:34.899369 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.165 80\nConnection to 10.152.183.165 80 port [tcp/http] succeeded!\n"
  I1116 12:28:34.899421 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 12:28:34.899561 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4184 exec execpodfjpf5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.165 80'
  I1116 12:28:38.979188 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.165 80\nConnection to 10.152.183.165 80 port [udp/*] succeeded!\n"
  I1116 12:28:38.979233 18 builder.go:147] stdout: ""
  I1116 12:28:38.979411 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4184 exec execpodfjpf5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.165 80'
  I1116 12:28:43.065954 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.165 80\nConnection to 10.152.183.165 80 port [udp/*] succeeded!\n"
  I1116 12:28:43.066001 18 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 11/16/24 12:28:43.066
  I1116 12:28:43.076457 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4184 exec execpodfjpf5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.165 80'
  I1116 12:28:47.167936 18 builder.go:146] stderr: "+ + echo hostName\nnc -v -u -w 2 10.152.183.165 80\nConnection to 10.152.183.165 80 port [udp/*] succeeded!\n"
  I1116 12:28:47.167975 18 builder.go:147] stdout: "pod1"
  I1116 12:28:47.168163 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4184 exec execpodfjpf5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80'
  I1116 12:28:49.249467 18 builder.go:135] rc: 1
  I1116 12:28:49.249545 18 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4184 exec execpodfjpf5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80:
  Command stdout:

  stderr:
  + + ncecho -v hostName -t
   -w 2 10.152.183.165 80
  nc: connect to 10.152.183.165 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1116 12:28:49.249620 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4184 exec execpodfjpf5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80'
  I1116 12:28:51.357747 18 builder.go:135] rc: 1
  I1116 12:28:51.357867 18 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4184 exec execpodfjpf5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80:
  Command stdout:

  stderr:
  + + echo hostName
  nc -v -t -w 2 10.152.183.165 80
  nc: connect to 10.152.183.165 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1116 12:28:51.358129 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4184 exec execpodfjpf5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80'
  I1116 12:28:53.442508 18 builder.go:135] rc: 1
  I1116 12:28:53.442567 18 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4184 exec execpodfjpf5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80:
  Command stdout:

  stderr:
  + + ncecho -v hostName
   -t -w 2 10.152.183.165 80
  nc: connect to 10.152.183.165 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1116 12:28:53.442716 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4184" for this suite. @ 11/16/24 12:28:53.447
• [26.908 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 11/16/24 12:28:53.455
  I1116 12:28:53.455926 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename var-expansion @ 11/16/24 12:28:53.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:28:53.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:28:53.476
  I1116 12:28:55.501249 18 delete.go:62] Deleting pod "var-expansion-68bccddc-fdba-4f57-ab06-91e09867ec0d" in namespace "var-expansion-3768"
  I1116 12:28:55.511196 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-68bccddc-fdba-4f57-ab06-91e09867ec0d" to be fully deleted
  I1116 12:28:57.522789 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3768" for this suite. @ 11/16/24 12:28:57.526
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 11/16/24 12:28:57.535
  I1116 12:28:57.535617 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 12:28:57.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:28:57.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:28:57.556
  STEP: Creating configMap with name projected-configmap-test-volume-map-9706da1b-cfad-4cbc-baba-0fbaeafbce90 @ 11/16/24 12:28:57.558
  STEP: Creating a pod to test consume configMaps @ 11/16/24 12:28:57.564
  STEP: Saw pod success @ 11/16/24 12:29:01.591
  I1116 12:29:01.596242 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-projected-configmaps-a496ee2a-bc13-441f-8c8c-e5366db078c0 container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 12:29:01.606
  I1116 12:29:01.627448 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9738" for this suite. @ 11/16/24 12:29:01.631
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 11/16/24 12:29:01.64
  I1116 12:29:01.640085 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename secrets @ 11/16/24 12:29:01.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:29:01.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:29:01.662
  STEP: creating a secret @ 11/16/24 12:29:01.663
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 11/16/24 12:29:01.669
  STEP: patching the secret @ 11/16/24 12:29:01.673
  STEP: deleting the secret using a LabelSelector @ 11/16/24 12:29:01.682
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 11/16/24 12:29:01.691
  I1116 12:29:01.695606 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3416" for this suite. @ 11/16/24 12:29:01.699
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 11/16/24 12:29:01.708
  I1116 12:29:01.708238 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename replication-controller @ 11/16/24 12:29:01.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:29:01.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:29:01.733
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 11/16/24 12:29:01.734
  STEP: When a replication controller with a matching selector is created @ 11/16/24 12:29:03.758
  STEP: Then the orphan pod is adopted @ 11/16/24 12:29:03.763
  I1116 12:29:04.772908 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9855" for this suite. @ 11/16/24 12:29:04.778
• [3.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 11/16/24 12:29:04.787
  I1116 12:29:04.787065 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pods @ 11/16/24 12:29:04.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:29:04.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:29:04.811
  STEP: creating the pod @ 11/16/24 12:29:04.812
  STEP: submitting the pod to kubernetes @ 11/16/24 12:29:04.812
  STEP: verifying the pod is in kubernetes @ 11/16/24 12:29:06.836
  STEP: updating the pod @ 11/16/24 12:29:06.839
  I1116 12:29:07.353526 18 pod_client.go:173] Successfully updated pod "pod-update-223a3ebc-3397-4dc5-838d-982d6a262ad5"
  STEP: verifying the updated pod is in kubernetes @ 11/16/24 12:29:07.356
  I1116 12:29:07.362131 18 pods.go:391] Pod update OK
  I1116 12:29:07.362233 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5733" for this suite. @ 11/16/24 12:29:07.367
• [2.591 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 11/16/24 12:29:07.381
  I1116 12:29:07.381764 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 12:29:07.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:29:07.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:29:07.406
  STEP: Creating configMap with name projected-configmap-test-volume-map-4da76da7-be91-44ad-b856-dc79368acec1 @ 11/16/24 12:29:07.408
  STEP: Creating a pod to test consume configMaps @ 11/16/24 12:29:07.412
  STEP: Saw pod success @ 11/16/24 12:29:11.44
  I1116 12:29:11.444642 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-projected-configmaps-eae9d1e1-776f-4596-93dd-49a68e618d61 container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 12:29:11.452
  I1116 12:29:11.470180 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6878" for this suite. @ 11/16/24 12:29:11.475
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 11/16/24 12:29:11.482
  I1116 12:29:11.482635 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 12:29:11.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:29:11.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:29:11.505
  STEP: creating Agnhost RC @ 11/16/24 12:29:11.506
  I1116 12:29:11.506998 18 kubectl.go:1537] namespace kubectl-3765
  I1116 12:29:11.507048 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-3765 create -f -'
  I1116 12:29:11.595493 18 builder.go:146] stderr: ""
  I1116 12:29:11.595527 18 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/16/24 12:29:11.595
  I1116 12:29:12.600574 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1116 12:29:12.600615 18 framework.go:733] Found 0 / 1
  I1116 12:29:13.601333 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1116 12:29:13.601358 18 framework.go:733] Found 1 / 1
  I1116 12:29:13.601370 18 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1116 12:29:13.604793 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1116 12:29:13.604815 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1116 12:29:13.604822 18 kubectl.go:1544] wait on agnhost-primary startup in kubectl-3765 
  I1116 12:29:13.604867 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-3765 logs agnhost-primary-kmb6t agnhost-primary'
  I1116 12:29:13.665265 18 builder.go:146] stderr: ""
  I1116 12:29:13.665295 18 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 11/16/24 12:29:13.665
  I1116 12:29:13.665367 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-3765 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1116 12:29:13.724849 18 builder.go:146] stderr: ""
  I1116 12:29:13.724932 18 builder.go:147] stdout: "service/rm2 exposed\n"
  I1116 12:29:13.731437 18 utils.go:1203] Service rm2 in namespace kubectl-3765 found.
  STEP: exposing service @ 11/16/24 12:29:15.742
  I1116 12:29:15.742382 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-3765 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1116 12:29:15.800537 18 builder.go:146] stderr: ""
  I1116 12:29:15.800576 18 builder.go:147] stdout: "service/rm3 exposed\n"
  I1116 12:29:15.804968 18 utils.go:1203] Service rm3 in namespace kubectl-3765 found.
  I1116 12:29:17.813877 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3765" for this suite. @ 11/16/24 12:29:17.817
• [6.344 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 11/16/24 12:29:17.826
  I1116 12:29:17.826609 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename security-context-test @ 11/16/24 12:29:17.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:29:17.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:29:17.846
  I1116 12:29:21.872496 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-670" for this suite. @ 11/16/24 12:29:21.876
• [4.058 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 11/16/24 12:29:21.884
  I1116 12:29:21.884439 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 12:29:21.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:29:21.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:29:21.906
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5831 @ 11/16/24 12:29:21.908
  STEP: changing the ExternalName service to type=NodePort @ 11/16/24 12:29:21.914
  STEP: creating replication controller externalname-service in namespace services-5831 @ 11/16/24 12:29:21.933
  I1116 12:29:21.941270      18 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5831, replica count: 2
  I1116 12:29:24.993125      18 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1116 12:29:24.993183 18 resource.go:361] Creating new exec pod
  I1116 12:29:28.017600 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-5831 exec execpodb9mgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1116 12:29:28.113776 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1116 12:29:28.113829 18 builder.go:147] stdout: ""
  I1116 12:29:29.017723 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-5831 exec execpodb9mgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1116 12:29:29.101758 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1116 12:29:29.101798 18 builder.go:147] stdout: "externalname-service-b4lhx"
  I1116 12:29:29.101888 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-5831 exec execpodb9mgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80'
  I1116 12:29:29.182850 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.40 80\nConnection to 10.152.183.40 80 port [tcp/http] succeeded!\n"
  I1116 12:29:29.182886 18 builder.go:147] stdout: "externalname-service-b4lhx"
  I1116 12:29:29.182988 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-5831 exec execpodb9mgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.107 30311'
  I1116 12:29:29.266979 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.107 30311\nConnection to 172.31.22.107 30311 port [tcp/*] succeeded!\n"
  I1116 12:29:29.267010 18 builder.go:147] stdout: ""
  I1116 12:29:30.183031 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-5831 exec execpodb9mgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.107 30311'
  I1116 12:29:30.267858 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.107 30311\nConnection to 172.31.22.107 30311 port [tcp/*] succeeded!\n"
  I1116 12:29:30.267890 18 builder.go:147] stdout: ""
  I1116 12:29:31.183822 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-5831 exec execpodb9mgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.107 30311'
  I1116 12:29:31.270196 18 builder.go:146] stderr: "+ + nc -v -t -w 2 172.31.22.107 30311\necho hostName\nConnection to 172.31.22.107 30311 port [tcp/*] succeeded!\n"
  I1116 12:29:31.270233 18 builder.go:147] stdout: "externalname-service-ckrgd"
  I1116 12:29:31.270300 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-5831 exec execpodb9mgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.197 30311'
  I1116 12:29:31.354595 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.45.197 30311\nConnection to 172.31.45.197 30311 port [tcp/*] succeeded!\n"
  I1116 12:29:31.354629 18 builder.go:147] stdout: "externalname-service-ckrgd"
  I1116 12:29:31.354704 18 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I1116 12:29:31.383965 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5831" for this suite. @ 11/16/24 12:29:31.388
• [9.514 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 11/16/24 12:29:31.398
  I1116 12:29:31.398618 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 12:29:31.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:29:31.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:29:31.419
  STEP: Setting up server cert @ 11/16/24 12:29:31.448
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 12:29:31.591
  STEP: Deploying the webhook pod @ 11/16/24 12:29:31.603
  STEP: Wait for the deployment to be ready @ 11/16/24 12:29:31.62
  I1116 12:29:31.628839 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/16/24 12:29:33.644
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 12:29:33.659
  I1116 12:29:34.660160 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 11/16/24 12:29:34.668
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 11/16/24 12:29:34.686
  STEP: Creating a configMap that should not be mutated @ 11/16/24 12:29:34.694
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 11/16/24 12:29:34.707
  STEP: Creating a configMap that should be mutated @ 11/16/24 12:29:34.715
  I1116 12:29:34.780286 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2306" for this suite. @ 11/16/24 12:29:34.783
  STEP: Destroying namespace "webhook-markers-7549" for this suite. @ 11/16/24 12:29:34.789
• [3.400 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 11/16/24 12:29:34.798
  I1116 12:29:34.798810 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 12:29:34.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:29:34.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:29:34.828
  STEP: Creating the pod @ 11/16/24 12:29:34.829
  I1116 12:29:37.372920 18 pod_client.go:173] Successfully updated pod "labelsupdate6bc3f2eb-e84c-462c-8462-672a364a5443"
  I1116 12:29:41.397140 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2034" for this suite. @ 11/16/24 12:29:41.402
• [6.611 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 11/16/24 12:29:41.41
  I1116 12:29:41.410191 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename field-validation @ 11/16/24 12:29:41.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:29:41.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:29:41.431
  STEP: apply creating a deployment @ 11/16/24 12:29:41.432
  I1116 12:29:41.447526 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2108" for this suite. @ 11/16/24 12:29:41.451
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 11/16/24 12:29:41.458
  I1116 12:29:41.458357 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename replicaset @ 11/16/24 12:29:41.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:29:41.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:29:41.478
  STEP: Create a Replicaset @ 11/16/24 12:29:41.482
  STEP: Verify that the required pods have come up. @ 11/16/24 12:29:41.489
  I1116 12:29:41.492956 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1116 12:29:46.497295 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/16/24 12:29:46.497
  STEP: Getting /status @ 11/16/24 12:29:46.497
  I1116 12:29:46.502098 18 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 11/16/24 12:29:46.502
  I1116 12:29:46.512153 18 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 11/16/24 12:29:46.512
  I1116 12:29:46.513703 18 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I1116 12:29:46.513765 18 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1116 12:29:46.513824 18 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1116 12:29:46.514010 18 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1116 12:29:46.514071 18 replica_set.go:682] Found replicaset test-rs in namespace replicaset-774 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1116 12:29:46.514086 18 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 11/16/24 12:29:46.514
  I1116 12:29:46.514135 18 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1116 12:29:46.522933 18 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 11/16/24 12:29:46.522
  I1116 12:29:46.524340 18 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I1116 12:29:46.524451 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1116 12:29:46.524602 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1116 12:29:46.524681 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1116 12:29:46.524707 18 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-774 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1116 12:29:46.524791 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1116 12:29:46.524813 18 replica_set.go:718] Found replicaset test-rs in namespace replicaset-774 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1116 12:29:46.524846 18 replica_set.go:729] Replicaset test-rs has a patched status
  I1116 12:29:46.524990 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-774" for this suite. @ 11/16/24 12:29:46.528
• [5.078 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 11/16/24 12:29:46.536
  I1116 12:29:46.536122 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 12:29:46.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:29:46.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:29:46.558
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 12:29:46.56
  STEP: Saw pod success @ 11/16/24 12:29:50.586
  I1116 12:29:50.591020 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downwardapi-volume-287ef4f7-6327-4668-b4a2-3cc70315110d container client-container: <nil>
  STEP: delete the pod @ 11/16/24 12:29:50.6
  I1116 12:29:50.621989 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7872" for this suite. @ 11/16/24 12:29:50.625
• [4.101 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 11/16/24 12:29:50.636
  I1116 12:29:50.636806 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename configmap @ 11/16/24 12:29:50.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:29:50.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:29:50.66
  STEP: Creating configMap with name configmap-test-volume-cdf128f0-fadd-4200-841b-3c7e62b919b4 @ 11/16/24 12:29:50.662
  STEP: Creating a pod to test consume configMaps @ 11/16/24 12:29:50.668
  STEP: Saw pod success @ 11/16/24 12:29:54.696
  I1116 12:29:54.699819 18 output.go:196] Trying to get logs from node ip-172-31-72-246 pod pod-configmaps-792521b1-6c3e-4289-bf3b-8e3535ab5d22 container configmap-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 12:29:54.706
  I1116 12:29:54.727510 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-839" for this suite. @ 11/16/24 12:29:54.732
• [4.103 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 11/16/24 12:29:54.739
  I1116 12:29:54.739465 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubelet-test @ 11/16/24 12:29:54.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:29:54.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:29:54.76
  I1116 12:29:56.793315 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5888" for this suite. @ 11/16/24 12:29:56.797
• [2.068 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 11/16/24 12:29:56.807
  I1116 12:29:56.807593 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 12:29:56.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:29:56.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:29:56.83
  STEP: Creating the pod @ 11/16/24 12:29:56.833
  I1116 12:29:59.387512 18 pod_client.go:173] Successfully updated pod "annotationupdatea308e64a-03b1-49b8-9f60-53f0e92a2187"
  I1116 12:30:03.415381 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8545" for this suite. @ 11/16/24 12:30:03.419
• [6.620 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 11/16/24 12:30:03.427
  I1116 12:30:03.427867 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-probe @ 11/16/24 12:30:03.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:30:03.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:30:03.452
  STEP: Creating pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566 @ 11/16/24 12:30:03.454
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/16/24 12:30:05.474
  I1116 12:30:05.478135 18 container_probe.go:1749] Initial restart count of pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 is 0
  I1116 12:30:05.482544 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:07.487868 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:09.492729 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:11.498243 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:13.503451 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:15.508874 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:17.514242 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:19.522354 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:21.527963 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:23.532710 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:25.538734 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:27.544718 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:29.549997 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:31.556093 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:33.562674 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:35.567795 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:37.572975 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:39.577901 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:41.584908 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:43.589867 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:45.595397 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:47.601863 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:49.607567 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:51.613885 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:53.620494 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:55.626961 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:57.633293 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:30:59.639027 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:01.644489 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:03.650480 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:05.655914 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:07.662369 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:09.667282 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:11.672797 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:13.678296 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:15.684102 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:17.690443 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:19.695647 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:21.702538 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:23.708111 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:25.713279 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:27.719021 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:29.725244 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:31.730847 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:33.737297 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:35.743721 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:37.749233 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:39.754827 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:41.760554 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:43.765391 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:45.771549 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:47.776605 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:49.783071 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:51.788348 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:53.793682 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:55.800484 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:57.806731 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:31:59.811745 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:01.818167 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:03.823916 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:05.829289 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:07.834940 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:09.840601 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:11.846728 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:13.852899 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:15.859113 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:17.864726 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:19.869797 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:21.875513 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:23.880946 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:25.887339 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:27.892142 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:29.899099 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:31.904097 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:33.910911 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:35.916144 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:37.922223 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:39.928352 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:41.933481 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:43.939168 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:45.945503 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:47.950745 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:49.956964 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:51.961986 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:53.969145 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:55.974426 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:57.980953 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:32:59.985706 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:01.990925 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:03.997284 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:06.003234 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:08.010721 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:10.017189 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:12.022271 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:14.029201 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:16.034613 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:18.039847 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:20.045623 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:22.050441 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:24.056495 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:26.061115 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:28.067457 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:30.072819 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:32.078725 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:34.084084 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:36.089619 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:38.094346 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:40.101078 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:42.107083 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:44.114740 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:46.120475 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:48.126713 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:50.133133 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:52.139265 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:54.145500 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:56.151929 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:33:58.158115 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:34:00.161747 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:34:02.167677 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  I1116 12:34:04.173672 18 container_probe.go:1759] Get pod busybox-09edcac7-0df0-4c83-b29a-b9fe3c464e35 in namespace container-probe-3566
  STEP: deleting the pod @ 11/16/24 12:34:06.174
  I1116 12:34:06.190433 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3566" for this suite. @ 11/16/24 12:34:06.194
• [242.775 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 11/16/24 12:34:06.203
  I1116 12:34:06.203386 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename sched-pred @ 11/16/24 12:34:06.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:34:06.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:34:06.226
  I1116 12:34:06.228379 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1116 12:34:06.237329 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I1116 12:34:06.240423 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-107 before test
  I1116 12:34:06.245661 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-7hw6s from ingress-nginx-kubernetes-worker started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 12:34:06.245679 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1116 12:34:06.245687 18 predicates.go:957] calico-node-g5csg from kube-system started at 2024-11-16 12:10:00 +0000 UTC (1 container statuses recorded)
  I1116 12:34:06.245692 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1116 12:34:06.245698 18 predicates.go:957] coredns-5b4857d7c8-88vmq from kube-system started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 12:34:06.245703 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1116 12:34:06.245744 18 predicates.go:957] kube-state-metrics-5d7bdccd49-5l6xl from kube-system started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 12:34:06.245750 18 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 6
  I1116 12:34:06.245756 18 predicates.go:957] metrics-server-v0.7.1-6c77d69467-9jqds from kube-system started at 2024-11-16 11:52:55 +0000 UTC (2 container statuses recorded)
  I1116 12:34:06.245761 18 predicates.go:959] 	Container metrics-server ready: true, restart count 2
  I1116 12:34:06.245766 18 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1116 12:34:06.245771 18 predicates.go:957] dashboard-metrics-scraper-64757cf48d-8s8xh from kubernetes-dashboard started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 12:34:06.245776 18 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1116 12:34:06.245782 18 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-8bp7b from kubernetes-dashboard started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 12:34:06.245788 18 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 1
  I1116 12:34:06.245793 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-v89qq from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 12:34:06.245798 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 12:34:06.245831 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1116 12:34:06.245837 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-45-197 before test
  I1116 12:34:06.250631 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-94999 from ingress-nginx-kubernetes-worker started at 2024-11-16 12:04:57 +0000 UTC (1 container statuses recorded)
  I1116 12:34:06.250648 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1116 12:34:06.250655 18 predicates.go:957] calico-node-r7kq9 from kube-system started at 2024-11-16 12:09:29 +0000 UTC (1 container statuses recorded)
  I1116 12:34:06.250661 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1116 12:34:06.250667 18 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-16 12:12:38 +0000 UTC (1 container statuses recorded)
  I1116 12:34:06.250672 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1116 12:34:06.250678 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-tcwcj from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 12:34:06.250689 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 12:34:06.250694 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1116 12:34:06.250701 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-72-246 before test
  I1116 12:34:06.256560 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-nk2r4 from ingress-nginx-kubernetes-worker started at 2024-11-16 12:03:58 +0000 UTC (1 container statuses recorded)
  I1116 12:34:06.256575 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1116 12:34:06.256582 18 predicates.go:957] calico-node-95c66 from kube-system started at 2024-11-16 12:09:39 +0000 UTC (1 container statuses recorded)
  I1116 12:34:06.256588 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1116 12:34:06.256594 18 predicates.go:957] sonobuoy-e2e-job-06d9258fa7d041d4 from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 12:34:06.256599 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1116 12:34:06.256605 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 12:34:06.256610 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-wf799 from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 12:34:06.256616 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 12:34:06.256623 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/16/24 12:34:06.256
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/16/24 12:34:08.277
  STEP: Trying to apply a random label on the found node. @ 11/16/24 12:34:08.296
  STEP: verifying the node has the label kubernetes.io/e2e-1fc17b9b-4e96-4b57-ad1c-1672f8e2e599 42 @ 11/16/24 12:34:08.318
  STEP: Trying to relaunch the pod, now with labels. @ 11/16/24 12:34:08.326
  STEP: removing the label kubernetes.io/e2e-1fc17b9b-4e96-4b57-ad1c-1672f8e2e599 off the node ip-172-31-45-197 @ 11/16/24 12:34:10.348
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-1fc17b9b-4e96-4b57-ad1c-1672f8e2e599 @ 11/16/24 12:34:10.36
  I1116 12:34:10.365668 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4231" for this suite. @ 11/16/24 12:34:10.37
• [4.175 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 11/16/24 12:34:10.378
  I1116 12:34:10.378737 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename lease-test @ 11/16/24 12:34:10.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:34:10.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:34:10.407
  I1116 12:34:10.471351 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-845" for this suite. @ 11/16/24 12:34:10.475
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 11/16/24 12:34:10.483
  I1116 12:34:10.483511 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename cronjob @ 11/16/24 12:34:10.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:34:10.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:34:10.506
  STEP: Creating a suspended cronjob @ 11/16/24 12:34:10.508
  STEP: Ensuring no jobs are scheduled @ 11/16/24 12:34:10.514
  STEP: Ensuring no job exists by listing jobs explicitly @ 11/16/24 12:39:10.515
  STEP: Removing cronjob @ 11/16/24 12:39:10.519
  I1116 12:39:10.529017 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7649" for this suite. @ 11/16/24 12:39:10.534
• [300.058 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 11/16/24 12:39:10.541
  I1116 12:39:10.541534 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename deployment @ 11/16/24 12:39:10.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:39:10.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:39:10.561
  I1116 12:39:10.563453 18 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1116 12:39:10.572287 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1116 12:39:15.580255 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/16/24 12:39:15.58
  I1116 12:39:15.580327 18 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I1116 12:39:15.586405 18 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1116 12:39:15.592403 18 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I1116 12:39:17.603374 18 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1116 12:39:17.607715 18 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1116 12:39:17.618293 18 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4210",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aef2717c-88db-424a-9fb8-4748b7ef1f1e",
      ResourceVersion: (string) (len=5) "14854",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867357555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1116 12:39:17.622716 18 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4210",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "54a0fe44-7b34-473e-add5-4e135a0e0b82",
      ResourceVersion: (string) (len=5) "14844",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867357555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "aef2717c-88db-424a-9fb8-4748b7ef1f1e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 65 66 32 37 31  37 63 2d 38 38 64 62 2d  |\"aef2717c-88db-|
              00000120  34 32 34 61 2d 39 66 62  38 2d 34 37 34 38 62 37  |424a-9fb8-4748b7|
              00000130  65 66 31 66 31 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ef1f1e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1116 12:39:17.623187 18 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1116 12:39:17.623578 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4210",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a2eeca0-0fab-4fe6-8c5c-60b7bd3dd84d",
      ResourceVersion: (string) (len=5) "14853",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867357550,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "aef2717c-88db-424a-9fb8-4748b7ef1f1e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 61 65 66 32 37 31 37  |"uid\":\"aef2717|
              000000b0  63 2d 38 38 64 62 2d 34  32 34 61 2d 39 66 62 38  |c-88db-424a-9fb8|
              000000c0  2d 34 37 34 38 62 37 65  66 31 66 31 65 5c 22 7d  |-4748b7ef1f1e\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1116 12:39:17.629680 18 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-psz2d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-psz2d",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-4210",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f31094ea-ea75-47af-b1b5-c0622c8e6085",
      ResourceVersion: (string) (len=5) "14843",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867357555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "54a0fe44-7b34-473e-add5-4e135a0e0b82",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 30 66 65 34 34 2d 37  |d\":\"54a0fe44-7|
              00000090  62 33 34 2d 34 37 33 65  2d 61 64 64 35 2d 34 65  |b34-473e-add5-4e|
              000000a0  31 33 35 61 30 65 30 62  38 32 5c 22 7d 22 3a 7b  |135a0e0b82\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 38 35 5c 22 7d 22  |2.168.82.185\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kwxm6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kwxm6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867357555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) (len=14) "192.168.82.185",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.185"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867357555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867357556,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://9b496939c923fdfcf05691fc542831dcc8a1607253237c03f5cb91d9232efd31",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kwxm6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 12:39:17.630782 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4210" for this suite. @ 11/16/24 12:39:17.635
• [7.101 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 11/16/24 12:39:17.642
  I1116 12:39:17.642735 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename resourcequota @ 11/16/24 12:39:17.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:39:17.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:39:17.662
  STEP: Counting existing ResourceQuota @ 11/16/24 12:39:17.664
  STEP: Creating a ResourceQuota @ 11/16/24 12:39:22.668
  STEP: Ensuring resource quota status is calculated @ 11/16/24 12:39:22.674
  STEP: Creating a ReplicaSet @ 11/16/24 12:39:24.68
  STEP: Ensuring resource quota status captures replicaset creation @ 11/16/24 12:39:24.693
  STEP: Deleting a ReplicaSet @ 11/16/24 12:39:26.699
  STEP: Ensuring resource quota status released usage @ 11/16/24 12:39:26.707
  I1116 12:39:28.713389 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3321" for this suite. @ 11/16/24 12:39:28.718
• [11.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 11/16/24 12:39:28.728
  I1116 12:39:28.728156 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename secrets @ 11/16/24 12:39:28.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:39:28.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:39:28.749
  STEP: Creating secret with name s-test-opt-del-6c7469e1-834e-4085-8b7c-087b62467d73 @ 11/16/24 12:39:28.757
  STEP: Creating secret with name s-test-opt-upd-6bf72ac6-7f82-469f-ad97-fa611848c671 @ 11/16/24 12:39:28.762
  STEP: Creating the pod @ 11/16/24 12:39:28.766
  STEP: Deleting secret s-test-opt-del-6c7469e1-834e-4085-8b7c-087b62467d73 @ 11/16/24 12:39:30.826
  STEP: Updating secret s-test-opt-upd-6bf72ac6-7f82-469f-ad97-fa611848c671 @ 11/16/24 12:39:30.833
  STEP: Creating secret with name s-test-opt-create-3bc3f904-c653-4884-93df-c6380b5ce9e3 @ 11/16/24 12:39:30.837
  STEP: waiting to observe update in volume @ 11/16/24 12:39:30.842
  I1116 12:40:35.200320 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4605" for this suite. @ 11/16/24 12:40:35.204
• [66.485 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 11/16/24 12:40:35.213
  I1116 12:40:35.213941 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename configmap @ 11/16/24 12:40:35.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:40:35.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:40:35.237
  STEP: Creating configMap with name configmap-test-volume-map-3e24977b-2210-49de-99f9-5af4b45cb55e @ 11/16/24 12:40:35.239
  STEP: Creating a pod to test consume configMaps @ 11/16/24 12:40:35.244
  STEP: Saw pod success @ 11/16/24 12:40:39.268
  I1116 12:40:39.272817 18 output.go:196] Trying to get logs from node ip-172-31-72-246 pod pod-configmaps-800114e9-5801-4e9e-9cab-620efa862252 container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 12:40:39.289
  I1116 12:40:39.309547 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5686" for this suite. @ 11/16/24 12:40:39.314
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 11/16/24 12:40:39.321
  I1116 12:40:39.321511 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename secrets @ 11/16/24 12:40:39.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:40:39.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:40:39.341
  STEP: Creating secret with name secret-test-cf77391a-57f8-4672-9d63-448e891f431d @ 11/16/24 12:40:39.365
  STEP: Creating a pod to test consume secrets @ 11/16/24 12:40:39.37
  STEP: Saw pod success @ 11/16/24 12:40:43.394
  I1116 12:40:43.399027 18 output.go:196] Trying to get logs from node ip-172-31-72-246 pod pod-secrets-56bd7788-03f5-4502-94a7-e8e474e8d6cc container secret-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 12:40:43.406
  I1116 12:40:43.423123 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4783" for this suite. @ 11/16/24 12:40:43.426
  STEP: Destroying namespace "secret-namespace-9356" for this suite. @ 11/16/24 12:40:43.434
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 11/16/24 12:40:43.442
  I1116 12:40:43.442564 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename hostport @ 11/16/24 12:40:43.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:40:43.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:40:43.468
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 11/16/24 12:40:43.476
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.22.107 on the node which pod1 resides and expect scheduled @ 11/16/24 12:40:45.494
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.22.107 but use UDP protocol on the node which pod2 resides @ 11/16/24 12:40:47.511
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 11/16/24 12:40:51.549
  I1116 12:40:51.549117 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.22.107 http://127.0.0.1:54323/hostname] Namespace:hostport-7620 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:40:51.549134 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:40:51.549577 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:40:51.549614 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-7620/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.22.107+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.22.107, port: 54323 @ 11/16/24 12:40:51.599
  I1116 12:40:51.599590 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.22.107:54323/hostname] Namespace:hostport-7620 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:40:51.599604 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:40:51.600091 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:40:51.600135 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-7620/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.22.107%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.22.107, port: 54323 UDP @ 11/16/24 12:40:51.644
  I1116 12:40:51.644228 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.22.107 54323] Namespace:hostport-7620 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:40:51.644242 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:40:51.644645 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:40:51.644691 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-7620/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.22.107+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I1116 12:40:56.683259 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-7620" for this suite. @ 11/16/24 12:40:56.688
• [13.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 11/16/24 12:40:56.697
  I1116 12:40:56.697429 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename var-expansion @ 11/16/24 12:40:56.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:40:56.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:40:56.721
  STEP: Creating a pod to test env composition @ 11/16/24 12:40:56.723
  STEP: Saw pod success @ 11/16/24 12:41:00.748
  I1116 12:41:00.752310 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod var-expansion-8a8d0ce7-e706-4ceb-a618-b67631abc19b container dapi-container: <nil>
  STEP: delete the pod @ 11/16/24 12:41:00.761
  I1116 12:41:00.782227 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3404" for this suite. @ 11/16/24 12:41:00.786
• [4.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 11/16/24 12:41:00.793
  I1116 12:41:00.793359 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename statefulset @ 11/16/24 12:41:00.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:41:00.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:41:00.813
  STEP: Creating service test in namespace statefulset-4278 @ 11/16/24 12:41:00.815
  STEP: Creating statefulset ss in namespace statefulset-4278 @ 11/16/24 12:41:00.821
  I1116 12:41:00.835296 18 wait.go:40] Found 0 stateful pods, waiting for 1
  I1116 12:41:10.833155 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 11/16/24 12:41:10.84
  STEP: updating a scale subresource @ 11/16/24 12:41:10.844
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/16/24 12:41:10.85
  STEP: Patch a scale subresource @ 11/16/24 12:41:10.854
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/16/24 12:41:10.86
  I1116 12:41:10.866228 18 statefulset.go:138] Deleting all statefulset in ns statefulset-4278
  I1116 12:41:10.871005 18 rest.go:150] Scaling statefulset ss to 0
  I1116 12:41:20.886260 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1116 12:41:20.889872 18 rest.go:88] Deleting statefulset ss
  I1116 12:41:20.906910 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4278" for this suite. @ 11/16/24 12:41:20.911
• [20.126 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 11/16/24 12:41:20.919
  I1116 12:41:20.919341 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename runtimeclass @ 11/16/24 12:41:20.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:41:20.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:41:20.941
  I1116 12:41:22.977309 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5526" for this suite. @ 11/16/24 12:41:22.981
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 11/16/24 12:41:22.989
  I1116 12:41:22.989115 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-runtime @ 11/16/24 12:41:22.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:41:23.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:41:23.011
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 11/16/24 12:41:23.024
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 11/16/24 12:41:38.105
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 11/16/24 12:41:38.109
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 11/16/24 12:41:38.117
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 11/16/24 12:41:38.117
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 11/16/24 12:41:38.145
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 11/16/24 12:41:40.161
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 11/16/24 12:41:42.176
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 11/16/24 12:41:42.183
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 11/16/24 12:41:42.183
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 11/16/24 12:41:42.208
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 11/16/24 12:41:43.218
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 11/16/24 12:41:44.226
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 11/16/24 12:41:44.235
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 11/16/24 12:41:44.235
  I1116 12:41:44.265393 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9522" for this suite. @ 11/16/24 12:41:44.269
• [21.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 11/16/24 12:41:44.279
  I1116 12:41:44.279665 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename tables @ 11/16/24 12:41:44.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:41:44.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:41:44.3
  I1116 12:41:44.303866 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-6997" for this suite. @ 11/16/24 12:41:44.307
• [0.037 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 11/16/24 12:41:44.316
  I1116 12:41:44.316386 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 12:41:44.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:41:44.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:41:44.339
  STEP: Setting up server cert @ 11/16/24 12:41:44.363
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 12:41:44.666
  STEP: Deploying the webhook pod @ 11/16/24 12:41:44.676
  STEP: Wait for the deployment to be ready @ 11/16/24 12:41:44.691
  I1116 12:41:44.700057 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/16/24 12:41:46.715
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 12:41:46.729
  I1116 12:41:47.729492 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 11/16/24 12:41:47.738
  STEP: create a namespace for the webhook @ 11/16/24 12:41:47.754
  STEP: create a configmap should be unconditionally rejected by the webhook @ 11/16/24 12:41:47.789
  I1116 12:41:47.869179 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-742" for this suite. @ 11/16/24 12:41:47.872
  STEP: Destroying namespace "webhook-markers-6710" for this suite. @ 11/16/24 12:41:47.881
  STEP: Destroying namespace "fail-closed-namespace-9423" for this suite. @ 11/16/24 12:41:47.888
• [3.579 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 11/16/24 12:41:47.895
  I1116 12:41:47.895903 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-probe @ 11/16/24 12:41:47.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:41:47.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:41:47.915
  STEP: Creating pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840 @ 11/16/24 12:41:47.917
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/16/24 12:41:49.942
  I1116 12:41:49.951303 18 container_probe.go:1749] Initial restart count of pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 is 0
  I1116 12:41:49.955950 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:41:51.961126 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:41:53.966596 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:41:55.971712 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:41:57.977878 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:41:59.982992 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:01.988230 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:03.993823 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:06.000208 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:08.006641 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:10.013077 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:12.020575 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:14.026504 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:16.033290 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:18.038480 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:20.045564 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:22.050869 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:24.056636 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:26.062169 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:28.068260 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:30.073481 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:32.079452 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:34.084887 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:36.091179 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:38.096072 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:40.102724 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:42.109015 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:44.116295 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:46.121264 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:48.128257 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:50.133908 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:52.140389 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:54.146125 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:56.152026 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:42:58.157792 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:00.163580 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:02.169236 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:04.175743 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:06.180769 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:08.186638 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:10.193117 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:12.199017 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:14.205733 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:16.212598 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:18.218870 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:20.223672 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:22.229731 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:24.235503 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:26.240286 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:28.246266 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:30.251600 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:32.257420 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:34.262747 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:36.267306 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:38.272406 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:40.278169 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:42.283108 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:44.288888 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:46.295627 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:48.301362 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:50.307152 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:52.313254 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:54.319121 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:56.324954 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:43:58.330368 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:00.335795 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:02.340494 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:04.346727 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:06.352381 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:08.358807 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:10.364883 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:12.370342 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:14.376823 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:16.382111 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:18.389155 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:20.394849 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:22.401610 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:24.407813 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:26.412662 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:28.418060 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:30.424685 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:32.430436 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:34.436163 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:36.441064 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:38.446420 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:40.453306 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:42.459211 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:44.463937 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:46.468391 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:48.474591 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:50.481107 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:52.488284 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:54.493183 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:56.499692 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:44:58.504983 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:00.511606 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:02.517782 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:04.523440 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:06.528616 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:08.534419 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:10.539961 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:12.548540 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:14.554059 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:16.561022 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:18.566156 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:20.571535 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:22.578597 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:24.584417 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:26.590604 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:28.596864 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:30.602308 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:32.609238 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:34.614933 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:36.621246 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:38.626380 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:40.632206 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:42.638239 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:44.643263 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:46.649686 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  I1116 12:45:48.655297 18 container_probe.go:1759] Get pod test-grpc-77266713-83c8-4260-a892-785234dfcdc6 in namespace container-probe-3840
  STEP: deleting the pod @ 11/16/24 12:45:50.656
  I1116 12:45:50.672973 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3840" for this suite. @ 11/16/24 12:45:50.678
• [242.799 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 11/16/24 12:45:50.694
  I1116 12:45:50.694887 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pod-network-test @ 11/16/24 12:45:50.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:45:50.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:45:50.716
  STEP: Performing setup for networking test in namespace pod-network-test-6122 @ 11/16/24 12:45:50.717
  STEP: creating a selector @ 11/16/24 12:45:50.717
  STEP: Creating the service pods in kubernetes @ 11/16/24 12:45:50.717
  I1116 12:45:50.717888 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 11/16/24 12:46:02.8
  I1116 12:46:04.836653 18 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1116 12:46:04.836686 18 utils.go:496] Going to poll 192.168.164.80 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1116 12:46:04.841335 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.164.80:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6122 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:46:04.841357 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:46:04.841755 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:46:04.841796 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6122/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.164.80%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1116 12:46:04.891305 18 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1116 12:46:04.891332 18 utils.go:496] Going to poll 192.168.82.132 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1116 12:46:04.895683 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.82.132:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6122 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:46:04.895702 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:46:04.896084 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:46:04.896124 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6122/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.82.132%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1116 12:46:04.935633 18 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1116 12:46:04.935659 18 utils.go:496] Going to poll 192.168.216.91 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1116 12:46:04.943018 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.216.91:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6122 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:46:04.943057 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:46:04.943414 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:46:04.943455 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6122/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.216.91%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1116 12:46:04.983221 18 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1116 12:46:04.983315 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6122" for this suite. @ 11/16/24 12:46:04.987
• [14.301 seconds]
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 11/16/24 12:46:04.996
  I1116 12:46:04.996336 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-probe @ 11/16/24 12:46:04.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:46:05.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:46:05.019
  I1116 12:47:05.034885 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-227" for this suite. @ 11/16/24 12:47:05.038
• [60.052 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 11/16/24 12:47:05.048
  I1116 12:47:05.048911 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename job @ 11/16/24 12:47:05.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:47:05.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:47:05.074
  STEP: Creating a job @ 11/16/24 12:47:05.076
  STEP: Ensuring active pods == parallelism @ 11/16/24 12:47:05.082
  STEP: Orphaning one of the Job's Pods @ 11/16/24 12:47:07.088
  I1116 12:47:07.607701 18 pod_client.go:173] Successfully updated pod "adopt-release-chssx"
  STEP: Checking that the Job readopts the Pod @ 11/16/24 12:47:07.607
  STEP: Removing the labels from the Job's Pod @ 11/16/24 12:47:09.619
  I1116 12:47:10.130797 18 pod_client.go:173] Successfully updated pod "adopt-release-chssx"
  STEP: Checking that the Job releases the Pod @ 11/16/24 12:47:10.13
  I1116 12:47:12.141178 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6251" for this suite. @ 11/16/24 12:47:12.145
• [7.104 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 11/16/24 12:47:12.153
  I1116 12:47:12.153277 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename certificates @ 11/16/24 12:47:12.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:47:12.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:47:12.173
  STEP: getting /apis @ 11/16/24 12:47:12.457
  STEP: getting /apis/certificates.k8s.io @ 11/16/24 12:47:12.461
  STEP: getting /apis/certificates.k8s.io/v1 @ 11/16/24 12:47:12.461
  STEP: creating @ 11/16/24 12:47:12.462
  STEP: getting @ 11/16/24 12:47:12.481
  STEP: listing @ 11/16/24 12:47:12.485
  STEP: watching @ 11/16/24 12:47:12.488
  I1116 12:47:12.488800 18 certificates.go:316] starting watch
  STEP: patching @ 11/16/24 12:47:12.489
  STEP: updating @ 11/16/24 12:47:12.494
  I1116 12:47:12.504029 18 certificates.go:332] waiting for watch events with expected annotations
  I1116 12:47:12.504078 18 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 11/16/24 12:47:12.504
  STEP: patching /approval @ 11/16/24 12:47:12.507
  STEP: updating /approval @ 11/16/24 12:47:12.514
  STEP: getting /status @ 11/16/24 12:47:12.521
  STEP: patching /status @ 11/16/24 12:47:12.524
  STEP: updating /status @ 11/16/24 12:47:12.532
  STEP: deleting @ 11/16/24 12:47:12.539
  STEP: deleting a collection @ 11/16/24 12:47:12.554
  I1116 12:47:12.575540 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-8179" for this suite. @ 11/16/24 12:47:12.582
• [0.437 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 11/16/24 12:47:12.59
  I1116 12:47:12.590865 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir @ 11/16/24 12:47:12.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:47:12.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:47:12.617
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/16/24 12:47:12.619
  STEP: Saw pod success @ 11/16/24 12:47:16.647
  I1116 12:47:16.650885 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-af7a58df-ddb1-4f78-9a04-5b30bb9035fa container test-container: <nil>
  STEP: delete the pod @ 11/16/24 12:47:16.669
  I1116 12:47:16.690610 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7455" for this suite. @ 11/16/24 12:47:16.694
• [4.112 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 11/16/24 12:47:16.702
  I1116 12:47:16.702985 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubelet-test @ 11/16/24 12:47:16.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:47:16.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:47:16.726
  I1116 12:47:20.745486 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2952" for this suite. @ 11/16/24 12:47:20.75
• [4.055 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 11/16/24 12:47:20.757
  I1116 12:47:20.758007 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 12:47:20.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:47:20.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:47:20.78
  STEP: Creating a pod to test downward api env vars @ 11/16/24 12:47:20.782
  STEP: Saw pod success @ 11/16/24 12:47:24.808
  I1116 12:47:24.813198 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downward-api-92b087d0-f5ec-46f3-b942-b36c7ad11707 container dapi-container: <nil>
  STEP: delete the pod @ 11/16/24 12:47:24.821
  I1116 12:47:24.843701 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3995" for this suite. @ 11/16/24 12:47:24.847
• [4.097 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 11/16/24 12:47:24.855
  I1116 12:47:24.855403 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 12:47:24.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:47:24.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:47:24.876
  STEP: Creating configMap with name projected-configmap-test-volume-5cd42259-31da-47bc-9b91-5a1bec618a82 @ 11/16/24 12:47:24.878
  STEP: Creating a pod to test consume configMaps @ 11/16/24 12:47:24.885
  STEP: Saw pod success @ 11/16/24 12:47:26.904
  I1116 12:47:26.908974 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-projected-configmaps-e68087e0-558e-4c36-8f88-9c93aac51b48 container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 12:47:26.917
  I1116 12:47:26.934388 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8896" for this suite. @ 11/16/24 12:47:26.938
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 11/16/24 12:47:26.945
  I1116 12:47:26.945076 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 12:47:26.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:47:26.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:47:26.966
  STEP: Creating the pod @ 11/16/24 12:47:26.968
  I1116 12:47:29.516508 18 pod_client.go:173] Successfully updated pod "labelsupdate30aeb7d4-a016-4be3-888d-ceef3e0bbb60"
  I1116 12:47:31.538637 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6152" for this suite. @ 11/16/24 12:47:31.543
• [4.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 11/16/24 12:47:31.552
  I1116 12:47:31.552300 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/16/24 12:47:31.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:47:31.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:47:31.576
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 11/16/24 12:47:31.578
  I1116 12:47:31.578429 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:47:32.871489 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:47:37.830990 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8767" for this suite. @ 11/16/24 12:47:37.838
• [6.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 11/16/24 12:47:37.847
  I1116 12:47:37.847560 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename sysctl @ 11/16/24 12:47:37.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:47:37.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:47:37.87
  STEP: Creating a pod with one valid and two invalid sysctls @ 11/16/24 12:47:37.873
  I1116 12:47:37.879307 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6433" for this suite. @ 11/16/24 12:47:37.884
• [0.045 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 11/16/24 12:47:37.892
  I1116 12:47:37.892632 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 12:47:37.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:47:37.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:47:37.911
  STEP: Creating a pod to test downward api env vars @ 11/16/24 12:47:37.913
  STEP: Saw pod success @ 11/16/24 12:47:39.935
  I1116 12:47:39.941910 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downward-api-8f97527f-3baa-4d41-a377-1536d2a51f5a container dapi-container: <nil>
  STEP: delete the pod @ 11/16/24 12:47:39.957
  I1116 12:47:39.973965 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6027" for this suite. @ 11/16/24 12:47:39.978
• [2.095 seconds]
------------------------------
SSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 11/16/24 12:47:39.987
  I1116 12:47:39.987371 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename ingressclass @ 11/16/24 12:47:39.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:47:40.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:47:40.007
  STEP: getting /apis @ 11/16/24 12:47:40.009
  STEP: getting /apis/networking.k8s.io @ 11/16/24 12:47:40.012
  STEP: getting /apis/networking.k8s.iov1 @ 11/16/24 12:47:40.013
  STEP: creating @ 11/16/24 12:47:40.014
  STEP: getting @ 11/16/24 12:47:40.037
  STEP: listing @ 11/16/24 12:47:40.046
  STEP: watching @ 11/16/24 12:47:40.051
  I1116 12:47:40.051176 18 ingressclass.go:348] starting watch
  STEP: patching @ 11/16/24 12:47:40.052
  STEP: updating @ 11/16/24 12:47:40.062
  I1116 12:47:40.072581 18 ingressclass.go:364] waiting for watch events with expected annotations
  I1116 12:47:40.072637 18 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 11/16/24 12:47:40.072
  STEP: deleting a collection @ 11/16/24 12:47:40.098
  I1116 12:47:40.121030 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-1063" for this suite. @ 11/16/24 12:47:40.125
• [0.148 seconds]
------------------------------
SSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 11/16/24 12:47:40.135
  I1116 12:47:40.135860 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename prestop @ 11/16/24 12:47:40.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:47:40.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:47:40.153
  STEP: Creating server pod server in namespace prestop-7090 @ 11/16/24 12:47:40.155
  STEP: Waiting for pods to come up. @ 11/16/24 12:47:40.164
  STEP: Creating tester pod tester in namespace prestop-7090 @ 11/16/24 12:47:42.183
  STEP: Deleting pre-stop pod @ 11/16/24 12:47:44.207
  I1116 12:47:49.225899 18 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 11/16/24 12:47:49.226
  I1116 12:47:49.243463 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-7090" for this suite. @ 11/16/24 12:47:49.247
• [9.119 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 11/16/24 12:47:49.256
  I1116 12:47:49.256079 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/16/24 12:47:49.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:47:49.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:47:49.277
  STEP: set up a multi version CRD @ 11/16/24 12:47:49.279
  I1116 12:47:49.279957 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: mark a version not serverd @ 11/16/24 12:47:52.385
  STEP: check the unserved version gets removed @ 11/16/24 12:47:52.406
  STEP: check the other version is not changed @ 11/16/24 12:47:53.099
  I1116 12:47:55.561260 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8916" for this suite. @ 11/16/24 12:47:55.569
• [6.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 11/16/24 12:47:55.577
  I1116 12:47:55.577943 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename deployment @ 11/16/24 12:47:55.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:47:55.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:47:55.597
  I1116 12:47:55.610182 18 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I1116 12:48:00.616294 18 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/16/24 12:48:00.616
  I1116 12:48:00.616364 18 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I1116 12:48:02.622895 18 deployment.go:921] Creating deployment "test-rollover-deployment"
  I1116 12:48:02.634133 18 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I1116 12:48:04.646191 18 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I1116 12:48:04.653807 18 deployment.go:943] Ensure that both replica sets have 1 created replica
  I1116 12:48:04.662889 18 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1116 12:48:04.676223 18 deployment.go:313] Updating deployment test-rollover-deployment
  I1116 12:48:04.676249 18 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I1116 12:48:06.686779 18 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1116 12:48:06.695636 18 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I1116 12:48:06.703220 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1116 12:48:06.703259 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 48, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 48, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 48, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 48, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:48:08.714155 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1116 12:48:08.714215 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 48, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 48, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 48, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 48, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:48:10.714536 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1116 12:48:10.714598 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 48, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 48, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 48, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 48, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:48:12.713974 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1116 12:48:12.714023 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 48, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 48, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 48, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 48, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:48:14.714081 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1116 12:48:14.714137 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 48, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 48, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 12, 48, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 12, 48, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1116 12:48:16.714859 18 deployment.go:94] 
  I1116 12:48:16.715007 18 deployment.go:974] Ensure that both old replica sets have no replicas
  I1116 12:48:16.725778 18 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6268",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0896aa26-b4f4-43a1-9c7e-b5064f76da5e",
      ResourceVersion: (string) (len=5) "17244",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867358082,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1116 12:48:16.731031 18 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6268",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63506893-566a-4758-97cb-018fec8170e8",
      ResourceVersion: (string) (len=5) "17232",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867358084,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0896aa26-b4f4-43a1-9c7e-b5064f76da5e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 38 39 36 61 61  32 36 2d 62 34 66 34 2d  |\"0896aa26-b4f4-|
              00000120  34 33 61 31 2d 39 63 37  65 2d 62 35 30 36 34 66  |43a1-9c7e-b5064f|
              00000130  37 36 64 61 35 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |76da5e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1116 12:48:16.731568 18 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1116 12:48:16.731786 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6268",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9de21e98-a0a2-44f0-a723-0f7bc1eaba0a",
      ResourceVersion: (string) (len=5) "17242",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867358075,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0896aa26-b4f4-43a1-9c7e-b5064f76da5e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358075,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  30 38 39 36 61 61 32 36  2d 62 34 66 34 2d 34 33  |0896aa26-b4f4-43|
              000000c0  61 31 2d 39 63 37 65 2d  62 35 30 36 34 66 37 36  |a1-9c7e-b5064f76|
              000000d0  64 61 35 65 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |da5e\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1116 12:48:16.735956 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6268",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ce5b53db-dbef-4595-bf3b-f69cbd755542",
      ResourceVersion: (string) (len=5) "17186",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867358082,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0896aa26-b4f4-43a1-9c7e-b5064f76da5e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 38 39 36 61 61  32 36 2d 62 34 66 34 2d  |\"0896aa26-b4f4-|
              00000120  34 33 61 31 2d 39 63 37  65 2d 62 35 30 36 34 66  |43a1-9c7e-b5064f|
              00000130  37 36 64 61 35 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |76da5e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1116 12:48:16.741805 18 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-d4gj5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-d4gj5",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-6268",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41531927-5545-4517-a5a2-24f49fd6fd24",
      ResourceVersion: (string) (len=5) "17206",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867358084,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "63506893-566a-4758-97cb-018fec8170e8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 33  35 30 36 38 39 33 2d 35  |d\":\"63506893-5|
              00000090  36 36 61 2d 34 37 35 38  2d 39 37 63 62 2d 30 31  |66a-4758-97cb-01|
              000000a0  38 66 65 63 38 31 37 30  65 38 5c 22 7d 22 3a 7b  |8fec8170e8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 34 33 5c 22 7d 22  |2.168.82.143\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pbpv2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pbpv2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867358084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) (len=14) "192.168.82.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867358084,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867358085,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://c0cb0a309965b719e156c1702a707d1138dd6efbc2c05bd9d24ca80408729a9d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pbpv2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 12:48:16.742803 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6268" for this suite. @ 11/16/24 12:48:16.748
• [21.179 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 11/16/24 12:48:16.757
  I1116 12:48:16.757022 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename statefulset @ 11/16/24 12:48:16.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:48:16.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:48:16.777
  STEP: Creating service test in namespace statefulset-218 @ 11/16/24 12:48:16.779
  STEP: Creating a new StatefulSet @ 11/16/24 12:48:16.786
  I1116 12:48:16.801095 18 wait.go:40] Found 0 stateful pods, waiting for 3
  I1116 12:48:26.802449 18 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1116 12:48:26.802484 18 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1116 12:48:26.802491 18 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1116 12:48:26.816286 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-218 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1116 12:48:26.902020 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1116 12:48:26.902069 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1116 12:48:26.902081 18 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/16/24 12:48:36.913
  I1116 12:48:36.924458 18 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 11/16/24 12:48:36.924
  STEP: Updating Pods in reverse ordinal order @ 11/16/24 12:48:46.934
  I1116 12:48:46.939234 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-218 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1116 12:48:47.023143 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1116 12:48:47.023206 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1116 12:48:47.023216 18 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 11/16/24 12:49:07.041
  I1116 12:49:07.042080 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-218 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1116 12:49:07.129269 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1116 12:49:07.129320 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1116 12:49:07.129334 18 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1116 12:49:17.150854 18 statefulset.go:2507] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 11/16/24 12:49:27.161
  I1116 12:49:27.165292 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-218 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1116 12:49:27.245497 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1116 12:49:27.245524 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1116 12:49:27.245534 18 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1116 12:49:37.264753 18 statefulset.go:138] Deleting all statefulset in ns statefulset-218
  I1116 12:49:37.269333 18 rest.go:150] Scaling statefulset ss2 to 0
  I1116 12:49:47.289367 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1116 12:49:47.294340 18 rest.go:88] Deleting statefulset ss2
  I1116 12:49:47.310743 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-218" for this suite. @ 11/16/24 12:49:47.317
• [90.568 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 11/16/24 12:49:47.325
  I1116 12:49:47.325632 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 12:49:47.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:49:47.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:49:47.346
  STEP: Setting up server cert @ 11/16/24 12:49:47.371
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 12:49:47.795
  STEP: Deploying the webhook pod @ 11/16/24 12:49:47.807
  STEP: Wait for the deployment to be ready @ 11/16/24 12:49:47.823
  I1116 12:49:47.833279 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/16/24 12:49:49.849
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 12:49:49.863
  I1116 12:49:50.863518 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/16/24 12:49:50.873
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/16/24 12:49:50.888
  STEP: Creating a dummy validating-webhook-configuration object @ 11/16/24 12:49:50.902
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 11/16/24 12:49:50.912
  STEP: Creating a dummy mutating-webhook-configuration object @ 11/16/24 12:49:50.922
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 11/16/24 12:49:50.93
  I1116 12:49:50.999415 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1659" for this suite. @ 11/16/24 12:49:51.003
  STEP: Destroying namespace "webhook-markers-8091" for this suite. @ 11/16/24 12:49:51.011
• [3.697 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 11/16/24 12:49:51.022
  I1116 12:49:51.022383 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 12:49:51.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:49:51.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:49:51.039
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 12:49:51.041
  STEP: Saw pod success @ 11/16/24 12:49:55.068
  I1116 12:49:55.072910 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downwardapi-volume-00afab7f-eac8-4b12-a024-f31b39464eb2 container client-container: <nil>
  STEP: delete the pod @ 11/16/24 12:49:55.086
  I1116 12:49:55.109913 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6945" for this suite. @ 11/16/24 12:49:55.114
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 11/16/24 12:49:55.124
  I1116 12:49:55.124050 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename secrets @ 11/16/24 12:49:55.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:49:55.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:49:55.141
  STEP: Creating secret with name secret-test-map-80a1207f-a09b-4924-a241-12dd096a2f70 @ 11/16/24 12:49:55.146
  STEP: Creating a pod to test consume secrets @ 11/16/24 12:49:55.151
  STEP: Saw pod success @ 11/16/24 12:49:59.179
  I1116 12:49:59.184149 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-secrets-9e4a04ff-4f46-4b57-ac88-20cf95ed35db container secret-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 12:49:59.193
  I1116 12:49:59.212260 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1239" for this suite. @ 11/16/24 12:49:59.216
• [4.101 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 11/16/24 12:49:59.225
  I1116 12:49:59.225292 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename containers @ 11/16/24 12:49:59.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:49:59.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:49:59.248
  STEP: Creating a pod to test override all @ 11/16/24 12:49:59.251
  STEP: Saw pod success @ 11/16/24 12:50:01.273
  I1116 12:50:01.278432 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod client-containers-f3c69ee3-ff76-4136-901b-971ee5d2ab51 container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 12:50:01.286
  I1116 12:50:01.305016 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4354" for this suite. @ 11/16/24 12:50:01.309
• [2.092 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 11/16/24 12:50:01.317
  I1116 12:50:01.317304 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename endpointslice @ 11/16/24 12:50:01.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:50:01.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:50:01.336
  STEP: getting /apis @ 11/16/24 12:50:01.338
  STEP: getting /apis/discovery.k8s.io @ 11/16/24 12:50:01.341
  STEP: getting /apis/discovery.k8s.iov1 @ 11/16/24 12:50:01.342
  STEP: creating @ 11/16/24 12:50:01.342
  STEP: getting @ 11/16/24 12:50:01.359
  STEP: listing @ 11/16/24 12:50:01.364
  STEP: watching @ 11/16/24 12:50:01.367
  I1116 12:50:01.367120 18 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 11/16/24 12:50:01.368
  STEP: cluster-wide watching @ 11/16/24 12:50:01.373
  I1116 12:50:01.373389 18 endpointslice.go:459] starting watch
  STEP: patching @ 11/16/24 12:50:01.374
  STEP: updating @ 11/16/24 12:50:01.381
  I1116 12:50:01.390630 18 endpointslice.go:482] waiting for watch events with expected annotations
  I1116 12:50:01.390658 18 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 11/16/24 12:50:01.39
  STEP: deleting a collection @ 11/16/24 12:50:01.407
  I1116 12:50:01.433477 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7667" for this suite. @ 11/16/24 12:50:01.437
• [0.129 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 11/16/24 12:50:01.445
  I1116 12:50:01.446010 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/16/24 12:50:01.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:50:01.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:50:01.464
  STEP: create the container to handle the HTTPGet hook request. @ 11/16/24 12:50:01.472
  STEP: create the pod with lifecycle hook @ 11/16/24 12:50:03.501
  STEP: check poststart hook @ 11/16/24 12:50:05.524
  STEP: delete the pod with lifecycle hook @ 11/16/24 12:50:05.532
  I1116 12:50:07.553111 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-867" for this suite. @ 11/16/24 12:50:07.557
• [6.120 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 11/16/24 12:50:07.566
  I1116 12:50:07.566397 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 12:50:07.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:50:07.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:50:07.583
  STEP: Setting up server cert @ 11/16/24 12:50:07.609
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 12:50:07.982
  STEP: Deploying the webhook pod @ 11/16/24 12:50:07.988
  STEP: Wait for the deployment to be ready @ 11/16/24 12:50:08.002
  I1116 12:50:08.013602 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/16/24 12:50:10.029
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 12:50:10.042
  I1116 12:50:11.043631 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 11/16/24 12:50:11.053
  STEP: verifying the validating webhook match conditions @ 11/16/24 12:50:11.062
  STEP: updating the validating webhook match conditions @ 11/16/24 12:50:11.066
  STEP: verifying the validating webhook match conditions @ 11/16/24 12:50:11.075
  I1116 12:50:11.136662 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1353" for this suite. @ 11/16/24 12:50:11.141
  STEP: Destroying namespace "webhook-markers-831" for this suite. @ 11/16/24 12:50:11.151
• [3.594 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 11/16/24 12:50:11.16
  I1116 12:50:11.160646 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename svcaccounts @ 11/16/24 12:50:11.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:50:11.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:50:11.18
  I1116 12:50:11.204918 18 service_accounts.go:253] created pod pod-service-account-defaultsa
  I1116 12:50:11.204952 18 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I1116 12:50:11.211062 18 service_accounts.go:253] created pod pod-service-account-mountsa
  I1116 12:50:11.211081 18 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I1116 12:50:11.220623 18 service_accounts.go:253] created pod pod-service-account-nomountsa
  I1116 12:50:11.220644 18 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I1116 12:50:11.230895 18 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I1116 12:50:11.230914 18 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1116 12:50:11.239077 18 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I1116 12:50:11.239094 18 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1116 12:50:11.247795 18 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I1116 12:50:11.247833 18 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1116 12:50:11.255416 18 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I1116 12:50:11.255437 18 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1116 12:50:11.262235 18 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I1116 12:50:11.262252 18 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1116 12:50:11.273306 18 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I1116 12:50:11.273323 18 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1116 12:50:11.273407 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3529" for this suite. @ 11/16/24 12:50:11.282
• [0.137 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 11/16/24 12:50:11.298
  I1116 12:50:11.298033 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/16/24 12:50:11.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:50:11.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:50:11.322
  I1116 12:50:11.325096 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/16/24 12:50:12.605
  I1116 12:50:12.605377 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-2097 --namespace=crd-publish-openapi-2097 create -f -'
  I1116 12:50:14.671497 18 builder.go:146] stderr: ""
  I1116 12:50:14.671537 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5240-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1116 12:50:14.671588 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-2097 --namespace=crd-publish-openapi-2097 delete e2e-test-crd-publish-openapi-5240-crds test-cr'
  I1116 12:50:14.732332 18 builder.go:146] stderr: ""
  I1116 12:50:14.732377 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5240-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1116 12:50:14.732429 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-2097 --namespace=crd-publish-openapi-2097 apply -f -'
  I1116 12:50:14.788845 18 builder.go:146] stderr: ""
  I1116 12:50:14.788874 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5240-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1116 12:50:14.788912 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-2097 --namespace=crd-publish-openapi-2097 delete e2e-test-crd-publish-openapi-5240-crds test-cr'
  I1116 12:50:14.840981 18 builder.go:146] stderr: ""
  I1116 12:50:14.841018 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5240-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 11/16/24 12:50:14.841
  I1116 12:50:14.841103 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-2097 explain e2e-test-crd-publish-openapi-5240-crds'
  I1116 12:50:14.881464 18 builder.go:146] stderr: ""
  I1116 12:50:14.881508 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5240-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I1116 12:50:16.103132 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2097" for this suite. @ 11/16/24 12:50:16.11
• [4.822 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 11/16/24 12:50:16.12
  I1116 12:50:16.120568 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/16/24 12:50:16.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:50:16.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:50:16.138
  STEP: creating a policy with variables @ 11/16/24 12:50:16.146
  STEP: waiting until the marker is denied @ 11/16/24 12:50:16.167
  STEP: testing a replicated Deployment to be allowed @ 11/16/24 12:50:16.808
  STEP: testing a non-replicated ReplicaSet not to be denied @ 11/16/24 12:50:16.828
  I1116 12:50:16.888007 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4189" for this suite. @ 11/16/24 12:50:16.893
• [0.781 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 11/16/24 12:50:16.902
  I1116 12:50:16.902088 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename statefulset @ 11/16/24 12:50:16.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:50:16.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:50:16.921
  STEP: Creating service test in namespace statefulset-3462 @ 11/16/24 12:50:16.924
  STEP: Creating stateful set ss in namespace statefulset-3462 @ 11/16/24 12:50:16.931
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3462 @ 11/16/24 12:50:16.941
  I1116 12:50:16.948330 18 wait.go:40] Found 0 stateful pods, waiting for 1
  I1116 12:50:26.946854 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 11/16/24 12:50:26.946
  I1116 12:50:26.951456 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-3462 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1116 12:50:27.044533 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1116 12:50:27.044558 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1116 12:50:27.044570 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1116 12:50:27.049480 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1116 12:50:37.051955 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1116 12:50:37.051997 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1116 12:50:37.074486 18 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I1116 12:50:37.074536 18 resource.go:175] ss-0  ip-172-31-22-107  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:18 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:16 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:16 +0000 UTC  }]
  I1116 12:50:37.074542 18 resource.go:178] 
  I1116 12:50:37.074549 18 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  I1116 12:50:38.081457 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.992635685s
  I1116 12:50:39.088240 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.985630867s
  I1116 12:50:40.094703 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.979450241s
  I1116 12:50:41.100712 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.972074097s
  I1116 12:50:42.105878 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.966963799s
  I1116 12:50:43.112230 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.961646157s
  I1116 12:50:44.116965 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.955457319s
  I1116 12:50:45.123142 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.95067935s
  I1116 12:50:46.130205 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 943.821022ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3462 @ 11/16/24 12:50:47.13
  I1116 12:50:47.135920 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-3462 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1116 12:50:47.218218 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1116 12:50:47.218254 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1116 12:50:47.218264 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1116 12:50:47.218322 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-3462 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1116 12:50:47.302200 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1116 12:50:47.302240 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1116 12:50:47.302251 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1116 12:50:47.302292 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-3462 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1116 12:50:47.382559 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1116 12:50:47.382596 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1116 12:50:47.382608 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1116 12:50:47.388385 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1116 12:50:47.388412 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1116 12:50:47.388419 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 11/16/24 12:50:47.388
  I1116 12:50:47.392874 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-3462 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1116 12:50:47.476616 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1116 12:50:47.476647 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1116 12:50:47.476658 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1116 12:50:47.476699 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-3462 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1116 12:50:47.556887 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1116 12:50:47.556920 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1116 12:50:47.556929 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1116 12:50:47.556994 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=statefulset-3462 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1116 12:50:47.635706 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1116 12:50:47.635764 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1116 12:50:47.635799 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1116 12:50:47.635866 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1116 12:50:47.641469 18 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1116 12:50:57.646176 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1116 12:50:57.646205 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1116 12:50:57.646211 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1116 12:50:57.665300 18 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I1116 12:50:57.665348 18 resource.go:175] ss-0  ip-172-31-22-107  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:18 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:16 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:16 +0000 UTC  }]
  I1116 12:50:57.665369 18 resource.go:175] ss-1  ip-172-31-72-246  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:37 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:37 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:37 +0000 UTC  }]
  I1116 12:50:57.665389 18 resource.go:175] ss-2  ip-172-31-45-197  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:37 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:37 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:37 +0000 UTC  }]
  I1116 12:50:57.665398 18 resource.go:178] 
  I1116 12:50:57.665405 18 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I1116 12:50:58.670710 18 resource.go:168] POD   NODE              PHASE      GRACE  CONDITIONS
  I1116 12:50:58.670767 18 resource.go:175] ss-1  ip-172-31-72-246  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:57 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:37 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:48 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:48 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 12:50:37 +0000 UTC  }]
  I1116 12:50:58.670774 18 resource.go:178] 
  I1116 12:50:58.670781 18 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 1
  I1116 12:50:59.678102 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.989349267s
  I1116 12:51:00.683721 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.981169746s
  I1116 12:51:01.690342 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.975595907s
  I1116 12:51:02.696846 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.969776564s
  I1116 12:51:03.702974 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.96315377s
  I1116 12:51:04.708974 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.957148598s
  I1116 12:51:05.715985 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.951130431s
  I1116 12:51:06.720751 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 944.093173ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3462 @ 11/16/24 12:51:07.72
  I1116 12:51:07.727381 18 rest.go:150] Scaling statefulset ss to 0
  I1116 12:51:07.736259 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1116 12:51:07.739996 18 statefulset.go:138] Deleting all statefulset in ns statefulset-3462
  I1116 12:51:07.744283 18 rest.go:150] Scaling statefulset ss to 0
  I1116 12:51:07.753070 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1116 12:51:07.757084 18 rest.go:88] Deleting statefulset ss
  I1116 12:51:07.774118 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3462" for this suite. @ 11/16/24 12:51:07.781
• [50.888 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 11/16/24 12:51:07.789
  I1116 12:51:07.789989 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pods @ 11/16/24 12:51:07.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:51:07.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:51:07.809
  STEP: Create a pod @ 11/16/24 12:51:07.811
  STEP: patching /status @ 11/16/24 12:51:09.833
  I1116 12:51:09.843526 18 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1116 12:51:09.843630 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1583" for this suite. @ 11/16/24 12:51:09.847
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 11/16/24 12:51:09.857
  I1116 12:51:09.857077 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/16/24 12:51:09.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:51:09.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:51:09.875
  I1116 12:51:09.877917 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:51:13.216111 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-641" for this suite. @ 11/16/24 12:51:13.22
• [3.372 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 11/16/24 12:51:13.229
  I1116 12:51:13.229699 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 12:51:13.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:51:13.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:51:13.251
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 12:51:13.253
  STEP: Saw pod success @ 11/16/24 12:51:15.279
  I1116 12:51:15.283629 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downwardapi-volume-0f6e04bd-7c92-4acc-a01e-b70e10de74fa container client-container: <nil>
  STEP: delete the pod @ 11/16/24 12:51:15.296
  I1116 12:51:15.317321 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3768" for this suite. @ 11/16/24 12:51:15.32
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 11/16/24 12:51:15.33
  I1116 12:51:15.330533 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename replicaset @ 11/16/24 12:51:15.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:51:15.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:51:15.349
  I1116 12:51:15.367069 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1116 12:51:20.376305 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/16/24 12:51:20.376
  STEP: Scaling up "test-rs" replicaset @ 11/16/24 12:51:20.376
  I1116 12:51:20.392969 18 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 11/16/24 12:51:20.393
  I1116 12:51:20.417454 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6154 with ReadyReplicas 1, AvailableReplicas 1
  I1116 12:51:20.433264 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6154 with ReadyReplicas 1, AvailableReplicas 1
  I1116 12:51:20.477263 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6154 with ReadyReplicas 1, AvailableReplicas 1
  I1116 12:51:20.485001 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6154 with ReadyReplicas 1, AvailableReplicas 1
  I1116 12:51:21.263848 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6154 with ReadyReplicas 2, AvailableReplicas 2
  I1116 12:51:21.872230 18 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-6154 with ReadyReplicas 3 found true
  I1116 12:51:21.872373 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6154" for this suite. @ 11/16/24 12:51:21.877
• [6.555 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 11/16/24 12:51:21.886
  I1116 12:51:21.886308 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename namespaces @ 11/16/24 12:51:21.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:51:21.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:51:21.908
  STEP: Creating a test namespace @ 11/16/24 12:51:21.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:51:21.93
  STEP: Creating a service in the namespace @ 11/16/24 12:51:21.935
  STEP: Deleting the namespace @ 11/16/24 12:51:21.947
  STEP: Waiting for the namespace to be removed. @ 11/16/24 12:51:21.959
  STEP: Recreating the namespace @ 11/16/24 12:51:27.965
  STEP: Verifying there is no service in the namespace @ 11/16/24 12:51:27.98
  I1116 12:51:27.983637 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5099" for this suite. @ 11/16/24 12:51:27.99
  STEP: Destroying namespace "nsdeletetest-7131" for this suite. @ 11/16/24 12:51:27.998
  I1116 12:51:28.001866 18 framework.go:370] Namespace nsdeletetest-7131 was already deleted
  STEP: Destroying namespace "nsdeletetest-5102" for this suite. @ 11/16/24 12:51:28.001
• [6.124 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 11/16/24 12:51:28.01
  I1116 12:51:28.010659 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-probe @ 11/16/24 12:51:28.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:51:28.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:51:28.029
  STEP: Creating pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122 @ 11/16/24 12:51:28.032
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/16/24 12:51:30.053
  I1116 12:51:30.058082 18 container_probe.go:1749] Initial restart count of pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 is 0
  I1116 12:51:30.062529 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:51:32.067920 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:51:34.073312 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:51:36.078984 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:51:38.084431 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:51:40.089095 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:51:42.093988 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:51:44.100872 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:51:46.106262 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:51:48.111961 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:51:50.117391 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:51:52.123862 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:51:54.129354 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:51:56.135151 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:51:58.141142 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:00.147530 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:02.154075 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:04.160031 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:06.165611 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:08.172282 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:10.178198 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:12.185725 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:14.192485 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:16.201271 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:18.207448 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:20.214695 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:22.220328 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:24.226673 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:26.232057 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:28.237775 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:30.243931 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:32.250726 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:34.257099 18 container_probe.go:1759] Get pod test-grpc-d89d1e0b-2245-4945-818c-40de45107471 in namespace container-probe-6122
  I1116 12:52:34.257132 18 container_probe.go:1763] Restart count of pod container-probe-6122/test-grpc-d89d1e0b-2245-4945-818c-40de45107471 is now 1 (1m4.199026118s elapsed)
  STEP: deleting the pod @ 11/16/24 12:52:34.257
  I1116 12:52:34.271996 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6122" for this suite. @ 11/16/24 12:52:34.277
• [66.275 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 11/16/24 12:52:34.285
  I1116 12:52:34.285725 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename svcaccounts @ 11/16/24 12:52:34.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:52:34.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:52:34.303
  STEP: Creating ServiceAccount "e2e-sa-mlxdx"  @ 11/16/24 12:52:34.308
  I1116 12:52:34.313119 18 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-mlxdx"  @ 11/16/24 12:52:34.313
  I1116 12:52:34.321562 18 service_accounts.go:839] AutomountServiceAccountToken: true
  I1116 12:52:34.321642 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5550" for this suite. @ 11/16/24 12:52:34.326
• [0.048 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 11/16/24 12:52:34.333
  I1116 12:52:34.333761 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename podtemplate @ 11/16/24 12:52:34.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:52:34.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:52:34.354
  STEP: Create a pod template @ 11/16/24 12:52:34.359
  STEP: Replace a pod template @ 11/16/24 12:52:34.368
  I1116 12:52:34.378697 18 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1116 12:52:34.378800 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5545" for this suite. @ 11/16/24 12:52:34.382
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 11/16/24 12:52:34.39
  I1116 12:52:34.390901 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename resourcequota @ 11/16/24 12:52:34.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:52:34.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:52:34.41
  STEP: Creating a ResourceQuota @ 11/16/24 12:52:34.413
  STEP: Getting a ResourceQuota @ 11/16/24 12:52:34.418
  STEP: Listing all ResourceQuotas with LabelSelector @ 11/16/24 12:52:34.422
  STEP: Patching the ResourceQuota @ 11/16/24 12:52:34.427
  STEP: Deleting a Collection of ResourceQuotas @ 11/16/24 12:52:34.433
  STEP: Verifying the deleted ResourceQuota @ 11/16/24 12:52:34.445
  I1116 12:52:34.449610 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5004" for this suite. @ 11/16/24 12:52:34.454
• [0.072 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 11/16/24 12:52:34.463
  I1116 12:52:34.463317 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename security-context-test @ 11/16/24 12:52:34.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:52:34.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:52:34.482
  I1116 12:52:38.531319 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8844" for this suite. @ 11/16/24 12:52:38.536
• [4.080 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 11/16/24 12:52:38.543
  I1116 12:52:38.543682 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename security-context @ 11/16/24 12:52:38.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:52:38.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:52:38.569
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/16/24 12:52:38.571
  STEP: Saw pod success @ 11/16/24 12:52:40.592
  I1116 12:52:40.597209 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod security-context-69f149e3-aa01-400d-8eeb-3d683d807cf2 container test-container: <nil>
  STEP: delete the pod @ 11/16/24 12:52:40.606
  I1116 12:52:40.624092 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9680" for this suite. @ 11/16/24 12:52:40.628
• [2.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 11/16/24 12:52:40.638
  I1116 12:52:40.638789 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename var-expansion @ 11/16/24 12:52:40.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:52:40.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:52:40.656
  STEP: creating the pod with failed condition @ 11/16/24 12:52:40.659
  STEP: updating the pod @ 11/16/24 12:54:40.67
  I1116 12:54:41.185607 18 pod_client.go:173] Successfully updated pod "var-expansion-64f5c94c-1ee7-4990-963f-455da244d66a"
  STEP: waiting for pod running @ 11/16/24 12:54:41.185
  STEP: deleting the pod gracefully @ 11/16/24 12:54:43.195
  I1116 12:54:43.195948 18 delete.go:62] Deleting pod "var-expansion-64f5c94c-1ee7-4990-963f-455da244d66a" in namespace "var-expansion-7366"
  I1116 12:54:43.206698 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-64f5c94c-1ee7-4990-963f-455da244d66a" to be fully deleted
  I1116 12:55:15.313615 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7366" for this suite. @ 11/16/24 12:55:15.317
• [154.689 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 11/16/24 12:55:15.328
  I1116 12:55:15.328112 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 12:55:15.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:55:15.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:55:15.348
  STEP: creating service in namespace services-5867 @ 11/16/24 12:55:15.35
  STEP: creating service affinity-clusterip-transition in namespace services-5867 @ 11/16/24 12:55:15.35
  STEP: creating replication controller affinity-clusterip-transition in namespace services-5867 @ 11/16/24 12:55:15.364
  I1116 12:55:15.370565      18 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-5867, replica count: 3
  I1116 12:55:18.420868      18 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1116 12:55:18.430583 18 resource.go:361] Creating new exec pod
  I1116 12:55:21.448257 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-5867 exec execpod-affinityvwkts -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1116 12:55:21.548765 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I1116 12:55:21.548813 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 12:55:21.548978 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-5867 exec execpod-affinityvwkts -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.37 80'
  I1116 12:55:21.640880 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.37 80\nConnection to 10.152.183.37 80 port [tcp/http] succeeded!\n"
  I1116 12:55:21.640932 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 12:55:21.659596 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-5867 exec execpod-affinityvwkts -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.37:80/ ; done'
  I1116 12:55:21.818543 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n"
  I1116 12:55:21.818592 18 builder.go:147] stdout: "\naffinity-clusterip-transition-d7nt5\naffinity-clusterip-transition-qvzdn\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-d7nt5\naffinity-clusterip-transition-d7nt5\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-d7nt5\naffinity-clusterip-transition-qvzdn\naffinity-clusterip-transition-qvzdn\naffinity-clusterip-transition-d7nt5\naffinity-clusterip-transition-qvzdn\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-d7nt5\naffinity-clusterip-transition-qvzdn\naffinity-clusterip-transition-d7nt5"
  I1116 12:55:21.818604 18 service.go:242] Received response from host: affinity-clusterip-transition-d7nt5
  I1116 12:55:21.818616 18 service.go:242] Received response from host: affinity-clusterip-transition-qvzdn
  I1116 12:55:21.818623 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.818629 18 service.go:242] Received response from host: affinity-clusterip-transition-d7nt5
  I1116 12:55:21.818635 18 service.go:242] Received response from host: affinity-clusterip-transition-d7nt5
  I1116 12:55:21.818641 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.818647 18 service.go:242] Received response from host: affinity-clusterip-transition-d7nt5
  I1116 12:55:21.818655 18 service.go:242] Received response from host: affinity-clusterip-transition-qvzdn
  I1116 12:55:21.818661 18 service.go:242] Received response from host: affinity-clusterip-transition-qvzdn
  I1116 12:55:21.818668 18 service.go:242] Received response from host: affinity-clusterip-transition-d7nt5
  I1116 12:55:21.818674 18 service.go:242] Received response from host: affinity-clusterip-transition-qvzdn
  I1116 12:55:21.818679 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.818685 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.818692 18 service.go:242] Received response from host: affinity-clusterip-transition-d7nt5
  I1116 12:55:21.818698 18 service.go:242] Received response from host: affinity-clusterip-transition-qvzdn
  I1116 12:55:21.818703 18 service.go:242] Received response from host: affinity-clusterip-transition-d7nt5
  I1116 12:55:21.831562 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-5867 exec execpod-affinityvwkts -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.37:80/ ; done'
  I1116 12:55:21.976417 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.37:80/\n"
  I1116 12:55:21.976468 18 builder.go:147] stdout: "\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56\naffinity-clusterip-transition-frx56"
  I1116 12:55:21.976482 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976491 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976497 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976504 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976511 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976516 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976525 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976531 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976537 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976544 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976550 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976561 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976567 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976572 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976578 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976583 18 service.go:242] Received response from host: affinity-clusterip-transition-frx56
  I1116 12:55:21.976726 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5867, will wait for the garbage collector to delete the pods @ 11/16/24 12:55:22.001
  I1116 12:55:22.065980 18 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 8.717505ms
  I1116 12:55:22.266778 18 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 200.793071ms
  I1116 12:55:25.291438 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5867" for this suite. @ 11/16/24 12:55:25.295
• [9.977 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 11/16/24 12:55:25.305
  I1116 12:55:25.305305 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename endpointslice @ 11/16/24 12:55:25.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:55:25.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:55:25.322
  I1116 12:55:27.381683 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9699" for this suite. @ 11/16/24 12:55:27.386
• [2.090 seconds]
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 11/16/24 12:55:27.395
  I1116 12:55:27.395321 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/16/24 12:55:27.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:55:27.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:55:27.412
  STEP: getting /apis @ 11/16/24 12:55:27.419
  STEP: getting /apis/admissionregistration.k8s.io @ 11/16/24 12:55:27.422
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 11/16/24 12:55:27.423
  STEP: creating @ 11/16/24 12:55:27.424
  STEP: getting @ 11/16/24 12:55:27.441
  STEP: listing @ 11/16/24 12:55:27.449
  STEP: watching @ 11/16/24 12:55:27.455
  I1116 12:55:27.455268 18 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 11/16/24 12:55:27.457
  STEP: updating @ 11/16/24 12:55:27.472
  I1116 12:55:27.520454 18 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  I1116 12:55:27.520491 18 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 11/16/24 12:55:27.52
  STEP: patching /status @ 11/16/24 12:55:27.524
  STEP: updating /status @ 11/16/24 12:55:27.536
  STEP: deleting @ 11/16/24 12:55:27.556
  STEP: deleting a collection @ 11/16/24 12:55:27.576
  I1116 12:55:27.600863 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5827" for this suite. @ 11/16/24 12:55:27.606
• [0.218 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 11/16/24 12:55:27.613
  I1116 12:55:27.613866 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 12:55:27.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:55:27.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:55:27.63
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 12:55:27.633
  STEP: Saw pod success @ 11/16/24 12:55:31.661
  I1116 12:55:31.665916 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downwardapi-volume-07127ce6-e57f-474b-85db-bdb12fa6aa21 container client-container: <nil>
  STEP: delete the pod @ 11/16/24 12:55:31.679
  I1116 12:55:31.694688 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4960" for this suite. @ 11/16/24 12:55:31.699
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 11/16/24 12:55:31.707
  I1116 12:55:31.707539 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename containers @ 11/16/24 12:55:31.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:55:31.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:55:31.729
  STEP: Creating a pod to test override arguments @ 11/16/24 12:55:31.732
  STEP: Saw pod success @ 11/16/24 12:55:33.754
  I1116 12:55:33.758569 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod client-containers-4dca57c1-e27e-433d-a4a3-93df376732fa container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 12:55:33.767
  I1116 12:55:33.788888 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4923" for this suite. @ 11/16/24 12:55:33.793
• [2.093 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 11/16/24 12:55:33.8
  I1116 12:55:33.800381 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename job @ 11/16/24 12:55:33.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:55:33.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:55:33.818
  STEP: Creating a suspended job @ 11/16/24 12:55:33.826
  STEP: Patching the Job @ 11/16/24 12:55:33.834
  STEP: Watching for Job to be patched @ 11/16/24 12:55:33.853
  I1116 12:55:33.854697 18 job.go:1330] Event ADDED observed for Job e2e-jlz9l in namespace job-5738 with labels: map[e2e-job-label:e2e-jlz9l] and annotations: map[]
  I1116 12:55:33.854721 18 job.go:1330] Event MODIFIED observed for Job e2e-jlz9l in namespace job-5738 with labels: map[e2e-job-label:e2e-jlz9l] and annotations: map[]
  I1116 12:55:33.854732 18 job.go:1333] Event MODIFIED found for Job e2e-jlz9l in namespace job-5738 with labels: map[e2e-jlz9l:patched e2e-job-label:e2e-jlz9l] and annotations: map[]
  STEP: Updating the job @ 11/16/24 12:55:33.854
  STEP: Watching for Job to be updated @ 11/16/24 12:55:33.864
  I1116 12:55:33.866132 18 job.go:1333] Event MODIFIED found for Job e2e-jlz9l in namespace job-5738 with labels: map[e2e-jlz9l:patched e2e-job-label:e2e-jlz9l] and annotations: map[updated:true]
  I1116 12:55:33.866218 18 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 11/16/24 12:55:33.866
  I1116 12:55:33.870579 18 job.go:1233] Job: e2e-jlz9l as labels: map[e2e-jlz9l:patched e2e-job-label:e2e-jlz9l]
  STEP: Waiting for job to complete @ 11/16/24 12:55:33.87
  STEP: Delete a job collection with a labelselector @ 11/16/24 12:55:43.884
  STEP: Watching for Job to be deleted @ 11/16/24 12:55:43.895
  I1116 12:55:43.897086 18 job.go:1330] Event MODIFIED observed for Job e2e-jlz9l in namespace job-5738 with labels: map[e2e-jlz9l:patched e2e-job-label:e2e-jlz9l] and annotations: map[updated:true]
  I1116 12:55:43.897110 18 job.go:1330] Event MODIFIED observed for Job e2e-jlz9l in namespace job-5738 with labels: map[e2e-jlz9l:patched e2e-job-label:e2e-jlz9l] and annotations: map[updated:true]
  I1116 12:55:43.897121 18 job.go:1330] Event MODIFIED observed for Job e2e-jlz9l in namespace job-5738 with labels: map[e2e-jlz9l:patched e2e-job-label:e2e-jlz9l] and annotations: map[updated:true]
  I1116 12:55:43.897179 18 job.go:1330] Event MODIFIED observed for Job e2e-jlz9l in namespace job-5738 with labels: map[e2e-jlz9l:patched e2e-job-label:e2e-jlz9l] and annotations: map[updated:true]
  I1116 12:55:43.897211 18 job.go:1330] Event MODIFIED observed for Job e2e-jlz9l in namespace job-5738 with labels: map[e2e-jlz9l:patched e2e-job-label:e2e-jlz9l] and annotations: map[updated:true]
  I1116 12:55:43.897222 18 job.go:1330] Event MODIFIED observed for Job e2e-jlz9l in namespace job-5738 with labels: map[e2e-jlz9l:patched e2e-job-label:e2e-jlz9l] and annotations: map[updated:true]
  I1116 12:55:43.897379 18 job.go:1330] Event MODIFIED observed for Job e2e-jlz9l in namespace job-5738 with labels: map[e2e-jlz9l:patched e2e-job-label:e2e-jlz9l] and annotations: map[updated:true]
  I1116 12:55:43.897392 18 job.go:1330] Event MODIFIED observed for Job e2e-jlz9l in namespace job-5738 with labels: map[e2e-jlz9l:patched e2e-job-label:e2e-jlz9l] and annotations: map[updated:true]
  I1116 12:55:43.897483 18 job.go:1330] Event MODIFIED observed for Job e2e-jlz9l in namespace job-5738 with labels: map[e2e-jlz9l:patched e2e-job-label:e2e-jlz9l] and annotations: map[updated:true]
  I1116 12:55:43.897497 18 job.go:1333] Event DELETED found for Job e2e-jlz9l in namespace job-5738 with labels: map[e2e-jlz9l:patched e2e-job-label:e2e-jlz9l] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 11/16/24 12:55:43.897
  I1116 12:55:43.901277 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5738" for this suite. @ 11/16/24 12:55:43.906
• [10.122 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 11/16/24 12:55:43.923
  I1116 12:55:43.923083 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 12:55:43.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:55:43.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:55:43.941
  STEP: Setting up server cert @ 11/16/24 12:55:43.966
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 12:55:44.145
  STEP: Deploying the webhook pod @ 11/16/24 12:55:44.156
  STEP: Wait for the deployment to be ready @ 11/16/24 12:55:44.172
  I1116 12:55:44.179839 18 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/16/24 12:55:46.196
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 12:55:46.209
  I1116 12:55:47.209202 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1116 12:55:47.219990 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 11/16/24 12:55:47.732
  STEP: Creating a custom resource that should be denied by the webhook @ 11/16/24 12:55:47.747
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 11/16/24 12:55:49.763
  STEP: Updating the custom resource with disallowed data should be denied @ 11/16/24 12:55:49.772
  STEP: Deleting the custom resource should be denied @ 11/16/24 12:55:49.783
  STEP: Remove the offending key and value from the custom resource data @ 11/16/24 12:55:49.793
  STEP: Deleting the updated custom resource should be successful @ 11/16/24 12:55:49.805
  I1116 12:55:50.388780 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6732" for this suite. @ 11/16/24 12:55:50.395
  STEP: Destroying namespace "webhook-markers-2747" for this suite. @ 11/16/24 12:55:50.405
• [6.494 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 11/16/24 12:55:50.417
  I1116 12:55:50.417652 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename namespaces @ 11/16/24 12:55:50.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:55:50.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:55:50.443
  STEP: Read namespace status @ 11/16/24 12:55:50.446
  I1116 12:55:50.451217 18 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 11/16/24 12:55:50.451
  I1116 12:55:50.458649 18 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 11/16/24 12:55:50.458
  I1116 12:55:50.469961 18 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1116 12:55:50.470062 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2834" for this suite. @ 11/16/24 12:55:50.474
• [0.069 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 11/16/24 12:55:50.486
  I1116 12:55:50.486613 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename subpath @ 11/16/24 12:55:50.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:55:50.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:55:50.517
  STEP: Setting up data @ 11/16/24 12:55:50.521
  STEP: Creating pod pod-subpath-test-downwardapi-jsvm @ 11/16/24 12:55:50.536
  STEP: Creating a pod to test atomic-volume-subpath @ 11/16/24 12:55:50.536
  STEP: Saw pod success @ 11/16/24 12:56:14.641
  I1116 12:56:14.645888 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-subpath-test-downwardapi-jsvm container test-container-subpath-downwardapi-jsvm: <nil>
  STEP: delete the pod @ 11/16/24 12:56:14.656
  STEP: Deleting pod pod-subpath-test-downwardapi-jsvm @ 11/16/24 12:56:14.673
  I1116 12:56:14.673982 18 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-jsvm" in namespace "subpath-7879"
  I1116 12:56:14.678511 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7879" for this suite. @ 11/16/24 12:56:14.682
• [24.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 11/16/24 12:56:14.693
  I1116 12:56:14.693622 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename var-expansion @ 11/16/24 12:56:14.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:56:14.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:56:14.714
  STEP: creating the pod @ 11/16/24 12:56:14.717
  STEP: waiting for pod running @ 11/16/24 12:56:14.727
  STEP: creating a file in subpath @ 11/16/24 12:56:16.739
  I1116 12:56:16.743231 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3584 PodName:var-expansion-cb6348cc-07d0-46f5-af1a-c6e2dc71213a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:56:16.743259 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:56:16.743726 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:56:16.743767 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-3584/pods/var-expansion-cb6348cc-07d0-46f5-af1a-c6e2dc71213a/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 11/16/24 12:56:16.78
  I1116 12:56:16.785955 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3584 PodName:var-expansion-cb6348cc-07d0-46f5-af1a-c6e2dc71213a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:56:16.785983 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:56:16.786453 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:56:16.786500 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-3584/pods/var-expansion-cb6348cc-07d0-46f5-af1a-c6e2dc71213a/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 11/16/24 12:56:16.828
  I1116 12:56:17.347055 18 pod_client.go:173] Successfully updated pod "var-expansion-cb6348cc-07d0-46f5-af1a-c6e2dc71213a"
  STEP: waiting for annotated pod running @ 11/16/24 12:56:17.347
  STEP: deleting the pod gracefully @ 11/16/24 12:56:17.352
  I1116 12:56:17.352200 18 delete.go:62] Deleting pod "var-expansion-cb6348cc-07d0-46f5-af1a-c6e2dc71213a" in namespace "var-expansion-3584"
  I1116 12:56:17.363499 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-cb6348cc-07d0-46f5-af1a-c6e2dc71213a" to be fully deleted
  I1116 12:56:49.472302 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3584" for this suite. @ 11/16/24 12:56:49.477
• [34.793 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 11/16/24 12:56:49.486
  I1116 12:56:49.486828 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/16/24 12:56:49.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:56:49.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:56:49.507
  STEP: creating a target pod @ 11/16/24 12:56:49.51
  STEP: adding an ephemeral container @ 11/16/24 12:56:51.536
  STEP: checking pod container endpoints @ 11/16/24 12:56:53.558
  I1116 12:56:53.558190 18 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8019 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 12:56:53.558206 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 12:56:53.558674 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 12:56:53.558724 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-8019/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1116 12:56:53.596843 18 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 11/16/24 12:56:53.607
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 11/16/24 12:56:53.612
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 11/16/24 12:56:53.624
  I1116 12:56:53.629495 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8019" for this suite. @ 11/16/24 12:56:53.634
• [4.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 11/16/24 12:56:53.644
  I1116 12:56:53.644505 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 12:56:53.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:56:53.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:56:53.665
  STEP: creating service in namespace services-6629 @ 11/16/24 12:56:53.669
  STEP: creating service affinity-clusterip in namespace services-6629 @ 11/16/24 12:56:53.67
  STEP: creating replication controller affinity-clusterip in namespace services-6629 @ 11/16/24 12:56:53.682
  I1116 12:56:53.694544      18 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-6629, replica count: 3
  I1116 12:56:56.745211      18 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1116 12:56:56.754862 18 resource.go:361] Creating new exec pod
  I1116 12:56:59.769844 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-6629 exec execpod-affinityntspj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1116 12:56:59.858741 18 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I1116 12:56:59.858786 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 12:56:59.858998 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-6629 exec execpod-affinityntspj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.35 80'
  I1116 12:56:59.962491 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.35 80\nConnection to 10.152.183.35 80 port [tcp/http] succeeded!\n"
  I1116 12:56:59.962542 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 12:56:59.962612 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-6629 exec execpod-affinityntspj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.35:80/ ; done'
  I1116 12:57:00.138894 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.35:80/\n"
  I1116 12:57:00.138956 18 builder.go:147] stdout: "\naffinity-clusterip-2wr8x\naffinity-clusterip-2wr8x\naffinity-clusterip-2wr8x\naffinity-clusterip-2wr8x\naffinity-clusterip-2wr8x\naffinity-clusterip-2wr8x\naffinity-clusterip-2wr8x\naffinity-clusterip-2wr8x\naffinity-clusterip-2wr8x\naffinity-clusterip-2wr8x\naffinity-clusterip-2wr8x\naffinity-clusterip-2wr8x\naffinity-clusterip-2wr8x\naffinity-clusterip-2wr8x\naffinity-clusterip-2wr8x\naffinity-clusterip-2wr8x"
  I1116 12:57:00.138981 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.138989 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.138995 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.139003 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.139010 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.139016 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.139025 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.139030 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.139062 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.139069 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.139074 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.139079 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.139085 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.139091 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.139096 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.139102 18 service.go:242] Received response from host: affinity-clusterip-2wr8x
  I1116 12:57:00.139276 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-6629, will wait for the garbage collector to delete the pods @ 11/16/24 12:57:00.154
  I1116 12:57:00.221345 18 resources.go:139] Deleting ReplicationController affinity-clusterip took: 10.712052ms
  I1116 12:57:00.321893 18 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.544571ms
  I1116 12:57:03.447143 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6629" for this suite. @ 11/16/24 12:57:03.452
• [9.816 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 11/16/24 12:57:03.46
  I1116 12:57:03.461011 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename var-expansion @ 11/16/24 12:57:03.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:57:03.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:57:03.498
  STEP: Creating a pod to test substitution in container's args @ 11/16/24 12:57:03.502
  STEP: Saw pod success @ 11/16/24 12:57:07.539
  I1116 12:57:07.543025 18 output.go:196] Trying to get logs from node ip-172-31-72-246 pod var-expansion-dbaf0ae9-ae30-4116-8146-bd07b70c0d9a container dapi-container: <nil>
  STEP: delete the pod @ 11/16/24 12:57:07.561
  I1116 12:57:07.582730 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9662" for this suite. @ 11/16/24 12:57:07.586
• [4.135 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 11/16/24 12:57:07.596
  I1116 12:57:07.596319 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename statefulset @ 11/16/24 12:57:07.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:57:07.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:57:07.616
  STEP: Creating service test in namespace statefulset-9744 @ 11/16/24 12:57:07.618
  STEP: Creating statefulset ss in namespace statefulset-9744 @ 11/16/24 12:57:07.706
  I1116 12:57:07.719245 18 wait.go:40] Found 0 stateful pods, waiting for 1
  I1116 12:57:17.720322 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 11/16/24 12:57:17.729
  STEP: Getting /status @ 11/16/24 12:57:17.736
  I1116 12:57:17.741073 18 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 11/16/24 12:57:17.741
  I1116 12:57:17.752953 18 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 11/16/24 12:57:17.752
  I1116 12:57:17.754418 18 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I1116 12:57:17.754440 18 statefulset.go:1111] Found Statefulset ss in namespace statefulset-9744 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1116 12:57:17.754449 18 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 11/16/24 12:57:17.754
  I1116 12:57:17.754539 18 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1116 12:57:17.761241 18 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 11/16/24 12:57:17.761
  I1116 12:57:17.762664 18 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I1116 12:57:17.762715 18 statefulset.go:138] Deleting all statefulset in ns statefulset-9744
  I1116 12:57:17.766800 18 rest.go:150] Scaling statefulset ss to 0
  I1116 12:57:27.782272 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1116 12:57:27.787289 18 rest.go:88] Deleting statefulset ss
  I1116 12:57:27.803383 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9744" for this suite. @ 11/16/24 12:57:27.808
• [20.219 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 11/16/24 12:57:27.815
  I1116 12:57:27.815840 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-runtime @ 11/16/24 12:57:27.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:57:27.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:57:27.836
  STEP: create the container @ 11/16/24 12:57:27.838
  W1116 12:57:27.849982      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/16/24 12:57:27.85
  STEP: get the container status @ 11/16/24 12:57:30.872
  STEP: the container should be terminated @ 11/16/24 12:57:30.877
  STEP: the termination message should be set @ 11/16/24 12:57:30.877
  I1116 12:57:30.877313 18 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/16/24 12:57:30.877
  I1116 12:57:30.898838 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8444" for this suite. @ 11/16/24 12:57:30.902
• [3.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 11/16/24 12:57:30.913
  I1116 12:57:30.913770 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename resourcequota @ 11/16/24 12:57:30.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:57:30.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:57:30.93
  STEP: Creating a ResourceQuota @ 11/16/24 12:57:30.933
  STEP: Getting a ResourceQuota @ 11/16/24 12:57:30.939
  STEP: Updating a ResourceQuota @ 11/16/24 12:57:30.944
  STEP: Verifying a ResourceQuota was modified @ 11/16/24 12:57:30.95
  STEP: Deleting a ResourceQuota @ 11/16/24 12:57:30.956
  STEP: Verifying the deleted ResourceQuota @ 11/16/24 12:57:30.963
  I1116 12:57:30.967184 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2718" for this suite. @ 11/16/24 12:57:30.971
• [0.066 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 11/16/24 12:57:30.979
  I1116 12:57:30.979996 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename field-validation @ 11/16/24 12:57:30.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:57:30.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:57:31.001
  STEP: apply creating a deployment @ 11/16/24 12:57:31.003
  I1116 12:57:31.023366 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9052" for this suite. @ 11/16/24 12:57:31.028
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 11/16/24 12:57:31.035
  I1116 12:57:31.035796 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename resourcequota @ 11/16/24 12:57:31.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:57:31.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:57:31.055
  STEP: Counting existing ResourceQuota @ 11/16/24 12:57:31.057
  STEP: Creating a ResourceQuota @ 11/16/24 12:57:36.061
  STEP: Ensuring resource quota status is calculated @ 11/16/24 12:57:36.068
  STEP: Creating a Service @ 11/16/24 12:57:38.075
  STEP: Creating a NodePort Service @ 11/16/24 12:57:38.097
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 11/16/24 12:57:38.129
  STEP: Ensuring resource quota status captures service creation @ 11/16/24 12:57:38.156
  STEP: Deleting Services @ 11/16/24 12:57:40.163
  STEP: Ensuring resource quota status released usage @ 11/16/24 12:57:40.212
  I1116 12:57:42.220171 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2302" for this suite. @ 11/16/24 12:57:42.224
• [11.198 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 11/16/24 12:57:42.234
  I1116 12:57:42.234106 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename endpointslice @ 11/16/24 12:57:42.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:57:42.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:57:42.254
  STEP: referencing a single matching pod @ 11/16/24 12:57:46.341
  STEP: referencing matching pods with named port @ 11/16/24 12:57:46.351
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 11/16/24 12:57:46.359
  STEP: recreating EndpointSlices after they've been deleted @ 11/16/24 12:57:46.366
  I1116 12:57:46.391662 18 endpointslice.go:938] EndpointSlice for Service endpointslice-317/example-named-port not found
  I1116 12:57:48.398268 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-317" for this suite. @ 11/16/24 12:57:48.403
• [6.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 11/16/24 12:57:48.413
  I1116 12:57:48.413309 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename configmap @ 11/16/24 12:57:48.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:57:48.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:57:48.433
  STEP: Creating configMap with name configmap-test-upd-dcfe3424-41c5-4331-90f7-b6ac979ec14c @ 11/16/24 12:57:48.439
  STEP: Creating the pod @ 11/16/24 12:57:48.444
  STEP: Updating configmap configmap-test-upd-dcfe3424-41c5-4331-90f7-b6ac979ec14c @ 11/16/24 12:57:50.479
  STEP: waiting to observe update in volume @ 11/16/24 12:57:50.486
  I1116 12:59:06.887722 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8722" for this suite. @ 11/16/24 12:59:06.893
• [78.490 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 11/16/24 12:59:06.903
  I1116 12:59:06.903451 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 12:59:06.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:59:06.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:59:06.923
  STEP: Setting up server cert @ 11/16/24 12:59:06.949
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 12:59:07.073
  STEP: Deploying the webhook pod @ 11/16/24 12:59:07.085
  STEP: Wait for the deployment to be ready @ 11/16/24 12:59:07.097
  I1116 12:59:07.107330 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/16/24 12:59:09.123
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 12:59:09.137
  I1116 12:59:10.137825 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1116 12:59:10.147974 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9220-crds.webhook.example.com via the AdmissionRegistration API @ 11/16/24 12:59:10.66
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/16/24 12:59:10.674
  I1116 12:59:13.284793 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5648" for this suite. @ 11/16/24 12:59:13.289
  STEP: Destroying namespace "webhook-markers-2664" for this suite. @ 11/16/24 12:59:13.298
• [6.404 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 11/16/24 12:59:13.307
  I1116 12:59:13.307298 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename crd-webhook @ 11/16/24 12:59:13.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:59:13.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:59:13.327
  STEP: Setting up server cert @ 11/16/24 12:59:13.33
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/16/24 12:59:13.615
  STEP: Deploying the custom resource conversion webhook pod @ 11/16/24 12:59:13.623
  STEP: Wait for the deployment to be ready @ 11/16/24 12:59:13.636
  I1116 12:59:13.643407 18 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/16/24 12:59:15.659
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 12:59:15.672
  I1116 12:59:16.673155 18 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1116 12:59:16.683633 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Creating a v1 custom resource @ 11/16/24 12:59:19.243
  STEP: v2 custom resource should be converted @ 11/16/24 12:59:19.249
  I1116 12:59:19.820877 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5284" for this suite. @ 11/16/24 12:59:19.827
• [6.530 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 11/16/24 12:59:19.837
  I1116 12:59:19.837095 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename apf @ 11/16/24 12:59:19.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:59:19.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:59:19.856
  STEP: getting /apis @ 11/16/24 12:59:19.858
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 11/16/24 12:59:19.862
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 11/16/24 12:59:19.863
  STEP: creating @ 11/16/24 12:59:19.866
  STEP: getting @ 11/16/24 12:59:19.887
  STEP: listing @ 11/16/24 12:59:19.89
  STEP: watching @ 11/16/24 12:59:19.897
  I1116 12:59:19.897764 18 flowcontrol.go:394] starting watch
  STEP: patching @ 11/16/24 12:59:19.899
  STEP: updating @ 11/16/24 12:59:19.904
  I1116 12:59:19.915816 18 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 11/16/24 12:59:19.915
  STEP: patching /status @ 11/16/24 12:59:19.919
  STEP: updating /status @ 11/16/24 12:59:19.926
  STEP: deleting @ 11/16/24 12:59:19.964
  STEP: deleting a collection @ 11/16/24 12:59:19.981
  I1116 12:59:20.010293 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-952" for this suite. @ 11/16/24 12:59:20.014
• [0.185 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 11/16/24 12:59:20.022
  I1116 12:59:20.022244 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-probe @ 11/16/24 12:59:20.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 12:59:20.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 12:59:20.042
  STEP: Creating pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277 @ 11/16/24 12:59:20.045
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/16/24 12:59:22.065
  I1116 12:59:22.071000 18 container_probe.go:1749] Initial restart count of pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb is 0
  I1116 12:59:22.073937 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:24.080210 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:26.086192 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:28.093339 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:30.099562 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:32.105581 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:34.110939 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:36.117315 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:38.124352 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:40.130580 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:42.137558 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:44.143780 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:46.150688 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:48.157782 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:50.163460 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:52.169023 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:54.174840 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:56.180611 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 12:59:58.186594 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:00.193294 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:02.198965 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:04.206780 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:06.212835 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:08.218943 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:10.226532 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:12.232907 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:14.239016 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:16.244525 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:18.250270 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:20.257864 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:22.263102 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:24.268483 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:26.274372 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:28.281284 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:30.287533 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:32.294630 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:34.300204 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:36.305710 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:38.311717 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:40.319067 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:42.325088 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:44.331076 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:46.337287 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:48.342684 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:50.349396 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:52.356949 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:54.362854 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:56.368855 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:00:58.375333 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:00.382613 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:02.389659 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:04.394423 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:06.401370 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:08.407117 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:10.414297 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:12.420828 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:14.428216 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:16.435022 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:18.440239 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:20.447216 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:22.454268 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:24.460385 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:26.465353 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:28.470947 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:30.477084 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:32.484096 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:34.490482 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:36.496462 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:38.502346 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:40.508734 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:42.514610 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:44.520889 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:46.527321 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:48.532538 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:50.538411 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:52.544704 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:54.549384 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:56.555320 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:01:58.562211 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:00.568916 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:02.574809 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:04.581186 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:06.587871 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:08.593128 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:10.599542 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:12.606524 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:14.612500 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:16.618965 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:18.627284 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:20.633411 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:22.639628 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:24.644772 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:26.649427 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:28.656187 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:30.663197 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:32.668977 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:34.674779 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:36.680843 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:38.687425 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:40.694349 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:42.699174 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:44.706553 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:46.712827 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:48.719168 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:50.726997 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:52.732368 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:54.739114 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:56.746086 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:02:58.752257 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:03:00.758093 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:03:02.763704 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:03:04.769776 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:03:06.774793 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:03:08.781583 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:03:10.787418 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:03:12.793276 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:03:14.800297 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:03:16.805217 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:03:18.811365 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  I1116 13:03:20.816954 18 container_probe.go:1759] Get pod liveness-91529ad8-25ab-472f-ac49-6335cca05feb in namespace container-probe-277
  STEP: deleting the pod @ 11/16/24 13:03:22.817
  I1116 13:03:22.836309 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-277" for this suite. @ 11/16/24 13:03:22.841
• [242.827 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 11/16/24 13:03:22.849
  I1116 13:03:22.849181 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:03:22.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:03:22.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:03:22.877
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 13:03:22.879
  STEP: Saw pod success @ 11/16/24 13:03:26.91
  I1116 13:03:26.916161 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downwardapi-volume-083d473d-bdff-4cd0-b6e0-f47b5eab292d container client-container: <nil>
  STEP: delete the pod @ 11/16/24 13:03:26.935
  I1116 13:03:26.954964 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1838" for this suite. @ 11/16/24 13:03:26.959
• [4.118 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 11/16/24 13:03:26.967
  I1116 13:03:26.967309 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 13:03:26.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:03:26.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:03:26.989
  STEP: Setting up server cert @ 11/16/24 13:03:27.016
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 13:03:27.284
  STEP: Deploying the webhook pod @ 11/16/24 13:03:27.295
  STEP: Wait for the deployment to be ready @ 11/16/24 13:03:27.311
  I1116 13:03:27.325341 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/16/24 13:03:29.341
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 13:03:29.353
  I1116 13:03:30.354570 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 11/16/24 13:03:30.365
  STEP: create the configmap with a random name @ 11/16/24 13:03:30.387
  STEP: verify the configmap is mutated @ 11/16/24 13:03:30.405
  STEP: create the configmap with 'skip-me' name @ 11/16/24 13:03:30.405
  I1116 13:03:30.484011 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1156" for this suite. @ 11/16/24 13:03:30.49
  STEP: Destroying namespace "webhook-markers-5721" for this suite. @ 11/16/24 13:03:30.498
• [3.539 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 11/16/24 13:03:30.506
  I1116 13:03:30.506708 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:03:30.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:03:30.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:03:30.525
  STEP: Creating projection with secret that has name projected-secret-test-8816d8da-2383-41db-b79e-b67b7fc74da0 @ 11/16/24 13:03:30.528
  STEP: Creating a pod to test consume secrets @ 11/16/24 13:03:30.532
  STEP: Saw pod success @ 11/16/24 13:03:34.558
  I1116 13:03:34.563388 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-projected-secrets-407dace4-d217-475c-b5c9-8b0a618a1dd2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 13:03:34.571
  I1116 13:03:34.593918 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9167" for this suite. @ 11/16/24 13:03:34.599
• [4.101 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 11/16/24 13:03:34.607
  I1116 13:03:34.607881 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/16/24 13:03:34.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:03:34.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:03:34.627
  STEP: Cleaning up the secret @ 11/16/24 13:03:36.663
  STEP: Cleaning up the configmap @ 11/16/24 13:03:36.671
  STEP: Cleaning up the pod @ 11/16/24 13:03:36.678
  I1116 13:03:36.696396 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2047" for this suite. @ 11/16/24 13:03:36.703
• [2.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 11/16/24 13:03:36.713
  I1116 13:03:36.713472 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 13:03:36.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:03:36.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:03:36.733
  I1116 13:03:36.737744 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-2618 version'
  I1116 13:03:36.807321 18 builder.go:146] stderr: ""
  I1116 13:03:36.807472 18 builder.go:147] stdout: "Client Version: v1.31.2\nKustomize Version: v5.4.2\nServer Version: v1.31.2\n"
  I1116 13:03:36.807801 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2618" for this suite. @ 11/16/24 13:03:36.812
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 11/16/24 13:03:36.82
  I1116 13:03:36.820994 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 13:03:36.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:03:36.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:03:36.843
  STEP: Setting up server cert @ 11/16/24 13:03:36.871
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 13:03:37.328
  STEP: Deploying the webhook pod @ 11/16/24 13:03:37.335
  STEP: Wait for the deployment to be ready @ 11/16/24 13:03:37.351
  I1116 13:03:37.358750 18 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/16/24 13:03:39.374
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 13:03:39.387
  I1116 13:03:40.387299 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 11/16/24 13:03:40.476
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/16/24 13:03:40.508
  STEP: Deleting the collection of validation webhooks @ 11/16/24 13:03:40.535
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/16/24 13:03:40.602
  I1116 13:03:40.659898 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2532" for this suite. @ 11/16/24 13:03:40.665
  STEP: Destroying namespace "webhook-markers-6073" for this suite. @ 11/16/24 13:03:40.674
• [3.861 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 11/16/24 13:03:40.681
  I1116 13:03:40.681993 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename deployment @ 11/16/24 13:03:40.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:03:40.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:03:40.7
  STEP: creating a Deployment @ 11/16/24 13:03:40.706
  STEP: waiting for Deployment to be created @ 11/16/24 13:03:40.713
  STEP: waiting for all Replicas to be Ready @ 11/16/24 13:03:40.714
  I1116 13:03:40.716025 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1116 13:03:40.716059 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1116 13:03:40.728356 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1116 13:03:40.728376 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1116 13:03:40.743828 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1116 13:03:40.743846 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1116 13:03:40.766824 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1116 13:03:40.766847 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1116 13:03:41.441172 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1116 13:03:41.441208 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1116 13:03:42.008967 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 11/16/24 13:03:42.009
  I1116 13:03:42.027561 18 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 11/16/24 13:03:42.027
  I1116 13:03:42.029836 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0
  I1116 13:03:42.029855 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0
  I1116 13:03:42.029868 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0
  I1116 13:03:42.029874 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0
  I1116 13:03:42.029881 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0
  I1116 13:03:42.029886 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0
  I1116 13:03:42.030015 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0
  I1116 13:03:42.030028 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 0
  I1116 13:03:42.030057 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1
  I1116 13:03:42.030063 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1
  I1116 13:03:42.030071 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2
  I1116 13:03:42.030077 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2
  I1116 13:03:42.030170 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2
  I1116 13:03:42.030180 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2
  I1116 13:03:42.051447 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2
  I1116 13:03:42.051496 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2
  I1116 13:03:42.078346 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2
  I1116 13:03:42.078363 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2
  I1116 13:03:42.098889 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1
  I1116 13:03:42.098911 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1
  I1116 13:03:42.120217 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1
  I1116 13:03:42.120241 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1
  I1116 13:03:43.477852 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2
  I1116 13:03:43.477901 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2
  I1116 13:03:43.510051 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1
  STEP: listing Deployments @ 11/16/24 13:03:43.51
  I1116 13:03:43.514335 18 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 11/16/24 13:03:43.514
  I1116 13:03:43.528569 18 deployment.go:360] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 11/16/24 13:03:43.528
  I1116 13:03:43.536751 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1116 13:03:43.545153 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1116 13:03:43.582322 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1116 13:03:43.597420 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1116 13:03:43.611764 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1116 13:03:44.473004 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1116 13:03:44.510008 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1116 13:03:44.526635 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1116 13:03:46.050947 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 11/16/24 13:03:46.085
  STEP: fetching the DeploymentStatus @ 11/16/24 13:03:46.094
  I1116 13:03:46.103000 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1
  I1116 13:03:46.103090 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1
  I1116 13:03:46.103102 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1
  I1116 13:03:46.103183 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1
  I1116 13:03:46.103195 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 1
  I1116 13:03:46.103202 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2
  I1116 13:03:46.103331 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2
  I1116 13:03:46.103342 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 2
  I1116 13:03:46.103348 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-7907 with ReadyReplicas 3
  STEP: deleting the Deployment @ 11/16/24 13:03:46.103
  I1116 13:03:46.116463 18 deployment.go:475] observed event type MODIFIED
  I1116 13:03:46.116488 18 deployment.go:475] observed event type MODIFIED
  I1116 13:03:46.116496 18 deployment.go:475] observed event type MODIFIED
  I1116 13:03:46.116607 18 deployment.go:475] observed event type MODIFIED
  I1116 13:03:46.116661 18 deployment.go:475] observed event type MODIFIED
  I1116 13:03:46.116670 18 deployment.go:475] observed event type MODIFIED
  I1116 13:03:46.116721 18 deployment.go:475] observed event type MODIFIED
  I1116 13:03:46.116774 18 deployment.go:475] observed event type MODIFIED
  I1116 13:03:46.116844 18 deployment.go:475] observed event type MODIFIED
  I1116 13:03:46.116961 18 deployment.go:475] observed event type MODIFIED
  I1116 13:03:46.116976 18 deployment.go:475] observed event type MODIFIED
  I1116 13:03:46.116995 18 deployment.go:475] observed event type MODIFIED
  I1116 13:03:46.121288 18 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I1116 13:03:46.126404 18 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7907",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "befd1464-4d42-40a3-a4ad-ffe316fac712",
      ResourceVersion: (string) (len=5) "22690",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359023,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "30213462-faed-48c4-a84c-b461bc364157",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 30 32 31  33 34 36 32 2d 66 61 65  |":\"30213462-fae|
              00000130  64 2d 34 38 63 34 2d 61  38 34 63 2d 62 34 36 31  |d-48c4-a84c-b461|
              00000140  62 63 33 36 34 31 35 37  5c 22 7d 22 3a 7b 7d 7d  |bc364157\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1116 13:03:46.131247 18 deployment.go:669] pod: "test-deployment-6c86c7f765-7qzlq":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-7qzlq",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-7907",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4395e161-91fe-498e-a809-5aac70ffea6c",
      ResourceVersion: (string) (len=5) "22689",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "befd1464-4d42-40a3-a4ad-ffe316fac712",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 65 66 64 31 34 36 34  |uid\":\"befd1464|
              000000a0  2d 34 64 34 32 2d 34 30  61 33 2d 61 34 61 64 2d  |-4d42-40a3-a4ad-|
              000000b0  66 66 65 33 31 36 66 61  63 37 31 32 5c 22 7d 22  |ffe316fac712\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  36 2e 31 31 32 5c 22 7d  |2.168.216.112\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p2c6d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p2c6d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-246",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359025,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359025,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359025,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.246",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.246"
        }
      },
      PodIP: (string) (len=15) "192.168.216.112",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.216.112"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867359025,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://37335c6598f97bad47b1c7c20feca56b4d5817be2ddf7a9bbee5108c00e0f315",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p2c6d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1116 13:03:46.132663 18 deployment.go:669] pod: "test-deployment-6c86c7f765-vrn2z":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-vrn2z",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-7907",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "348d8f93-3ecc-4c3a-9b04-ae40350865d0",
      ResourceVersion: (string) (len=5) "22631",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359023,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "befd1464-4d42-40a3-a4ad-ffe316fac712",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 65 66 64 31 34 36 34  |uid\":\"befd1464|
              000000a0  2d 34 64 34 32 2d 34 30  61 33 2d 61 34 61 64 2d  |-4d42-40a3-a4ad-|
              000000b0  66 66 65 33 31 36 66 61  63 37 31 32 5c 22 7d 22  |ffe316fac712\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 39 30 5c 22 7d 22  |2.168.82.190\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n7fx4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n7fx4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) (len=14) "192.168.82.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359023,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867359024,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://df322d62529c65caf42c654e05565a0d086776a7ce84ef8cf711e21d7a2231c5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n7fx4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1116 13:03:46.133836 18 deployment.go:657] ReplicaSet "test-deployment-6ccdbb4d8c":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7907",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7e8d61e-8414-4cbb-91d1-2d567320deb7",
      ResourceVersion: (string) (len=5) "22698",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359022,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "30213462-faed-48c4-a84c-b461bc364157",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 30 32 31  33 34 36 32 2d 66 61 65  |":\"30213462-fae|
              00000130  64 2d 34 38 63 34 2d 61  38 34 63 2d 62 34 36 31  |d-48c4-a84c-b461|
              00000140  62 63 33 36 34 31 35 37  5c 22 7d 22 3a 7b 7d 7d  |bc364157\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1116 13:03:46.138942 18 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-kvfs2":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-kvfs2",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=15) "deployment-7907",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "368368dc-0c98-4d7d-a72f-0c13260c9181",
      ResourceVersion: (string) (len=5) "22694",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359022,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359028,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "b7e8d61e-8414-4cbb-91d1-2d567320deb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 37 65 38 64 36 31 65  |uid\":\"b7e8d61e|
              000000a0  2d 38 34 31 34 2d 34 63  62 62 2d 39 31 64 31 2d  |-8414-4cbb-91d1-|
              000000b0  32 64 35 36 37 33 32 30  64 65 62 37 5c 22 7d 22  |2d567320deb7\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 38 38 5c 22 7d 22  |2.168.82.188\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jpkv2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jpkv2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) (len=14) "192.168.82.188",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.188"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359022,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867359022,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://e5f0f3cd45f31c59be9ba3819d9c247d4d325d7122316a094f6c0b920b70c5fb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jpkv2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1116 13:03:46.141497 18 deployment.go:657] ReplicaSet "test-deployment-77bdf6fb4b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-77bdf6fb4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7907",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98bf9fce-5e87-4d11-95d0-c34a9138c309",
      ResourceVersion: (string) (len=5) "22587",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "30213462-faed-48c4-a84c-b461bc364157",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 30 32 31  33 34 36 32 2d 66 61 65  |":\"30213462-fae|
              00000130  64 2d 34 38 63 34 2d 61  38 34 63 2d 62 34 36 31  |d-48c4-a84c-b461|
              00000140  62 63 33 36 34 31 35 37  5c 22 7d 22 3a 7b 7d 7d  |bc364157\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1116 13:03:46.147002 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7907" for this suite. @ 11/16/24 13:03:46.152
• [5.478 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 11/16/24 13:03:46.16
  I1116 13:03:46.160056 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename sched-preemption @ 11/16/24 13:03:46.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:03:46.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:03:46.179
  I1116 13:03:46.198481 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1116 13:04:46.203546 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 11/16/24 13:04:46.208
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 11/16/24 13:04:46.219
  I1116 13:04:46.232809 18 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 11/16/24 13:04:46.232
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 11/16/24 13:04:48.242
  I1116 13:04:48.250392 18 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 11/16/24 13:04:48.25
  STEP: Verifying the pod has the pod disruption condition @ 11/16/24 13:04:50.262
  I1116 13:04:50.267653 18 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I1116 13:04:50.784891 18 pod_client.go:173] Successfully updated pod "victim-pod"
  I1116 13:04:50.829389 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3756" for this suite. @ 11/16/24 13:04:50.834
• [64.683 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 11/16/24 13:04:50.842
  I1116 13:04:50.842773 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename deployment @ 11/16/24 13:04:50.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:04:50.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:04:50.863
  I1116 13:04:50.875908 18 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I1116 13:04:55.880964 18 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/16/24 13:04:55.881
  I1116 13:04:55.881031 18 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 11/16/24 13:04:55.891
  I1116 13:04:55.903127 18 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1980",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bdea3431-c757-48ea-b46e-dba7e70a8616",
      ResourceVersion: (string) (len=5) "22991",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1116 13:04:55.911422 18 deployment.go:39] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1980",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e0d6af3-d15b-4c6d-9139-c3e496be1977",
      ResourceVersion: (string) (len=5) "22993",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "bdea3431-c757-48ea-b46e-dba7e70a8616",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 64 65 61 33 34  33 31 2d 63 37 35 37 2d  |\"bdea3431-c757-|
              00000120  34 38 65 61 2d 62 34 36  65 2d 64 62 61 37 65 37  |48ea-b46e-dba7e7|
              00000130  30 61 38 36 31 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0a8616\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1116 13:04:55.911836 18 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I1116 13:04:55.912055 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1980",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb3e0e68-5377-4dc0-a5e5-ae81fe94e0b6",
      ResourceVersion: (string) (len=5) "22992",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "bdea3431-c757-48ea-b46e-dba7e70a8616",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 62 64 65 61 33 34 33  |"uid\":\"bdea343|
              00000040  31 2d 63 37 35 37 2d 34  38 65 61 2d 62 34 36 65  |1-c757-48ea-b46e|
              00000050  2d 64 62 61 37 65 37 30  61 38 36 31 36 5c 22 7d  |-dba7e70a8616\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1116 13:04:55.921498 18 deployment.go:67] Pod "test-cleanup-controller-g9gpt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-g9gpt",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-1980",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e3c6766-1b3a-46c4-8a75-1bd057e89990",
      ResourceVersion: (string) (len=5) "22977",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "bb3e0e68-5377-4dc0-a5e5-ae81fe94e0b6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  62 62 33 65 30 65 36 38  |uid\":\"bb3e0e68|
              00000080  2d 35 33 37 37 2d 34 64  63 30 2d 61 35 65 35 2d  |-5377-4dc0-a5e5-|
              00000090  61 65 38 31 66 65 39 34  65 30 62 36 5c 22 7d 22  |ae81fe94e0b6\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 38 39 5c 22 7d 22  |2.168.82.189\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r9cwb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r9cwb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) (len=14) "192.168.82.189",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.189"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867359091,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://12bde870924ef6acb205db367d90f8f22dab68a70edca90bea4a9a3b46db6b13",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r9cwb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:04:55.922463 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1980" for this suite. @ 11/16/24 13:04:55.929
• [5.096 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 11/16/24 13:04:55.939
  I1116 13:04:55.939087 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 13:04:55.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:04:55.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:04:55.972
  STEP: Creating a pod to test downward api env vars @ 11/16/24 13:04:55.974
  STEP: Saw pod success @ 11/16/24 13:05:00.005
  I1116 13:05:00.011089 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downward-api-900f3dd3-afb2-438b-873c-245b3e5eda4b container dapi-container: <nil>
  STEP: delete the pod @ 11/16/24 13:05:00.021
  I1116 13:05:00.038880 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-966" for this suite. @ 11/16/24 13:05:00.044
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 11/16/24 13:05:00.053
  I1116 13:05:00.053578 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/16/24 13:05:00.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:00.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:00.074
  I1116 13:05:00.077690 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 13:05:03.138064 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8814" for this suite. @ 11/16/24 13:05:03.142
• [3.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 11/16/24 13:05:03.152
  I1116 13:05:03.152269 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 13:05:03.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:03.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:03.17
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 13:05:03.172
  STEP: Saw pod success @ 11/16/24 13:05:07.202
  I1116 13:05:07.207783 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downwardapi-volume-3472f66b-131f-4072-8bd7-051b0732ad2a container client-container: <nil>
  STEP: delete the pod @ 11/16/24 13:05:07.215
  I1116 13:05:07.237308 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-860" for this suite. @ 11/16/24 13:05:07.242
• [4.099 seconds]
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 11/16/24 13:05:07.25
  I1116 13:05:07.250929 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename security-context-test @ 11/16/24 13:05:07.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:07.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:07.271
  I1116 13:05:11.302905 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5845" for this suite. @ 11/16/24 13:05:11.307
• [4.065 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 11/16/24 13:05:11.316
  I1116 13:05:11.316126 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename resourcequota @ 11/16/24 13:05:11.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:11.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:11.338
  STEP: Counting existing ResourceQuota @ 11/16/24 13:05:11.341
  STEP: Creating a ResourceQuota @ 11/16/24 13:05:16.347
  STEP: Ensuring resource quota status is calculated @ 11/16/24 13:05:16.354
  STEP: Creating a ReplicationController @ 11/16/24 13:05:18.36
  STEP: Ensuring resource quota status captures replication controller creation @ 11/16/24 13:05:18.375
  STEP: Deleting a ReplicationController @ 11/16/24 13:05:20.384
  STEP: Ensuring resource quota status released usage @ 11/16/24 13:05:20.397
  I1116 13:05:22.403023 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6410" for this suite. @ 11/16/24 13:05:22.407
• [11.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 11/16/24 13:05:22.416
  I1116 13:05:22.416420 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 13:05:22.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:22.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:22.437
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/16/24 13:05:22.44
  I1116 13:05:22.440100 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-3520 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1116 13:05:22.490617 18 builder.go:146] stderr: ""
  I1116 13:05:22.490640 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/16/24 13:05:22.49
  I1116 13:05:22.497967 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-3520 delete pods e2e-test-httpd-pod'
  I1116 13:05:23.665106 18 builder.go:146] stderr: ""
  I1116 13:05:23.665143 18 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1116 13:05:23.665286 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3520" for this suite. @ 11/16/24 13:05:23.67
• [1.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 11/16/24 13:05:23.68
  I1116 13:05:23.680680 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename svcaccounts @ 11/16/24 13:05:23.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:23.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:23.698
  I1116 13:05:23.705132 18 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-1528"
  I1116 13:05:23.713908 18 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-1528"
  STEP: waiting for a new root ca configmap created @ 11/16/24 13:05:24.214
  I1116 13:05:24.219379 18 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-1528"
  I1116 13:05:24.225243 18 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-1528"
  STEP: waiting for the root ca configmap reconciled @ 11/16/24 13:05:24.725
  I1116 13:05:24.730938 18 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-1528"
  I1116 13:05:24.731093 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1528" for this suite. @ 11/16/24 13:05:24.735
• [1.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 11/16/24 13:05:24.743
  I1116 13:05:24.743889 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename runtimeclass @ 11/16/24 13:05:24.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:24.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:24.763
  I1116 13:05:24.773359 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-112" for this suite. @ 11/16/24 13:05:24.778
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 11/16/24 13:05:24.786
  I1116 13:05:24.786806 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:05:24.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:24.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:24.86
  STEP: Creating configMap with name projected-configmap-test-volume-a0fcf10c-653d-465f-a21a-94ae940ecc41 @ 11/16/24 13:05:24.863
  STEP: Creating a pod to test consume configMaps @ 11/16/24 13:05:24.868
  STEP: Saw pod success @ 11/16/24 13:05:26.89
  I1116 13:05:26.894953 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-projected-configmaps-efec613d-2add-45dd-afa1-da8e2e64ce23 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 13:05:26.904
  I1116 13:05:26.922536 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9611" for this suite. @ 11/16/24 13:05:26.926
• [2.147 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 11/16/24 13:05:26.934
  I1116 13:05:26.934275 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:05:26.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:26.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:26.951
  STEP: Creating projection with secret that has name projected-secret-test-b46b0dad-a3b8-46e9-8c67-679035c95e9e @ 11/16/24 13:05:26.953
  STEP: Creating a pod to test consume secrets @ 11/16/24 13:05:26.959
  STEP: Saw pod success @ 11/16/24 13:05:28.98
  I1116 13:05:28.983836 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-projected-secrets-25ade834-c6b3-418b-a4fb-f0395b466f52 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 13:05:28.992
  I1116 13:05:29.019736 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9613" for this suite. @ 11/16/24 13:05:29.025
• [2.099 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 11/16/24 13:05:29.033
  I1116 13:05:29.033257 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename job @ 11/16/24 13:05:29.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:29.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:29.051
  STEP: Creating a job @ 11/16/24 13:05:29.054
  STEP: Ensure pods equal to parallelism count is attached to the job @ 11/16/24 13:05:29.06
  STEP: patching /status @ 11/16/24 13:05:31.067
  STEP: updating /status @ 11/16/24 13:05:31.075
  STEP: get /status @ 11/16/24 13:05:31.085
  I1116 13:05:31.089707 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6025" for this suite. @ 11/16/24 13:05:31.093
• [2.069 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 11/16/24 13:05:31.102
  I1116 13:05:31.102570 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-runtime @ 11/16/24 13:05:31.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:31.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:31.12
  STEP: create the container @ 11/16/24 13:05:31.125
  W1116 13:05:31.135140      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/16/24 13:05:31.135
  STEP: get the container status @ 11/16/24 13:05:34.158
  STEP: the container should be terminated @ 11/16/24 13:05:34.163
  STEP: the termination message should be set @ 11/16/24 13:05:34.163
  I1116 13:05:34.163556 18 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 11/16/24 13:05:34.163
  I1116 13:05:34.181918 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5977" for this suite. @ 11/16/24 13:05:34.186
• [3.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 11/16/24 13:05:34.193
  I1116 13:05:34.193716 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename secrets @ 11/16/24 13:05:34.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:34.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:34.211
  STEP: Creating secret with name secret-test-map-1b686421-1c37-4333-b06e-1eee983b3edf @ 11/16/24 13:05:34.213
  STEP: Creating a pod to test consume secrets @ 11/16/24 13:05:34.219
  STEP: Saw pod success @ 11/16/24 13:05:38.249
  I1116 13:05:38.253877 18 output.go:196] Trying to get logs from node ip-172-31-72-246 pod pod-secrets-9c207b36-a913-498b-a3dc-3142b3886098 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 13:05:38.271
  I1116 13:05:38.289584 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9428" for this suite. @ 11/16/24 13:05:38.293
• [4.109 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 11/16/24 13:05:38.302
  I1116 13:05:38.302480 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:05:38.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:38.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:38.321
  STEP: Creating configMap with name projected-configmap-test-volume-804b9f6f-aed3-4266-925f-54c58e5cd20b @ 11/16/24 13:05:38.324
  STEP: Creating a pod to test consume configMaps @ 11/16/24 13:05:38.328
  STEP: Saw pod success @ 11/16/24 13:05:42.355
  I1116 13:05:42.360461 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-projected-configmaps-25c94fc9-fc5e-4979-b8ff-4a0071e00de1 container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 13:05:42.368
  I1116 13:05:42.387694 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3653" for this suite. @ 11/16/24 13:05:42.392
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 11/16/24 13:05:42.402
  I1116 13:05:42.402649 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 13:05:42.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:42.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:42.425
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 13:05:42.427
  STEP: Saw pod success @ 11/16/24 13:05:46.453
  I1116 13:05:46.457012 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downwardapi-volume-6327a5c6-6cc2-4351-9f8b-f87b7026c41d container client-container: <nil>
  STEP: delete the pod @ 11/16/24 13:05:46.465
  I1116 13:05:46.488947 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1316" for this suite. @ 11/16/24 13:05:46.494
• [4.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 11/16/24 13:05:46.502
  I1116 13:05:46.502401 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubelet-test @ 11/16/24 13:05:46.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:46.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:46.524
  STEP: Waiting for pod completion @ 11/16/24 13:05:46.538
  I1116 13:05:50.563126 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9215" for this suite. @ 11/16/24 13:05:50.567
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 11/16/24 13:05:50.577
  I1116 13:05:50.577649 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/16/24 13:05:50.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:50.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:50.597
  STEP: create the container to handle the HTTPGet hook request. @ 11/16/24 13:05:50.604
  STEP: create the pod with lifecycle hook @ 11/16/24 13:05:52.632
  STEP: delete the pod with lifecycle hook @ 11/16/24 13:05:54.655
  STEP: check prestop hook @ 11/16/24 13:05:56.676
  I1116 13:05:56.685839 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5336" for this suite. @ 11/16/24 13:05:56.69
• [6.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 11/16/24 13:05:56.698
  I1116 13:05:56.698482 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename crd-watch @ 11/16/24 13:05:56.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:05:56.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:05:56.717
  I1116 13:05:56.719986 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Creating first CR  @ 11/16/24 13:05:59.26
  I1116 13:05:59.265877 18 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-16T13:05:59Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-16T13:05:59Z]] name:name1 resourceVersion:23719 uid:a9f1f5b3-62a1-4cb4-a168-4df7737073da] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 11/16/24 13:06:09.268
  I1116 13:06:09.276925 18 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-16T13:06:09Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-16T13:06:09Z]] name:name2 resourceVersion:23762 uid:d5bebd71-a3e7-4e5a-8590-42487badb5d8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 11/16/24 13:06:19.277
  I1116 13:06:19.283946 18 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-16T13:05:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-16T13:06:19Z]] name:name1 resourceVersion:23782 uid:a9f1f5b3-62a1-4cb4-a168-4df7737073da] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 11/16/24 13:06:29.285
  I1116 13:06:29.292799 18 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-16T13:06:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-16T13:06:29Z]] name:name2 resourceVersion:23804 uid:d5bebd71-a3e7-4e5a-8590-42487badb5d8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 11/16/24 13:06:39.293
  I1116 13:06:39.307406 18 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-16T13:05:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-16T13:06:19Z]] name:name1 resourceVersion:23824 uid:a9f1f5b3-62a1-4cb4-a168-4df7737073da] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 11/16/24 13:06:49.31
  I1116 13:06:49.320991 18 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-16T13:06:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-16T13:06:29Z]] name:name2 resourceVersion:23844 uid:d5bebd71-a3e7-4e5a-8590-42487badb5d8] num:map[num1:9223372036854775807 num2:1000000]]}
  I1116 13:06:59.837966 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-3570" for this suite. @ 11/16/24 13:06:59.843
• [63.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 11/16/24 13:06:59.852
  I1116 13:06:59.852143 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 13:06:59.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:06:59.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:06:59.877
  STEP: starting the proxy server @ 11/16/24 13:06:59.879
  I1116 13:06:59.879522 18 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5707 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 11/16/24 13:06:59.91
  I1116 13:06:59.916716 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1116 13:06:59.918708 18 kubectl.go:2229] kubectl proxy stderr: W1116 13:06:59.910237     334 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I1116 13:06:59.918939 18 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:33709

  STEP: Destroying namespace "kubectl-5707" for this suite. @ 11/16/24 13:06:59.922
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 11/16/24 13:06:59.933
  I1116 13:06:59.933249 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pods @ 11/16/24 13:06:59.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:06:59.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:06:59.967
  STEP: creating pod @ 11/16/24 13:06:59.974
  I1116 13:07:02.007146 18 pods.go:83] Pod pod-hostip-9ad42134-179c-49e0-bd2d-2de904d0f130 has hostIP: 172.31.45.197
  I1116 13:07:02.007252 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8982" for this suite. @ 11/16/24 13:07:02.012
• [2.087 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 11/16/24 13:07:02.02
  I1116 13:07:02.020305 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename resourcequota @ 11/16/24 13:07:02.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:07:02.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:07:02.039
  STEP: Counting existing ResourceQuota @ 11/16/24 13:07:19.047
  STEP: Creating a ResourceQuota @ 11/16/24 13:07:24.053
  STEP: Ensuring resource quota status is calculated @ 11/16/24 13:07:24.059
  STEP: Creating a ConfigMap @ 11/16/24 13:07:26.064
  STEP: Ensuring resource quota status captures configMap creation @ 11/16/24 13:07:26.077
  STEP: Deleting a ConfigMap @ 11/16/24 13:07:28.083
  STEP: Ensuring resource quota status released usage @ 11/16/24 13:07:28.092
  I1116 13:07:30.097926 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8356" for this suite. @ 11/16/24 13:07:30.103
• [28.091 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 11/16/24 13:07:30.114
  I1116 13:07:30.114136 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pods @ 11/16/24 13:07:30.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:07:30.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:07:30.134
  STEP: creating a Pod with a static label @ 11/16/24 13:07:30.143
  STEP: watching for Pod to be ready @ 11/16/24 13:07:30.154
  I1116 13:07:30.155888 18 pods.go:945] observed Pod pod-test in namespace pods-305 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1116 13:07:30.159629 18 pods.go:945] observed Pod pod-test in namespace pods-305 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 13:07:30 +0000 UTC  }]
  I1116 13:07:30.181382 18 pods.go:945] observed Pod pod-test in namespace pods-305 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-11-16 13:07:30 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 13:07:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-16 13:07:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-16 13:07:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 13:07:30 +0000 UTC  }]
  I1116 13:07:30.885284 18 pods.go:948] Found Pod pod-test in namespace pods-305 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 13:07:30 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 13:07:30 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 13:07:30 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 13:07:30 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-16 13:07:30 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 11/16/24 13:07:30.89
  STEP: getting the Pod and ensuring that it's patched @ 11/16/24 13:07:30.9
  STEP: replacing the Pod's status Ready condition to False @ 11/16/24 13:07:30.904
  STEP: check the Pod again to ensure its Ready conditions are False @ 11/16/24 13:07:30.917
  STEP: deleting the Pod via a Collection with a LabelSelector @ 11/16/24 13:07:30.917
  STEP: watching for the Pod to be deleted @ 11/16/24 13:07:30.931
  I1116 13:07:30.932698 18 pods.go:1058] observed event type MODIFIED
  I1116 13:07:32.892904 18 pods.go:1058] observed event type MODIFIED
  I1116 13:07:33.038010 18 pods.go:1058] observed event type MODIFIED
  I1116 13:07:33.896738 18 pods.go:1058] observed event type MODIFIED
  I1116 13:07:33.907554 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-305" for this suite. @ 11/16/24 13:07:33.911
• [3.807 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 11/16/24 13:07:33.92
  I1116 13:07:33.920876 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir @ 11/16/24 13:07:33.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:07:33.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:07:33.94
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/16/24 13:07:33.944
  STEP: Saw pod success @ 11/16/24 13:07:37.975
  I1116 13:07:37.980335 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-dd70791f-e130-4a81-9629-d3aefea068d0 container test-container: <nil>
  STEP: delete the pod @ 11/16/24 13:07:37.994
  I1116 13:07:38.011779 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9426" for this suite. @ 11/16/24 13:07:38.017
• [4.106 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 11/16/24 13:07:38.027
  I1116 13:07:38.027319 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 13:07:38.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:07:38.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:07:38.049
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/16/24 13:07:38.052
  I1116 13:07:38.052174 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-7829 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1116 13:07:38.102349 18 builder.go:146] stderr: ""
  I1116 13:07:38.102372 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 11/16/24 13:07:38.102
  I1116 13:07:38.102424 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-7829 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1116 13:07:38.151712 18 builder.go:146] stderr: ""
  I1116 13:07:38.151737 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/16/24 13:07:38.151
  I1116 13:07:38.155240 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-7829 delete pods e2e-test-httpd-pod'
  I1116 13:07:39.944429 18 builder.go:146] stderr: ""
  I1116 13:07:39.944474 18 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1116 13:07:39.944596 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7829" for this suite. @ 11/16/24 13:07:39.951
• [1.937 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 11/16/24 13:07:39.967
  I1116 13:07:39.967760 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 13:07:39.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:07:39.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:07:39.997
  STEP: creating a collection of services @ 11/16/24 13:07:39.999
  I1116 13:07:39.999973 18 service.go:3655] Creating e2e-svc-a-vzdj6
  I1116 13:07:40.011667 18 service.go:3655] Creating e2e-svc-b-9mgbd
  I1116 13:07:40.025919 18 service.go:3655] Creating e2e-svc-c-ls72x
  STEP: deleting service collection @ 11/16/24 13:07:40.044
  I1116 13:07:40.082997 18 service.go:3690] Collection of services has been deleted
  I1116 13:07:40.083119 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9204" for this suite. @ 11/16/24 13:07:40.087
• [0.128 seconds]
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 11/16/24 13:07:40.095
  I1116 13:07:40.095750 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename watch @ 11/16/24 13:07:40.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:07:40.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:07:40.114
  STEP: creating a watch on configmaps with a certain label @ 11/16/24 13:07:40.117
  STEP: creating a new configmap @ 11/16/24 13:07:40.118
  STEP: modifying the configmap once @ 11/16/24 13:07:40.123
  STEP: changing the label value of the configmap @ 11/16/24 13:07:40.133
  STEP: Expecting to observe a delete notification for the watched object @ 11/16/24 13:07:40.142
  I1116 13:07:40.142477 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7420  b4162838-4df1-4280-a185-72d3f2871e54 24123 0 2024-11-16 13:07:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-16 13:07:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 13:07:40.142654 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7420  b4162838-4df1-4280-a185-72d3f2871e54 24124 0 2024-11-16 13:07:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-16 13:07:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 13:07:40.142727 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7420  b4162838-4df1-4280-a185-72d3f2871e54 24125 0 2024-11-16 13:07:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-16 13:07:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 11/16/24 13:07:40.142
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 11/16/24 13:07:40.153
  STEP: changing the label value of the configmap back @ 11/16/24 13:07:50.157
  STEP: modifying the configmap a third time @ 11/16/24 13:07:50.168
  STEP: deleting the configmap @ 11/16/24 13:07:50.178
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 11/16/24 13:07:50.186
  I1116 13:07:50.186566 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7420  b4162838-4df1-4280-a185-72d3f2871e54 24171 0 2024-11-16 13:07:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-16 13:07:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 13:07:50.186721 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7420  b4162838-4df1-4280-a185-72d3f2871e54 24172 0 2024-11-16 13:07:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-16 13:07:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 13:07:50.186834 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7420  b4162838-4df1-4280-a185-72d3f2871e54 24173 0 2024-11-16 13:07:40 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-16 13:07:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 13:07:50.186921 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7420" for this suite. @ 11/16/24 13:07:50.191
• [10.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 11/16/24 13:07:50.202
  I1116 13:07:50.202132 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename replication-controller @ 11/16/24 13:07:50.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:07:50.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:07:50.224
  STEP: Creating ReplicationController "e2e-rc-ztz4t" @ 11/16/24 13:07:50.226
  I1116 13:07:50.232236 18 rc.go:792] Get Replication Controller "e2e-rc-ztz4t" to confirm replicas
  I1116 13:07:51.232365 18 rc.go:792] Get Replication Controller "e2e-rc-ztz4t" to confirm replicas
  I1116 13:07:51.237298 18 rc.go:801] Found 1 replicas for "e2e-rc-ztz4t" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-ztz4t" @ 11/16/24 13:07:51.237
  STEP: Updating a scale subresource @ 11/16/24 13:07:51.241
  STEP: Verifying replicas where modified for replication controller "e2e-rc-ztz4t" @ 11/16/24 13:07:51.248
  I1116 13:07:51.248823 18 rc.go:792] Get Replication Controller "e2e-rc-ztz4t" to confirm replicas
  I1116 13:07:52.249514 18 rc.go:792] Get Replication Controller "e2e-rc-ztz4t" to confirm replicas
  I1116 13:07:52.254340 18 rc.go:801] Found 2 replicas for "e2e-rc-ztz4t" replication controller
  I1116 13:07:52.254493 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3915" for this suite. @ 11/16/24 13:07:52.258
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 11/16/24 13:07:52.267
  I1116 13:07:52.267303 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 13:07:52.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:07:52.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:07:52.286
  STEP: Setting up server cert @ 11/16/24 13:07:52.311
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 13:07:52.657
  STEP: Deploying the webhook pod @ 11/16/24 13:07:52.668
  STEP: Wait for the deployment to be ready @ 11/16/24 13:07:52.681
  I1116 13:07:52.691817 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/16/24 13:07:54.706
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 13:07:54.717
  I1116 13:07:55.718389 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 11/16/24 13:07:55.728
  STEP: create a pod that should be updated by the webhook @ 11/16/24 13:07:55.743
  I1116 13:07:55.819936 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3398" for this suite. @ 11/16/24 13:07:55.824
  STEP: Destroying namespace "webhook-markers-7007" for this suite. @ 11/16/24 13:07:55.832
• [3.588 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 11/16/24 13:07:55.855
  I1116 13:07:55.855262 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/16/24 13:07:55.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:07:55.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:07:55.875
  I1116 13:07:55.877591 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 13:07:58.930154 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7629" for this suite. @ 11/16/24 13:07:58.936
• [3.089 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 11/16/24 13:07:58.944
  I1116 13:07:58.944144 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 13:07:58.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:07:58.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:07:58.967
  STEP: validating cluster-info @ 11/16/24 13:07:58.97
  I1116 13:07:58.970232 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-1644 cluster-info'
  I1116 13:07:59.013726 18 builder.go:146] stderr: ""
  I1116 13:07:59.013760 18 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1116 13:07:59.013882 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1644" for this suite. @ 11/16/24 13:07:59.018
• [0.082 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 11/16/24 13:07:59.026
  I1116 13:07:59.026033 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename containers @ 11/16/24 13:07:59.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:07:59.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:07:59.049
  I1116 13:08:01.081591 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1350" for this suite. @ 11/16/24 13:08:01.086
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 11/16/24 13:08:01.093
  I1116 13:08:01.093455 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir @ 11/16/24 13:08:01.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:08:01.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:08:01.112
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/16/24 13:08:01.118
  STEP: Saw pod success @ 11/16/24 13:08:03.138
  I1116 13:08:03.143617 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-3a02d97b-dd18-4448-b7dc-1970dbe0dd53 container test-container: <nil>
  STEP: delete the pod @ 11/16/24 13:08:03.15
  I1116 13:08:03.171360 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9209" for this suite. @ 11/16/24 13:08:03.176
• [2.092 seconds]
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 11/16/24 13:08:03.185
  I1116 13:08:03.185766 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename deployment @ 11/16/24 13:08:03.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:08:03.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:08:03.203
  STEP: creating a Deployment @ 11/16/24 13:08:03.209
  I1116 13:08:03.209297 18 deployment.go:507] Creating simple deployment test-deployment-tf4kx
  I1116 13:08:03.231497 18 deployment.go:222] deployment "test-deployment-tf4kx" doesn't have the required revision set
  STEP: Getting /status @ 11/16/24 13:08:05.248
  I1116 13:08:05.252206 18 deployment.go:532] Deployment test-deployment-tf4kx has Conditions: [{Available True 2024-11-16 13:08:04 +0000 UTC 2024-11-16 13:08:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-11-16 13:08:04 +0000 UTC 2024-11-16 13:08:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-tf4kx-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 11/16/24 13:08:05.252
  I1116 13:08:05.263899 18 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 13, 8, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 13, 8, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 16, 13, 8, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 16, 13, 8, 3, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-tf4kx-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 11/16/24 13:08:05.263
  I1116 13:08:05.265332 18 deployment.go:579] Observed &Deployment event: ADDED
  I1116 13:08:05.265356 18 deployment.go:575] Observed Deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-16 13:08:03 +0000 UTC 2024-11-16 13:08:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-tf4kx-f4dbbbf74"}
  I1116 13:08:05.265514 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I1116 13:08:05.265530 18 deployment.go:575] Observed Deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-16 13:08:03 +0000 UTC 2024-11-16 13:08:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-tf4kx-f4dbbbf74"}
  I1116 13:08:05.265544 18 deployment.go:575] Observed Deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-16 13:08:03 +0000 UTC 2024-11-16 13:08:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1116 13:08:05.265634 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I1116 13:08:05.265648 18 deployment.go:575] Observed Deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-16 13:08:03 +0000 UTC 2024-11-16 13:08:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1116 13:08:05.265672 18 deployment.go:575] Observed Deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-16 13:08:03 +0000 UTC 2024-11-16 13:08:03 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-tf4kx-f4dbbbf74" is progressing.}
  I1116 13:08:05.265741 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I1116 13:08:05.265858 18 deployment.go:575] Observed Deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-16 13:08:04 +0000 UTC 2024-11-16 13:08:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1116 13:08:05.265871 18 deployment.go:575] Observed Deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-16 13:08:04 +0000 UTC 2024-11-16 13:08:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-tf4kx-f4dbbbf74" has successfully progressed.}
  I1116 13:08:05.265977 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I1116 13:08:05.265990 18 deployment.go:575] Observed Deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-16 13:08:04 +0000 UTC 2024-11-16 13:08:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1116 13:08:05.266002 18 deployment.go:575] Observed Deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-16 13:08:04 +0000 UTC 2024-11-16 13:08:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-tf4kx-f4dbbbf74" has successfully progressed.}
  I1116 13:08:05.266083 18 deployment.go:572] Found Deployment test-deployment-tf4kx in namespace deployment-4528 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1116 13:08:05.266134 18 deployment.go:583] Deployment test-deployment-tf4kx has an updated status
  STEP: patching the Statefulset Status @ 11/16/24 13:08:05.266
  I1116 13:08:05.266189 18 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1116 13:08:05.272596 18 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 11/16/24 13:08:05.272
  I1116 13:08:05.274016 18 deployment.go:616] Observed &Deployment event: ADDED
  I1116 13:08:05.274052 18 deployment.go:612] Observed deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-16 13:08:03 +0000 UTC 2024-11-16 13:08:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-tf4kx-f4dbbbf74"}
  I1116 13:08:05.274111 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I1116 13:08:05.274125 18 deployment.go:612] Observed deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-16 13:08:03 +0000 UTC 2024-11-16 13:08:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-tf4kx-f4dbbbf74"}
  I1116 13:08:05.274133 18 deployment.go:612] Observed deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-16 13:08:03 +0000 UTC 2024-11-16 13:08:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1116 13:08:05.274200 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I1116 13:08:05.274236 18 deployment.go:612] Observed deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-16 13:08:03 +0000 UTC 2024-11-16 13:08:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1116 13:08:05.274249 18 deployment.go:612] Observed deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-16 13:08:03 +0000 UTC 2024-11-16 13:08:03 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-tf4kx-f4dbbbf74" is progressing.}
  I1116 13:08:05.274330 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I1116 13:08:05.274348 18 deployment.go:612] Observed deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-16 13:08:04 +0000 UTC 2024-11-16 13:08:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1116 13:08:05.274358 18 deployment.go:612] Observed deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-16 13:08:04 +0000 UTC 2024-11-16 13:08:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-tf4kx-f4dbbbf74" has successfully progressed.}
  I1116 13:08:05.274419 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I1116 13:08:05.274431 18 deployment.go:612] Observed deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-16 13:08:04 +0000 UTC 2024-11-16 13:08:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1116 13:08:05.274440 18 deployment.go:612] Observed deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-16 13:08:04 +0000 UTC 2024-11-16 13:08:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-tf4kx-f4dbbbf74" has successfully progressed.}
  I1116 13:08:05.274449 18 deployment.go:612] Observed deployment test-deployment-tf4kx in namespace deployment-4528 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1116 13:08:05.274515 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I1116 13:08:05.274615 18 deployment.go:609] Found deployment test-deployment-tf4kx in namespace deployment-4528 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1116 13:08:05.274642 18 deployment.go:620] Deployment test-deployment-tf4kx has a patched status
  I1116 13:08:05.282679 18 deployment.go:633] Deployment "test-deployment-tf4kx":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-tf4kx",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "324ad90c-3b62-4467-bf7c-a429c76f1416",
      ResourceVersion: (string) (len=5) "24464",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359283,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-tf4kx-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1116 13:08:05.288207 18 deployment.go:39] New ReplicaSet "test-deployment-tf4kx-f4dbbbf74" of Deployment "test-deployment-tf4kx":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-tf4kx-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18393eb4-975e-49f4-acce-001707ea4336",
      ResourceVersion: (string) (len=5) "24458",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359283,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-tf4kx",
          UID: (types.UID) (len=36) "324ad90c-3b62-4467-bf7c-a429c76f1416",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 33 32 34  |k:{\"uid\":\"324|
              00000120  61 64 39 30 63 2d 33 62  36 32 2d 34 34 36 37 2d  |ad90c-3b62-4467-|
              00000130  62 66 37 63 2d 61 34 32  39 63 37 36 66 31 34 31  |bf7c-a429c76f141|
              00000140  36 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |6\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1116 13:08:05.295316 18 deployment.go:67] Pod "test-deployment-tf4kx-f4dbbbf74-d2tmv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-tf4kx-f4dbbbf74-d2tmv",
      GenerateName: (string) (len=32) "test-deployment-tf4kx-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-4528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37a18122-ef1f-45e1-b81c-c79d3885ccb7",
      ResourceVersion: (string) (len=5) "24457",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359283,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-tf4kx-f4dbbbf74",
          UID: (types.UID) (len=36) "18393eb4-975e-49f4-acce-001707ea4336",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 31 38 33 39 33 65 62  34 2d 39 37 35 65 2d 34  |"18393eb4-975e-4|
              000000a0  39 66 34 2d 61 63 63 65  2d 30 30 31 37 30 37 65  |9f4-acce-001707e|
              000000b0  61 34 33 33 36 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |a4336\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  36 2e 31 31 36 5c 22 7d  |2.168.216.116\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dcqqf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dcqqf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-246",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867359283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.246",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.246"
        }
      },
      PodIP: (string) (len=15) "192.168.216.116",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.216.116"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867359283,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867359283,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b758c1e72909155197b5f41afadd1c9161909b1398425b24abd710491d630732",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dcqqf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:08:05.296872 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4528" for this suite. @ 11/16/24 13:08:05.302
• [2.126 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 11/16/24 13:08:05.312
  I1116 13:08:05.312095 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename events @ 11/16/24 13:08:05.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:08:05.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:08:05.331
  STEP: creating a test event @ 11/16/24 13:08:05.333
  STEP: listing all events in all namespaces @ 11/16/24 13:08:05.338
  STEP: patching the test event @ 11/16/24 13:08:05.343
  STEP: fetching the test event @ 11/16/24 13:08:05.352
  STEP: updating the test event @ 11/16/24 13:08:05.356
  STEP: getting the test event @ 11/16/24 13:08:05.367
  STEP: deleting the test event @ 11/16/24 13:08:05.371
  STEP: listing all events in all namespaces @ 11/16/24 13:08:05.38
  I1116 13:08:05.387539 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5010" for this suite. @ 11/16/24 13:08:05.391
• [0.088 seconds]
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 11/16/24 13:08:05.399
  I1116 13:08:05.399914 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename job @ 11/16/24 13:08:05.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:08:05.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:08:05.419
  STEP: Looking for a node to schedule job pod @ 11/16/24 13:08:05.421
  STEP: Creating a job @ 11/16/24 13:08:05.425
  STEP: Ensuring job fails @ 11/16/24 13:08:05.432
  I1116 13:08:09.443010 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5539" for this suite. @ 11/16/24 13:08:09.447
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 11/16/24 13:08:09.456
  I1116 13:08:09.456599 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename watch @ 11/16/24 13:08:09.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:08:09.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:08:09.476
  STEP: getting a starting resourceVersion @ 11/16/24 13:08:09.478
  STEP: starting a background goroutine to produce watch events @ 11/16/24 13:08:09.482
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 11/16/24 13:08:09.482
  I1116 13:08:12.264692 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4565" for this suite. @ 11/16/24 13:08:12.316
• [2.910 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 11/16/24 13:08:12.367
  I1116 13:08:12.367025 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename init-container @ 11/16/24 13:08:12.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:08:12.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:08:12.387
  STEP: creating the pod @ 11/16/24 13:08:12.389
  I1116 13:08:12.389975 18 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I1116 13:08:58.058990 18 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-5b4542e4-547e-4b45-9f76-9fa15a9e84a3", GenerateName:"", Namespace:"init-container-5498", SelfLink:"", UID:"31641e2a-ba70-40e1-92ac-2a23a19883f9", ResourceVersion:"24851", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 8, 12, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"389966201"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 8, 12, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef93e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 8, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef9410), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-wlpff", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004265280), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wlpff", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wlpff", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wlpff", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002554b80), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-45-197", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc004f45a80), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002554c10)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002554c30)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002554c38), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc002554c3c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004502560), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 16, 13, 8, 12, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 16, 13, 8, 12, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 16, 13, 8, 12, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 16, 13, 8, 12, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 16, 13, 8, 12, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.45.197", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.45.197"}}, PodIP:"192.168.82.151", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.82.151"}}, StartTime:time.Date(2024, time.November, 16, 13, 8, 12, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00426c2a0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00426c380)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://ca859bda0fc3ea4e781eda79a8fd94e93685ef9c56d752ca9b787cb5e80118e9", Started:(*bool)(0xc002554cea), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-wlpff", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004502580)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0042652e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc002554cfd), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-wlpff", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004502590)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0042652c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc002554cb4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-wlpff", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004502570)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1116 13:08:58.059168 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5498" for this suite. @ 11/16/24 13:08:58.063
• [45.705 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 11/16/24 13:08:58.072
  I1116 13:08:58.072421 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename endpointslicemirroring @ 11/16/24 13:08:58.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:08:58.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:08:58.094
  STEP: mirroring a new custom Endpoint @ 11/16/24 13:08:58.108
  I1116 13:08:58.119918 18 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 11/16/24 13:09:00.123
  I1116 13:09:00.134124 18 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 11/16/24 13:09:02.139
  I1116 13:09:02.153289 18 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I1116 13:09:04.158567 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5375" for this suite. @ 11/16/24 13:09:04.162
• [6.099 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 11/16/24 13:09:04.171
  I1116 13:09:04.171388 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-probe @ 11/16/24 13:09:04.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:09:04.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:09:04.191
  STEP: Creating pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437 @ 11/16/24 13:09:04.193
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/16/24 13:09:06.213
  I1116 13:09:06.217468 18 container_probe.go:1749] Initial restart count of pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 is 0
  I1116 13:09:06.221836 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:08.228252 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:10.235085 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:12.241163 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:14.246507 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:16.253287 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:18.260120 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:20.265908 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:22.271522 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:24.276599 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:26.281806 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:28.288572 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:30.296029 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:32.301270 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:34.307845 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:36.313771 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:38.320474 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:40.326888 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:42.333318 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:44.339165 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:46.344861 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:48.351827 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:50.359669 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:52.365383 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:54.371979 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:56.379284 18 container_probe.go:1759] Get pod busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 in namespace container-probe-5437
  I1116 13:09:56.379323 18 container_probe.go:1763] Restart count of pod container-probe-5437/busybox-b1e7e527-4e4e-462e-ac51-bf8c33b947e2 is now 1 (50.161833081s elapsed)
  STEP: deleting the pod @ 11/16/24 13:09:56.379
  I1116 13:09:56.396058 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5437" for this suite. @ 11/16/24 13:09:56.4
• [52.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 11/16/24 13:09:56.411
  I1116 13:09:56.411287 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 13:09:56.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:09:56.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:09:56.433
  STEP: creating service nodeport-test with type=NodePort in namespace services-7931 @ 11/16/24 13:09:56.435
  STEP: creating replication controller nodeport-test in namespace services-7931 @ 11/16/24 13:09:56.455
  I1116 13:09:56.463703      18 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-7931, replica count: 2
  I1116 13:09:59.516106      18 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1116 13:09:59.516253 18 resource.go:361] Creating new exec pod
  I1116 13:10:02.539651 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-7931 exec execpod9zvpl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1116 13:10:02.629563 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1116 13:10:02.629604 18 builder.go:147] stdout: "nodeport-test-gdh9x"
  I1116 13:10:02.629675 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-7931 exec execpod9zvpl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.58 80'
  I1116 13:10:02.713976 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.58 80\nConnection to 10.152.183.58 80 port [tcp/http] succeeded!\n"
  I1116 13:10:02.714026 18 builder.go:147] stdout: "nodeport-test-4ggdm"
  I1116 13:10:02.714214 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-7931 exec execpod9zvpl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.72.246 31095'
  I1116 13:10:02.803876 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.72.246 31095\nConnection to 172.31.72.246 31095 port [tcp/*] succeeded!\n"
  I1116 13:10:02.803919 18 builder.go:147] stdout: "nodeport-test-4ggdm"
  I1116 13:10:02.804089 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-7931 exec execpod9zvpl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.197 31095'
  I1116 13:10:02.891523 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.45.197 31095\nConnection to 172.31.45.197 31095 port [tcp/*] succeeded!\n"
  I1116 13:10:02.891565 18 builder.go:147] stdout: ""
  I1116 13:10:03.804712 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-7931 exec execpod9zvpl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.197 31095'
  I1116 13:10:03.897821 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.45.197 31095\nConnection to 172.31.45.197 31095 port [tcp/*] succeeded!\n"
  I1116 13:10:03.897901 18 builder.go:147] stdout: ""
  I1116 13:10:04.804772 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-7931 exec execpod9zvpl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.197 31095'
  I1116 13:10:04.885282 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.45.197 31095\nConnection to 172.31.45.197 31095 port [tcp/*] succeeded!\n"
  I1116 13:10:04.885324 18 builder.go:147] stdout: ""
  I1116 13:10:05.804203 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-7931 exec execpod9zvpl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.197 31095'
  I1116 13:10:05.889701 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.45.197 31095\nConnection to 172.31.45.197 31095 port [tcp/*] succeeded!\n"
  I1116 13:10:05.889750 18 builder.go:147] stdout: "nodeport-test-4ggdm"
  I1116 13:10:05.889872 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7931" for this suite. @ 11/16/24 13:10:05.895
• [9.494 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 11/16/24 13:10:05.905
  I1116 13:10:05.905578 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename statefulset @ 11/16/24 13:10:05.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:10:05.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:10:05.927
  STEP: Creating service test in namespace statefulset-647 @ 11/16/24 13:10:05.929
  STEP: Creating a new StatefulSet @ 11/16/24 13:10:05.933
  I1116 13:10:05.947063 18 wait.go:40] Found 0 stateful pods, waiting for 3
  I1116 13:10:15.948342 18 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1116 13:10:15.948381 18 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1116 13:10:15.948389 18 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/16/24 13:10:15.96
  I1116 13:10:15.972865 18 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 11/16/24 13:10:15.972
  STEP: Not applying an update when the partition is greater than the number of replicas @ 11/16/24 13:10:25.984
  STEP: Performing a canary update @ 11/16/24 13:10:25.984
  I1116 13:10:25.995401 18 statefulset.go:2507] Updating stateful set ss2
  I1116 13:10:26.007726 18 wait.go:74] Waiting for Pod statefulset-647/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 11/16/24 13:10:36.005
  I1116 13:10:36.044724 18 wait.go:40] Found 1 stateful pods, waiting for 3
  I1116 13:10:46.045958 18 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1116 13:10:46.045992 18 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1116 13:10:46.046000 18 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 11/16/24 13:10:46.053
  I1116 13:10:46.065211 18 statefulset.go:2507] Updating stateful set ss2
  I1116 13:10:46.074564 18 wait.go:74] Waiting for Pod statefulset-647/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1116 13:10:56.087292 18 statefulset.go:2507] Updating stateful set ss2
  I1116 13:10:56.095414 18 wait.go:56] Waiting for StatefulSet statefulset-647/ss2 to complete update
  I1116 13:10:56.095447 18 wait.go:63] Waiting for Pod statefulset-647/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1116 13:11:06.096864 18 statefulset.go:138] Deleting all statefulset in ns statefulset-647
  I1116 13:11:06.101399 18 rest.go:150] Scaling statefulset ss2 to 0
  I1116 13:11:16.119268 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1116 13:11:16.124166 18 rest.go:88] Deleting statefulset ss2
  I1116 13:11:16.140593 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-647" for this suite. @ 11/16/24 13:11:16.147
• [70.251 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 11/16/24 13:11:16.156
  I1116 13:11:16.156310 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename job @ 11/16/24 13:11:16.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:11:16.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:11:16.177
  STEP: Creating Indexed job @ 11/16/24 13:11:16.179
  STEP: Ensuring job reaches completions @ 11/16/24 13:11:16.186
  STEP: Ensuring pods with index for job exist @ 11/16/24 13:11:26.199
  I1116 13:11:26.204872 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-191" for this suite. @ 11/16/24 13:11:26.21
• [10.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 11/16/24 13:11:26.219
  I1116 13:11:26.219081 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename configmap @ 11/16/24 13:11:26.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:11:26.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:11:26.24
  I1116 13:11:26.287796 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1857" for this suite. @ 11/16/24 13:11:26.291
• [0.081 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 11/16/24 13:11:26.299
  I1116 13:11:26.299768 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 13:11:26.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:11:26.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:11:26.319
  STEP: Setting up server cert @ 11/16/24 13:11:26.343
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 13:11:26.597
  STEP: Deploying the webhook pod @ 11/16/24 13:11:26.609
  STEP: Wait for the deployment to be ready @ 11/16/24 13:11:26.623
  I1116 13:11:26.637803 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/16/24 13:11:28.653
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 13:11:28.665
  I1116 13:11:29.666151 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 11/16/24 13:11:29.676
  STEP: create a configmap that should be updated by the webhook @ 11/16/24 13:11:29.691
  I1116 13:11:29.765250 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5015" for this suite. @ 11/16/24 13:11:29.769
  STEP: Destroying namespace "webhook-markers-9891" for this suite. @ 11/16/24 13:11:29.778
• [3.488 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 11/16/24 13:11:29.787
  I1116 13:11:29.787454 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename sysctl @ 11/16/24 13:11:29.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:11:29.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:11:29.805
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 11/16/24 13:11:29.808
  STEP: Watching for error events or started pod @ 11/16/24 13:11:29.817
  STEP: Waiting for pod completion @ 11/16/24 13:11:31.823
  STEP: Checking that the pod succeeded @ 11/16/24 13:11:33.837
  STEP: Getting logs from the pod @ 11/16/24 13:11:33.837
  STEP: Checking that the sysctl is actually updated @ 11/16/24 13:11:33.855
  I1116 13:11:33.855935 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2085" for this suite. @ 11/16/24 13:11:33.86
• [4.081 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 11/16/24 13:11:33.869
  I1116 13:11:33.869033 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename gc @ 11/16/24 13:11:33.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:11:33.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:11:33.894
  STEP: create the rc @ 11/16/24 13:11:33.9
  W1116 13:11:33.907517      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 11/16/24 13:11:39.915
  STEP: wait for the rc to be deleted @ 11/16/24 13:11:39.923
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 11/16/24 13:11:44.93
  STEP: Gathering metrics @ 11/16/24 13:12:14.945
  W1116 13:12:14.953983      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1116 13:12:14.954024 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1116 13:12:14.954082 18 delete.go:95] Deleting pod "simpletest.rc-22cwb" in namespace "gc-1536"
  I1116 13:12:14.973926 18 delete.go:95] Deleting pod "simpletest.rc-25w5w" in namespace "gc-1536"
  I1116 13:12:14.986972 18 delete.go:95] Deleting pod "simpletest.rc-26ghx" in namespace "gc-1536"
  I1116 13:12:15.002647 18 delete.go:95] Deleting pod "simpletest.rc-285c4" in namespace "gc-1536"
  I1116 13:12:15.015663 18 delete.go:95] Deleting pod "simpletest.rc-29zcd" in namespace "gc-1536"
  I1116 13:12:15.030276 18 delete.go:95] Deleting pod "simpletest.rc-2ddbk" in namespace "gc-1536"
  I1116 13:12:15.042554 18 delete.go:95] Deleting pod "simpletest.rc-2gcsk" in namespace "gc-1536"
  I1116 13:12:15.057681 18 delete.go:95] Deleting pod "simpletest.rc-572fq" in namespace "gc-1536"
  I1116 13:12:15.070317 18 delete.go:95] Deleting pod "simpletest.rc-5n76g" in namespace "gc-1536"
  I1116 13:12:15.083819 18 delete.go:95] Deleting pod "simpletest.rc-5tzf2" in namespace "gc-1536"
  I1116 13:12:15.103997 18 delete.go:95] Deleting pod "simpletest.rc-5vssb" in namespace "gc-1536"
  I1116 13:12:15.123180 18 delete.go:95] Deleting pod "simpletest.rc-62nkb" in namespace "gc-1536"
  I1116 13:12:15.134558 18 delete.go:95] Deleting pod "simpletest.rc-6j9ld" in namespace "gc-1536"
  I1116 13:12:15.150293 18 delete.go:95] Deleting pod "simpletest.rc-6jt6w" in namespace "gc-1536"
  I1116 13:12:15.164295 18 delete.go:95] Deleting pod "simpletest.rc-6qjpw" in namespace "gc-1536"
  I1116 13:12:15.179201 18 delete.go:95] Deleting pod "simpletest.rc-6twlq" in namespace "gc-1536"
  I1116 13:12:15.195748 18 delete.go:95] Deleting pod "simpletest.rc-766dp" in namespace "gc-1536"
  I1116 13:12:15.212527 18 delete.go:95] Deleting pod "simpletest.rc-7qv4l" in namespace "gc-1536"
  I1116 13:12:15.225243 18 delete.go:95] Deleting pod "simpletest.rc-88b7r" in namespace "gc-1536"
  I1116 13:12:15.239385 18 delete.go:95] Deleting pod "simpletest.rc-9dnfh" in namespace "gc-1536"
  I1116 13:12:15.254880 18 delete.go:95] Deleting pod "simpletest.rc-9fb5t" in namespace "gc-1536"
  I1116 13:12:15.268577 18 delete.go:95] Deleting pod "simpletest.rc-9l7m4" in namespace "gc-1536"
  I1116 13:12:15.285892 18 delete.go:95] Deleting pod "simpletest.rc-9wmgh" in namespace "gc-1536"
  I1116 13:12:15.303385 18 delete.go:95] Deleting pod "simpletest.rc-9wp4x" in namespace "gc-1536"
  I1116 13:12:15.316674 18 delete.go:95] Deleting pod "simpletest.rc-9zd5h" in namespace "gc-1536"
  I1116 13:12:15.334698 18 delete.go:95] Deleting pod "simpletest.rc-b78gp" in namespace "gc-1536"
  I1116 13:12:15.348529 18 delete.go:95] Deleting pod "simpletest.rc-bmd7f" in namespace "gc-1536"
  I1116 13:12:15.362387 18 delete.go:95] Deleting pod "simpletest.rc-brvpj" in namespace "gc-1536"
  I1116 13:12:15.376655 18 delete.go:95] Deleting pod "simpletest.rc-btsbv" in namespace "gc-1536"
  I1116 13:12:15.390182 18 delete.go:95] Deleting pod "simpletest.rc-bwxpb" in namespace "gc-1536"
  I1116 13:12:15.405679 18 delete.go:95] Deleting pod "simpletest.rc-bxtjc" in namespace "gc-1536"
  I1116 13:12:15.422586 18 delete.go:95] Deleting pod "simpletest.rc-cwfrq" in namespace "gc-1536"
  I1116 13:12:15.444403 18 delete.go:95] Deleting pod "simpletest.rc-d5knt" in namespace "gc-1536"
  I1116 13:12:15.462134 18 delete.go:95] Deleting pod "simpletest.rc-d88dg" in namespace "gc-1536"
  I1116 13:12:15.481998 18 delete.go:95] Deleting pod "simpletest.rc-dp6sj" in namespace "gc-1536"
  I1116 13:12:15.502353 18 delete.go:95] Deleting pod "simpletest.rc-dxgqb" in namespace "gc-1536"
  I1116 13:12:15.516175 18 delete.go:95] Deleting pod "simpletest.rc-fmdcb" in namespace "gc-1536"
  I1116 13:12:15.540653 18 delete.go:95] Deleting pod "simpletest.rc-ftzc9" in namespace "gc-1536"
  I1116 13:12:15.557536 18 delete.go:95] Deleting pod "simpletest.rc-fwnn7" in namespace "gc-1536"
  I1116 13:12:15.574534 18 delete.go:95] Deleting pod "simpletest.rc-gbqcf" in namespace "gc-1536"
  I1116 13:12:15.589266 18 delete.go:95] Deleting pod "simpletest.rc-gj95n" in namespace "gc-1536"
  I1116 13:12:15.603994 18 delete.go:95] Deleting pod "simpletest.rc-h4z7f" in namespace "gc-1536"
  I1116 13:12:15.617442 18 delete.go:95] Deleting pod "simpletest.rc-hcjvr" in namespace "gc-1536"
  I1116 13:12:15.631453 18 delete.go:95] Deleting pod "simpletest.rc-htrjw" in namespace "gc-1536"
  I1116 13:12:15.643486 18 delete.go:95] Deleting pod "simpletest.rc-hwpjj" in namespace "gc-1536"
  I1116 13:12:15.656824 18 delete.go:95] Deleting pod "simpletest.rc-j5nc4" in namespace "gc-1536"
  I1116 13:12:15.673319 18 delete.go:95] Deleting pod "simpletest.rc-jkhfr" in namespace "gc-1536"
  I1116 13:12:15.691807 18 delete.go:95] Deleting pod "simpletest.rc-jxvv8" in namespace "gc-1536"
  I1116 13:12:15.711733 18 delete.go:95] Deleting pod "simpletest.rc-jxwzp" in namespace "gc-1536"
  I1116 13:12:15.727109 18 delete.go:95] Deleting pod "simpletest.rc-klwhc" in namespace "gc-1536"
  I1116 13:12:15.751792 18 delete.go:95] Deleting pod "simpletest.rc-krh2c" in namespace "gc-1536"
  I1116 13:12:15.771636 18 delete.go:95] Deleting pod "simpletest.rc-kz49m" in namespace "gc-1536"
  I1116 13:12:15.784679 18 delete.go:95] Deleting pod "simpletest.rc-ls2wj" in namespace "gc-1536"
  I1116 13:12:15.802486 18 delete.go:95] Deleting pod "simpletest.rc-lsw9m" in namespace "gc-1536"
  I1116 13:12:15.818145 18 delete.go:95] Deleting pod "simpletest.rc-m8t4g" in namespace "gc-1536"
  I1116 13:12:15.838166 18 delete.go:95] Deleting pod "simpletest.rc-mm8jd" in namespace "gc-1536"
  I1116 13:12:15.852680 18 delete.go:95] Deleting pod "simpletest.rc-mp4qw" in namespace "gc-1536"
  I1116 13:12:15.866671 18 delete.go:95] Deleting pod "simpletest.rc-mxf74" in namespace "gc-1536"
  I1116 13:12:15.879576 18 delete.go:95] Deleting pod "simpletest.rc-nms2r" in namespace "gc-1536"
  I1116 13:12:15.894762 18 delete.go:95] Deleting pod "simpletest.rc-npnrz" in namespace "gc-1536"
  I1116 13:12:15.908864 18 delete.go:95] Deleting pod "simpletest.rc-nqsn4" in namespace "gc-1536"
  I1116 13:12:15.927764 18 delete.go:95] Deleting pod "simpletest.rc-nvqdg" in namespace "gc-1536"
  I1116 13:12:15.945874 18 delete.go:95] Deleting pod "simpletest.rc-pj7w4" in namespace "gc-1536"
  I1116 13:12:15.957931 18 delete.go:95] Deleting pod "simpletest.rc-qjx7d" in namespace "gc-1536"
  I1116 13:12:15.972025 18 delete.go:95] Deleting pod "simpletest.rc-qtvjz" in namespace "gc-1536"
  I1116 13:12:15.986952 18 delete.go:95] Deleting pod "simpletest.rc-r7qlk" in namespace "gc-1536"
  I1116 13:12:16.006128 18 delete.go:95] Deleting pod "simpletest.rc-rfkvd" in namespace "gc-1536"
  I1116 13:12:16.020371 18 delete.go:95] Deleting pod "simpletest.rc-rgl2z" in namespace "gc-1536"
  I1116 13:12:16.034696 18 delete.go:95] Deleting pod "simpletest.rc-rlnjd" in namespace "gc-1536"
  I1116 13:12:16.047232 18 delete.go:95] Deleting pod "simpletest.rc-rr745" in namespace "gc-1536"
  I1116 13:12:16.058763 18 delete.go:95] Deleting pod "simpletest.rc-rzvpt" in namespace "gc-1536"
  I1116 13:12:16.094852 18 delete.go:95] Deleting pod "simpletest.rc-shtsc" in namespace "gc-1536"
  I1116 13:12:16.152394 18 delete.go:95] Deleting pod "simpletest.rc-tf4zt" in namespace "gc-1536"
  I1116 13:12:16.196399 18 delete.go:95] Deleting pod "simpletest.rc-thpvg" in namespace "gc-1536"
  I1116 13:12:16.249256 18 delete.go:95] Deleting pod "simpletest.rc-thrzl" in namespace "gc-1536"
  I1116 13:12:16.298972 18 delete.go:95] Deleting pod "simpletest.rc-tlnbh" in namespace "gc-1536"
  I1116 13:12:16.344932 18 delete.go:95] Deleting pod "simpletest.rc-tz8ml" in namespace "gc-1536"
  I1116 13:12:16.396099 18 delete.go:95] Deleting pod "simpletest.rc-v4whc" in namespace "gc-1536"
  I1116 13:12:16.445188 18 delete.go:95] Deleting pod "simpletest.rc-vgfhx" in namespace "gc-1536"
  I1116 13:12:16.499338 18 delete.go:95] Deleting pod "simpletest.rc-vj9k8" in namespace "gc-1536"
  I1116 13:12:16.544683 18 delete.go:95] Deleting pod "simpletest.rc-vljgl" in namespace "gc-1536"
  I1116 13:12:16.603342 18 delete.go:95] Deleting pod "simpletest.rc-vm4hj" in namespace "gc-1536"
  I1116 13:12:16.652656 18 delete.go:95] Deleting pod "simpletest.rc-vmng5" in namespace "gc-1536"
  I1116 13:12:16.695910 18 delete.go:95] Deleting pod "simpletest.rc-vnwlz" in namespace "gc-1536"
  I1116 13:12:16.746862 18 delete.go:95] Deleting pod "simpletest.rc-vrmh6" in namespace "gc-1536"
  I1116 13:12:16.794720 18 delete.go:95] Deleting pod "simpletest.rc-vv7xc" in namespace "gc-1536"
  I1116 13:12:16.845200 18 delete.go:95] Deleting pod "simpletest.rc-w9vsc" in namespace "gc-1536"
  I1116 13:12:16.899067 18 delete.go:95] Deleting pod "simpletest.rc-wp76k" in namespace "gc-1536"
  I1116 13:12:16.946620 18 delete.go:95] Deleting pod "simpletest.rc-wsbzg" in namespace "gc-1536"
  I1116 13:12:16.998584 18 delete.go:95] Deleting pod "simpletest.rc-wxxr9" in namespace "gc-1536"
  I1116 13:12:17.043156 18 delete.go:95] Deleting pod "simpletest.rc-xbpdk" in namespace "gc-1536"
  I1116 13:12:17.103287 18 delete.go:95] Deleting pod "simpletest.rc-xfh2k" in namespace "gc-1536"
  I1116 13:12:17.143885 18 delete.go:95] Deleting pod "simpletest.rc-xrprk" in namespace "gc-1536"
  I1116 13:12:17.203086 18 delete.go:95] Deleting pod "simpletest.rc-xv6ck" in namespace "gc-1536"
  I1116 13:12:17.243914 18 delete.go:95] Deleting pod "simpletest.rc-xxmlw" in namespace "gc-1536"
  I1116 13:12:17.296572 18 delete.go:95] Deleting pod "simpletest.rc-z4dw8" in namespace "gc-1536"
  I1116 13:12:17.349421 18 delete.go:95] Deleting pod "simpletest.rc-zp6vk" in namespace "gc-1536"
  I1116 13:12:17.400960 18 delete.go:95] Deleting pod "simpletest.rc-zq66z" in namespace "gc-1536"
  I1116 13:12:17.447437 18 delete.go:95] Deleting pod "simpletest.rc-zs4qs" in namespace "gc-1536"
  I1116 13:12:17.495100 18 delete.go:95] Deleting pod "simpletest.rc-zxn8h" in namespace "gc-1536"
  I1116 13:12:17.543948 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1536" for this suite. @ 11/16/24 13:12:17.587
• [43.772 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 11/16/24 13:12:17.641
  I1116 13:12:17.641499 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename replication-controller @ 11/16/24 13:12:17.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:12:17.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:12:17.661
  STEP: creating a ReplicationController @ 11/16/24 13:12:17.667
  STEP: waiting for RC to be added @ 11/16/24 13:12:17.677
  STEP: waiting for available Replicas @ 11/16/24 13:12:17.677
  STEP: patching ReplicationController @ 11/16/24 13:12:20.658
  STEP: waiting for RC to be modified @ 11/16/24 13:12:20.665
  STEP: patching ReplicationController status @ 11/16/24 13:12:20.665
  STEP: waiting for RC to be modified @ 11/16/24 13:12:20.671
  STEP: waiting for available Replicas @ 11/16/24 13:12:20.672
  STEP: fetching ReplicationController status @ 11/16/24 13:12:20.678
  STEP: patching ReplicationController scale @ 11/16/24 13:12:20.682
  STEP: waiting for RC to be modified @ 11/16/24 13:12:20.691
  STEP: waiting for ReplicationController's scale to be the max amount @ 11/16/24 13:12:20.692
  STEP: fetching ReplicationController; ensuring that it's patched @ 11/16/24 13:12:21.699
  STEP: updating ReplicationController status @ 11/16/24 13:12:21.704
  STEP: waiting for RC to be modified @ 11/16/24 13:12:21.711
  STEP: listing all ReplicationControllers @ 11/16/24 13:12:21.711
  STEP: checking that ReplicationController has expected values @ 11/16/24 13:12:21.715
  STEP: deleting ReplicationControllers by collection @ 11/16/24 13:12:21.715
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 11/16/24 13:12:21.727
  I1116 13:12:21.765331 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1116 13:12:21.765438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9716" for this suite. @ 11/16/24 13:12:21.769
• [4.137 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 11/16/24 13:12:21.778
  I1116 13:12:21.778359 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir @ 11/16/24 13:12:21.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:12:21.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:12:21.798
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/16/24 13:12:21.8
  E1116 13:12:22.766203      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:23.767267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:12:23.822
  I1116 13:12:23.825390 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-3d91f5c7-3de7-4924-a50a-56cdd2807ebc container test-container: <nil>
  STEP: delete the pod @ 11/16/24 13:12:23.833
  I1116 13:12:23.855190 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6457" for this suite. @ 11/16/24 13:12:23.86
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 11/16/24 13:12:23.867
  I1116 13:12:23.867409 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename gc @ 11/16/24 13:12:23.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:12:23.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:12:23.893
  STEP: create the rc @ 11/16/24 13:12:23.94
  W1116 13:12:23.951634      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1116 13:12:24.767603      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:25.768495      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:26.768713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:27.769247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:28.769354      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 11/16/24 13:12:28.958
  STEP: wait for all pods to be garbage collected @ 11/16/24 13:12:28.967
  E1116 13:12:29.770241      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:30.770344      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:31.770560      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:32.770796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:33.771271      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/16/24 13:12:33.976
  W1116 13:12:33.982496      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1116 13:12:33.982524 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1116 13:12:33.982717 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5453" for this suite. @ 11/16/24 13:12:33.987
• [10.130 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 11/16/24 13:12:33.997
  I1116 13:12:33.997258 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-probe @ 11/16/24 13:12:33.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:12:34.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:12:34.017
  STEP: Creating pod liveness-5dbbd6cf-1376-4cd2-8c2f-fdf6c6cbfc0c in namespace container-probe-9935 @ 11/16/24 13:12:34.019
  E1116 13:12:34.771382      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:35.771562      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/16/24 13:12:36.041
  I1116 13:12:36.046401 18 container_probe.go:1749] Initial restart count of pod liveness-5dbbd6cf-1376-4cd2-8c2f-fdf6c6cbfc0c is 0
  I1116 13:12:36.051172 18 container_probe.go:1759] Get pod liveness-5dbbd6cf-1376-4cd2-8c2f-fdf6c6cbfc0c in namespace container-probe-9935
  E1116 13:12:36.771730      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:37.772005      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:12:38.056764 18 container_probe.go:1759] Get pod liveness-5dbbd6cf-1376-4cd2-8c2f-fdf6c6cbfc0c in namespace container-probe-9935
  E1116 13:12:38.772547      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:39.772649      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:12:40.062277 18 container_probe.go:1759] Get pod liveness-5dbbd6cf-1376-4cd2-8c2f-fdf6c6cbfc0c in namespace container-probe-9935
  E1116 13:12:40.773205      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:41.773402      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:12:42.067882 18 container_probe.go:1759] Get pod liveness-5dbbd6cf-1376-4cd2-8c2f-fdf6c6cbfc0c in namespace container-probe-9935
  E1116 13:12:42.773678      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:43.774705      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:12:44.073452 18 container_probe.go:1759] Get pod liveness-5dbbd6cf-1376-4cd2-8c2f-fdf6c6cbfc0c in namespace container-probe-9935
  E1116 13:12:44.775202      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:45.775495      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:12:46.079544 18 container_probe.go:1759] Get pod liveness-5dbbd6cf-1376-4cd2-8c2f-fdf6c6cbfc0c in namespace container-probe-9935
  E1116 13:12:46.776251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:47.776360      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:12:48.084874 18 container_probe.go:1759] Get pod liveness-5dbbd6cf-1376-4cd2-8c2f-fdf6c6cbfc0c in namespace container-probe-9935
  E1116 13:12:48.777254      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:49.777361      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:12:50.091393 18 container_probe.go:1759] Get pod liveness-5dbbd6cf-1376-4cd2-8c2f-fdf6c6cbfc0c in namespace container-probe-9935
  E1116 13:12:50.778395      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:51.779258      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:12:52.097675 18 container_probe.go:1759] Get pod liveness-5dbbd6cf-1376-4cd2-8c2f-fdf6c6cbfc0c in namespace container-probe-9935
  E1116 13:12:52.779419      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:53.779641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:12:54.103157 18 container_probe.go:1759] Get pod liveness-5dbbd6cf-1376-4cd2-8c2f-fdf6c6cbfc0c in namespace container-probe-9935
  E1116 13:12:54.779913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:55.780658      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:12:56.110147 18 container_probe.go:1759] Get pod liveness-5dbbd6cf-1376-4cd2-8c2f-fdf6c6cbfc0c in namespace container-probe-9935
  I1116 13:12:56.110182 18 container_probe.go:1763] Restart count of pod container-probe-9935/liveness-5dbbd6cf-1376-4cd2-8c2f-fdf6c6cbfc0c is now 1 (20.063754358s elapsed)
  STEP: deleting the pod @ 11/16/24 13:12:56.11
  I1116 13:12:56.125368 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9935" for this suite. @ 11/16/24 13:12:56.128
• [22.141 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 11/16/24 13:12:56.138
  I1116 13:12:56.138426 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename dns @ 11/16/24 13:12:56.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:12:56.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:12:56.157
  STEP: Creating a test headless service @ 11/16/24 13:12:56.159
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2646 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2646;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2646 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2646;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2646.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2646.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2646.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2646.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2646.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2646.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2646.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2646.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2646.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2646.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2646.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2646.svc;check="$$(dig +notcp +noall +answer +search 53.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.53_udp@PTR;check="$$(dig +tcp +noall +answer +search 53.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.53_tcp@PTR;sleep 1; done
   @ 11/16/24 13:12:56.179
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2646 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2646;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2646 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2646;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2646.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2646.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2646.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2646.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2646.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2646.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2646.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2646.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2646.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2646.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2646.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2646.svc;check="$$(dig +notcp +noall +answer +search 53.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.53_udp@PTR;check="$$(dig +tcp +noall +answer +search 53.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.53_tcp@PTR;sleep 1; done
   @ 11/16/24 13:12:56.179
  STEP: creating a pod to probe DNS @ 11/16/24 13:12:56.179
  STEP: submitting the pod to kubernetes @ 11/16/24 13:12:56.179
  E1116 13:12:56.781695      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:57.781798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:58.781991      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:12:59.782239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:00.783253      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:01.783475      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:02.783601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:03.783683      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/16/24 13:13:04.227
  STEP: looking for the results for each expected name from probers @ 11/16/24 13:13:04.231
  I1116 13:13:04.239410 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.244001 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.250110 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2646 from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.254486 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2646 from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.260080 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2646.svc from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.265691 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2646.svc from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.270346 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2646.svc from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.276239 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2646.svc from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.301489 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.307172 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.312557 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2646 from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.317106 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2646 from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.322432 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2646.svc from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.330536 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2646.svc from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.336619 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2646.svc from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.344184 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2646.svc from pod dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac: the server could not find the requested resource (get pods dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac)
  I1116 13:13:04.377379 18 dns_common.go:489] Lookups using dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2646 wheezy_tcp@dns-test-service.dns-2646 wheezy_udp@dns-test-service.dns-2646.svc wheezy_tcp@dns-test-service.dns-2646.svc wheezy_udp@_http._tcp.dns-test-service.dns-2646.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2646.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2646 jessie_tcp@dns-test-service.dns-2646 jessie_udp@dns-test-service.dns-2646.svc jessie_tcp@dns-test-service.dns-2646.svc jessie_udp@_http._tcp.dns-test-service.dns-2646.svc jessie_tcp@_http._tcp.dns-test-service.dns-2646.svc]

  I1116 13:13:04.391999 18 dns_common.go:495] Pod client logs for webserver: 
  I1116 13:13:04.408123 18 dns_common.go:495] Pod client logs for querier: 
  I1116 13:13:04.417128 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E1116 13:13:04.784640      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:05.785249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:06.785336      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:07.785422      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:08.785547      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:13:09.347650 18 dns_common.go:527] DNS probes using dns-2646/dns-test-3f3a1452-80eb-4bad-94d6-a223c0e066ac succeeded

  STEP: deleting the pod @ 11/16/24 13:13:09.347
  STEP: deleting the test service @ 11/16/24 13:13:09.364
  STEP: deleting the test headless service @ 11/16/24 13:13:09.392
  I1116 13:13:09.407666 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2646" for this suite. @ 11/16/24 13:13:09.412
• [13.282 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 11/16/24 13:13:09.42
  I1116 13:13:09.420231 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/16/24 13:13:09.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:13:09.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:13:09.438
  I1116 13:13:09.440840 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  E1116 13:13:09.786258      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:13:09.994638 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8771" for this suite. @ 11/16/24 13:13:10.004
• [0.592 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 11/16/24 13:13:10.011
  I1116 13:13:10.011913 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir @ 11/16/24 13:13:10.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:13:10.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:13:10.03
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/16/24 13:13:10.032
  E1116 13:13:10.786380      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:11.786576      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:12.786635      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:13.786760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:14.787250      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:15.787372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:16.788280      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:17.788450      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:18.789278      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:19.789375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:13:20.075
  I1116 13:13:20.080762 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-85bfb757-74b4-40e2-8c56-f2be618fa40a container test-container: <nil>
  STEP: delete the pod @ 11/16/24 13:13:20.09
  I1116 13:13:20.108577 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-711" for this suite. @ 11/16/24 13:13:20.113
• [10.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 11/16/24 13:13:20.122
  I1116 13:13:20.122516 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 13:13:20.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:13:20.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:13:20.143
  STEP: creating service multi-endpoint-test in namespace services-3499 @ 11/16/24 13:13:20.145
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3499 to expose endpoints map[] @ 11/16/24 13:13:20.159
  I1116 13:13:20.164874 18 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E1116 13:13:20.789522      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:13:21.177103 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-3499 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3499 @ 11/16/24 13:13:21.177
  E1116 13:13:21.789627      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:22.789857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3499 to expose endpoints map[pod1:[100]] @ 11/16/24 13:13:23.204
  I1116 13:13:23.218470 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-3499 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-3499 @ 11/16/24 13:13:23.218
  E1116 13:13:23.790852      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:24.791089      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3499 to expose endpoints map[pod1:[100] pod2:[101]] @ 11/16/24 13:13:25.241
  I1116 13:13:25.257125 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-3499 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 11/16/24 13:13:25.257
  I1116 13:13:25.257176 18 resource.go:361] Creating new exec pod
  E1116 13:13:25.791131      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:26.791211      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:27.792104      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:13:28.278804 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-3499 exec execpodrk5kk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1116 13:13:28.361021 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I1116 13:13:28.361076 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 13:13:28.361141 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-3499 exec execpodrk5kk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.87 80'
  I1116 13:13:28.441719 18 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.87 80\n+ echo hostName\nConnection to 10.152.183.87 80 port [tcp/http] succeeded!\n"
  I1116 13:13:28.441761 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 13:13:28.441824 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-3499 exec execpodrk5kk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1116 13:13:28.531585 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I1116 13:13:28.531618 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 13:13:28.531678 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-3499 exec execpodrk5kk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.87 81'
  I1116 13:13:28.612369 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.87 81\nConnection to 10.152.183.87 81 port [tcp/*] succeeded!\n"
  I1116 13:13:28.612415 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3499 @ 11/16/24 13:13:28.612
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3499 to expose endpoints map[pod2:[101]] @ 11/16/24 13:13:28.636
  I1116 13:13:28.655101 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-3499 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-3499 @ 11/16/24 13:13:28.655
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3499 to expose endpoints map[] @ 11/16/24 13:13:28.668
  I1116 13:13:28.684707 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-3499 exposes endpoints map[]
  I1116 13:13:28.708608 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3499" for this suite. @ 11/16/24 13:13:28.713
• [8.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 11/16/24 13:13:28.722
  I1116 13:13:28.722907 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/16/24 13:13:28.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:13:28.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:13:28.742
  I1116 13:13:28.745197 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  E1116 13:13:28.793587      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:29.794174      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:30.794880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:31.795639      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:32.796261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:33.797252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:34.797313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:13:35.119745 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1896" for this suite. @ 11/16/24 13:13:35.123
• [6.412 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 11/16/24 13:13:35.135
  I1116 13:13:35.135202 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename sched-preemption @ 11/16/24 13:13:35.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:13:35.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:13:35.156
  I1116 13:13:35.173363 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1116 13:13:35.798348      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:36.798428      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:37.798525      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:38.798614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:39.798854      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:40.799650      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:41.799747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:42.799860      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:43.800839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:44.800905      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:45.801574      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:46.801673      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:47.802322      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:48.802530      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:49.802648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:50.802951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:51.803121      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:52.803255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:53.803331      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:54.804055      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:55.804175      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:56.805236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:57.806276      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:58.806365      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:13:59.806483      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:00.807524      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:01.808461      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:02.808655      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:03.808756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:04.809262      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:05.810244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:06.811246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:07.812243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:08.812359      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:09.813234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:10.813425      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:11.813798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:12.814238      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:13.815243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:14.815337      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:15.816231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:16.817246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:17.817372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:18.817497      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:19.817735      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:20.818721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:21.819176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:22.820230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:23.820400      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:24.820496      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:25.821416      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:26.821510      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:27.821936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:28.822133      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:29.823146      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:30.823290      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:31.823877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:32.824090      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:33.824201      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:34.824278      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:14:35.178436 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/16/24 13:14:35.183
  I1116 13:14:35.183492 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/16/24 13:14:35.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:14:35.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:14:35.203
  I1116 13:14:35.219923 18 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1116 13:14:35.225101 18 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I1116 13:14:35.313701 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4661" for this suite. @ 11/16/24 13:14:35.318
  I1116 13:14:35.327936 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7402" for this suite. @ 11/16/24 13:14:35.332
• [60.206 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 11/16/24 13:14:35.341
  I1116 13:14:35.341013 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename dns @ 11/16/24 13:14:35.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:14:35.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:14:35.357
  STEP: Creating a test headless service @ 11/16/24 13:14:35.36
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2537.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2537.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 11/16/24 13:14:35.366
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2537.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2537.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 11/16/24 13:14:35.368
  STEP: creating a pod to probe DNS @ 11/16/24 13:14:35.368
  STEP: submitting the pod to kubernetes @ 11/16/24 13:14:35.368
  E1116 13:14:35.824910      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:36.825014      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/16/24 13:14:37.394
  STEP: looking for the results for each expected name from probers @ 11/16/24 13:14:37.399
  I1116 13:14:37.435971 18 dns_common.go:527] DNS probes using dns-2537/dns-test-a29d5ef1-578e-4949-8a46-9c65ac3f3b3d succeeded

  STEP: deleting the pod @ 11/16/24 13:14:37.436
  STEP: deleting the test headless service @ 11/16/24 13:14:37.471
  I1116 13:14:37.501448 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2537" for this suite. @ 11/16/24 13:14:37.509
• [2.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 11/16/24 13:14:37.521
  I1116 13:14:37.521415 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:14:37.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:14:37.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:14:37.542
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-8648fea2-e68f-449f-a4c1-47e266342cd2 @ 11/16/24 13:14:37.549
  STEP: Creating the pod @ 11/16/24 13:14:37.555
  E1116 13:14:37.825556      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:38.825675      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-8648fea2-e68f-449f-a4c1-47e266342cd2 @ 11/16/24 13:14:39.589
  STEP: waiting to observe update in volume @ 11/16/24 13:14:39.595
  E1116 13:14:39.826167      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:40.826290      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:41.826886      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:42.827009      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:43.827815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:44.828065      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:45.828132      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:46.828359      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:47.829201      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:48.830253      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:49.830619      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:50.831544      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:51.832116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:52.832206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:53.833073      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:54.833719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:55.833807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:56.833933      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:57.833965      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:58.834079      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:14:59.835095      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:00.835207      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:01.835443      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:02.835533      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:03.835592      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:04.835704      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:05.836021      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:06.836204      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:07.836374      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:08.836489      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:09.837392      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:10.837467      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:11.838314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:12.839260      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:13.839353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:14.839661      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:15.840387      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:16.840533      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:17.840716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:18.840928      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:19.841583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:20.842578      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:21.843609      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:22.844702      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:23.845494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:24.846260      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:25.846938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:26.847134      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:27.847284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:28.847419      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:29.847631      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:30.848477      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:31.848599      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:32.848828      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:33.848915      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:34.849250      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:35.850255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:36.850396      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:37.850492      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:38.850597      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:39.850707      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:40.851646      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:41.851774      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:15:41.935316 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8234" for this suite. @ 11/16/24 13:15:41.939
• [64.426 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 11/16/24 13:15:41.948
  I1116 13:15:41.948238 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/16/24 13:15:41.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:15:41.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:15:41.968
  STEP: getting /apis @ 11/16/24 13:15:41.976
  STEP: getting /apis/admissionregistration.k8s.io @ 11/16/24 13:15:41.979
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 11/16/24 13:15:41.98
  STEP: creating @ 11/16/24 13:15:41.981
  STEP: getting @ 11/16/24 13:15:41.999
  STEP: listing @ 11/16/24 13:15:42.003
  STEP: watching @ 11/16/24 13:15:42.006
  I1116 13:15:42.006875 18 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 11/16/24 13:15:42.007
  STEP: updating @ 11/16/24 13:15:42.013
  I1116 13:15:42.022601 18 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 11/16/24 13:15:42.022
  STEP: deleting a collection @ 11/16/24 13:15:42.037
  I1116 13:15:42.062742 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5154" for this suite. @ 11/16/24 13:15:42.067
• [0.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 11/16/24 13:15:42.077
  I1116 13:15:42.077177 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename resourcequota @ 11/16/24 13:15:42.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:15:42.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:15:42.098
  STEP: Creating resourceQuota "e2e-rq-status-qlq74" @ 11/16/24 13:15:42.103
  I1116 13:15:42.115387 18 resource_quota.go:1102] Resource quota "e2e-rq-status-qlq74" reports spec: hard cpu limit of 500m
  I1116 13:15:42.115408 18 resource_quota.go:1104] Resource quota "e2e-rq-status-qlq74" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-qlq74" /status @ 11/16/24 13:15:42.115
  STEP: Confirm /status for "e2e-rq-status-qlq74" resourceQuota via watch @ 11/16/24 13:15:42.126
  I1116 13:15:42.127506 18 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-qlq74" in namespace "resourcequota-2121" with hard status: v1.ResourceList(nil)
  I1116 13:15:42.127594 18 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-qlq74" in namespace "resourcequota-2121" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1116 13:15:42.127639 18 resource_quota.go:1141] ResourceQuota "e2e-rq-status-qlq74" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 11/16/24 13:15:42.131
  I1116 13:15:42.136506 18 resource_quota.go:1152] Resource quota "e2e-rq-status-qlq74" reports spec: hard cpu limit of 1
  I1116 13:15:42.136527 18 resource_quota.go:1153] Resource quota "e2e-rq-status-qlq74" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-qlq74" /status @ 11/16/24 13:15:42.136
  STEP: Confirm /status for "e2e-rq-status-qlq74" resourceQuota via watch @ 11/16/24 13:15:42.141
  I1116 13:15:42.142664 18 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-qlq74" in namespace "resourcequota-2121" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1116 13:15:42.143287 18 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-qlq74" in namespace "resourcequota-2121" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1116 13:15:42.143301 18 resource_quota.go:1185] ResourceQuota "e2e-rq-status-qlq74" /status was patched
  STEP: Get "e2e-rq-status-qlq74" /status @ 11/16/24 13:15:42.143
  I1116 13:15:42.147718 18 resource_quota.go:1196] Resourcequota "e2e-rq-status-qlq74" reports status: hard cpu of 1
  I1116 13:15:42.147737 18 resource_quota.go:1198] Resourcequota "e2e-rq-status-qlq74" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-qlq74" /status before checking Spec is unchanged @ 11/16/24 13:15:42.152
  I1116 13:15:42.163868 18 resource_quota.go:1218] Resourcequota "e2e-rq-status-qlq74" reports status: hard cpu of 2
  I1116 13:15:42.163889 18 resource_quota.go:1220] Resourcequota "e2e-rq-status-qlq74" reports status: hard memory of 2Gi
  I1116 13:15:42.164971 18 resource_quota.go:1229] observed resourceQuota "e2e-rq-status-qlq74" in namespace "resourcequota-2121" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1116 13:15:42.164993 18 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-qlq74" in namespace "resourcequota-2121" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1116 13:15:42.168290 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001247998), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001247a10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001247a58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:15:42.851897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:43.852828      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:44.852951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:45.853644      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:46.853706      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:15:47.170117 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042d1c80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042d1cb0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042d1ce0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:15:47.854651      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:48.854728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:49.854826      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:50.855584      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:51.855697      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:15:52.170168 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001247e90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001247f38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8000), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:15:52.856278      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:53.857260      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:54.857351      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:55.857486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:56.857692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:15:57.170222 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8348), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:15:57.857983      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:58.858083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:15:59.858177      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:00.858307      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:01.858508      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:16:02.171142 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e018), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e0d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:16:02.858832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:03.859277      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:04.859403      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:05.859535      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:06.859730      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:16:07.170007 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e2e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e330), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:16:07.860805      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:08.860927      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:09.861094      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:10.861350      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:11.861469      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:16:12.170815 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8708), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8768), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef87b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:16:12.861652      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:13.861778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:14.861861      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:15.862686      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:16.862823      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:16:17.170792 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e618), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e678), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e6f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:16:17.863194      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:18.864222      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:19.864718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:20.865155      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:21.865218      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:16:22.170294 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e930), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e9a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:16:22.866060      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:23.866196      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:24.866316      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:25.866513      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:26.867281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:16:27.170629 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2eba0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2ec48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2eca8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:16:27.868273      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:28.868385      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:29.868456      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:30.868545      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:31.868752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:16:32.170732 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2eeb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2eee8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2ef48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:16:32.868889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:33.869179      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:34.869221      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:35.869396      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:36.869601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:16:37.171194 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e138), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e168), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e1c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:16:37.869709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:38.869892      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:39.870140      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:40.870558      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:41.871295      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:16:42.170990 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8180), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef81c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8270), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:16:42.871469      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:43.871653      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:44.871769      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:45.872629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:46.873239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:16:47.171158 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e438), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e498), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:16:47.873397      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:48.873506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:49.873622      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:50.873683      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:51.873748      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:16:52.169986 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef85e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8618), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8678), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:16:52.874235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:53.874301      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:54.874360      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:55.874514      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:56.875433      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:16:57.171206 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8a08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8a50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8ab0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:16:57.876242      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:58.876339      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:16:59.877233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:00.877475      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:01.877665      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:17:02.169694 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8c48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8d08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef8d50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:17:02.877809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:03.878229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:04.878423      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:05.878519      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:06.878762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:17:07.170565 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e810), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e840), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2e8a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:17:07.879164      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:08.879252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:09.879487      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:10.879544      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:11.879730      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:17:12.170572 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef9098), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef9158), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef91d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:17:12.879836      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:13.880776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:14.880894      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:15.881650      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:16.881880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:17:17.169486 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2eb28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2eb70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2eba0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:17:17.881983      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:18.882172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:19.882353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:20.882606      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:21.883470      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:17:22.171435 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2ee28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2ee88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2eed0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:17:22.884336      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:23.884443      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:24.885235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:25.886229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:26.887242      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:17:27.171202 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2f098), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2f0c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2f140), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:17:27.887351      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:28.887548      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:29.887669      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:30.888576      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:31.888675      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:17:32.169548 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef95f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef9668), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef96b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:17:32.889161      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:33.889282      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:34.889467      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:35.889540      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:36.889706      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:17:37.170584 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2f458), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2f4b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2f518), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:17:37.889828      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:38.890019      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:39.890158      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:40.890480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:41.890591      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:17:42.170748 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2f728), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2f770), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2f7d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:17:42.891536      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:43.891660      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:44.891902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:45.892678      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:46.892819      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:17:47.169721 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef9b00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef9b60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef9b90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:17:47.893165      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:48.893262      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:49.894253      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:50.894495      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:51.894578      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:17:52.170359 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef9e60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef9f08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef9f68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:17:52.895111      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:53.895173      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:54.896235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:55.896510      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:56.897239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:17:57.171235 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2fab8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2fb18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2fb60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:17:57.897338      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:58.898237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:17:59.898426      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:00.898538      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:01.898729      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:18:02.169770 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d44300), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d44348), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d443d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:18:02.898842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:03.899026      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:04.899244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:05.899528      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:06.899708      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:18:07.170327 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d44708), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d44798), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d447e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:18:07.900068      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:08.900259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:09.900448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:10.900557      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:11.900798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:18:12.170833 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2fe90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2ff08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e2ff38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:18:12.900911      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:13.901120      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:14.901211      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:15.901459      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:16.901631      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:18:17.170931 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d44ed0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d44f00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d44f48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:18:17.902592      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:18.902776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:19.902813      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:20.903674      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:21.903740      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:18:22.170156 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d45170), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d451a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d451d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:18:22.904556      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:23.904649      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:24.905242      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:25.905545      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:26.906233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:18:27.171101 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054b21e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054b2210), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054b2240), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:18:27.906344      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:28.907230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:29.907410      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:30.907529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:31.907654      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:18:32.170060 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054b2420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054b2468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054b24b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:18:32.907807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:33.908152      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:34.908309      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:35.908698      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:36.908781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:18:37.170895 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054b2060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054b2090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054b20c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:18:37.909690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:38.909817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:39.909901      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:40.910234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:41.910329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:18:42.171133 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d44198), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d441c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d44240), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:18:42.910857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:43.911066      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:44.911305      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:45.911533      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:46.911636      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:18:47.170850 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-qlq74" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qlq74", GenerateName:"", Namespace:"resourcequota-2121", SelfLink:"", UID:"a03ad3a7-1f7e-4da8-b382-e924068b04e8", ResourceVersion:"29702", Generation:0, CreationTimestamp:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qlq74"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d44558), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d445a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 16, 13, 15, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d44600), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1116 13:18:47.912269      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:48.912557      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:49.913441      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:50.914230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:51.915236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:18:52.171309 18 resource_quota.go:1260] ResourceQuota "e2e-rq-status-qlq74" Spec was unchanged and /status reset
  I1116 13:18:52.171440 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2121" for this suite. @ 11/16/24 13:18:52.176
• [190.108 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 11/16/24 13:18:52.185
  I1116 13:18:52.185569 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename svcaccounts @ 11/16/24 13:18:52.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:18:52.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:18:52.206
  E1116 13:18:52.915368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:53.915463      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 11/16/24 13:18:54.235
  I1116 13:18:54.235766 18 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6881 pod-service-account-c94ffc5d-e428-4833-8dbc-84314dc370a4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 11/16/24 13:18:54.325
  I1116 13:18:54.325421 18 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6881 pod-service-account-c94ffc5d-e428-4833-8dbc-84314dc370a4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 11/16/24 13:18:54.41
  I1116 13:18:54.410193 18 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6881 pod-service-account-c94ffc5d-e428-4833-8dbc-84314dc370a4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1116 13:18:54.495769 18 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-6881"
  I1116 13:18:54.497603 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6881" for this suite. @ 11/16/24 13:18:54.502
• [2.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 11/16/24 13:18:54.511
  I1116 13:18:54.511365 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 13:18:54.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:18:54.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:18:54.534
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-387 @ 11/16/24 13:18:54.536
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/16/24 13:18:54.557
  STEP: creating service externalsvc in namespace services-387 @ 11/16/24 13:18:54.557
  STEP: creating replication controller externalsvc in namespace services-387 @ 11/16/24 13:18:54.577
  I1116 13:18:54.585158      18 runners.go:193] Created replication controller with name: externalsvc, namespace: services-387, replica count: 2
  E1116 13:18:54.916298      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:55.916405      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:56.916517      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:18:57.636131      18 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 11/16/24 13:18:57.642
  I1116 13:18:57.666932 18 resource.go:361] Creating new exec pod
  E1116 13:18:57.917477      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:18:58.917595      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:18:59.685420 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-387 exec execpodhvrsm -- /bin/sh -x -c nslookup nodeport-service.services-387.svc.cluster.local'
  I1116 13:18:59.787363 18 builder.go:146] stderr: "+ nslookup nodeport-service.services-387.svc.cluster.local\n"
  I1116 13:18:59.787409 18 builder.go:147] stdout: "Server:\t\t10.152.183.158\nAddress:\t10.152.183.158#53\n\nnodeport-service.services-387.svc.cluster.local\tcanonical name = externalsvc.services-387.svc.cluster.local.\nName:\texternalsvc.services-387.svc.cluster.local\nAddress: 10.152.183.191\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-387, will wait for the garbage collector to delete the pods @ 11/16/24 13:18:59.787
  I1116 13:18:59.852126 18 resources.go:139] Deleting ReplicationController externalsvc took: 9.249982ms
  E1116 13:18:59.918324      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:18:59.952664 18 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.533087ms
  E1116 13:19:00.918768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:01.919130      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:19:02.475807 18 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I1116 13:19:02.489297 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-387" for this suite. @ 11/16/24 13:19:02.493
• [7.991 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 11/16/24 13:19:02.502
  I1116 13:19:02.502227 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename disruption @ 11/16/24 13:19:02.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:19:02.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:19:02.52
  STEP: Creating a kubernetes client @ 11/16/24 13:19:02.522
  I1116 13:19:02.522317 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename disruption-2 @ 11/16/24 13:19:02.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:19:02.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:19:02.541
  STEP: Waiting for the pdb to be processed @ 11/16/24 13:19:02.548
  E1116 13:19:02.919777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:03.919878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 11/16/24 13:19:04.559
  E1116 13:19:04.920779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:05.921679      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 11/16/24 13:19:06.578
  E1116 13:19:06.921781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:07.921978      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 11/16/24 13:19:08.583
  STEP: listing a collection of PDBs in namespace disruption-2893 @ 11/16/24 13:19:08.587
  STEP: deleting a collection of PDBs @ 11/16/24 13:19:08.591
  STEP: Waiting for the PDB collection to be deleted @ 11/16/24 13:19:08.607
  I1116 13:19:08.612457 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-2405" for this suite. @ 11/16/24 13:19:08.617
  I1116 13:19:08.626196 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2893" for this suite. @ 11/16/24 13:19:08.63
• [6.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 11/16/24 13:19:08.64
  I1116 13:19:08.640080 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename job @ 11/16/24 13:19:08.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:19:08.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:19:08.657
  STEP: Creating a job @ 11/16/24 13:19:08.659
  STEP: Ensuring active pods == parallelism @ 11/16/24 13:19:08.666
  E1116 13:19:08.922075      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:09.922205      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete a job @ 11/16/24 13:19:10.67
  STEP: deleting Job.batch foo in namespace job-6706, will wait for the garbage collector to delete the pods @ 11/16/24 13:19:10.67
  I1116 13:19:10.735824 18 resources.go:139] Deleting Job.batch foo took: 9.867095ms
  I1116 13:19:10.836889 18 resources.go:163] Terminating Job.batch foo pods took: 101.057573ms
  E1116 13:19:10.923093      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:11.923948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:12.924411      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 11/16/24 13:19:13.337
  I1116 13:19:13.343937 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6706" for this suite. @ 11/16/24 13:19:13.348
• [4.718 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 11/16/24 13:19:13.357
  I1116 13:19:13.357729 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename configmap @ 11/16/24 13:19:13.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:19:13.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:19:13.374
  STEP: Creating configMap with name configmap-test-volume-95a023e2-c932-4cc8-9f92-f374aa06c85d @ 11/16/24 13:19:13.376
  STEP: Creating a pod to test consume configMaps @ 11/16/24 13:19:13.383
  E1116 13:19:13.924721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:14.925388      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:19:15.401
  I1116 13:19:15.406071 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-configmaps-7e08ef30-5dce-44f1-887f-9444f7112180 container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 13:19:15.426
  I1116 13:19:15.447258 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7093" for this suite. @ 11/16/24 13:19:15.452
• [2.106 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 11/16/24 13:19:15.463
  I1116 13:19:15.463530 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename var-expansion @ 11/16/24 13:19:15.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:19:15.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:19:15.482
  E1116 13:19:15.925867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:16.926260      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:19:17.506993 18 delete.go:62] Deleting pod "var-expansion-977c9bc8-dc43-4602-8439-4a9b68956efc" in namespace "var-expansion-2544"
  I1116 13:19:17.517705 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-977c9bc8-dc43-4602-8439-4a9b68956efc" to be fully deleted
  E1116 13:19:17.926881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:18.927093      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:19:19.527880 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2544" for this suite. @ 11/16/24 13:19:19.532
• [4.078 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 11/16/24 13:19:19.541
  I1116 13:19:19.541372 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pv @ 11/16/24 13:19:19.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:19:19.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:19:19.56
  STEP: Creating initial PV and PVC @ 11/16/24 13:19:19.562
  I1116 13:19:19.562894 18 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5950" @ 11/16/24 13:19:19.577
  STEP: Listing PVCs in namespace "pv-5950" @ 11/16/24 13:19:19.585
  STEP: Patching the PV "pv-5950-gl84f" @ 11/16/24 13:19:19.591
  STEP: Patching the PVC "pvc-nk55m" @ 11/16/24 13:19:19.602
  STEP: Getting PV "pv-5950-gl84f" @ 11/16/24 13:19:19.61
  STEP: Getting PVC "pvc-nk55m" @ 11/16/24 13:19:19.615
  STEP: Deleting PVC "pvc-nk55m" @ 11/16/24 13:19:19.619
  STEP: Confirm deletion of PVC "pvc-nk55m" @ 11/16/24 13:19:19.626
  E1116 13:19:19.927197      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:20.927290      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-5950-gl84f" @ 11/16/24 13:19:21.636
  STEP: Confirm deletion of PV "pv-5950-gl84f" @ 11/16/24 13:19:21.645
  E1116 13:19:21.928192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:22.928377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 11/16/24 13:19:23.655
  I1116 13:19:23.655335 18 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-5950-sbqpm" @ 11/16/24 13:19:23.669
  STEP: Updating the PVC "pvc-tq4nd" @ 11/16/24 13:19:23.704
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-tq4nd=updated" @ 11/16/24 13:19:23.714
  STEP: Deleting PVC "pvc-tq4nd" via DeleteCollection @ 11/16/24 13:19:23.719
  STEP: Confirm deletion of PVC "pvc-tq4nd" @ 11/16/24 13:19:23.731
  E1116 13:19:23.929184      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:24.929300      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-5950-sbqpm" via DeleteCollection @ 11/16/24 13:19:25.74
  STEP: Confirm deletion of PV "pv-5950-sbqpm" @ 11/16/24 13:19:25.751
  E1116 13:19:25.930333      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:26.930533      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:19:27.759858 18 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1116 13:19:27.759887 18 pv.go:205] Deleting PersistentVolumeClaim "pvc-tq4nd"
  I1116 13:19:27.764089 18 pv.go:193] Deleting PersistentVolume "pv-5950-sbqpm"
  I1116 13:19:27.768259 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5950" for this suite. @ 11/16/24 13:19:27.773
• [8.241 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 11/16/24 13:19:27.782
  I1116 13:19:27.782074 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir @ 11/16/24 13:19:27.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:19:27.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:19:27.801
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/16/24 13:19:27.804
  E1116 13:19:27.931281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:28.931475      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:29.931506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:30.932032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:19:31.832
  I1116 13:19:31.835844 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-07afdcb6-c4a0-46fb-992a-7fe1f5bb3b6a container test-container: <nil>
  STEP: delete the pod @ 11/16/24 13:19:31.844
  I1116 13:19:31.867135 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9364" for this suite. @ 11/16/24 13:19:31.871
• [4.098 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 11/16/24 13:19:31.88
  I1116 13:19:31.880452 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/16/24 13:19:31.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:19:31.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:19:31.901
  I1116 13:19:31.903323 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  E1116 13:19:31.932331      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:32.933412      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/16/24 13:19:33.149
  I1116 13:19:33.149227 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-1735 --namespace=crd-publish-openapi-1735 create -f -'
  I1116 13:19:33.215808 18 builder.go:146] stderr: ""
  I1116 13:19:33.215887 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9946-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1116 13:19:33.215917 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-1735 --namespace=crd-publish-openapi-1735 delete e2e-test-crd-publish-openapi-9946-crds test-cr'
  I1116 13:19:33.266506 18 builder.go:146] stderr: ""
  I1116 13:19:33.266547 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9946-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1116 13:19:33.266599 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-1735 --namespace=crd-publish-openapi-1735 apply -f -'
  I1116 13:19:33.323760 18 builder.go:146] stderr: ""
  I1116 13:19:33.323788 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9946-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1116 13:19:33.323826 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-1735 --namespace=crd-publish-openapi-1735 delete e2e-test-crd-publish-openapi-9946-crds test-cr'
  I1116 13:19:33.374401 18 builder.go:146] stderr: ""
  I1116 13:19:33.374431 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9946-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/16/24 13:19:33.374
  I1116 13:19:33.374521 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-1735 explain e2e-test-crd-publish-openapi-9946-crds'
  I1116 13:19:33.414475 18 builder.go:146] stderr: ""
  I1116 13:19:33.414513 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-9946-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1116 13:19:33.933983      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:19:34.773804 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1735" for this suite. @ 11/16/24 13:19:34.78
• [2.909 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 11/16/24 13:19:34.789
  I1116 13:19:34.789176 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 13:19:34.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:19:34.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:19:34.806
  STEP: Creating a pod to test downward api env vars @ 11/16/24 13:19:34.809
  E1116 13:19:34.934541      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:35.934583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:36.935081      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:37.935205      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:19:38.834
  I1116 13:19:38.839634 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downward-api-ca60579f-fc6a-4f2c-8bc3-debe542181ce container dapi-container: <nil>
  STEP: delete the pod @ 11/16/24 13:19:38.848
  I1116 13:19:38.866873 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9108" for this suite. @ 11/16/24 13:19:38.871
• [4.091 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 11/16/24 13:19:38.88
  I1116 13:19:38.880691 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename dns @ 11/16/24 13:19:38.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:19:38.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:19:38.901
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 11/16/24 13:19:38.903
  I1116 13:19:38.914849 18 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7709  007544ba-4243-4f30-998c-754119847855 30644 0 2024-11-16 13:19:38 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-11-16 13:19:38 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5ztf5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5ztf5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E1116 13:19:38.936032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:39.937325      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 11/16/24 13:19:40.927
  I1116 13:19:40.927448 18 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7709 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 13:19:40.927470 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 13:19:40.927921 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 13:19:40.927975 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-7709/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1116 13:19:40.937846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS server is configured on pod... @ 11/16/24 13:19:40.975
  I1116 13:19:40.975898 18 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7709 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 13:19:40.975913 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 13:19:40.976397 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 13:19:40.976437 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-7709/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1116 13:19:41.028245 18 dns.go:423] Deleting pod test-dns-nameservers...
  I1116 13:19:41.048403 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7709" for this suite. @ 11/16/24 13:19:41.053
• [2.182 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 11/16/24 13:19:41.062
  I1116 13:19:41.062809 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 13:19:41.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:19:41.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:19:41.082
  STEP: creating all guestbook components @ 11/16/24 13:19:41.084
  I1116 13:19:41.084916 18 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1116 13:19:41.084981 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-6042 create -f -'
  I1116 13:19:41.172965 18 builder.go:146] stderr: ""
  I1116 13:19:41.172996 18 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1116 13:19:41.173063 18 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1116 13:19:41.173117 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-6042 create -f -'
  I1116 13:19:41.269209 18 builder.go:146] stderr: ""
  I1116 13:19:41.269237 18 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1116 13:19:41.269292 18 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1116 13:19:41.269356 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-6042 create -f -'
  I1116 13:19:41.355427 18 builder.go:146] stderr: ""
  I1116 13:19:41.355460 18 builder.go:147] stdout: "service/frontend created\n"
  I1116 13:19:41.355548 18 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1116 13:19:41.355621 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-6042 create -f -'
  I1116 13:19:41.421167 18 builder.go:146] stderr: ""
  I1116 13:19:41.421195 18 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1116 13:19:41.421274 18 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1116 13:19:41.421357 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-6042 create -f -'
  I1116 13:19:41.484015 18 builder.go:146] stderr: ""
  I1116 13:19:41.484063 18 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1116 13:19:41.484124 18 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1116 13:19:41.484188 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-6042 create -f -'
  I1116 13:19:41.546304 18 builder.go:146] stderr: ""
  I1116 13:19:41.546335 18 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 11/16/24 13:19:41.546
  I1116 13:19:41.546370 18 kubectl.go:2272] Waiting for all frontend pods to be Running.
  E1116 13:19:41.937994      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:42.938246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:43.938353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:44.938456      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:45.938712      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:19:46.597499 18 kubectl.go:2276] Waiting for frontend to serve content.
  I1116 13:19:46.614089 18 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I1116 13:19:46.628589 18 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 11/16/24 13:19:46.64
  I1116 13:19:46.640100 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-6042 delete --grace-period=0 --force -f -'
  I1116 13:19:46.706634 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1116 13:19:46.706719 18 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 11/16/24 13:19:46.706
  I1116 13:19:46.706826 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-6042 delete --grace-period=0 --force -f -'
  I1116 13:19:46.771499 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1116 13:19:46.771583 18 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/16/24 13:19:46.771
  I1116 13:19:46.771714 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-6042 delete --grace-period=0 --force -f -'
  I1116 13:19:46.832949 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1116 13:19:46.832981 18 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/16/24 13:19:46.833
  I1116 13:19:46.833213 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-6042 delete --grace-period=0 --force -f -'
  I1116 13:19:46.880348 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1116 13:19:46.880376 18 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/16/24 13:19:46.88
  I1116 13:19:46.880508 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-6042 delete --grace-period=0 --force -f -'
  I1116 13:19:46.932741 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1116 13:19:46.932777 18 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/16/24 13:19:46.932
  I1116 13:19:46.932971 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-6042 delete --grace-period=0 --force -f -'
  E1116 13:19:46.939354      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:19:47.000733 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1116 13:19:47.000831 18 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1116 13:19:47.001012 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6042" for this suite. @ 11/16/24 13:19:47.007
• [5.953 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 11/16/24 13:19:47.016
  I1116 13:19:47.016318 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename daemonsets @ 11/16/24 13:19:47.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:19:47.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:19:47.057
  STEP: Creating a simple DaemonSet "daemon-set" @ 11/16/24 13:19:47.11
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/16/24 13:19:47.115
  I1116 13:19:47.119943 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:19:47.119994 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:19:47.127489 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:19:47.127516 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  E1116 13:19:47.940274      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:19:48.121367 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:19:48.121422 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:19:48.126432 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1116 13:19:48.126455 18 fixtures.go:130] Node ip-172-31-45-197 is running 0 daemon pod, expected 1
  E1116 13:19:48.940322      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:19:49.120648 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:19:49.120694 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:19:49.124578 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1116 13:19:49.124596 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 11/16/24 13:19:49.129
  I1116 13:19:49.148993 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:19:49.149032 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:19:49.154978 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1116 13:19:49.154994 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  E1116 13:19:49.942199      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:19:50.150638 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:19:50.150685 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:19:50.155781 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1116 13:19:50.155801 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 11/16/24 13:19:50.155
  STEP: Deleting DaemonSet "daemon-set" @ 11/16/24 13:19:50.163
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8003, will wait for the garbage collector to delete the pods @ 11/16/24 13:19:50.163
  I1116 13:19:50.228448 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.709053ms
  I1116 13:19:50.328818 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.366654ms
  E1116 13:19:50.943112      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:51.943764      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:19:52.138498 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:19:52.138530 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1116 13:19:52.142642 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31012"},"items":null}

  I1116 13:19:52.145918 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31012"},"items":null}

  I1116 13:19:52.160558 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8003" for this suite. @ 11/16/24 13:19:52.164
• [5.156 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 11/16/24 13:19:52.172
  I1116 13:19:52.172393 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 13:19:52.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:19:52.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:19:52.19
  STEP: Setting up server cert @ 11/16/24 13:19:52.216
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 13:19:52.468
  STEP: Deploying the webhook pod @ 11/16/24 13:19:52.478
  STEP: Wait for the deployment to be ready @ 11/16/24 13:19:52.493
  I1116 13:19:52.509845 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1116 13:19:52.944307      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:53.944718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/16/24 13:19:54.525
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 13:19:54.541
  E1116 13:19:54.945697      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:19:55.541330 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/16/24 13:19:55.552
  STEP: create a pod that should be denied by the webhook @ 11/16/24 13:19:55.568
  STEP: create a pod that causes the webhook to hang @ 11/16/24 13:19:55.577
  E1116 13:19:55.946262      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:56.946317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:57.946508      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:58.946652      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:19:59.947292      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:00.947297      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:01.948232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:02.948451      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:03.949226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:04.949743      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 11/16/24 13:20:05.587
  STEP: create a configmap that should be admitted by the webhook @ 11/16/24 13:20:05.595
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/16/24 13:20:05.605
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/16/24 13:20:05.616
  STEP: create a namespace that bypass the webhook @ 11/16/24 13:20:05.621
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 11/16/24 13:20:05.637
  I1116 13:20:05.723953 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5848" for this suite. @ 11/16/24 13:20:05.736
  STEP: Destroying namespace "webhook-markers-3576" for this suite. @ 11/16/24 13:20:05.745
  STEP: Destroying namespace "exempted-namespace-2557" for this suite. @ 11/16/24 13:20:05.757
• [13.594 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 11/16/24 13:20:05.766
  I1116 13:20:05.766461 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename cronjob @ 11/16/24 13:20:05.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:20:05.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:20:05.792
  STEP: Creating a cronjob @ 11/16/24 13:20:05.796
  STEP: Ensuring more than one job is running at a time @ 11/16/24 13:20:05.803
  E1116 13:20:05.950304      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:06.950438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:07.951410      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:08.951551      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:09.951712      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:10.951974      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:11.952249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:12.953270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:13.953350      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:14.953451      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:15.954250      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:16.954353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:17.955124      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:18.955205      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:19.958150      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:20.956937      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:21.957557      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:22.957652      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:23.958071      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:24.958185      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:25.959262      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:26.959365      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:27.960175      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:28.960266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:29.960371      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:30.960480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:31.961277      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:32.961367      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:33.961833      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:34.961905      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:35.962790      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:36.962883      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:37.963488      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:38.964548      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:39.964758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:40.965638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:41.965873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:42.965977      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:43.966245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:44.966350      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:45.966791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:46.966921      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:47.967239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:48.967343      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:49.968158      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:50.968458      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:51.968979      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:52.969227      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:53.970156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:54.970281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:55.970428      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:56.970605      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:57.970976      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:58.971295      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:20:59.972274      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:00.972464      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:01.973398      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:02.973498      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:03.974529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:04.975259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:05.976278      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:06.977233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:07.977279      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:08.977534      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:09.978491      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:10.979297      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:11.980285      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:12.980469      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:13.981392      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:14.981552      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:15.982614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:16.982717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:17.983595      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:18.983658      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:19.984133      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:20.984209      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:21.984533      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:22.984633      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:23.985030      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:24.985179      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:25.985809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:26.986266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:27.986622      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:28.986759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:29.986835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:30.987768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:31.988176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:32.988299      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:33.989191      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:34.990263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:35.990283      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:36.990399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:37.991418      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:38.991538      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:39.992248      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:40.992473      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:41.993093      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:42.993353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:43.993711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:44.994705      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:45.995723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:46.995878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:47.996737      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:48.996821      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:49.997100      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:50.997444      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:51.998330      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:52.998487      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:53.998862      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:54.998977      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:55.999078      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:56.999184      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:57.999641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:21:58.999835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:00.000550      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:01.000678      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 11/16/24 13:22:01.809
  STEP: Removing cronjob @ 11/16/24 13:22:01.813
  I1116 13:22:01.823322 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6333" for this suite. @ 11/16/24 13:22:01.828
• [116.071 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 11/16/24 13:22:01.837
  I1116 13:22:01.837660 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pod-network-test @ 11/16/24 13:22:01.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:22:01.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:22:01.862
  STEP: Performing setup for networking test in namespace pod-network-test-4952 @ 11/16/24 13:22:01.864
  STEP: creating a selector @ 11/16/24 13:22:01.864
  STEP: Creating the service pods in kubernetes @ 11/16/24 13:22:01.864
  I1116 13:22:01.864807 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1116 13:22:02.000759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:03.000902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:04.001427      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:05.001547      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:06.001809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:07.002027      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:08.002251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:09.002388      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:10.002683      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:11.003775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:12.004726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:13.004836      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/16/24 13:22:13.97
  E1116 13:22:14.004965      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:15.005203      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:22:15.992030 18 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1116 13:22:15.992078 18 networking.go:42] Breadth first check of 192.168.164.72 on host 172.31.22.107...
  I1116 13:22:15.996906 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.82.160:9080/dial?request=hostname&protocol=http&host=192.168.164.72&port=8083&tries=1'] Namespace:pod-network-test-4952 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 13:22:15.996932 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 13:22:15.997342 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 13:22:15.997396 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4952/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.82.160%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.164.72%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E1116 13:22:16.006182      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:22:16.043978 18 utils.go:356] Waiting for responses: map[]
  I1116 13:22:16.044009 18 utils.go:360] reached 192.168.164.72 after 0/1 tries
  I1116 13:22:16.044019 18 networking.go:42] Breadth first check of 192.168.82.159 on host 172.31.45.197...
  I1116 13:22:16.049559 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.82.160:9080/dial?request=hostname&protocol=http&host=192.168.82.159&port=8083&tries=1'] Namespace:pod-network-test-4952 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 13:22:16.049583 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 13:22:16.049989 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 13:22:16.050030 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4952/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.82.160%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.82.159%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1116 13:22:16.089131 18 utils.go:356] Waiting for responses: map[]
  I1116 13:22:16.089163 18 utils.go:360] reached 192.168.82.159 after 0/1 tries
  I1116 13:22:16.089173 18 networking.go:42] Breadth first check of 192.168.216.101 on host 172.31.72.246...
  I1116 13:22:16.094771 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.82.160:9080/dial?request=hostname&protocol=http&host=192.168.216.101&port=8083&tries=1'] Namespace:pod-network-test-4952 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 13:22:16.094792 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 13:22:16.095175 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 13:22:16.095213 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4952/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.82.160%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.216.101%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1116 13:22:16.136989 18 utils.go:356] Waiting for responses: map[]
  I1116 13:22:16.137015 18 utils.go:360] reached 192.168.216.101 after 0/1 tries
  I1116 13:22:16.137026 18 networking.go:53] Going to retry 0 out of 3 pods....
  I1116 13:22:16.137158 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4952" for this suite. @ 11/16/24 13:22:16.142
• [14.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 11/16/24 13:22:16.151
  I1116 13:22:16.151880 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename csi-storageclass @ 11/16/24 13:22:16.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:22:16.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:22:16.174
  STEP: Creating a StorageClass @ 11/16/24 13:22:16.177
  STEP: Get StorageClass "e2e-ll5wr" @ 11/16/24 13:22:16.183
  STEP: Patching the StorageClass "e2e-ll5wr" @ 11/16/24 13:22:16.188
  STEP: Delete StorageClass "e2e-ll5wr" @ 11/16/24 13:22:16.195
  STEP: Confirm deletion of StorageClass "e2e-ll5wr" @ 11/16/24 13:22:16.203
  STEP: Create a replacement StorageClass @ 11/16/24 13:22:16.207
  STEP: Updating StorageClass "e2e-v2-hkn87" @ 11/16/24 13:22:16.212
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-hkn87=updated" @ 11/16/24 13:22:16.22
  STEP: Deleting StorageClass "e2e-v2-hkn87" via DeleteCollection @ 11/16/24 13:22:16.224
  STEP: Confirm deletion of StorageClass "e2e-v2-hkn87" @ 11/16/24 13:22:16.235
  I1116 13:22:16.239866 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-8171" for this suite. @ 11/16/24 13:22:16.243
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 11/16/24 13:22:16.252
  I1116 13:22:16.252018 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename dns @ 11/16/24 13:22:16.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:22:16.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:22:16.274
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2704.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-2704.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 11/16/24 13:22:16.276
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2704.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2704.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 11/16/24 13:22:16.276
  STEP: creating a pod to probe /etc/hosts @ 11/16/24 13:22:16.276
  STEP: submitting the pod to kubernetes @ 11/16/24 13:22:16.276
  E1116 13:22:17.006448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:18.006550      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/16/24 13:22:18.298
  STEP: looking for the results for each expected name from probers @ 11/16/24 13:22:18.303
  I1116 13:22:18.326004 18 dns_common.go:527] DNS probes using dns-2704/dns-test-df014022-a725-4e76-8506-e12c9d7d61fd succeeded

  STEP: deleting the pod @ 11/16/24 13:22:18.326
  I1116 13:22:18.342340 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2704" for this suite. @ 11/16/24 13:22:18.347
• [2.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 11/16/24 13:22:18.355
  I1116 13:22:18.355596 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename server-version @ 11/16/24 13:22:18.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:22:18.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:22:18.372
  STEP: Request ServerVersion @ 11/16/24 13:22:18.375
  STEP: Confirm major version @ 11/16/24 13:22:18.376
  I1116 13:22:18.377014 18 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 11/16/24 13:22:18.377
  I1116 13:22:18.377057 18 server_version.go:58] cleanMinorVersion: 31
  I1116 13:22:18.377069 18 server_version.go:62] Minor version: 31
  I1116 13:22:18.377158 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-4739" for this suite. @ 11/16/24 13:22:18.381
• [0.033 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 11/16/24 13:22:18.389
  I1116 13:22:18.389224 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename resourcequota @ 11/16/24 13:22:18.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:22:18.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:22:18.41
  STEP: Creating a ResourceQuota with best effort scope @ 11/16/24 13:22:18.412
  STEP: Ensuring ResourceQuota status is calculated @ 11/16/24 13:22:18.419
  E1116 13:22:19.006642      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:20.006731      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 11/16/24 13:22:20.426
  STEP: Ensuring ResourceQuota status is calculated @ 11/16/24 13:22:20.435
  E1116 13:22:21.007594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:22.007808      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 11/16/24 13:22:22.441
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 11/16/24 13:22:22.456
  E1116 13:22:23.008272      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:24.008505      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 11/16/24 13:22:24.462
  E1116 13:22:25.008552      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:26.008821      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/16/24 13:22:26.467
  STEP: Ensuring resource quota status released the pod usage @ 11/16/24 13:22:26.482
  E1116 13:22:27.008940      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:28.009199      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 11/16/24 13:22:28.487
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 11/16/24 13:22:28.499
  E1116 13:22:29.010011      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:30.010229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 11/16/24 13:22:30.505
  E1116 13:22:31.010276      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:32.010373      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/16/24 13:22:32.51
  STEP: Ensuring resource quota status released the pod usage @ 11/16/24 13:22:32.527
  E1116 13:22:33.010471      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:34.010586      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:22:34.534543 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7672" for this suite. @ 11/16/24 13:22:34.539
• [16.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 11/16/24 13:22:34.549
  I1116 13:22:34.549370 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename configmap @ 11/16/24 13:22:34.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:22:34.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:22:34.569
  STEP: Creating configMap with name configmap-test-volume-map-7be0d229-f5b2-4755-bef9-c2c889493735 @ 11/16/24 13:22:34.571
  STEP: Creating a pod to test consume configMaps @ 11/16/24 13:22:34.576
  E1116 13:22:35.011287      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:36.011391      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:37.011435      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:38.011648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:22:38.604
  I1116 13:22:38.609400 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-configmaps-f9e2dc39-ba2f-4df2-846c-d1e258730685 container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 13:22:38.622
  I1116 13:22:38.643519 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5363" for this suite. @ 11/16/24 13:22:38.647
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 11/16/24 13:22:38.655
  I1116 13:22:38.655958 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename gc @ 11/16/24 13:22:38.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:22:38.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:22:38.672
  STEP: create the deployment @ 11/16/24 13:22:38.675
  W1116 13:22:38.680915      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/16/24 13:22:38.681
  E1116 13:22:39.011917      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 11/16/24 13:22:39.186
  STEP: wait for all rs to be garbage collected @ 11/16/24 13:22:39.194
  STEP: expected 0 rs, got 1 rs @ 11/16/24 13:22:39.202
  STEP: expected 0 pods, got 2 pods @ 11/16/24 13:22:39.206
  STEP: Gathering metrics @ 11/16/24 13:22:39.71
  W1116 13:22:39.717490      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1116 13:22:39.717524 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1116 13:22:39.717787 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1622" for this suite. @ 11/16/24 13:22:39.722
• [1.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 11/16/24 13:22:39.732
  I1116 13:22:39.732330 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pod-network-test @ 11/16/24 13:22:39.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:22:39.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:22:39.752
  STEP: Performing setup for networking test in namespace pod-network-test-3809 @ 11/16/24 13:22:39.756
  STEP: creating a selector @ 11/16/24 13:22:39.756
  STEP: Creating the service pods in kubernetes @ 11/16/24 13:22:39.756
  I1116 13:22:39.756983 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1116 13:22:40.011998      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:41.012416      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:42.012953      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:43.013083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:44.013594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:45.013691      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:46.014086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:47.014716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:48.015584      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:49.015681      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:50.016490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:51.016658      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/16/24 13:22:51.863
  E1116 13:22:52.017472      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:53.017623      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:22:53.886162 18 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1116 13:22:53.886194 18 networking.go:42] Breadth first check of 192.168.164.73 on host 172.31.22.107...
  I1116 13:22:53.891195 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.82.163:9080/dial?request=hostname&protocol=udp&host=192.168.164.73&port=8081&tries=1'] Namespace:pod-network-test-3809 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 13:22:53.891220 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 13:22:53.891640 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 13:22:53.891677 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3809/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.82.163%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.164.73%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1116 13:22:53.938977 18 utils.go:356] Waiting for responses: map[]
  I1116 13:22:53.939004 18 utils.go:360] reached 192.168.164.73 after 0/1 tries
  I1116 13:22:53.939015 18 networking.go:42] Breadth first check of 192.168.82.168 on host 172.31.45.197...
  I1116 13:22:53.943365 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.82.163:9080/dial?request=hostname&protocol=udp&host=192.168.82.168&port=8081&tries=1'] Namespace:pod-network-test-3809 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 13:22:53.943382 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 13:22:53.943785 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 13:22:53.943822 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3809/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.82.163%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.82.168%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1116 13:22:53.983738 18 utils.go:356] Waiting for responses: map[]
  I1116 13:22:53.983761 18 utils.go:360] reached 192.168.82.168 after 0/1 tries
  I1116 13:22:53.983771 18 networking.go:42] Breadth first check of 192.168.216.103 on host 172.31.72.246...
  I1116 13:22:53.989232 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.82.163:9080/dial?request=hostname&protocol=udp&host=192.168.216.103&port=8081&tries=1'] Namespace:pod-network-test-3809 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 13:22:53.989249 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 13:22:53.989641 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 13:22:53.989682 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3809/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.82.163%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.216.103%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E1116 13:22:54.017902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:22:54.029515 18 utils.go:356] Waiting for responses: map[]
  I1116 13:22:54.029545 18 utils.go:360] reached 192.168.216.103 after 0/1 tries
  I1116 13:22:54.029555 18 networking.go:53] Going to retry 0 out of 3 pods....
  I1116 13:22:54.029648 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3809" for this suite. @ 11/16/24 13:22:54.035
• [14.312 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 11/16/24 13:22:54.044
  I1116 13:22:54.044493 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 13:22:54.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:22:54.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:22:54.066
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1993 @ 11/16/24 13:22:54.069
  STEP: changing the ExternalName service to type=ClusterIP @ 11/16/24 13:22:54.074
  STEP: creating replication controller externalname-service in namespace services-1993 @ 11/16/24 13:22:54.09
  I1116 13:22:54.099216      18 runners.go:193] Created replication controller with name: externalname-service, namespace: services-1993, replica count: 2
  E1116 13:22:55.018080      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:56.018768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:57.018874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:22:57.150254      18 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1116 13:22:57.150288 18 resource.go:361] Creating new exec pod
  E1116 13:22:58.018989      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:22:59.019114      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:00.019252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:00.169617 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-1993 exec execpodxz97j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1116 13:23:00.252065 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1116 13:23:00.252115 18 builder.go:147] stdout: "externalname-service-26f7q"
  I1116 13:23:00.252195 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-1993 exec execpodxz97j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.159 80'
  I1116 13:23:00.329932 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.159 80\nConnection to 10.152.183.159 80 port [tcp/http] succeeded!\n"
  I1116 13:23:00.329972 18 builder.go:147] stdout: "externalname-service-bj67b"
  I1116 13:23:00.330068 18 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I1116 13:23:00.356179 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1993" for this suite. @ 11/16/24 13:23:00.367
• [6.334 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 11/16/24 13:23:00.378
  I1116 13:23:00.378584 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename sched-pred @ 11/16/24 13:23:00.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:23:00.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:23:00.414
  I1116 13:23:00.417868 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1116 13:23:00.426582 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I1116 13:23:00.430850 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-107 before test
  I1116 13:23:00.438281 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-7hw6s from ingress-nginx-kubernetes-worker started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.438302 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1116 13:23:00.438309 18 predicates.go:957] calico-node-g5csg from kube-system started at 2024-11-16 12:10:00 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.438315 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1116 13:23:00.438322 18 predicates.go:957] coredns-5b4857d7c8-88vmq from kube-system started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.438327 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1116 13:23:00.438333 18 predicates.go:957] kube-state-metrics-5d7bdccd49-5l6xl from kube-system started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.438338 18 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 6
  I1116 13:23:00.438345 18 predicates.go:957] metrics-server-v0.7.1-6c77d69467-9jqds from kube-system started at 2024-11-16 11:52:55 +0000 UTC (2 container statuses recorded)
  I1116 13:23:00.438349 18 predicates.go:959] 	Container metrics-server ready: true, restart count 2
  I1116 13:23:00.438355 18 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1116 13:23:00.438361 18 predicates.go:957] dashboard-metrics-scraper-64757cf48d-8s8xh from kubernetes-dashboard started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.438366 18 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1116 13:23:00.438372 18 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-8bp7b from kubernetes-dashboard started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.438380 18 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 1
  I1116 13:23:00.438387 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-v89qq from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 13:23:00.438396 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 13:23:00.438402 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1116 13:23:00.438416 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-45-197 before test
  I1116 13:23:00.446007 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-94999 from ingress-nginx-kubernetes-worker started at 2024-11-16 12:04:57 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.446023 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1116 13:23:00.446030 18 predicates.go:957] calico-node-r7kq9 from kube-system started at 2024-11-16 12:09:29 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.446050 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1116 13:23:00.446056 18 predicates.go:957] netserver-1 from pod-network-test-3809 started at 2024-11-16 13:22:39 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.446062 18 predicates.go:959] 	Container webserver ready: false, restart count 0
  I1116 13:23:00.446067 18 predicates.go:957] test-container-pod from pod-network-test-3809 started at 2024-11-16 13:22:51 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.446072 18 predicates.go:959] 	Container webserver ready: false, restart count 0
  I1116 13:23:00.446078 18 predicates.go:957] externalname-service-bj67b from services-1993 started at 2024-11-16 13:22:54 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.446087 18 predicates.go:959] 	Container externalname-service ready: true, restart count 0
  I1116 13:23:00.446093 18 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-16 12:12:38 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.446097 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1116 13:23:00.446103 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-tcwcj from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 13:23:00.446107 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 13:23:00.446112 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1116 13:23:00.446117 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-72-246 before test
  I1116 13:23:00.452811 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-nk2r4 from ingress-nginx-kubernetes-worker started at 2024-11-16 12:03:58 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.452828 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1116 13:23:00.452835 18 predicates.go:957] calico-node-95c66 from kube-system started at 2024-11-16 12:09:39 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.452842 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1116 13:23:00.452848 18 predicates.go:957] execpodxz97j from services-1993 started at 2024-11-16 13:22:57 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.452853 18 predicates.go:959] 	Container agnhost-container ready: true, restart count 0
  I1116 13:23:00.452860 18 predicates.go:957] externalname-service-26f7q from services-1993 started at 2024-11-16 13:22:54 +0000 UTC (1 container statuses recorded)
  I1116 13:23:00.452865 18 predicates.go:959] 	Container externalname-service ready: true, restart count 0
  I1116 13:23:00.452871 18 predicates.go:957] sonobuoy-e2e-job-06d9258fa7d041d4 from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 13:23:00.452877 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1116 13:23:00.452882 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 13:23:00.452887 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-wf799 from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 13:23:00.452893 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 13:23:00.452910 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-22-107 @ 11/16/24 13:23:00.476
  STEP: verifying the node has the label node ip-172-31-45-197 @ 11/16/24 13:23:00.489
  STEP: verifying the node has the label node ip-172-31-72-246 @ 11/16/24 13:23:00.501
  I1116 13:23:00.517674 18 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-7hw6s requesting resource cpu=0m on Node ip-172-31-22-107
  I1116 13:23:00.517777 18 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-94999 requesting resource cpu=0m on Node ip-172-31-45-197
  I1116 13:23:00.517788 18 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-nk2r4 requesting resource cpu=0m on Node ip-172-31-72-246
  I1116 13:23:00.517796 18 predicates.go:372] Pod calico-node-95c66 requesting resource cpu=250m on Node ip-172-31-72-246
  I1116 13:23:00.517802 18 predicates.go:372] Pod calico-node-g5csg requesting resource cpu=250m on Node ip-172-31-22-107
  I1116 13:23:00.517808 18 predicates.go:372] Pod calico-node-r7kq9 requesting resource cpu=250m on Node ip-172-31-45-197
  I1116 13:23:00.517815 18 predicates.go:372] Pod coredns-5b4857d7c8-88vmq requesting resource cpu=100m on Node ip-172-31-22-107
  I1116 13:23:00.517822 18 predicates.go:372] Pod kube-state-metrics-5d7bdccd49-5l6xl requesting resource cpu=0m on Node ip-172-31-22-107
  I1116 13:23:00.517828 18 predicates.go:372] Pod metrics-server-v0.7.1-6c77d69467-9jqds requesting resource cpu=5m on Node ip-172-31-22-107
  I1116 13:23:00.517842 18 predicates.go:372] Pod dashboard-metrics-scraper-64757cf48d-8s8xh requesting resource cpu=0m on Node ip-172-31-22-107
  I1116 13:23:00.517848 18 predicates.go:372] Pod kubernetes-dashboard-7b6b7bcb5d-8bp7b requesting resource cpu=0m on Node ip-172-31-22-107
  I1116 13:23:00.517855 18 predicates.go:372] Pod execpodxz97j requesting resource cpu=0m on Node ip-172-31-72-246
  I1116 13:23:00.517861 18 predicates.go:372] Pod externalname-service-26f7q requesting resource cpu=0m on Node ip-172-31-72-246
  I1116 13:23:00.517867 18 predicates.go:372] Pod externalname-service-bj67b requesting resource cpu=0m on Node ip-172-31-45-197
  I1116 13:23:00.517873 18 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-45-197
  I1116 13:23:00.517879 18 predicates.go:372] Pod sonobuoy-e2e-job-06d9258fa7d041d4 requesting resource cpu=0m on Node ip-172-31-72-246
  I1116 13:23:00.517886 18 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-tcwcj requesting resource cpu=0m on Node ip-172-31-45-197
  I1116 13:23:00.517891 18 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-v89qq requesting resource cpu=0m on Node ip-172-31-22-107
  I1116 13:23:00.517897 18 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-wf799 requesting resource cpu=0m on Node ip-172-31-72-246
  STEP: Starting Pods to consume most of the cluster CPU. @ 11/16/24 13:23:00.517
  I1116 13:23:00.517920 18 predicates.go:382] Creating a pod which consumes cpu=1151m on Node ip-172-31-22-107
  I1116 13:23:00.528859 18 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-45-197
  I1116 13:23:00.537168 18 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-72-246
  E1116 13:23:01.019351      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:02.019567      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 11/16/24 13:23:02.568
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6372ec45-36f1-4890-8a82-99017ac396c0.1808759e8c684f61], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5405/filler-pod-6372ec45-36f1-4890-8a82-99017ac396c0 to ip-172-31-45-197] @ 11/16/24 13:23:02.573
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6372ec45-36f1-4890-8a82-99017ac396c0.1808759ea9fd4a23], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 11/16/24 13:23:02.573
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6372ec45-36f1-4890-8a82-99017ac396c0.1808759eaaea0e84], Reason = [Created], Message = [Created container filler-pod-6372ec45-36f1-4890-8a82-99017ac396c0] @ 11/16/24 13:23:02.573
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6372ec45-36f1-4890-8a82-99017ac396c0.1808759ead5800a4], Reason = [Started], Message = [Started container filler-pod-6372ec45-36f1-4890-8a82-99017ac396c0] @ 11/16/24 13:23:02.573
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-769d2022-d891-4606-af72-9ec92fbe120d.1808759e8d0f6a10], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5405/filler-pod-769d2022-d891-4606-af72-9ec92fbe120d to ip-172-31-72-246] @ 11/16/24 13:23:02.573
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-769d2022-d891-4606-af72-9ec92fbe120d.1808759eaa07358a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 11/16/24 13:23:02.573
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-769d2022-d891-4606-af72-9ec92fbe120d.1808759eab2c8122], Reason = [Created], Message = [Created container filler-pod-769d2022-d891-4606-af72-9ec92fbe120d] @ 11/16/24 13:23:02.573
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-769d2022-d891-4606-af72-9ec92fbe120d.1808759ead762e6d], Reason = [Started], Message = [Started container filler-pod-769d2022-d891-4606-af72-9ec92fbe120d] @ 11/16/24 13:23:02.573
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a7693ecf-0371-448f-a9a6-926430378d25.1808759e8c040b12], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5405/filler-pod-a7693ecf-0371-448f-a9a6-926430378d25 to ip-172-31-22-107] @ 11/16/24 13:23:02.573
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a7693ecf-0371-448f-a9a6-926430378d25.1808759ea94b316b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 11/16/24 13:23:02.573
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a7693ecf-0371-448f-a9a6-926430378d25.1808759eaa731ee1], Reason = [Created], Message = [Created container filler-pod-a7693ecf-0371-448f-a9a6-926430378d25] @ 11/16/24 13:23:02.573
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a7693ecf-0371-448f-a9a6-926430378d25.1808759ead652ab0], Reason = [Started], Message = [Started container filler-pod-a7693ecf-0371-448f-a9a6-926430378d25] @ 11/16/24 13:23:02.573
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1808759f05c91461], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 11/16/24 13:23:02.593
  E1116 13:23:03.019757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-22-107 @ 11/16/24 13:23:03.588
  STEP: verifying the node doesn't have the label node @ 11/16/24 13:23:03.604
  STEP: removing the label node off the node ip-172-31-45-197 @ 11/16/24 13:23:03.608
  STEP: verifying the node doesn't have the label node @ 11/16/24 13:23:03.623
  STEP: removing the label node off the node ip-172-31-72-246 @ 11/16/24 13:23:03.627
  STEP: verifying the node doesn't have the label node @ 11/16/24 13:23:03.64
  I1116 13:23:03.645719 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5405" for this suite. @ 11/16/24 13:23:03.65
• [3.280 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 11/16/24 13:23:03.659
  I1116 13:23:03.659920 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename secrets @ 11/16/24 13:23:03.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:23:03.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:23:03.683
  STEP: Creating secret with name secret-test-d0d3b0e7-025b-4db1-8505-702d37aca06d @ 11/16/24 13:23:03.686
  STEP: Creating a pod to test consume secrets @ 11/16/24 13:23:03.692
  E1116 13:23:04.019809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:05.020265      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:06.020398      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:07.020577      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:23:07.718
  I1116 13:23:07.722556 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-secrets-cba6ef49-bd60-443f-9a23-8b0ddcfae9fb container secret-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 13:23:07.732
  I1116 13:23:07.748659 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2868" for this suite. @ 11/16/24 13:23:07.753
• [4.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 11/16/24 13:23:07.76
  I1116 13:23:07.760935 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/16/24 13:23:07.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:23:07.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:23:07.78
  STEP: Creating 50 configmaps @ 11/16/24 13:23:07.782
  E1116 13:23:08.021132      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 11/16/24 13:23:08.047
  I1116 13:23:08.156608 18 resource.go:87] Pod name wrapped-volume-race-69386d4c-fac4-4d3e-98ef-be3466195b6f: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/16/24 13:23:08.156
  E1116 13:23:09.021304      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:10.021376      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 11/16/24 13:23:10.21
  I1116 13:23:10.226107 18 resource.go:87] Pod name wrapped-volume-race-b55c12c1-b369-4baa-9569-f3110e7b736e: Found 0 pods out of 5
  E1116 13:23:11.021940      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:12.022142      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:13.022289      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:14.022434      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:15.022637      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:15.235375 18 resource.go:87] Pod name wrapped-volume-race-b55c12c1-b369-4baa-9569-f3110e7b736e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/16/24 13:23:15.235
  STEP: Creating RC which spawns configmap-volume pods @ 11/16/24 13:23:15.263
  I1116 13:23:15.346243 18 resource.go:87] Pod name wrapped-volume-race-84a3c12a-2e32-4e88-b088-b68c272a866f: Found 0 pods out of 5
  E1116 13:23:16.022770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:17.022873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:18.023134      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:19.023313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:20.023438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:20.395702 18 resource.go:87] Pod name wrapped-volume-race-84a3c12a-2e32-4e88-b088-b68c272a866f: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/16/24 13:23:20.395
  STEP: deleting ReplicationController wrapped-volume-race-84a3c12a-2e32-4e88-b088-b68c272a866f in namespace emptydir-wrapper-1982, will wait for the garbage collector to delete the pods @ 11/16/24 13:23:20.471
  I1116 13:23:20.541297 18 resources.go:139] Deleting ReplicationController wrapped-volume-race-84a3c12a-2e32-4e88-b088-b68c272a866f took: 11.588046ms
  I1116 13:23:20.642187 18 resources.go:163] Terminating ReplicationController wrapped-volume-race-84a3c12a-2e32-4e88-b088-b68c272a866f pods took: 100.884571ms
  E1116 13:23:21.024118      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-b55c12c1-b369-4baa-9569-f3110e7b736e in namespace emptydir-wrapper-1982, will wait for the garbage collector to delete the pods @ 11/16/24 13:23:21.842
  I1116 13:23:21.909120 18 resources.go:139] Deleting ReplicationController wrapped-volume-race-b55c12c1-b369-4baa-9569-f3110e7b736e took: 9.805734ms
  I1116 13:23:22.009785 18 resources.go:163] Terminating ReplicationController wrapped-volume-race-b55c12c1-b369-4baa-9569-f3110e7b736e pods took: 100.660408ms
  E1116 13:23:22.024984      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:23.025983      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-69386d4c-fac4-4d3e-98ef-be3466195b6f in namespace emptydir-wrapper-1982, will wait for the garbage collector to delete the pods @ 11/16/24 13:23:24.01
  E1116 13:23:24.026189      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:24.076951 18 resources.go:139] Deleting ReplicationController wrapped-volume-race-69386d4c-fac4-4d3e-98ef-be3466195b6f took: 9.560303ms
  I1116 13:23:24.177777 18 resources.go:163] Terminating ReplicationController wrapped-volume-race-69386d4c-fac4-4d3e-98ef-be3466195b6f pods took: 100.821644ms
  E1116 13:23:25.026614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 11/16/24 13:23:25.878
  E1116 13:23:26.027590      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:26.277154 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1982" for this suite. @ 11/16/24 13:23:26.281
• [18.530 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 11/16/24 13:23:26.291
  I1116 13:23:26.291229 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename daemonsets @ 11/16/24 13:23:26.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:23:26.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:23:26.312
  STEP: Creating simple DaemonSet "daemon-set" @ 11/16/24 13:23:26.339
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/16/24 13:23:26.346
  I1116 13:23:26.353776 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:23:26.353837 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:23:26.357477 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:23:26.357496 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  E1116 13:23:27.028195      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:27.353296 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:23:27.353352 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:23:27.357358 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:23:27.357374 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  E1116 13:23:28.029114      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:28.353626 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:23:28.353680 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:23:28.357569 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1116 13:23:28.357597 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 11/16/24 13:23:28.361
  I1116 13:23:28.382299 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:23:28.382340 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:23:28.387385 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1116 13:23:28.387405 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  E1116 13:23:29.030119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:29.382362 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:23:29.382412 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:23:29.386360 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1116 13:23:29.386381 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  E1116 13:23:30.031004      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:30.385348 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:23:30.385397 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:23:30.391745 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1116 13:23:30.391764 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/16/24 13:23:30.4
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5743, will wait for the garbage collector to delete the pods @ 11/16/24 13:23:30.4
  I1116 13:23:30.466503 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.154841ms
  I1116 13:23:30.567104 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.594546ms
  E1116 13:23:31.031531      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:31.571861 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:23:31.571897 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1116 13:23:31.577008 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32863"},"items":null}

  I1116 13:23:31.581670 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32864"},"items":null}

  I1116 13:23:31.598749 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5743" for this suite. @ 11/16/24 13:23:31.602
• [5.319 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 11/16/24 13:23:31.61
  I1116 13:23:31.610486 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 13:23:31.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:23:31.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:23:31.627
  STEP: creating service endpoint-test2 in namespace services-4266 @ 11/16/24 13:23:31.63
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4266 to expose endpoints map[] @ 11/16/24 13:23:31.641
  I1116 13:23:31.645517 18 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E1116 13:23:32.032176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:32.658028 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-4266 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4266 @ 11/16/24 13:23:32.658
  E1116 13:23:33.032304      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:34.032426      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4266 to expose endpoints map[pod1:[80]] @ 11/16/24 13:23:34.687
  I1116 13:23:34.701653 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-4266 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 11/16/24 13:23:34.701
  I1116 13:23:34.701699 18 resource.go:361] Creating new exec pod
  E1116 13:23:35.033279      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:36.033400      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:37.034259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:37.717162 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4266 exec execpod8rtzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1116 13:23:37.828381 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1116 13:23:37.828428 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 13:23:37.828506 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4266 exec execpod8rtzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.66 80'
  I1116 13:23:37.938873 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.66 80\nConnection to 10.152.183.66 80 port [tcp/http] succeeded!\n"
  I1116 13:23:37.938917 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-4266 @ 11/16/24 13:23:37.938
  E1116 13:23:38.034951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:39.035066      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4266 to expose endpoints map[pod1:[80] pod2:[80]] @ 11/16/24 13:23:39.966
  I1116 13:23:39.985344 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-4266 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 11/16/24 13:23:39.985
  E1116 13:23:40.035215      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:40.986241 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4266 exec execpod8rtzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E1116 13:23:41.035865      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:41.064233 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1116 13:23:41.064276 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 13:23:41.064349 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4266 exec execpod8rtzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.66 80'
  I1116 13:23:41.140215 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.66 80\nConnection to 10.152.183.66 80 port [tcp/http] succeeded!\n"
  I1116 13:23:41.140266 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4266 @ 11/16/24 13:23:41.14
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4266 to expose endpoints map[pod2:[80]] @ 11/16/24 13:23:41.155
  I1116 13:23:41.170749 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-4266 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 11/16/24 13:23:41.17
  E1116 13:23:42.036453      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:42.171827 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4266 exec execpod8rtzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1116 13:23:42.258660 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1116 13:23:42.258701 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 13:23:42.258865 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-4266 exec execpod8rtzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.66 80'
  I1116 13:23:42.346456 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.66 80\nConnection to 10.152.183.66 80 port [tcp/http] succeeded!\n"
  I1116 13:23:42.346500 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-4266 @ 11/16/24 13:23:42.346
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4266 to expose endpoints map[] @ 11/16/24 13:23:42.362
  I1116 13:23:42.375950 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-4266 exposes endpoints map[]
  I1116 13:23:42.396002 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4266" for this suite. @ 11/16/24 13:23:42.4
• [10.797 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 11/16/24 13:23:42.407
  I1116 13:23:42.407720 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/16/24 13:23:42.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:23:42.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:23:42.429
  STEP: creating @ 11/16/24 13:23:42.432
  STEP: getting @ 11/16/24 13:23:42.452
  STEP: listing in namespace @ 11/16/24 13:23:42.457
  STEP: patching @ 11/16/24 13:23:42.461
  STEP: deleting @ 11/16/24 13:23:42.471
  I1116 13:23:42.495430 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2011" for this suite. @ 11/16/24 13:23:42.507
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 11/16/24 13:23:42.524
  I1116 13:23:42.524299 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename proxy @ 11/16/24 13:23:42.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:23:42.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:23:42.548
  I1116 13:23:42.557385 18 proxy.go:387] Creating pod...
  E1116 13:23:43.037490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:44.038556      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:44.579156 18 proxy.go:411] Creating service...
  I1116 13:23:44.592687 18 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3832/pods/agnhost/proxy?method=DELETE
  I1116 13:23:44.602269 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1116 13:23:44.602295 18 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3832/pods/agnhost/proxy?method=OPTIONS
  I1116 13:23:44.610449 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1116 13:23:44.610476 18 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3832/pods/agnhost/proxy?method=PATCH
  I1116 13:23:44.616194 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1116 13:23:44.616229 18 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3832/pods/agnhost/proxy?method=POST
  I1116 13:23:44.620079 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1116 13:23:44.620095 18 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3832/pods/agnhost/proxy?method=PUT
  I1116 13:23:44.624975 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1116 13:23:44.625010 18 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3832/services/e2e-proxy-test-service/proxy?method=DELETE
  I1116 13:23:44.633782 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1116 13:23:44.633815 18 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3832/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1116 13:23:44.640346 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1116 13:23:44.640374 18 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3832/services/e2e-proxy-test-service/proxy?method=PATCH
  I1116 13:23:44.647670 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1116 13:23:44.647696 18 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3832/services/e2e-proxy-test-service/proxy?method=POST
  I1116 13:23:44.656078 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1116 13:23:44.656103 18 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3832/services/e2e-proxy-test-service/proxy?method=PUT
  I1116 13:23:44.662539 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1116 13:23:44.662564 18 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3832/pods/agnhost/proxy?method=GET
  I1116 13:23:44.666761 18 proxy.go:487] http.Client request:GET StatusCode:301
  I1116 13:23:44.666788 18 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3832/services/e2e-proxy-test-service/proxy?method=GET
  I1116 13:23:44.673726 18 proxy.go:487] http.Client request:GET StatusCode:301
  I1116 13:23:44.673749 18 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3832/pods/agnhost/proxy?method=HEAD
  I1116 13:23:44.677104 18 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1116 13:23:44.677126 18 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3832/services/e2e-proxy-test-service/proxy?method=HEAD
  I1116 13:23:44.685057 18 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1116 13:23:44.685176 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3832" for this suite. @ 11/16/24 13:23:44.69
• [2.176 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 11/16/24 13:23:44.7
  I1116 13:23:44.700538 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename svcaccounts @ 11/16/24 13:23:44.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:23:44.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:23:44.719
  STEP: Creating a pod to test service account token:  @ 11/16/24 13:23:44.724
  E1116 13:23:45.039255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:46.039522      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:47.040270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:48.040404      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:23:48.756
  I1116 13:23:48.761520 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod test-pod-a96d7c2e-6519-4a8a-a337-25bd00ce7040 container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 13:23:48.769
  I1116 13:23:48.786391 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2874" for this suite. @ 11/16/24 13:23:48.79
• [4.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 11/16/24 13:23:48.802
  I1116 13:23:48.802173 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename cronjob @ 11/16/24 13:23:48.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:23:48.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:23:48.82
  STEP: Creating a cronjob @ 11/16/24 13:23:48.822
  STEP: creating @ 11/16/24 13:23:48.822
  STEP: getting @ 11/16/24 13:23:48.827
  STEP: listing @ 11/16/24 13:23:48.832
  STEP: watching @ 11/16/24 13:23:48.836
  I1116 13:23:48.836303 18 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 11/16/24 13:23:48.837
  STEP: cluster-wide watching @ 11/16/24 13:23:48.841
  I1116 13:23:48.841584 18 cronjob.go:382] starting watch
  STEP: patching @ 11/16/24 13:23:48.842
  STEP: updating @ 11/16/24 13:23:48.849
  I1116 13:23:48.860871 18 cronjob.go:406] waiting for watch events with expected annotations
  I1116 13:23:48.860897 18 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 11/16/24 13:23:48.86
  STEP: updating /status @ 11/16/24 13:23:48.867
  STEP: get /status @ 11/16/24 13:23:48.876
  STEP: deleting @ 11/16/24 13:23:48.88
  STEP: deleting a collection @ 11/16/24 13:23:48.9
  I1116 13:23:48.916560 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3647" for this suite. @ 11/16/24 13:23:48.922
• [0.131 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 11/16/24 13:23:48.932
  I1116 13:23:48.932963 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 13:23:48.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:23:48.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:23:48.953
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 13:23:48.955
  E1116 13:23:49.041090      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:50.041214      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:51.042185      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:52.042326      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:23:52.982
  I1116 13:23:52.986747 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downwardapi-volume-cf481b68-38da-4b60-9033-1e1572e79f6e container client-container: <nil>
  STEP: delete the pod @ 11/16/24 13:23:52.995
  I1116 13:23:53.018032 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1275" for this suite. @ 11/16/24 13:23:53.022
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 11/16/24 13:23:53.031
  I1116 13:23:53.031688 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename proxy @ 11/16/24 13:23:53.032
  E1116 13:23:53.042575      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:23:53.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:23:53.052
  STEP: starting an echo server on multiple ports @ 11/16/24 13:23:53.066
  STEP: creating replication controller proxy-service-c6vvn in namespace proxy-8678 @ 11/16/24 13:23:53.066
  I1116 13:23:53.082736      18 runners.go:193] Created replication controller with name: proxy-service-c6vvn, namespace: proxy-8678, replica count: 1
  E1116 13:23:54.043668      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:54.133933      18 runners.go:193] proxy-service-c6vvn Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1116 13:23:55.044336      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:55.134547      18 runners.go:193] proxy-service-c6vvn Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1116 13:23:55.138163 18 proxy.go:230] setup took 2.083273777s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 11/16/24 13:23:55.138
  I1116 13:23:55.146836 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 8.192241ms)
  I1116 13:23:55.146836 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 8.236378ms)
  I1116 13:23:55.149465 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 11.220746ms)
  I1116 13:23:55.149493 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 11.015443ms)
  I1116 13:23:55.149650 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 11.251637ms)
  I1116 13:23:55.149671 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 11.007161ms)
  I1116 13:23:55.149682 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 11.226119ms)
  I1116 13:23:55.149693 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 11.075428ms)
  I1116 13:23:55.149704 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 11.1249ms)
  I1116 13:23:55.152250 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 13.551261ms)
  I1116 13:23:55.152600 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 14.095636ms)
  I1116 13:23:55.153125 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 14.828271ms)
  I1116 13:23:55.153137 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 14.445554ms)
  I1116 13:23:55.153172 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 14.64205ms)
  I1116 13:23:55.153185 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 14.752002ms)
  I1116 13:23:55.153213 18 proxy.go:558] (0) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 14.658344ms)
  I1116 13:23:55.159293 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 5.992218ms)
  I1116 13:23:55.160864 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 7.403562ms)
  I1116 13:23:55.160864 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 7.312546ms)
  I1116 13:23:55.160881 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 7.617001ms)
  I1116 13:23:55.160891 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 7.411414ms)
  I1116 13:23:55.160901 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 7.40077ms)
  I1116 13:23:55.160906 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 7.269594ms)
  I1116 13:23:55.160911 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 7.38683ms)
  I1116 13:23:55.162198 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 8.794944ms)
  I1116 13:23:55.162270 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 9.033747ms)
  I1116 13:23:55.162400 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 9.024329ms)
  I1116 13:23:55.162855 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 9.481783ms)
  I1116 13:23:55.163403 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 9.791515ms)
  I1116 13:23:55.163479 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 9.889542ms)
  I1116 13:23:55.163699 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 10.128498ms)
  I1116 13:23:55.164317 18 proxy.go:558] (1) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 10.890665ms)
  I1116 13:23:55.170253 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 5.601905ms)
  I1116 13:23:55.170942 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 6.256479ms)
  I1116 13:23:55.171020 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 6.490044ms)
  I1116 13:23:55.172437 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 8.010801ms)
  I1116 13:23:55.173201 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 8.586899ms)
  I1116 13:23:55.173264 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 8.669379ms)
  I1116 13:23:55.173265 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 8.753512ms)
  I1116 13:23:55.173278 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 8.789619ms)
  I1116 13:23:55.173426 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 8.848642ms)
  I1116 13:23:55.173439 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 9.028773ms)
  I1116 13:23:55.173553 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 8.848517ms)
  I1116 13:23:55.173621 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 8.990369ms)
  I1116 13:23:55.173652 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 8.985521ms)
  I1116 13:23:55.174233 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 9.888674ms)
  I1116 13:23:55.174452 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 9.898209ms)
  I1116 13:23:55.174453 18 proxy.go:558] (2) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 9.99389ms)
  I1116 13:23:55.179354 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 4.72168ms)
  I1116 13:23:55.179788 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 5.179814ms)
  I1116 13:23:55.179882 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 5.398914ms)
  I1116 13:23:55.180311 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 5.562148ms)
  I1116 13:23:55.182012 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 7.245466ms)
  I1116 13:23:55.182144 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 7.497389ms)
  I1116 13:23:55.182242 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 7.431056ms)
  I1116 13:23:55.182337 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 7.812576ms)
  I1116 13:23:55.182741 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 8.031252ms)
  I1116 13:23:55.182766 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 7.980717ms)
  I1116 13:23:55.182784 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 7.955595ms)
  I1116 13:23:55.182917 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 8.332404ms)
  I1116 13:23:55.184394 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 9.730155ms)
  I1116 13:23:55.184394 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 9.664562ms)
  I1116 13:23:55.184415 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 9.859609ms)
  I1116 13:23:55.186388 18 proxy.go:558] (3) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 11.702956ms)
  I1116 13:23:55.191025 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 4.594442ms)
  I1116 13:23:55.191207 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 4.736599ms)
  I1116 13:23:55.192745 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 6.073967ms)
  I1116 13:23:55.192834 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 6.14557ms)
  I1116 13:23:55.193592 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 6.958007ms)
  I1116 13:23:55.193607 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 6.879702ms)
  I1116 13:23:55.193933 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 7.168412ms)
  I1116 13:23:55.193945 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 7.330832ms)
  I1116 13:23:55.194670 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 8.169873ms)
  I1116 13:23:55.195315 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 8.718904ms)
  I1116 13:23:55.195350 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 8.640466ms)
  I1116 13:23:55.195749 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 9.004503ms)
  I1116 13:23:55.195964 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 9.43478ms)
  I1116 13:23:55.196394 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 9.740977ms)
  I1116 13:23:55.196547 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 9.993029ms)
  I1116 13:23:55.197955 18 proxy.go:558] (4) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 11.377755ms)
  I1116 13:23:55.202681 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 4.598451ms)
  I1116 13:23:55.202682 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 4.702055ms)
  I1116 13:23:55.203554 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 5.39822ms)
  I1116 13:23:55.204573 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 6.556835ms)
  I1116 13:23:55.204574 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 6.282612ms)
  I1116 13:23:55.204590 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 6.393982ms)
  I1116 13:23:55.204599 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 6.351445ms)
  I1116 13:23:55.204811 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 6.638449ms)
  I1116 13:23:55.204828 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 6.516665ms)
  I1116 13:23:55.205084 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 6.982378ms)
  I1116 13:23:55.206015 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 7.895559ms)
  I1116 13:23:55.206453 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 8.18458ms)
  I1116 13:23:55.206905 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 8.846991ms)
  I1116 13:23:55.207845 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 9.615839ms)
  I1116 13:23:55.207937 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 9.799716ms)
  I1116 13:23:55.208082 18 proxy.go:558] (5) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 9.867858ms)
  I1116 13:23:55.212487 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 4.379119ms)
  I1116 13:23:55.212507 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 4.373996ms)
  I1116 13:23:55.212800 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 4.631746ms)
  I1116 13:23:55.213539 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 5.332808ms)
  I1116 13:23:55.214175 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 5.907565ms)
  I1116 13:23:55.214413 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 5.991033ms)
  I1116 13:23:55.214878 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 6.530217ms)
  I1116 13:23:55.215255 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 7.067432ms)
  I1116 13:23:55.215354 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 7.061881ms)
  I1116 13:23:55.215364 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 6.996656ms)
  I1116 13:23:55.215772 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 7.546856ms)
  I1116 13:23:55.217107 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 8.778268ms)
  I1116 13:23:55.217245 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 8.861334ms)
  I1116 13:23:55.217513 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 9.108432ms)
  I1116 13:23:55.217683 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 9.370824ms)
  I1116 13:23:55.218835 18 proxy.go:558] (6) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 10.587937ms)
  I1116 13:23:55.225903 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 6.811014ms)
  I1116 13:23:55.225930 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 6.957597ms)
  I1116 13:23:55.225948 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 6.768556ms)
  I1116 13:23:55.225946 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 6.83699ms)
  I1116 13:23:55.226365 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 7.291238ms)
  I1116 13:23:55.226518 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 7.521579ms)
  I1116 13:23:55.226686 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 7.544639ms)
  I1116 13:23:55.227660 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 8.640934ms)
  I1116 13:23:55.227711 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 8.849155ms)
  I1116 13:23:55.228076 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 8.845827ms)
  I1116 13:23:55.228211 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 9.084785ms)
  I1116 13:23:55.228328 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 9.166203ms)
  I1116 13:23:55.228328 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 9.276557ms)
  I1116 13:23:55.229072 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 10.152357ms)
  I1116 13:23:55.229096 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 10.153333ms)
  I1116 13:23:55.229103 18 proxy.go:558] (7) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 9.905307ms)
  I1116 13:23:55.236272 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 6.90019ms)
  I1116 13:23:55.237283 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 7.952493ms)
  I1116 13:23:55.237584 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 8.231504ms)
  I1116 13:23:55.238189 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 8.944149ms)
  I1116 13:23:55.238288 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 9.063971ms)
  I1116 13:23:55.238485 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 9.098075ms)
  I1116 13:23:55.239628 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 10.311149ms)
  I1116 13:23:55.239634 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 10.372999ms)
  I1116 13:23:55.239647 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 10.367758ms)
  I1116 13:23:55.239658 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 10.509479ms)
  I1116 13:23:55.239734 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 10.360516ms)
  I1116 13:23:55.240819 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 11.497852ms)
  I1116 13:23:55.240848 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 11.655794ms)
  I1116 13:23:55.240849 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 11.489ms)
  I1116 13:23:55.241135 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 11.839596ms)
  I1116 13:23:55.241298 18 proxy.go:558] (8) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 11.95566ms)
  I1116 13:23:55.245743 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 4.407357ms)
  I1116 13:23:55.246313 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 4.986085ms)
  I1116 13:23:55.246921 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 5.387443ms)
  I1116 13:23:55.247726 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 6.307411ms)
  I1116 13:23:55.247748 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 6.158052ms)
  I1116 13:23:55.248482 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 7.014273ms)
  I1116 13:23:55.248498 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 6.86921ms)
  I1116 13:23:55.248641 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 7.151117ms)
  I1116 13:23:55.248646 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 7.095031ms)
  I1116 13:23:55.248656 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 7.009668ms)
  I1116 13:23:55.248940 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 7.370794ms)
  I1116 13:23:55.249826 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 8.458486ms)
  I1116 13:23:55.249999 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 8.607068ms)
  I1116 13:23:55.251160 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 9.549432ms)
  I1116 13:23:55.251328 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 9.838819ms)
  I1116 13:23:55.251530 18 proxy.go:558] (9) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 10.021311ms)
  I1116 13:23:55.255859 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 4.267191ms)
  I1116 13:23:55.256117 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 4.561128ms)
  I1116 13:23:55.259681 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 7.834256ms)
  I1116 13:23:55.260473 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 8.683745ms)
  I1116 13:23:55.260632 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 8.736714ms)
  I1116 13:23:55.260670 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 8.809368ms)
  I1116 13:23:55.260828 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 9.071845ms)
  I1116 13:23:55.260848 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 8.97158ms)
  I1116 13:23:55.261021 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 9.249139ms)
  I1116 13:23:55.261131 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 9.303581ms)
  I1116 13:23:55.263479 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 11.671239ms)
  I1116 13:23:55.263511 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 11.771177ms)
  I1116 13:23:55.263517 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 11.864981ms)
  I1116 13:23:55.264510 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 12.78697ms)
  I1116 13:23:55.265124 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 13.493997ms)
  I1116 13:23:55.265257 18 proxy.go:558] (10) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 13.579505ms)
  I1116 13:23:55.270921 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 5.4584ms)
  I1116 13:23:55.270927 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 5.601378ms)
  I1116 13:23:55.271714 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 6.272268ms)
  I1116 13:23:55.271774 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 6.291255ms)
  I1116 13:23:55.272390 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 6.986827ms)
  I1116 13:23:55.272622 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 7.077777ms)
  I1116 13:23:55.273473 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 8.050504ms)
  I1116 13:23:55.273825 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 8.5254ms)
  I1116 13:23:55.274427 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 8.847851ms)
  I1116 13:23:55.274510 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 9.150617ms)
  I1116 13:23:55.276214 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 10.92604ms)
  I1116 13:23:55.276208 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 10.70231ms)
  I1116 13:23:55.276225 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 10.699964ms)
  I1116 13:23:55.276236 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 10.635ms)
  I1116 13:23:55.276244 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 10.861293ms)
  I1116 13:23:55.279405 18 proxy.go:558] (11) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 13.843699ms)
  I1116 13:23:55.292733 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 13.270022ms)
  I1116 13:23:55.297187 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 17.677254ms)
  I1116 13:23:55.299209 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 19.670511ms)
  I1116 13:23:55.299209 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 19.552278ms)
  I1116 13:23:55.300810 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 21.213977ms)
  I1116 13:23:55.300903 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 21.454146ms)
  I1116 13:23:55.302448 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 22.735872ms)
  I1116 13:23:55.302454 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 22.781944ms)
  I1116 13:23:55.305810 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 26.317568ms)
  I1116 13:23:55.305847 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 26.210065ms)
  I1116 13:23:55.305859 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 26.128583ms)
  I1116 13:23:55.305862 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 26.110084ms)
  I1116 13:23:55.306774 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 27.194079ms)
  I1116 13:23:55.307006 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 27.311609ms)
  I1116 13:23:55.307499 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 27.938757ms)
  I1116 13:23:55.309493 18 proxy.go:558] (12) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 29.880181ms)
  I1116 13:23:55.318903 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 9.068407ms)
  I1116 13:23:55.318938 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 9.081739ms)
  I1116 13:23:55.318961 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 9.381152ms)
  I1116 13:23:55.321113 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 11.40067ms)
  I1116 13:23:55.324679 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 14.903341ms)
  I1116 13:23:55.324924 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 15.229722ms)
  I1116 13:23:55.325354 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 15.750875ms)
  I1116 13:23:55.325836 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 16.206391ms)
  I1116 13:23:55.325918 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 16.10562ms)
  I1116 13:23:55.326552 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 16.79594ms)
  I1116 13:23:55.326570 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 16.775967ms)
  I1116 13:23:55.326555 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 17.008932ms)
  I1116 13:23:55.327328 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 17.597654ms)
  I1116 13:23:55.327356 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 17.681964ms)
  I1116 13:23:55.327383 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 17.730794ms)
  I1116 13:23:55.327597 18 proxy.go:558] (13) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 18.066906ms)
  I1116 13:23:55.333739 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 5.744684ms)
  I1116 13:23:55.333930 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 6.308201ms)
  I1116 13:23:55.339711 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 11.933231ms)
  I1116 13:23:55.339736 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 11.794125ms)
  I1116 13:23:55.340417 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 12.567551ms)
  I1116 13:23:55.341150 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 13.28022ms)
  I1116 13:23:55.341682 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 13.722789ms)
  I1116 13:23:55.341785 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 13.879397ms)
  I1116 13:23:55.342355 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 14.468306ms)
  I1116 13:23:55.342482 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 14.50716ms)
  I1116 13:23:55.342499 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 14.699679ms)
  I1116 13:23:55.342533 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 14.836256ms)
  I1116 13:23:55.342787 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 15.065506ms)
  I1116 13:23:55.344277 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 16.449671ms)
  I1116 13:23:55.344301 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 16.378695ms)
  I1116 13:23:55.344738 18 proxy.go:558] (14) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 16.982575ms)
  I1116 13:23:55.351402 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 6.626359ms)
  I1116 13:23:55.352912 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 8.044815ms)
  I1116 13:23:55.352979 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 8.182652ms)
  I1116 13:23:55.352982 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 7.888154ms)
  I1116 13:23:55.357720 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 12.807499ms)
  I1116 13:23:55.358388 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 13.440058ms)
  I1116 13:23:55.358661 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 13.528876ms)
  I1116 13:23:55.358676 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 13.651591ms)
  I1116 13:23:55.359102 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 14.212212ms)
  I1116 13:23:55.359207 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 14.05919ms)
  I1116 13:23:55.361817 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 16.851203ms)
  I1116 13:23:55.361902 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 16.845095ms)
  I1116 13:23:55.361950 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 16.938706ms)
  I1116 13:23:55.362165 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 17.157504ms)
  I1116 13:23:55.362218 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 17.143252ms)
  I1116 13:23:55.363680 18 proxy.go:558] (15) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 18.56675ms)
  I1116 13:23:55.369261 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 5.19752ms)
  I1116 13:23:55.370828 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 6.971767ms)
  I1116 13:23:55.373553 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 9.564826ms)
  I1116 13:23:55.373644 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 9.807571ms)
  I1116 13:23:55.373669 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 9.69834ms)
  I1116 13:23:55.374508 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 10.605693ms)
  I1116 13:23:55.374701 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 10.783124ms)
  I1116 13:23:55.374970 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 11.223926ms)
  I1116 13:23:55.381508 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 17.72662ms)
  I1116 13:23:55.381694 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 17.878876ms)
  I1116 13:23:55.382117 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 18.391007ms)
  I1116 13:23:55.382167 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 18.142225ms)
  I1116 13:23:55.382332 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 18.44971ms)
  I1116 13:23:55.383633 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 19.627926ms)
  I1116 13:23:55.386646 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 22.708377ms)
  I1116 13:23:55.387142 18 proxy.go:558] (16) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 23.186997ms)
  I1116 13:23:55.394994 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 7.701527ms)
  I1116 13:23:55.395893 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 8.461809ms)
  I1116 13:23:55.396178 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 8.908105ms)
  I1116 13:23:55.396423 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 9.087708ms)
  I1116 13:23:55.396431 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 9.077445ms)
  I1116 13:23:55.396565 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 9.359319ms)
  I1116 13:23:55.396884 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 9.495959ms)
  I1116 13:23:55.396985 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 9.516543ms)
  I1116 13:23:55.397319 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 9.912319ms)
  I1116 13:23:55.397521 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 10.350577ms)
  I1116 13:23:55.398710 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 11.399854ms)
  I1116 13:23:55.398727 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 11.223118ms)
  I1116 13:23:55.398851 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 11.604833ms)
  I1116 13:23:55.399299 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 11.851204ms)
  I1116 13:23:55.400414 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 13.043826ms)
  I1116 13:23:55.401536 18 proxy.go:558] (17) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 14.050067ms)
  I1116 13:23:55.420461 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 18.705554ms)
  I1116 13:23:55.420658 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 19.04379ms)
  I1116 13:23:55.421887 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 19.987929ms)
  I1116 13:23:55.422553 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 20.691169ms)
  I1116 13:23:55.423008 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 21.371824ms)
  I1116 13:23:55.424384 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 22.697517ms)
  I1116 13:23:55.424397 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 22.470914ms)
  I1116 13:23:55.424545 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 22.841355ms)
  I1116 13:23:55.424669 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 23.004432ms)
  I1116 13:23:55.424739 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 23.0137ms)
  I1116 13:23:55.424773 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 22.957913ms)
  I1116 13:23:55.424991 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 23.218318ms)
  I1116 13:23:55.425719 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 23.836233ms)
  I1116 13:23:55.425851 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 24.289769ms)
  I1116 13:23:55.427980 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 26.189657ms)
  I1116 13:23:55.428341 18 proxy.go:558] (18) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 26.506566ms)
  I1116 13:23:55.433304 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 4.936376ms)
  I1116 13:23:55.433706 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:462/proxy/: tls qux (200; 5.313292ms)
  I1116 13:23:55.435391 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f/proxy/rewriteme">test</a> (200; 6.818231ms)
  I1116 13:23:55.436116 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">test<... (200; 7.523294ms)
  I1116 13:23:55.436367 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:1080/proxy/rewriteme">... (200; 7.716216ms)
  I1116 13:23:55.436392 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:460/proxy/: tls baz (200; 7.689803ms)
  I1116 13:23:55.436393 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/: <a href="/api/v1/namespaces/proxy-8678/pods/https:proxy-service-c6vvn-qzh9f:443/proxy/tlsrewritem... (200; 7.725009ms)
  I1116 13:23:55.436840 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 8.332914ms)
  I1116 13:23:55.436862 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/pods/proxy-service-c6vvn-qzh9f:162/proxy/: bar (200; 8.177665ms)
  I1116 13:23:55.436987 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/pods/http:proxy-service-c6vvn-qzh9f:160/proxy/: foo (200; 8.374697ms)
  I1116 13:23:55.438021 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname1/proxy/: foo (200; 9.560931ms)
  I1116 13:23:55.438707 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname1/proxy/: foo (200; 10.28653ms)
  I1116 13:23:55.438717 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname1/proxy/: tls baz (200; 10.2399ms)
  I1116 13:23:55.439108 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/services/http:proxy-service-c6vvn:portname2/proxy/: bar (200; 10.477899ms)
  I1116 13:23:55.439180 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/services/https:proxy-service-c6vvn:tlsportname2/proxy/: tls qux (200; 10.634678ms)
  I1116 13:23:55.439414 18 proxy.go:558] (19) /api/v1/namespaces/proxy-8678/services/proxy-service-c6vvn:portname2/proxy/: bar (200; 10.888848ms)
  STEP: deleting ReplicationController proxy-service-c6vvn in namespace proxy-8678, will wait for the garbage collector to delete the pods @ 11/16/24 13:23:55.439
  I1116 13:23:55.507268 18 resources.go:139] Deleting ReplicationController proxy-service-c6vvn took: 10.360754ms
  I1116 13:23:55.607750 18 resources.go:163] Terminating ReplicationController proxy-service-c6vvn pods took: 100.47004ms
  E1116 13:23:56.044725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:23:57.045153      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:23:58.008676 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8678" for this suite. @ 11/16/24 13:23:58.013
• [4.991 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 11/16/24 13:23:58.022
  I1116 13:23:58.022628 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 13:23:58.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:23:58.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:23:58.039
  E1116 13:23:58.045552      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 11/16/24 13:23:58.064
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 13:23:58.489
  STEP: Deploying the webhook pod @ 11/16/24 13:23:58.501
  STEP: Wait for the deployment to be ready @ 11/16/24 13:23:58.515
  I1116 13:23:58.524066 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1116 13:23:59.046244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:00.046340      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/16/24 13:24:00.54
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 13:24:00.552
  E1116 13:24:01.047015      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:24:01.552633 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/16/24 13:24:01.563
  STEP: create a pod @ 11/16/24 13:24:01.578
  E1116 13:24:02.047276      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:03.047315      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 11/16/24 13:24:03.597
  I1116 13:24:03.597872 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=webhook-3388 attach --namespace=webhook-3388 to-be-attached-pod -i -c=container1'
  I1116 13:24:03.661631 18 builder.go:135] rc: 1
  I1116 13:24:03.721900 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3388" for this suite. @ 11/16/24 13:24:03.726
  STEP: Destroying namespace "webhook-markers-8582" for this suite. @ 11/16/24 13:24:03.734
• [5.720 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 11/16/24 13:24:03.742
  I1116 13:24:03.742753 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-probe @ 11/16/24 13:24:03.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:24:03.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:24:03.763
  E1116 13:24:04.048244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:05.048414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:06.048956      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:07.049063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:08.050067      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:09.050233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:10.050325      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:11.051284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:12.052089      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:13.052229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:14.053271      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:15.053440      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:16.054265      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:17.054361      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:18.054559      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:19.055492      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:20.055544      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:21.055698      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:22.056801      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:23.056897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:24.057014      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:25.057240      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:24:25.861211 18 container_probe.go:92] Container started at 2024-11-16 13:24:04 +0000 UTC, pod became ready at 2024-11-16 13:24:24 +0000 UTC
  I1116 13:24:25.861327 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2664" for this suite. @ 11/16/24 13:24:25.865
• [22.133 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 11/16/24 13:24:25.875
  I1116 13:24:25.875648 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 13:24:25.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:24:25.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:24:25.896
  STEP: Creating a pod to test downward api env vars @ 11/16/24 13:24:25.898
  E1116 13:24:26.058281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:27.059164      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:28.060111      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:29.060198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:24:29.928
  I1116 13:24:29.934617 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downward-api-06736c41-0dca-457e-a3d5-ca4e715ff915 container dapi-container: <nil>
  STEP: delete the pod @ 11/16/24 13:24:29.953
  I1116 13:24:29.977354 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2168" for this suite. @ 11/16/24 13:24:29.981
• [4.118 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 11/16/24 13:24:29.993
  I1116 13:24:29.993743 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pods @ 11/16/24 13:24:29.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:24:30.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:24:30.015
  STEP: creating the pod @ 11/16/24 13:24:30.018
  STEP: submitting the pod to kubernetes @ 11/16/24 13:24:30.018
  W1116 13:24:30.031007      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E1116 13:24:30.060785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:31.061855      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 11/16/24 13:24:32.044
  STEP: updating the pod @ 11/16/24 13:24:32.049
  E1116 13:24:32.062481      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:24:32.564947 18 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-e068dc47-98f7-49e2-b18c-08bde84aa0a3"
  E1116 13:24:33.062656      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:34.062747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:35.062938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:36.063755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:24:36.582702 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1557" for this suite. @ 11/16/24 13:24:36.587
• [6.603 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 11/16/24 13:24:36.597
  I1116 13:24:36.597103 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename podtemplate @ 11/16/24 13:24:36.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:24:36.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:24:36.618
  STEP: Create set of pod templates @ 11/16/24 13:24:36.62
  I1116 13:24:36.626890 18 podtemplates.go:143] created test-podtemplate-1
  I1116 13:24:36.632914 18 podtemplates.go:143] created test-podtemplate-2
  I1116 13:24:36.637763 18 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 11/16/24 13:24:36.637
  STEP: delete collection of pod templates @ 11/16/24 13:24:36.641
  I1116 13:24:36.641952 18 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 11/16/24 13:24:36.667
  I1116 13:24:36.667375 18 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1116 13:24:36.671362 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-897" for this suite. @ 11/16/24 13:24:36.676
• [0.089 seconds]
------------------------------
SSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 11/16/24 13:24:36.686
  I1116 13:24:36.686388 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename configmap @ 11/16/24 13:24:36.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:24:36.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:24:36.707
  STEP: Creating configMap that has name configmap-test-emptyKey-63db5778-03a1-42f1-8ef2-96a3b8c82608 @ 11/16/24 13:24:36.71
  I1116 13:24:36.711795 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9073" for this suite. @ 11/16/24 13:24:36.715
• [0.039 seconds]
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 11/16/24 13:24:36.724
  I1116 13:24:36.724956 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename dns @ 11/16/24 13:24:36.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:24:36.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:24:36.749
  STEP: Creating a test externalName service @ 11/16/24 13:24:36.754
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1881.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1881.svc.cluster.local; sleep 1; done
   @ 11/16/24 13:24:36.765
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1881.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1881.svc.cluster.local; sleep 1; done
   @ 11/16/24 13:24:36.765
  STEP: creating a pod to probe DNS @ 11/16/24 13:24:36.765
  STEP: submitting the pod to kubernetes @ 11/16/24 13:24:36.765
  E1116 13:24:37.064604      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:38.064679      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/16/24 13:24:38.798
  STEP: looking for the results for each expected name from probers @ 11/16/24 13:24:38.802
  I1116 13:24:38.815016 18 dns_common.go:552] DNS probes using dns-test-b19b4ac3-12aa-49c6-9dc1-0abcaddf26f0 succeeded

  STEP: changing the externalName to bar.example.com @ 11/16/24 13:24:38.815
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1881.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1881.svc.cluster.local; sleep 1; done
   @ 11/16/24 13:24:38.826
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1881.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1881.svc.cluster.local; sleep 1; done
   @ 11/16/24 13:24:38.826
  STEP: creating a second pod to probe DNS @ 11/16/24 13:24:38.826
  STEP: submitting the pod to kubernetes @ 11/16/24 13:24:38.826
  E1116 13:24:39.065149      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:40.065392      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:41.065903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:42.066059      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:43.066092      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:44.066207      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/16/24 13:24:44.856
  STEP: looking for the results for each expected name from probers @ 11/16/24 13:24:44.861
  I1116 13:24:44.871737 18 dns_common.go:552] DNS probes using dns-test-8a558a93-8c8b-4fde-b75e-462819feba85 succeeded

  STEP: changing the service to type=ClusterIP @ 11/16/24 13:24:44.871
  W1116 13:24:44.889132      18 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1881.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-1881.svc.cluster.local; sleep 1; done
   @ 11/16/24 13:24:44.889
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1881.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1881.svc.cluster.local; sleep 1; done
   @ 11/16/24 13:24:44.889
  STEP: creating a third pod to probe DNS @ 11/16/24 13:24:44.889
  STEP: submitting the pod to kubernetes @ 11/16/24 13:24:44.893
  E1116 13:24:45.066935      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:46.067885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/16/24 13:24:46.914
  STEP: looking for the results for each expected name from probers @ 11/16/24 13:24:46.918
  I1116 13:24:46.932093 18 dns_common.go:552] DNS probes using dns-test-cd705ac3-bd10-4c8f-9e6b-209d9bd9140e succeeded

  STEP: deleting the pod @ 11/16/24 13:24:46.932
  STEP: deleting the pod @ 11/16/24 13:24:46.948
  STEP: deleting the pod @ 11/16/24 13:24:46.963
  STEP: deleting the test externalName service @ 11/16/24 13:24:46.98
  I1116 13:24:46.996961 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1881" for this suite. @ 11/16/24 13:24:47.002
• [10.288 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 11/16/24 13:24:47.013
  I1116 13:24:47.013471 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/16/24 13:24:47.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:24:47.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:24:47.033
  I1116 13:24:47.036478 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  E1116 13:24:47.068729      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:48.069540      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 11/16/24 13:24:48.322
  I1116 13:24:48.322366 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 create -f -'
  E1116 13:24:49.075818      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:50.070621      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:24:50.392596 18 builder.go:146] stderr: ""
  I1116 13:24:50.392649 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1721-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1116 13:24:50.392704 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 delete e2e-test-crd-publish-openapi-1721-crds test-foo'
  I1116 13:24:50.452114 18 builder.go:146] stderr: ""
  I1116 13:24:50.452171 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1721-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1116 13:24:50.452208 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 apply -f -'
  I1116 13:24:50.510955 18 builder.go:146] stderr: ""
  I1116 13:24:50.510988 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1721-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1116 13:24:50.511028 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 delete e2e-test-crd-publish-openapi-1721-crds test-foo'
  I1116 13:24:50.564180 18 builder.go:146] stderr: ""
  I1116 13:24:50.564220 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1721-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 11/16/24 13:24:50.564
  I1116 13:24:50.564293 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 create -f -'
  I1116 13:24:50.606738 18 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 11/16/24 13:24:50.606
  I1116 13:24:50.606835 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 create -f -'
  I1116 13:24:50.647426 18 builder.go:135] rc: 1
  I1116 13:24:50.647559 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 apply -f -'
  I1116 13:24:50.699755 18 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 11/16/24 13:24:50.699
  I1116 13:24:50.699858 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 create -f -'
  I1116 13:24:50.744074 18 builder.go:135] rc: 1
  I1116 13:24:50.744197 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 apply -f -'
  I1116 13:24:50.796338 18 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 11/16/24 13:24:50.796
  I1116 13:24:50.796563 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-4154 explain e2e-test-crd-publish-openapi-1721-crds'
  I1116 13:24:50.836333 18 builder.go:146] stderr: ""
  I1116 13:24:50.836377 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1721-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 11/16/24 13:24:50.836
  I1116 13:24:50.836655 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-4154 explain e2e-test-crd-publish-openapi-1721-crds.metadata'
  I1116 13:24:50.877477 18 builder.go:146] stderr: ""
  I1116 13:24:50.877670 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1721-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1116 13:24:50.877877 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-4154 explain e2e-test-crd-publish-openapi-1721-crds.spec'
  I1116 13:24:50.919351 18 builder.go:146] stderr: ""
  I1116 13:24:50.919382 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1721-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1116 13:24:50.919462 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-4154 explain e2e-test-crd-publish-openapi-1721-crds.spec.bars'
  I1116 13:24:50.961600 18 builder.go:146] stderr: ""
  I1116 13:24:50.961636 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1721-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 11/16/24 13:24:50.961
  I1116 13:24:50.961798 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=crd-publish-openapi-4154 explain e2e-test-crd-publish-openapi-1721-crds.spec.bars2'
  I1116 13:24:51.002166 18 builder.go:135] rc: 1
  E1116 13:24:51.071000      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:52.071244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:24:52.301648 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4154" for this suite. @ 11/16/24 13:24:52.307
• [5.302 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 11/16/24 13:24:52.316
  I1116 13:24:52.316103 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename subpath @ 11/16/24 13:24:52.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:24:52.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:24:52.341
  STEP: Setting up data @ 11/16/24 13:24:52.342
  STEP: Creating pod pod-subpath-test-configmap-kr84 @ 11/16/24 13:24:52.351
  STEP: Creating a pod to test atomic-volume-subpath @ 11/16/24 13:24:52.351
  E1116 13:24:53.071429      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:54.071654      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:55.071826      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:56.072849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:57.073777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:58.074640      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:24:59.075191      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:00.075289      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:01.075392      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:02.075480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:03.076246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:04.076349      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:05.076437      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:06.076554      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:07.077255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:08.077380      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:09.077471      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:10.077594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:11.078637      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:12.079281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:13.079406      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:14.079632      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:25:14.428
  I1116 13:25:14.433270 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-subpath-test-configmap-kr84 container test-container-subpath-configmap-kr84: <nil>
  STEP: delete the pod @ 11/16/24 13:25:14.445
  STEP: Deleting pod pod-subpath-test-configmap-kr84 @ 11/16/24 13:25:14.465
  I1116 13:25:14.465411 18 delete.go:62] Deleting pod "pod-subpath-test-configmap-kr84" in namespace "subpath-527"
  I1116 13:25:14.468813 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-527" for this suite. @ 11/16/24 13:25:14.472
• [22.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 11/16/24 13:25:14.481
  I1116 13:25:14.481867 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename field-validation @ 11/16/24 13:25:14.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:25:14.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:25:14.509
  I1116 13:25:14.511515 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  E1116 13:25:15.080634      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:16.080787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1116 13:25:17.050624      18 warnings.go:70] unknown field "alpha"
  W1116 13:25:17.050644      18 warnings.go:70] unknown field "beta"
  W1116 13:25:17.050647      18 warnings.go:70] unknown field "delta"
  W1116 13:25:17.050650      18 warnings.go:70] unknown field "epsilon"
  W1116 13:25:17.050653      18 warnings.go:70] unknown field "gamma"
  E1116 13:25:17.080961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:25:17.596730 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8147" for this suite. @ 11/16/24 13:25:17.601
• [3.129 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 11/16/24 13:25:17.61
  I1116 13:25:17.610583 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename namespaces @ 11/16/24 13:25:17.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:25:17.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:25:17.632
  STEP: Updating Namespace "namespaces-4857" @ 11/16/24 13:25:17.634
  I1116 13:25:17.644805 18 namespace.go:389] Namespace "namespaces-4857" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"30407c67-fec0-46eb-b860-1f59b109a5a2", "kubernetes.io/metadata.name":"namespaces-4857", "namespaces-4857":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1116 13:25:17.644924 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4857" for this suite. @ 11/16/24 13:25:17.648
• [0.045 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 11/16/24 13:25:17.655
  I1116 13:25:17.655702 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:25:17.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:25:17.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:25:17.677
  STEP: Creating projection with secret that has name projected-secret-test-map-7b31a1e5-700c-4029-a1be-dc58b65dbed8 @ 11/16/24 13:25:17.679
  STEP: Creating a pod to test consume secrets @ 11/16/24 13:25:17.683
  E1116 13:25:18.081117      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:19.081823      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:20.081939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:21.082879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:25:21.707
  I1116 13:25:21.711732 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-projected-secrets-f88c54cd-72ed-462c-b0ff-8d14ff52857e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 13:25:21.719
  I1116 13:25:21.740275 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-193" for this suite. @ 11/16/24 13:25:21.745
• [4.098 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 11/16/24 13:25:21.754
  I1116 13:25:21.754152 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename secrets @ 11/16/24 13:25:21.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:25:21.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:25:21.776
  STEP: creating secret secrets-7354/secret-test-a66fef96-ccb9-48d9-b88c-c364a17d474d @ 11/16/24 13:25:21.777
  STEP: Creating a pod to test consume secrets @ 11/16/24 13:25:21.784
  E1116 13:25:22.083324      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:23.084072      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:24.084620      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:25.085244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:25:25.809
  I1116 13:25:25.813021 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-configmaps-bc40b9ca-e723-491e-b587-965b12a0e45f container env-test: <nil>
  STEP: delete the pod @ 11/16/24 13:25:25.821
  I1116 13:25:25.840895 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7354" for this suite. @ 11/16/24 13:25:25.844
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 11/16/24 13:25:25.852
  I1116 13:25:25.852863 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 13:25:25.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:25:25.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:25:25.875
  STEP: creating the pod @ 11/16/24 13:25:25.877
  I1116 13:25:25.877432 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5292 create -f -'
  I1116 13:25:25.965336 18 builder.go:146] stderr: ""
  I1116 13:25:25.965377 18 builder.go:147] stdout: "pod/pause created\n"
  E1116 13:25:26.085354      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:27.086264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 11/16/24 13:25:27.976
  I1116 13:25:27.976350 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5292 label pods pause testing-label=testing-label-value'
  I1116 13:25:28.034084 18 builder.go:146] stderr: ""
  I1116 13:25:28.034130 18 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 11/16/24 13:25:28.034
  I1116 13:25:28.034200 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5292 get pod pause -L testing-label'
  I1116 13:25:28.078401 18 builder.go:146] stderr: ""
  I1116 13:25:28.078437 18 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 11/16/24 13:25:28.078
  I1116 13:25:28.078562 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5292 label pods pause testing-label-'
  E1116 13:25:28.086959      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:25:28.134974 18 builder.go:146] stderr: ""
  I1116 13:25:28.135003 18 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 11/16/24 13:25:28.135
  I1116 13:25:28.135080 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5292 get pod pause -L testing-label'
  I1116 13:25:28.185094 18 builder.go:146] stderr: ""
  I1116 13:25:28.185123 18 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 11/16/24 13:25:28.185
  I1116 13:25:28.185310 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5292 delete --grace-period=0 --force -f -'
  I1116 13:25:28.239858 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1116 13:25:28.239885 18 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1116 13:25:28.239947 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5292 get rc,svc -l name=pause --no-headers'
  I1116 13:25:28.290691 18 builder.go:146] stderr: "No resources found in kubectl-5292 namespace.\n"
  I1116 13:25:28.290735 18 builder.go:147] stdout: ""
  I1116 13:25:28.290776 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5292 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1116 13:25:28.331968 18 builder.go:146] stderr: ""
  I1116 13:25:28.332073 18 builder.go:147] stdout: ""
  I1116 13:25:28.332195 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5292" for this suite. @ 11/16/24 13:25:28.336
• [2.492 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 11/16/24 13:25:28.345
  I1116 13:25:28.345156 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 13:25:28.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:25:28.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:25:28.366
  STEP: Setting up server cert @ 11/16/24 13:25:28.393
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 13:25:28.635
  STEP: Deploying the webhook pod @ 11/16/24 13:25:28.646
  STEP: Wait for the deployment to be ready @ 11/16/24 13:25:28.661
  I1116 13:25:28.668690 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1116 13:25:29.087170      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:30.087447      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/16/24 13:25:30.682
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 13:25:30.694
  E1116 13:25:31.088267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:25:31.694986 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 11/16/24 13:25:31.703
  I1116 13:25:31.746061 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9259" for this suite. @ 11/16/24 13:25:31.749
  STEP: Destroying namespace "webhook-markers-4588" for this suite. @ 11/16/24 13:25:31.759
• [3.421 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 11/16/24 13:25:31.766
  I1116 13:25:31.766352 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 13:25:31.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:25:31.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:25:31.786
  STEP: validating api versions @ 11/16/24 13:25:31.788
  I1116 13:25:31.788356 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-9722 api-versions'
  I1116 13:25:31.828542 18 builder.go:146] stderr: ""
  I1116 13:25:31.828569 18 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I1116 13:25:31.828665 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9722" for this suite. @ 11/16/24 13:25:31.833
• [0.074 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 11/16/24 13:25:31.84
  I1116 13:25:31.840750 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename replication-controller @ 11/16/24 13:25:31.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:25:31.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:25:31.862
  I1116 13:25:31.863799 18 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E1116 13:25:32.088726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 11/16/24 13:25:32.878
  STEP: Checking rc "condition-test" has the desired failure condition set @ 11/16/24 13:25:32.884
  E1116 13:25:33.089547      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 11/16/24 13:25:33.892
  I1116 13:25:33.903365 18 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 11/16/24 13:25:33.903
  E1116 13:25:34.089951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:25:34.911374 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-149" for this suite. @ 11/16/24 13:25:34.916
• [3.084 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 11/16/24 13:25:34.925
  I1116 13:25:34.925255 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename namespaces @ 11/16/24 13:25:34.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:25:34.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:25:34.947
  STEP: Creating a test namespace @ 11/16/24 13:25:34.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:25:34.967
  STEP: Creating a pod in the namespace @ 11/16/24 13:25:34.969
  STEP: Waiting for the pod to have running status @ 11/16/24 13:25:34.977
  E1116 13:25:35.090937      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:36.091302      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 11/16/24 13:25:36.991
  STEP: Waiting for the namespace to be removed. @ 11/16/24 13:25:36.998
  E1116 13:25:37.092126      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:38.092504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:39.093341      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:40.093721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:41.094351      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:42.094629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:43.094669      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:44.095412      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:45.095884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:46.096119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:47.096871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 11/16/24 13:25:48.003
  STEP: Verifying there are no pods in the namespace @ 11/16/24 13:25:48.027
  I1116 13:25:48.030242 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6820" for this suite. @ 11/16/24 13:25:48.034
  STEP: Destroying namespace "nsdeletetest-7943" for this suite. @ 11/16/24 13:25:48.041
  I1116 13:25:48.045568 18 framework.go:370] Namespace nsdeletetest-7943 was already deleted
  STEP: Destroying namespace "nsdeletetest-894" for this suite. @ 11/16/24 13:25:48.045
• [13.127 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 11/16/24 13:25:48.052
  I1116 13:25:48.052724 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl-logs @ 11/16/24 13:25:48.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:25:48.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:25:48.074
  STEP: creating a pod @ 11/16/24 13:25:48.075
  I1116 13:25:48.075829 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-logs-6147 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  E1116 13:25:48.097144      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:25:48.126763 18 builder.go:146] stderr: ""
  I1116 13:25:48.126790 18 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 11/16/24 13:25:48.126
  I1116 13:25:48.126903 18 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E1116 13:25:49.097401      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:50.097617      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:25:50.138528 18 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 11/16/24 13:25:50.138
  I1116 13:25:50.138627 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-logs-6147 logs logs-generator logs-generator'
  I1116 13:25:50.197243 18 builder.go:146] stderr: ""
  I1116 13:25:50.197284 18 builder.go:147] stdout: "I1116 13:25:48.677739       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/9kdx 501\nI1116 13:25:48.878122       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/kq89 513\nI1116 13:25:49.078458       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/bbqn 409\nI1116 13:25:49.277827       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/wcd9 239\nI1116 13:25:49.478148       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/5s2 534\nI1116 13:25:49.678472       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/k8fw 404\nI1116 13:25:49.877750       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/lvjq 324\nI1116 13:25:50.078109       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/kpv 300\n"
  STEP: limiting log lines @ 11/16/24 13:25:50.197
  I1116 13:25:50.197364 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-logs-6147 logs logs-generator logs-generator --tail=1'
  I1116 13:25:50.250500 18 builder.go:146] stderr: ""
  I1116 13:25:50.250535 18 builder.go:147] stdout: "I1116 13:25:50.078109       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/kpv 300\n"
  I1116 13:25:50.250544 18 logs.go:180] got output "I1116 13:25:50.078109       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/kpv 300\n"
  STEP: limiting log bytes @ 11/16/24 13:25:50.25
  I1116 13:25:50.250667 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-logs-6147 logs logs-generator logs-generator --limit-bytes=1'
  I1116 13:25:50.303335 18 builder.go:146] stderr: ""
  I1116 13:25:50.303368 18 builder.go:147] stdout: "I"
  I1116 13:25:50.303377 18 logs.go:186] got output "I"
  STEP: exposing timestamps @ 11/16/24 13:25:50.303
  I1116 13:25:50.303494 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-logs-6147 logs logs-generator logs-generator --tail=1 --timestamps'
  I1116 13:25:50.353777 18 builder.go:146] stderr: ""
  I1116 13:25:50.353820 18 builder.go:147] stdout: "2024-11-16T13:25:50.278501500Z I1116 13:25:50.278411       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/rxzg 387\n"
  I1116 13:25:50.353831 18 logs.go:192] got output "2024-11-16T13:25:50.278501500Z I1116 13:25:50.278411       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/rxzg 387\n"
  STEP: restricting to a time range @ 11/16/24 13:25:50.353
  E1116 13:25:51.097728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:52.097960      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:25:52.854823 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-logs-6147 logs logs-generator logs-generator --since=1s'
  I1116 13:25:52.908293 18 builder.go:146] stderr: ""
  I1116 13:25:52.908348 18 builder.go:147] stdout: "I1116 13:25:52.078325       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/qnq 458\nI1116 13:25:52.278654       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/b5nf 223\nI1116 13:25:52.477825       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/qlm 261\nI1116 13:25:52.678196       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/rlhh 476\nI1116 13:25:52.878507       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/n6mm 364\n"
  I1116 13:25:52.908402 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-logs-6147 logs logs-generator logs-generator --since=24h'
  I1116 13:25:52.962341 18 builder.go:146] stderr: ""
  I1116 13:25:52.962391 18 builder.go:147] stdout: "I1116 13:25:48.677739       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/9kdx 501\nI1116 13:25:48.878122       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/kq89 513\nI1116 13:25:49.078458       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/bbqn 409\nI1116 13:25:49.277827       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/wcd9 239\nI1116 13:25:49.478148       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/5s2 534\nI1116 13:25:49.678472       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/k8fw 404\nI1116 13:25:49.877750       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/lvjq 324\nI1116 13:25:50.078109       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/kpv 300\nI1116 13:25:50.278411       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/rxzg 387\nI1116 13:25:50.478769       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/lds4 404\nI1116 13:25:50.678099       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/nkr 579\nI1116 13:25:50.878425       1 logs_generator.go:76] 11 POST /api/v1/namespaces/ns/pods/dst 375\nI1116 13:25:51.078756       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/8pb2 212\nI1116 13:25:51.278023       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/7ts 428\nI1116 13:25:51.478394       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/gc2r 367\nI1116 13:25:51.678719       1 logs_generator.go:76] 15 GET /api/v1/namespaces/default/pods/8wf 519\nI1116 13:25:51.878025       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/gszq 311\nI1116 13:25:52.078325       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/qnq 458\nI1116 13:25:52.278654       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/b5nf 223\nI1116 13:25:52.477825       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/qlm 261\nI1116 13:25:52.678196       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/rlhh 476\nI1116 13:25:52.878507       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/n6mm 364\n"
  I1116 13:25:52.962477 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-logs-6147 delete pod logs-generator'
  E1116 13:25:53.098679      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:54.098797      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:25:54.191826 18 builder.go:146] stderr: ""
  I1116 13:25:54.191872 18 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1116 13:25:54.191983 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6147" for this suite. @ 11/16/24 13:25:54.197
• [6.152 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 11/16/24 13:25:54.204
  I1116 13:25:54.204760 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename configmap @ 11/16/24 13:25:54.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:25:54.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:25:54.226
  STEP: Creating configMap with name configmap-test-volume-map-63d65997-9476-4ba0-8121-bf36c2458345 @ 11/16/24 13:25:54.228
  STEP: Creating a pod to test consume configMaps @ 11/16/24 13:25:54.233
  E1116 13:25:55.098877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:56.099893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:57.100019      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:25:58.100215      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:25:58.258
  I1116 13:25:58.262127 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-configmaps-73b876ab-af66-49c3-87c8-8344525c5a26 container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 13:25:58.27
  I1116 13:25:58.291394 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5963" for this suite. @ 11/16/24 13:25:58.295
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 11/16/24 13:25:58.302
  I1116 13:25:58.302687 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename field-validation @ 11/16/24 13:25:58.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:25:58.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:25:58.323
  I1116 13:25:58.325349 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  E1116 13:25:59.100907      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:00.101016      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:01.101718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:26:01.407769 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5832" for this suite. @ 11/16/24 13:26:01.412
• [3.118 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 11/16/24 13:26:01.42
  I1116 13:26:01.420421 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/16/24 13:26:01.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:26:01.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:26:01.442
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 11/16/24 13:26:01.444
  I1116 13:26:01.444878 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  E1116 13:26:02.102308      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:03.103273      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:04.103375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:05.103857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:06.104280      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 11/16/24 13:26:06.431
  I1116 13:26:06.431917 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  E1116 13:26:07.104808      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:26:07.634165 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  E1116 13:26:08.104882      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:09.105281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:10.105491      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:11.106279      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:12.107192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:26:12.697985 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9508" for this suite. @ 11/16/24 13:26:12.705
• [11.297 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 11/16/24 13:26:12.717
  I1116 13:26:12.717646 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename subjectreview @ 11/16/24 13:26:12.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:26:12.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:26:12.735
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-6813" @ 11/16/24 13:26:12.737
  I1116 13:26:12.743319 18 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-6813:e2e"
  I1116 13:26:12.743342 18 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-6813"}
  I1116 13:26:12.743349 18 subjectreviews.go:71] saUID: "4c47c989-562b-4feb-a89f-0cac582b1ee8"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-6813:e2e" @ 11/16/24 13:26:12.743
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-6813:e2e" @ 11/16/24 13:26:12.743
  I1116 13:26:12.744981 18 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-6813:e2e" api 'list' configmaps in "subjectreview-6813" namespace @ 11/16/24 13:26:12.745
  I1116 13:26:12.746369 18 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-6813:e2e" @ 11/16/24 13:26:12.746
  I1116 13:26:12.748006 18 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1116 13:26:12.748028 18 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1116 13:26:12.748109 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-6813" for this suite. @ 11/16/24 13:26:12.752
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 11/16/24 13:26:12.762
  I1116 13:26:12.762147 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename sched-preemption @ 11/16/24 13:26:12.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:26:12.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:26:12.781
  I1116 13:26:12.799647 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1116 13:26:13.108268      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:14.108492      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:15.108574      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:16.108680      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:17.108787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:18.108898      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:19.109129      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:20.109353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:21.109430      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:22.109526      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:23.110545      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:24.110648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:25.110745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:26.110824      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:27.110993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:28.111608      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:29.111726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:30.111919      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:31.112792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:32.113717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:33.114226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:34.115167      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:35.116119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:36.117159      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:37.117915      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:38.118869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:39.118961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:40.119350      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:41.119867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:42.120641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:43.121239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:44.122224      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:45.122293      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:46.122556      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:47.123234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:48.123407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:49.124176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:50.125245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:51.125337      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:52.126235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:53.127095      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:54.127183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:55.127281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:56.128236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:57.128328      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:58.128515      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:26:59.129226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:00.129462      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:01.129732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:02.129935      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:03.130228      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:04.130324      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:05.131380      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:06.131596      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:07.131918      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:08.132140      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:09.132175      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:10.132318      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:11.132672      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:12.132863      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:27:12.805273 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/16/24 13:27:12.81
  I1116 13:27:12.833196 18 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I1116 13:27:12.842526 18 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I1116 13:27:12.858854 18 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I1116 13:27:12.868320 18 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I1116 13:27:12.887868 18 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I1116 13:27:12.894217 18 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/16/24 13:27:12.894
  E1116 13:27:13.133797      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:14.134278      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 11/16/24 13:27:14.928
  E1116 13:27:15.134965      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:16.135910      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:27:17.017134 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4294" for this suite. @ 11/16/24 13:27:17.022
• [64.269 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 11/16/24 13:27:17.031
  I1116 13:27:17.031152 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 13:27:17.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:27:17.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:27:17.05
  STEP: Setting up server cert @ 11/16/24 13:27:17.073
  E1116 13:27:17.136302      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 13:27:17.367
  STEP: Deploying the webhook pod @ 11/16/24 13:27:17.377
  STEP: Wait for the deployment to be ready @ 11/16/24 13:27:17.392
  I1116 13:27:17.405257 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1116 13:27:18.136431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:19.136548      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/16/24 13:27:19.421
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 13:27:19.434
  E1116 13:27:20.136651      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:27:20.435077 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 11/16/24 13:27:20.521
  STEP: Creating a configMap that should be mutated @ 11/16/24 13:27:20.531
  STEP: Deleting the collection of validation webhooks @ 11/16/24 13:27:20.563
  STEP: Creating a configMap that should not be mutated @ 11/16/24 13:27:20.632
  I1116 13:27:20.693116 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3980" for this suite. @ 11/16/24 13:27:20.697
  STEP: Destroying namespace "webhook-markers-9102" for this suite. @ 11/16/24 13:27:20.707
• [3.685 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 11/16/24 13:27:20.716
  I1116 13:27:20.716901 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename limitrange @ 11/16/24 13:27:20.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:27:20.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:27:20.734
  STEP: Creating a LimitRange @ 11/16/24 13:27:20.736
  STEP: Setting up watch @ 11/16/24 13:27:20.736
  STEP: Submitting a LimitRange @ 11/16/24 13:27:20.841
  STEP: Verifying LimitRange creation was observed @ 11/16/24 13:27:20.848
  STEP: Fetching the LimitRange to ensure it has proper values @ 11/16/24 13:27:20.848
  I1116 13:27:20.853708 18 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1116 13:27:20.853736 18 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 11/16/24 13:27:20.853
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 11/16/24 13:27:20.859
  I1116 13:27:20.864012 18 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1116 13:27:20.864054 18 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 11/16/24 13:27:20.864
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 11/16/24 13:27:20.87
  I1116 13:27:20.875481 18 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1116 13:27:20.875506 18 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 11/16/24 13:27:20.875
  STEP: Failing to create a Pod with more than max resources @ 11/16/24 13:27:20.877
  STEP: Updating a LimitRange @ 11/16/24 13:27:20.879
  STEP: Verifying LimitRange updating is effective @ 11/16/24 13:27:20.886
  E1116 13:27:21.136719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:22.137724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 11/16/24 13:27:22.896
  STEP: Failing to create a Pod with more than max resources @ 11/16/24 13:27:22.902
  STEP: Deleting a LimitRange @ 11/16/24 13:27:22.906
  STEP: Verifying the LimitRange was deleted @ 11/16/24 13:27:22.923
  E1116 13:27:23.138493      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:24.138620      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:25.138680      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:26.138775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:27.138984      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:27:27.929443 18 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 11/16/24 13:27:27.929
  I1116 13:27:27.939959 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1638" for this suite. @ 11/16/24 13:27:27.947
• [7.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 11/16/24 13:27:27.955
  I1116 13:27:27.955022 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:27:27.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:27:27.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:27:27.973
  STEP: Creating configMap with name cm-test-opt-del-a59dd0ac-84ed-4a00-abec-370486fba72b @ 11/16/24 13:27:27.979
  STEP: Creating configMap with name cm-test-opt-upd-abb8fc6c-89aa-4719-9074-8801c540c9b4 @ 11/16/24 13:27:27.983
  STEP: Creating the pod @ 11/16/24 13:27:27.988
  E1116 13:27:28.139502      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:29.139584      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-a59dd0ac-84ed-4a00-abec-370486fba72b @ 11/16/24 13:27:30.046
  STEP: Updating configmap cm-test-opt-upd-abb8fc6c-89aa-4719-9074-8801c540c9b4 @ 11/16/24 13:27:30.055
  STEP: Creating configMap with name cm-test-opt-create-2e10ad2e-8e97-45f8-8100-4037db24ace9 @ 11/16/24 13:27:30.061
  STEP: waiting to observe update in volume @ 11/16/24 13:27:30.069
  E1116 13:27:30.140423      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:31.140582      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:32.141127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:33.141285      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:34.142178      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:35.142486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:36.143077      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:37.143228      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:38.143798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:39.144788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:40.145630      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:41.145774      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:42.145775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:43.146273      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:44.147318      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:45.147472      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:46.148236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:47.148386      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:48.148491      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:49.149289      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:50.149373      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:51.149493      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:52.149945      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:53.150092      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:54.150207      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:55.150337      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:56.150602      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:57.150747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:58.151185      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:27:59.151300      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:00.151446      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:01.151742      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:02.151962      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:03.152845      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:04.152995      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:05.153104      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:06.153203      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:07.153294      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:08.154009      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:09.154194      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:10.154306      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:11.154570      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:12.154648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:13.155199      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:14.155298      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:15.156116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:16.156920      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:17.157887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:18.158108      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:19.158207      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:20.158362      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:21.158450      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:22.158574      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:23.158728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:24.158838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:25.158891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:26.159156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:27.159253      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:28.159351      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:29.159464      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:30.159550      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:31.160596      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:32.160721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:33.160968      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:34.161200      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:35.162229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:36.162406      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:37.163266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:38.163662      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:39.163767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:40.163979      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:41.164266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:42.165268      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:43.166257      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:44.166350      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:45.167232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:46.167372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:47.167464      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:48.167554      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:49.168551      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:50.168636      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:51.168954      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:52.169157      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:53.169201      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:54.169274      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:55.169387      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:56.170214      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:57.170303      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:28:58.170412      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:28:58.580171 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1067" for this suite. @ 11/16/24 13:28:58.585
• [90.639 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 11/16/24 13:28:58.594
  I1116 13:28:58.594059 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename resourcequota @ 11/16/24 13:28:58.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:28:58.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:28:58.612
  STEP: Counting existing ResourceQuota @ 11/16/24 13:28:58.614
  E1116 13:28:59.171271      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:00.171372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:01.172277      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:02.172393      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:03.173295      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/16/24 13:29:03.619
  STEP: Ensuring resource quota status is calculated @ 11/16/24 13:29:03.623
  E1116 13:29:04.173502      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:05.174282      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:29:05.629940 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-660" for this suite. @ 11/16/24 13:29:05.635
• [7.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 11/16/24 13:29:05.644
  I1116 13:29:05.644378 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename replicaset @ 11/16/24 13:29:05.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:29:05.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:29:05.662
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 11/16/24 13:29:05.665
  I1116 13:29:05.674549 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1116 13:29:06.174790      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:07.175074      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:08.175259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:09.175284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:10.176230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:29:10.680320 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/16/24 13:29:10.68
  STEP: getting scale subresource @ 11/16/24 13:29:10.68
  STEP: updating a scale subresource @ 11/16/24 13:29:10.683
  STEP: verifying the replicaset Spec.Replicas was modified @ 11/16/24 13:29:10.69
  STEP: Patch a scale subresource @ 11/16/24 13:29:10.695
  I1116 13:29:10.707426 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3944" for this suite. @ 11/16/24 13:29:10.712
• [5.076 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 11/16/24 13:29:10.72
  I1116 13:29:10.720946 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename resourcequota @ 11/16/24 13:29:10.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:29:10.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:29:10.746
  STEP: Creating a ResourceQuota with terminating scope @ 11/16/24 13:29:10.749
  STEP: Ensuring ResourceQuota status is calculated @ 11/16/24 13:29:10.754
  E1116 13:29:11.177012      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:12.177149      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 11/16/24 13:29:12.761
  STEP: Ensuring ResourceQuota status is calculated @ 11/16/24 13:29:12.766
  E1116 13:29:13.177282      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:14.177393      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 11/16/24 13:29:14.772
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 11/16/24 13:29:14.788
  E1116 13:29:15.178021      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:16.178204      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 11/16/24 13:29:16.794
  E1116 13:29:17.179261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:18.179379      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/16/24 13:29:18.801
  STEP: Ensuring resource quota status released the pod usage @ 11/16/24 13:29:18.819
  E1116 13:29:19.180258      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:20.180395      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 11/16/24 13:29:20.826
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 11/16/24 13:29:20.841
  E1116 13:29:21.181020      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:22.181268      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 11/16/24 13:29:22.846
  E1116 13:29:23.181724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:24.181831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/16/24 13:29:24.851
  STEP: Ensuring resource quota status released the pod usage @ 11/16/24 13:29:24.867
  E1116 13:29:25.182401      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:26.182847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:29:26.873074 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9821" for this suite. @ 11/16/24 13:29:26.878
• [16.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 11/16/24 13:29:26.888
  I1116 13:29:26.888470 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/16/24 13:29:26.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:29:26.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:29:26.906
  STEP: set up a multi version CRD @ 11/16/24 13:29:26.908
  I1116 13:29:26.908884 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  E1116 13:29:27.183314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:28.184147      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:29.184197      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: rename a version @ 11/16/24 13:29:30.031
  STEP: check the new version name is served @ 11/16/24 13:29:30.046
  E1116 13:29:30.185164      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 11/16/24 13:29:30.796
  E1116 13:29:31.185974      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 11/16/24 13:29:31.4
  E1116 13:29:32.186562      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:33.186605      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:29:33.828355 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3761" for this suite. @ 11/16/24 13:29:33.835
• [6.955 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 11/16/24 13:29:33.843
  I1116 13:29:33.843671 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename limitrange @ 11/16/24 13:29:33.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:29:33.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:29:33.868
  STEP: Creating LimitRange "e2e-limitrange-nk62w" in namespace "limitrange-3926" @ 11/16/24 13:29:33.87
  STEP: Creating another limitRange in another namespace @ 11/16/24 13:29:33.875
  I1116 13:29:33.893198 18 limit_range.go:299] Namespace "e2e-limitrange-nk62w-9086" created
  I1116 13:29:33.893215 18 limit_range.go:300] Creating LimitRange "e2e-limitrange-nk62w" in namespace "e2e-limitrange-nk62w-9086"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-nk62w" @ 11/16/24 13:29:33.898
  I1116 13:29:33.901584 18 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-nk62w" in "limitrange-3926" namespace @ 11/16/24 13:29:33.901
  I1116 13:29:33.908640 18 limit_range.go:335] LimitRange "e2e-limitrange-nk62w" has been patched
  STEP: Delete LimitRange "e2e-limitrange-nk62w" by Collection with labelSelector: "e2e-limitrange-nk62w=patched" @ 11/16/24 13:29:33.908
  STEP: Confirm that the limitRange "e2e-limitrange-nk62w" has been deleted @ 11/16/24 13:29:33.919
  I1116 13:29:33.919848 18 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1116 13:29:33.923654 18 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-nk62w=patched"
  I1116 13:29:33.923676 18 limit_range.go:344] LimitRange "e2e-limitrange-nk62w" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-nk62w" @ 11/16/24 13:29:33.923
  I1116 13:29:33.927189 18 limit_range.go:350] Found 1 limitRange
  I1116 13:29:33.927276 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3926" for this suite. @ 11/16/24 13:29:33.93
  STEP: Destroying namespace "e2e-limitrange-nk62w-9086" for this suite. @ 11/16/24 13:29:33.939
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 11/16/24 13:29:33.949
  I1116 13:29:33.949389 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename daemonsets @ 11/16/24 13:29:33.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:29:33.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:29:33.975
  STEP: Creating simple DaemonSet "daemon-set" @ 11/16/24 13:29:33.996
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/16/24 13:29:34.003
  I1116 13:29:34.006840 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:29:34.006878 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:29:34.010280 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:29:34.010299 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  E1116 13:29:34.187653      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:29:35.010196 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:29:35.010253 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:29:35.013781 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:29:35.013811 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  E1116 13:29:35.188062      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:29:36.009739 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:29:36.009780 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:29:36.014388 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1116 13:29:36.014409 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 11/16/24 13:29:36.018
  STEP: DeleteCollection of the DaemonSets @ 11/16/24 13:29:36.022
  STEP: Verify that ReplicaSets have been deleted @ 11/16/24 13:29:36.033
  I1116 13:29:36.045028 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35510"},"items":null}

  I1116 13:29:36.048788 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35510"},"items":[{"metadata":{"name":"daemon-set-j74dq","generateName":"daemon-set-","namespace":"daemonsets-1543","uid":"100fc7b0-6a44-4733-84a0-7a2ec3d06eac","resourceVersion":"35506","creationTimestamp":"2024-11-16T13:29:34Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"03adeba0-dd34-41e9-a3e3-3df442b3f790","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-11-16T13:29:34Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"03adeba0-dd34-41e9-a3e3-3df442b3f790\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-11-16T13:29:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.216.116\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-m7f5q","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-m7f5q","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-72-246","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-72-246"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-16T13:29:35Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-16T13:29:34Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-16T13:29:35Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-16T13:29:35Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-16T13:29:34Z"}],"hostIP":"172.31.72.246","hostIPs":[{"ip":"172.31.72.246"}],"podIP":"192.168.216.116","podIPs":[{"ip":"192.168.216.116"}],"startTime":"2024-11-16T13:29:34Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-11-16T13:29:34Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://4d0ad0ba313f6ec100331802aca647e197cdd9fc18e9832476a659a6a77c8034","started":true,"volumeMounts":[{"name":"kube-api-access-m7f5q","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-w579n","generateName":"daemon-set-","namespace":"daemonsets-1543","uid":"51474154-1d28-4551-9385-bc5610183d3c","resourceVersion":"35503","creationTimestamp":"2024-11-16T13:29:34Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"03adeba0-dd34-41e9-a3e3-3df442b3f790","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-11-16T13:29:34Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"03adeba0-dd34-41e9-a3e3-3df442b3f790\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-11-16T13:29:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.164.85\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4tjbm","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-4tjbm","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-22-107","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-22-107"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-16T13:29:35Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-16T13:29:34Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-16T13:29:35Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-16T13:29:35Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-16T13:29:34Z"}],"hostIP":"172.31.22.107","hostIPs":[{"ip":"172.31.22.107"}],"podIP":"192.168.164.85","podIPs":[{"ip":"192.168.164.85"}],"startTime":"2024-11-16T13:29:34Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-11-16T13:29:34Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://3aaf16384af5a4e28c3eb369a44a8955054cea9e9d8724197e597612d9d5f0c4","started":true,"volumeMounts":[{"name":"kube-api-access-4tjbm","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-zgxjc","generateName":"daemon-set-","namespace":"daemonsets-1543","uid":"f4aff3e7-dc2e-4de8-bc8c-bb048c99df20","resourceVersion":"35508","creationTimestamp":"2024-11-16T13:29:34Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"03adeba0-dd34-41e9-a3e3-3df442b3f790","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-11-16T13:29:34Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"03adeba0-dd34-41e9-a3e3-3df442b3f790\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-11-16T13:29:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.82.141\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-9g9rd","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-9g9rd","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-45-197","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-45-197"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-16T13:29:35Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-16T13:29:34Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-16T13:29:35Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-16T13:29:35Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-16T13:29:34Z"}],"hostIP":"172.31.45.197","hostIPs":[{"ip":"172.31.45.197"}],"podIP":"192.168.82.141","podIPs":[{"ip":"192.168.82.141"}],"startTime":"2024-11-16T13:29:34Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-11-16T13:29:34Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://9ecdf9344dd464ff5c7d958310003b7c8815b64b138e1602d795896a5ff6365b","started":true,"volumeMounts":[{"name":"kube-api-access-9g9rd","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I1116 13:29:36.068301 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1543" for this suite. @ 11/16/24 13:29:36.071
• [2.132 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 11/16/24 13:29:36.081
  I1116 13:29:36.081368 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename discovery @ 11/16/24 13:29:36.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:29:36.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:29:36.105
  STEP: Setting up server cert @ 11/16/24 13:29:36.108
  E1116 13:29:36.188221      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:29:36.379837 18 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1116 13:29:36.380566 18 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1116 13:29:36.380584 18 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1116 13:29:36.380591 18 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1116 13:29:36.380598 18 discovery.go:139] Checking APIGroup: apps
  I1116 13:29:36.381234 18 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1116 13:29:36.381253 18 discovery.go:148] Versions found [{apps/v1 v1}]
  I1116 13:29:36.381260 18 discovery.go:154] apps/v1 matches apps/v1
  I1116 13:29:36.381267 18 discovery.go:139] Checking APIGroup: events.k8s.io
  I1116 13:29:36.381890 18 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1116 13:29:36.381905 18 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1116 13:29:36.381911 18 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1116 13:29:36.381917 18 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1116 13:29:36.382537 18 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1116 13:29:36.382553 18 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1116 13:29:36.382561 18 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1116 13:29:36.382567 18 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1116 13:29:36.383226 18 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1116 13:29:36.383236 18 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1116 13:29:36.383242 18 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1116 13:29:36.383248 18 discovery.go:139] Checking APIGroup: autoscaling
  I1116 13:29:36.383811 18 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1116 13:29:36.383824 18 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1116 13:29:36.383829 18 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1116 13:29:36.383835 18 discovery.go:139] Checking APIGroup: batch
  I1116 13:29:36.384394 18 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1116 13:29:36.384417 18 discovery.go:148] Versions found [{batch/v1 v1}]
  I1116 13:29:36.384423 18 discovery.go:154] batch/v1 matches batch/v1
  I1116 13:29:36.384430 18 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1116 13:29:36.385007 18 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1116 13:29:36.385018 18 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1116 13:29:36.385024 18 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1116 13:29:36.385030 18 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1116 13:29:36.385585 18 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1116 13:29:36.385599 18 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1116 13:29:36.385605 18 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1116 13:29:36.385613 18 discovery.go:139] Checking APIGroup: policy
  I1116 13:29:36.386184 18 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1116 13:29:36.386201 18 discovery.go:148] Versions found [{policy/v1 v1}]
  I1116 13:29:36.386206 18 discovery.go:154] policy/v1 matches policy/v1
  I1116 13:29:36.386213 18 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1116 13:29:36.386779 18 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1116 13:29:36.386792 18 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1116 13:29:36.386798 18 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1116 13:29:36.386803 18 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1116 13:29:36.387356 18 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1116 13:29:36.387366 18 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1116 13:29:36.387376 18 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1116 13:29:36.387381 18 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1116 13:29:36.387984 18 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1116 13:29:36.387995 18 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1116 13:29:36.388000 18 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1116 13:29:36.388006 18 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1116 13:29:36.388583 18 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1116 13:29:36.388606 18 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1116 13:29:36.388611 18 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1116 13:29:36.388617 18 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1116 13:29:36.389236 18 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1116 13:29:36.389253 18 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1116 13:29:36.389257 18 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1116 13:29:36.389261 18 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1116 13:29:36.389862 18 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1116 13:29:36.389872 18 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1116 13:29:36.389877 18 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1116 13:29:36.389915 18 discovery.go:139] Checking APIGroup: node.k8s.io
  I1116 13:29:36.390448 18 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1116 13:29:36.390459 18 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1116 13:29:36.390465 18 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1116 13:29:36.390471 18 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1116 13:29:36.391029 18 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1116 13:29:36.391060 18 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1116 13:29:36.391065 18 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1116 13:29:36.391071 18 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1116 13:29:36.391720 18 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1116 13:29:36.391730 18 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I1116 13:29:36.391735 18 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1116 13:29:36.391741 18 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I1116 13:29:36.392343 18 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I1116 13:29:36.392359 18 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I1116 13:29:36.392364 18 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I1116 13:29:36.392484 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9156" for this suite. @ 11/16/24 13:29:36.397
• [0.326 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 11/16/24 13:29:36.407
  I1116 13:29:36.407473 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename dns @ 11/16/24 13:29:36.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:29:36.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:29:36.428
  STEP: Creating a test headless service @ 11/16/24 13:29:36.43
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7590.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-7590.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7590.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-7590.svc.cluster.local;sleep 1; done
   @ 11/16/24 13:29:36.437
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7590.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7590.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7590.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7590.svc.cluster.local;sleep 1; done
   @ 11/16/24 13:29:36.437
  STEP: creating a pod to probe DNS @ 11/16/24 13:29:36.437
  STEP: submitting the pod to kubernetes @ 11/16/24 13:29:36.437
  E1116 13:29:37.189220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:38.189324      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/16/24 13:29:38.457
  STEP: looking for the results for each expected name from probers @ 11/16/24 13:29:38.461
  I1116 13:29:38.468286 18 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local from pod dns-7590/dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435: the server could not find the requested resource (get pods dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435)
  I1116 13:29:38.473000 18 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local from pod dns-7590/dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435: the server could not find the requested resource (get pods dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435)
  I1116 13:29:38.477802 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-7590.svc.cluster.local from pod dns-7590/dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435: the server could not find the requested resource (get pods dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435)
  I1116 13:29:38.483462 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-7590.svc.cluster.local from pod dns-7590/dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435: the server could not find the requested resource (get pods dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435)
  I1116 13:29:38.488059 18 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local from pod dns-7590/dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435: the server could not find the requested resource (get pods dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435)
  I1116 13:29:38.493238 18 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local from pod dns-7590/dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435: the server could not find the requested resource (get pods dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435)
  I1116 13:29:38.498793 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-7590.svc.cluster.local from pod dns-7590/dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435: the server could not find the requested resource (get pods dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435)
  I1116 13:29:38.503535 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-7590.svc.cluster.local from pod dns-7590/dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435: the server could not find the requested resource (get pods dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435)
  I1116 13:29:38.503556 18 dns_common.go:489] Lookups using dns-7590/dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7590.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7590.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7590.svc.cluster.local jessie_udp@dns-test-service-2.dns-7590.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7590.svc.cluster.local]

  I1116 13:29:38.521225 18 dns_common.go:495] Pod client logs for webserver: 
  I1116 13:29:38.530730 18 dns_common.go:495] Pod client logs for querier: 
  I1116 13:29:38.538266 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E1116 13:29:39.190184      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:40.191246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:41.191578      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:42.191678      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:43.191862      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:29:43.500317 18 dns_common.go:527] DNS probes using dns-7590/dns-test-71604ea9-32c3-4d41-9a3a-8d215f7f7435 succeeded

  STEP: deleting the pod @ 11/16/24 13:29:43.5
  STEP: deleting the test headless service @ 11/16/24 13:29:43.521
  I1116 13:29:43.536408 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7590" for this suite. @ 11/16/24 13:29:43.54
• [7.140 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 11/16/24 13:29:43.547
  I1116 13:29:43.547428 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename watch @ 11/16/24 13:29:43.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:29:43.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:29:43.571
  STEP: creating a watch on configmaps @ 11/16/24 13:29:43.573
  STEP: creating a new configmap @ 11/16/24 13:29:43.573
  STEP: modifying the configmap once @ 11/16/24 13:29:43.578
  STEP: closing the watch once it receives two notifications @ 11/16/24 13:29:43.587
  I1116 13:29:43.587114 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6509  e3183720-e727-423d-b12c-a530d0da669a 35645 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 13:29:43.587228 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6509  e3183720-e727-423d-b12c-a530d0da669a 35646 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 11/16/24 13:29:43.587
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 11/16/24 13:29:43.596
  STEP: deleting the configmap @ 11/16/24 13:29:43.596
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 11/16/24 13:29:43.603
  I1116 13:29:43.604001 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6509  e3183720-e727-423d-b12c-a530d0da669a 35647 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 13:29:43.604152 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6509  e3183720-e727-423d-b12c-a530d0da669a 35648 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 13:29:43.604248 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6509" for this suite. @ 11/16/24 13:29:43.609
• [0.069 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 11/16/24 13:29:43.616
  I1116 13:29:43.616593 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename watch @ 11/16/24 13:29:43.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:29:43.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:29:43.638
  STEP: creating a watch on configmaps with label A @ 11/16/24 13:29:43.64
  STEP: creating a watch on configmaps with label B @ 11/16/24 13:29:43.641
  STEP: creating a watch on configmaps with label A or B @ 11/16/24 13:29:43.641
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 11/16/24 13:29:43.642
  I1116 13:29:43.647381 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5971  ff3fad50-7140-4c36-8753-4846156ddfbb 35655 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 13:29:43.647474 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5971  ff3fad50-7140-4c36-8753-4846156ddfbb 35655 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 11/16/24 13:29:43.647
  I1116 13:29:43.656443 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5971  ff3fad50-7140-4c36-8753-4846156ddfbb 35656 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 13:29:43.656505 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5971  ff3fad50-7140-4c36-8753-4846156ddfbb 35656 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 11/16/24 13:29:43.656
  I1116 13:29:43.664737 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5971  ff3fad50-7140-4c36-8753-4846156ddfbb 35657 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 13:29:43.664806 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5971  ff3fad50-7140-4c36-8753-4846156ddfbb 35657 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 11/16/24 13:29:43.664
  I1116 13:29:43.672944 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5971  ff3fad50-7140-4c36-8753-4846156ddfbb 35658 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 13:29:43.672976 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5971  ff3fad50-7140-4c36-8753-4846156ddfbb 35658 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 11/16/24 13:29:43.672
  I1116 13:29:43.678251 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5971  2113d2c4-93d3-4999-b2a8-23b39e11d953 35659 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 13:29:43.678311 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5971  2113d2c4-93d3-4999-b2a8-23b39e11d953 35659 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1116 13:29:44.192031      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:45.192250      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:46.192346      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:47.192484      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:48.192602      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:49.192673      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:50.192853      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:51.193071      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:52.193206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:53.193487      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 11/16/24 13:29:53.679
  I1116 13:29:53.689534 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5971  2113d2c4-93d3-4999-b2a8-23b39e11d953 35708 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1116 13:29:53.689575 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5971  2113d2c4-93d3-4999-b2a8-23b39e11d953 35708 0 2024-11-16 13:29:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-16 13:29:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1116 13:29:54.194258      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:55.195261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:56.195348      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:57.195434      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:58.195499      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:29:59.196250      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:00.196761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:01.197427      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:02.197710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:03.198142      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:30:03.689918 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5971" for this suite. @ 11/16/24 13:30:03.695
• [20.087 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 11/16/24 13:30:03.703
  I1116 13:30:03.703540 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename statefulset @ 11/16/24 13:30:03.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:30:03.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:30:03.729
  STEP: Creating service test in namespace statefulset-3288 @ 11/16/24 13:30:03.731
  STEP: Looking for a node to schedule stateful set and pod @ 11/16/24 13:30:03.736
  STEP: Creating pod with conflicting port in namespace statefulset-3288 @ 11/16/24 13:30:03.74
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3288 @ 11/16/24 13:30:03.75
  E1116 13:30:04.198377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:05.198508      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-3288 @ 11/16/24 13:30:05.76
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3288 @ 11/16/24 13:30:05.768
  I1116 13:30:05.783814 18 statefulset.go:869] Observed stateful pod in namespace: statefulset-3288, name: ss-0, uid: 5ace9c9d-50cc-43a4-b25f-48554f85fc78, status phase: Pending. Waiting for statefulset controller to delete.
  I1116 13:30:05.803280 18 statefulset.go:869] Observed stateful pod in namespace: statefulset-3288, name: ss-0, uid: 5ace9c9d-50cc-43a4-b25f-48554f85fc78, status phase: Failed. Waiting for statefulset controller to delete.
  I1116 13:30:05.811745 18 statefulset.go:869] Observed stateful pod in namespace: statefulset-3288, name: ss-0, uid: 5ace9c9d-50cc-43a4-b25f-48554f85fc78, status phase: Failed. Waiting for statefulset controller to delete.
  I1116 13:30:05.815736 18 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-3288
  STEP: Removing pod with conflicting port in namespace statefulset-3288 @ 11/16/24 13:30:05.815
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3288 and will be in running state @ 11/16/24 13:30:05.833
  E1116 13:30:06.199275      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:07.199399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:30:07.842078 18 statefulset.go:138] Deleting all statefulset in ns statefulset-3288
  I1116 13:30:07.845844 18 rest.go:150] Scaling statefulset ss to 0
  E1116 13:30:08.199512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:09.199634      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:10.199779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:11.199982      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:12.200134      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:13.200350      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:14.200564      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:15.200765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:16.200903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:17.201137      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:30:17.860934 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1116 13:30:17.864456 18 rest.go:88] Deleting statefulset ss
  I1116 13:30:17.879490 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3288" for this suite. @ 11/16/24 13:30:17.883
• [14.187 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 11/16/24 13:30:17.89
  I1116 13:30:17.890580 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename field-validation @ 11/16/24 13:30:17.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:30:17.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:30:17.913
  I1116 13:30:17.915822 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  E1116 13:30:18.201200      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:19.202127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:20.202233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1116 13:30:20.453173      18 warnings.go:70] unknown field "alpha"
  W1116 13:30:20.453192      18 warnings.go:70] unknown field "beta"
  W1116 13:30:20.453198      18 warnings.go:70] unknown field "delta"
  W1116 13:30:20.453201      18 warnings.go:70] unknown field "epsilon"
  W1116 13:30:20.453204      18 warnings.go:70] unknown field "gamma"
  I1116 13:30:21.003964 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8898" for this suite. @ 11/16/24 13:30:21.007
• [3.125 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 11/16/24 13:30:21.016
  I1116 13:30:21.016238 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:30:21.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:30:21.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:30:21.04
  STEP: Creating configMap with name projected-configmap-test-volume-map-9b0bf84d-d8ab-4d8c-9c3d-81947ee02747 @ 11/16/24 13:30:21.042
  STEP: Creating a pod to test consume configMaps @ 11/16/24 13:30:21.046
  E1116 13:30:21.202282      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:22.203326      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:23.204026      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:24.204270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:30:25.068
  I1116 13:30:25.072661 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-projected-configmaps-752ad4db-46c7-47b3-a191-f320523a5901 container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 13:30:25.082
  I1116 13:30:25.102582 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3549" for this suite. @ 11/16/24 13:30:25.106
• [4.100 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 11/16/24 13:30:25.116
  I1116 13:30:25.116359 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pods @ 11/16/24 13:30:25.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:30:25.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:30:25.137
  STEP: creating the pod @ 11/16/24 13:30:25.138
  STEP: setting up watch @ 11/16/24 13:30:25.138
  E1116 13:30:25.205184      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: submitting the pod to kubernetes @ 11/16/24 13:30:25.243
  STEP: verifying the pod is in kubernetes @ 11/16/24 13:30:25.254
  STEP: verifying pod creation was observed @ 11/16/24 13:30:25.257
  E1116 13:30:26.205599      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:27.206244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 11/16/24 13:30:27.273
  STEP: verifying pod deletion was observed @ 11/16/24 13:30:27.281
  E1116 13:30:28.206784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:30:28.680550 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4340" for this suite. @ 11/16/24 13:30:28.684
• [3.577 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 11/16/24 13:30:28.693
  I1116 13:30:28.693134 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename replicaset @ 11/16/24 13:30:28.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:30:28.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:30:28.714
  I1116 13:30:28.716113 18 replica_set.go:191] Creating ReplicaSet my-hostname-basic-c7483def-7371-45d7-9fe8-c07b7c9f01b6
  I1116 13:30:28.726217 18 resource.go:87] Pod name my-hostname-basic-c7483def-7371-45d7-9fe8-c07b7c9f01b6: Found 0 pods out of 1
  E1116 13:30:29.207896      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:30.208857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:31.208988      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:32.209123      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:33.209314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:30:33.732116 18 resource.go:87] Pod name my-hostname-basic-c7483def-7371-45d7-9fe8-c07b7c9f01b6: Found 1 pods out of 1
  I1116 13:30:33.732152 18 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-c7483def-7371-45d7-9fe8-c07b7c9f01b6" is running
  I1116 13:30:33.735791 18 replica_set.go:220] Pod "my-hostname-basic-c7483def-7371-45d7-9fe8-c07b7c9f01b6-5kqhg" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-16 13:30:29 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-16 13:30:28 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-16 13:30:29 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-16 13:30:29 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-16 13:30:28 +0000 UTC Reason: Message:}])
  I1116 13:30:33.735814 18 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/16/24 13:30:33.735
  I1116 13:30:33.749194 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3642" for this suite. @ 11/16/24 13:30:33.753
• [5.068 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 11/16/24 13:30:33.761
  I1116 13:30:33.761082 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 13:30:33.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:30:33.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:30:33.781
  STEP: Setting up server cert @ 11/16/24 13:30:33.813
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 13:30:34.057
  STEP: Deploying the webhook pod @ 11/16/24 13:30:34.068
  STEP: Wait for the deployment to be ready @ 11/16/24 13:30:34.082
  I1116 13:30:34.090755 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1116 13:30:34.210023      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:35.210468      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/16/24 13:30:36.104
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 13:30:36.116
  E1116 13:30:36.210849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:30:37.117172 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 11/16/24 13:30:37.126
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 11/16/24 13:30:37.127
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 11/16/24 13:30:37.127
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 11/16/24 13:30:37.127
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 11/16/24 13:30:37.128
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/16/24 13:30:37.128
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/16/24 13:30:37.128
  I1116 13:30:37.170093 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5863" for this suite. @ 11/16/24 13:30:37.173
  STEP: Destroying namespace "webhook-markers-5691" for this suite. @ 11/16/24 13:30:37.183
• [3.430 seconds]
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 11/16/24 13:30:37.191
  I1116 13:30:37.191415 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename events @ 11/16/24 13:30:37.191
  E1116 13:30:37.211121      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:30:37.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:30:37.213
  STEP: creating a test event @ 11/16/24 13:30:37.214
  STEP: listing events in all namespaces @ 11/16/24 13:30:37.225
  STEP: listing events in test namespace @ 11/16/24 13:30:37.228
  STEP: listing events with field selection filtering on source @ 11/16/24 13:30:37.232
  STEP: listing events with field selection filtering on reportingController @ 11/16/24 13:30:37.237
  STEP: getting the test event @ 11/16/24 13:30:37.241
  STEP: patching the test event @ 11/16/24 13:30:37.244
  STEP: getting the test event @ 11/16/24 13:30:37.254
  STEP: updating the test event @ 11/16/24 13:30:37.258
  STEP: getting the test event @ 11/16/24 13:30:37.267
  STEP: deleting the test event @ 11/16/24 13:30:37.27
  STEP: listing events in all namespaces @ 11/16/24 13:30:37.279
  STEP: listing events in test namespace @ 11/16/24 13:30:37.283
  I1116 13:30:37.286743 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5075" for this suite. @ 11/16/24 13:30:37.29
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 11/16/24 13:30:37.298
  I1116 13:30:37.298716 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename init-container @ 11/16/24 13:30:37.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:30:37.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:30:37.323
  STEP: creating the pod @ 11/16/24 13:30:37.324
  I1116 13:30:37.324810 18 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E1116 13:30:38.211295      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:39.211328      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:40.212151      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:30:40.849442 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9768" for this suite. @ 11/16/24 13:30:40.855
• [3.565 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 11/16/24 13:30:40.863
  I1116 13:30:40.863741 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename apf @ 11/16/24 13:30:40.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:30:40.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:30:40.889
  STEP: getting /apis @ 11/16/24 13:30:40.891
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 11/16/24 13:30:40.893
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 11/16/24 13:30:40.894
  STEP: creating @ 11/16/24 13:30:40.894
  STEP: getting @ 11/16/24 13:30:40.911
  STEP: listing @ 11/16/24 13:30:40.914
  STEP: watching @ 11/16/24 13:30:40.918
  I1116 13:30:40.918924 18 flowcontrol.go:620] starting watch
  STEP: patching @ 11/16/24 13:30:40.919
  STEP: updating @ 11/16/24 13:30:40.926
  I1116 13:30:40.933651 18 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 11/16/24 13:30:40.933
  STEP: patching /status @ 11/16/24 13:30:40.938
  STEP: updating /status @ 11/16/24 13:30:40.942
  STEP: deleting @ 11/16/24 13:30:40.952
  STEP: deleting a collection @ 11/16/24 13:30:40.967
  I1116 13:30:40.994093 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4122" for this suite. @ 11/16/24 13:30:40.997
• [0.141 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 11/16/24 13:30:41.005
  I1116 13:30:41.005115 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename disruption @ 11/16/24 13:30:41.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:30:41.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:30:41.025
  STEP: Waiting for the pdb to be processed @ 11/16/24 13:30:41.031
  E1116 13:30:41.212935      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:42.213062      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 11/16/24 13:30:43.037
  STEP: Waiting for all pods to be running @ 11/16/24 13:30:43.046
  I1116 13:30:43.051066 18 disruption.go:691] running pods: 0 < 1
  E1116 13:30:43.213285      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:44.213489      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 11/16/24 13:30:45.053
  STEP: Waiting for the pdb to be processed @ 11/16/24 13:30:45.067
  STEP: Patching PodDisruptionBudget status @ 11/16/24 13:30:45.073
  STEP: Waiting for the pdb to be processed @ 11/16/24 13:30:45.083
  I1116 13:30:45.087398 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9129" for this suite. @ 11/16/24 13:30:45.091
• [4.096 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 11/16/24 13:30:45.1
  I1116 13:30:45.100874 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-runtime @ 11/16/24 13:30:45.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:30:45.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:30:45.124
  STEP: create the container @ 11/16/24 13:30:45.126
  E1116 13:30:45.214338      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1116 13:30:45.285715      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/16/24 13:30:45.285
  E1116 13:30:46.214475      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:47.215221      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:48.215317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/16/24 13:30:48.308
  STEP: the container should be terminated @ 11/16/24 13:30:48.312
  STEP: the termination message should be set @ 11/16/24 13:30:48.312
  I1116 13:30:48.312908 18 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 11/16/24 13:30:48.312
  I1116 13:30:48.331739 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9315" for this suite. @ 11/16/24 13:30:48.336
• [3.243 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 11/16/24 13:30:48.343
  I1116 13:30:48.343585 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir @ 11/16/24 13:30:48.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:30:48.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:30:48.364
  STEP: Creating Pod @ 11/16/24 13:30:48.366
  E1116 13:30:49.215426      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:50.215520      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 11/16/24 13:30:50.386
  I1116 13:30:50.386437 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7036 PodName:pod-sharedvolume-4f1bc084-61fd-4b37-be2b-8dea55df96e5 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 13:30:50.386456 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 13:30:50.386906 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 13:30:50.386954 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-7036/pods/pod-sharedvolume-4f1bc084-61fd-4b37-be2b-8dea55df96e5/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I1116 13:30:50.423104 18 exec_util.go:111] Exec stderr: ""
  I1116 13:30:50.423217 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7036" for this suite. @ 11/16/24 13:30:50.427
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 11/16/24 13:30:50.434
  I1116 13:30:50.434983 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename dns @ 11/16/24 13:30:50.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:30:50.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:30:50.463
  STEP: Creating a test headless service @ 11/16/24 13:30:50.465
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-91.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-91.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-91.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-91.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-91.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-91.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-91.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-91.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-91.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-91.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-91.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-91.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 111.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.111_udp@PTR;check="$$(dig +tcp +noall +answer +search 111.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.111_tcp@PTR;sleep 1; done
   @ 11/16/24 13:30:50.481
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-91.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-91.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-91.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-91.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-91.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-91.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-91.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-91.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-91.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-91.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-91.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-91.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 111.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.111_udp@PTR;check="$$(dig +tcp +noall +answer +search 111.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.111_tcp@PTR;sleep 1; done
   @ 11/16/24 13:30:50.481
  STEP: creating a pod to probe DNS @ 11/16/24 13:30:50.481
  STEP: submitting the pod to kubernetes @ 11/16/24 13:30:50.481
  E1116 13:30:51.216272      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:52.216333      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/16/24 13:30:52.503
  STEP: looking for the results for each expected name from probers @ 11/16/24 13:30:52.507
  I1116 13:30:52.514197 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-91.svc.cluster.local from pod dns-91/dns-test-2b336e41-9327-45b4-8de5-78c48d218340: the server could not find the requested resource (get pods dns-test-2b336e41-9327-45b4-8de5-78c48d218340)
  I1116 13:30:52.518940 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-91.svc.cluster.local from pod dns-91/dns-test-2b336e41-9327-45b4-8de5-78c48d218340: the server could not find the requested resource (get pods dns-test-2b336e41-9327-45b4-8de5-78c48d218340)
  I1116 13:30:52.523764 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-91.svc.cluster.local from pod dns-91/dns-test-2b336e41-9327-45b4-8de5-78c48d218340: the server could not find the requested resource (get pods dns-test-2b336e41-9327-45b4-8de5-78c48d218340)
  I1116 13:30:52.529424 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-91.svc.cluster.local from pod dns-91/dns-test-2b336e41-9327-45b4-8de5-78c48d218340: the server could not find the requested resource (get pods dns-test-2b336e41-9327-45b4-8de5-78c48d218340)
  I1116 13:30:52.554612 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-91.svc.cluster.local from pod dns-91/dns-test-2b336e41-9327-45b4-8de5-78c48d218340: the server could not find the requested resource (get pods dns-test-2b336e41-9327-45b4-8de5-78c48d218340)
  I1116 13:30:52.559913 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-91.svc.cluster.local from pod dns-91/dns-test-2b336e41-9327-45b4-8de5-78c48d218340: the server could not find the requested resource (get pods dns-test-2b336e41-9327-45b4-8de5-78c48d218340)
  I1116 13:30:52.563621 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-91.svc.cluster.local from pod dns-91/dns-test-2b336e41-9327-45b4-8de5-78c48d218340: the server could not find the requested resource (get pods dns-test-2b336e41-9327-45b4-8de5-78c48d218340)
  I1116 13:30:52.568609 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-91.svc.cluster.local from pod dns-91/dns-test-2b336e41-9327-45b4-8de5-78c48d218340: the server could not find the requested resource (get pods dns-test-2b336e41-9327-45b4-8de5-78c48d218340)
  I1116 13:30:52.587552 18 dns_common.go:489] Lookups using dns-91/dns-test-2b336e41-9327-45b4-8de5-78c48d218340 failed for: [wheezy_udp@dns-test-service.dns-91.svc.cluster.local wheezy_tcp@dns-test-service.dns-91.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-91.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-91.svc.cluster.local jessie_udp@dns-test-service.dns-91.svc.cluster.local jessie_tcp@dns-test-service.dns-91.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-91.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-91.svc.cluster.local]

  I1116 13:30:52.595889 18 dns_common.go:495] Pod client logs for webserver: 
  I1116 13:30:52.603945 18 dns_common.go:495] Pod client logs for querier: 
  I1116 13:30:52.612492 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E1116 13:30:53.217239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:54.217379      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:55.217501      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:56.217786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:57.217998      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:30:57.592553 18 dns_common.go:527] DNS probes using dns-91/dns-test-2b336e41-9327-45b4-8de5-78c48d218340 succeeded

  STEP: deleting the pod @ 11/16/24 13:30:57.592
  STEP: deleting the test service @ 11/16/24 13:30:57.617
  STEP: deleting the test headless service @ 11/16/24 13:30:57.644
  I1116 13:30:57.659301 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-91" for this suite. @ 11/16/24 13:30:57.664
• [7.237 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 11/16/24 13:30:57.671
  I1116 13:30:57.671721 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 13:30:57.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:30:57.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:30:57.691
  STEP: create deployment with httpd image @ 11/16/24 13:30:57.693
  I1116 13:30:57.693605 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-2179 create -f -'
  I1116 13:30:57.758972 18 builder.go:146] stderr: ""
  I1116 13:30:57.759076 18 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 11/16/24 13:30:57.759
  I1116 13:30:57.759152 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-2179 diff -f -'
  E1116 13:30:58.218925      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:30:59.219025      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:00.219182      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:01.219300      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:02.118338 18 builder.go:135] rc: 1
  I1116 13:31:02.118472 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-2179 delete -f -'
  I1116 13:31:02.166596 18 builder.go:146] stderr: ""
  I1116 13:31:02.166648 18 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1116 13:31:02.166775 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2179" for this suite. @ 11/16/24 13:31:02.171
• [4.508 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 11/16/24 13:31:02.179
  I1116 13:31:02.179605 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename daemonsets @ 11/16/24 13:31:02.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:31:02.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:31:02.211
  E1116 13:31:02.219372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating simple DaemonSet "daemon-set" @ 11/16/24 13:31:02.238
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/16/24 13:31:02.243
  I1116 13:31:02.247350 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:02.247383 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:02.250249 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:31:02.250269 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  E1116 13:31:03.219547      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:03.248563 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:03.248610 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:03.253400 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:31:03.253424 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  E1116 13:31:04.219672      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:04.249299 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:04.249354 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:04.253279 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1116 13:31:04.253302 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 11/16/24 13:31:04.257
  I1116 13:31:04.261630 18 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 11/16/24 13:31:04.261
  I1116 13:31:04.272949 18 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 11/16/24 13:31:04.272
  I1116 13:31:04.274120 18 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I1116 13:31:04.274204 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1116 13:31:04.274326 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1116 13:31:04.274428 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1116 13:31:04.274495 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1116 13:31:04.274565 18 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-2710 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1116 13:31:04.274604 18 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 11/16/24 13:31:04.274
  STEP: watching for the daemon set status to be patched @ 11/16/24 13:31:04.282
  I1116 13:31:04.283358 18 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I1116 13:31:04.283472 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1116 13:31:04.283537 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1116 13:31:04.283614 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1116 13:31:04.283712 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1116 13:31:04.283794 18 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-2710 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1116 13:31:04.283918 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1116 13:31:04.283933 18 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-2710 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1116 13:31:04.283976 18 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 11/16/24 13:31:04.289
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2710, will wait for the garbage collector to delete the pods @ 11/16/24 13:31:04.289
  I1116 13:31:04.353067 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.284879ms
  I1116 13:31:04.454195 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.125917ms
  E1116 13:31:05.220420      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:05.859796 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:31:05.859829 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1116 13:31:05.863367 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36548"},"items":null}

  I1116 13:31:05.867570 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36548"},"items":null}

  I1116 13:31:05.885354 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2710" for this suite. @ 11/16/24 13:31:05.889
• [3.718 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 11/16/24 13:31:05.897
  I1116 13:31:05.897626 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir @ 11/16/24 13:31:05.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:31:05.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:31:05.923
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/16/24 13:31:05.925
  E1116 13:31:06.220562      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:07.220782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:31:07.942
  I1116 13:31:07.946774 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-8ab6e35d-8f5d-4c7c-a977-cd1174663476 container test-container: <nil>
  STEP: delete the pod @ 11/16/24 13:31:07.954
  I1116 13:31:07.971028 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4477" for this suite. @ 11/16/24 13:31:07.975
• [2.086 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 11/16/24 13:31:07.984
  I1116 13:31:07.984203 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename daemonsets @ 11/16/24 13:31:07.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:31:08.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:31:08.008
  I1116 13:31:08.032374 18 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/16/24 13:31:08.038
  I1116 13:31:08.044740 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:08.044779 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:08.048349 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:31:08.048371 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  E1116 13:31:08.221734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:09.044637 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:09.044682 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:09.048761 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1116 13:31:09.048782 18 fixtures.go:130] Node ip-172-31-22-107 is running 0 daemon pod, expected 1
  E1116 13:31:09.221826      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:10.043254 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:10.043302 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:10.047141 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1116 13:31:10.047160 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 11/16/24 13:31:10.062
  STEP: Check that daemon pods images are updated. @ 11/16/24 13:31:10.072
  I1116 13:31:10.075343 18 daemon_set.go:1193] Wrong image for pod: daemon-set-8gbz7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1116 13:31:10.075365 18 daemon_set.go:1193] Wrong image for pod: daemon-set-wfbkf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1116 13:31:10.075372 18 daemon_set.go:1193] Wrong image for pod: daemon-set-xxcxw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1116 13:31:10.080335 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:10.080422 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1116 13:31:10.221953      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:11.077554 18 daemon_set.go:1193] Wrong image for pod: daemon-set-8gbz7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1116 13:31:11.077587 18 daemon_set.go:1198] Pod daemon-set-9jjbm is not available
  I1116 13:31:11.077602 18 daemon_set.go:1193] Wrong image for pod: daemon-set-xxcxw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1116 13:31:11.081745 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:11.081792 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1116 13:31:11.222933      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:12.077265 18 daemon_set.go:1193] Wrong image for pod: daemon-set-xxcxw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1116 13:31:12.082749 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:12.082782 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1116 13:31:12.223965      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:13.077983 18 daemon_set.go:1198] Pod daemon-set-x7mdq is not available
  I1116 13:31:13.078008 18 daemon_set.go:1193] Wrong image for pod: daemon-set-xxcxw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1116 13:31:13.084315 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:13.084351 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1116 13:31:13.224504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:14.077461 18 daemon_set.go:1198] Pod daemon-set-z4rkr is not available
  I1116 13:31:14.080850 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:14.080897 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 11/16/24 13:31:14.08
  I1116 13:31:14.085015 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:14.085098 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:14.091120 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1116 13:31:14.091433 18 fixtures.go:130] Node ip-172-31-72-246 is running 0 daemon pod, expected 1
  E1116 13:31:14.225244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:15.086598 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-13-41 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:15.086645 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-75-83 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1116 13:31:15.091138 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1116 13:31:15.091158 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/16/24 13:31:15.109
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8203, will wait for the garbage collector to delete the pods @ 11/16/24 13:31:15.109
  I1116 13:31:15.173109 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.661587ms
  E1116 13:31:15.225414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:15.273622 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.509211ms
  E1116 13:31:16.225922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:16.578723 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:31:16.578755 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1116 13:31:16.583000 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36784"},"items":null}

  I1116 13:31:16.586794 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36784"},"items":null}

  I1116 13:31:16.601610 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8203" for this suite. @ 11/16/24 13:31:16.605
• [8.630 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 11/16/24 13:31:16.614
  I1116 13:31:16.614051 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 13:31:16.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:31:16.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:31:16.634
  STEP: Setting up server cert @ 11/16/24 13:31:16.664
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 13:31:16.81
  STEP: Deploying the webhook pod @ 11/16/24 13:31:16.82
  STEP: Wait for the deployment to be ready @ 11/16/24 13:31:16.831
  I1116 13:31:16.840895 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1116 13:31:17.226176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:18.226305      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/16/24 13:31:18.853
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 13:31:18.864
  E1116 13:31:19.227266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:19.865006 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1116 13:31:19.874843 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  E1116 13:31:20.228125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3091-crds.webhook.example.com via the AdmissionRegistration API @ 11/16/24 13:31:20.384
  STEP: Creating a custom resource while v1 is storage version @ 11/16/24 13:31:20.4
  E1116 13:31:21.229060      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:22.229274      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 11/16/24 13:31:22.43
  STEP: Patching the custom resource while v2 is storage version @ 11/16/24 13:31:22.443
  I1116 13:31:23.039742 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5178" for this suite. @ 11/16/24 13:31:23.044
  STEP: Destroying namespace "webhook-markers-7752" for this suite. @ 11/16/24 13:31:23.052
• [6.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 11/16/24 13:31:23.061
  I1116 13:31:23.061410 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename disruption @ 11/16/24 13:31:23.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:31:23.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:31:23.085
  STEP: creating the pdb @ 11/16/24 13:31:23.087
  STEP: Waiting for the pdb to be processed @ 11/16/24 13:31:23.092
  E1116 13:31:23.229318      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:24.229536      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 11/16/24 13:31:25.097
  STEP: Waiting for the pdb to be processed @ 11/16/24 13:31:25.108
  E1116 13:31:25.230315      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:26.230445      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 11/16/24 13:31:27.113
  STEP: Waiting for the pdb to be processed @ 11/16/24 13:31:27.123
  E1116 13:31:27.230505      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:28.231280      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 11/16/24 13:31:29.136
  I1116 13:31:29.140060 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2700" for this suite. @ 11/16/24 13:31:29.143
• [6.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 11/16/24 13:31:29.151
  I1116 13:31:29.151766 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename volumeattachment @ 11/16/24 13:31:29.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:31:29.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:31:29.172
  STEP: Create VolumeAttachment "va-e2e-fh2mj" on node "ip-172-31-13-41" @ 11/16/24 13:31:29.178
  STEP: Get VolumeAttachment "va-e2e-fh2mj" on node "ip-172-31-13-41" @ 11/16/24 13:31:29.183
  STEP: Patch VolumeAttachment "va-e2e-fh2mj" on node "ip-172-31-13-41" @ 11/16/24 13:31:29.187
  STEP: List VolumeAttachments with "va-e2e-fh2mj=patched" label @ 11/16/24 13:31:29.191
  STEP: Delete VolumeAttachment "va-e2e-fh2mj" on node "ip-172-31-13-41" @ 11/16/24 13:31:29.195
  STEP: Confirm deletion of VolumeAttachment "va-e2e-fh2mj" on node "ip-172-31-13-41" @ 11/16/24 13:31:29.201
  STEP: Create VolumeAttachment "va-e2e-5fx9n" on node "ip-172-31-22-107" @ 11/16/24 13:31:29.208
  STEP: Update the VolumeAttachment "va-e2e-5fx9n" on node "ip-172-31-22-107" with label "va-e2e=updated" @ 11/16/24 13:31:29.213
  STEP: Create VolumeAttachment "va-e2e-vtgdd" on node "ip-172-31-45-197" @ 11/16/24 13:31:29.224
  STEP: Update the VolumeAttachment "va-e2e-vtgdd" on node "ip-172-31-45-197" with label "va-e2e=updated" @ 11/16/24 13:31:29.228
  E1116 13:31:29.231874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 11/16/24 13:31:29.236
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 11/16/24 13:31:29.251
  I1116 13:31:29.255095 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-286" for this suite. @ 11/16/24 13:31:29.259
• [0.116 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 11/16/24 13:31:29.267
  I1116 13:31:29.267791 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/16/24 13:31:29.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:31:29.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:31:29.286
  STEP: Creating two CSIDrivers @ 11/16/24 13:31:29.288
  STEP: Getting "inline-driver-03ac17cc-db6f-4e78-b9c2-5ae8349642dc" & "inline-driver-d3fb9feb-64ca-42de-8600-cfff5ffee895" @ 11/16/24 13:31:29.304
  STEP: Patching the CSIDriver "inline-driver-d3fb9feb-64ca-42de-8600-cfff5ffee895" @ 11/16/24 13:31:29.311
  STEP: Updating the CSIDriver "inline-driver-d3fb9feb-64ca-42de-8600-cfff5ffee895" @ 11/16/24 13:31:29.316
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-1740" @ 11/16/24 13:31:29.324
  STEP: Deleting CSIDriver "inline-driver-03ac17cc-db6f-4e78-b9c2-5ae8349642dc" @ 11/16/24 13:31:29.327
  STEP: Confirm deletion of CSIDriver "inline-driver-03ac17cc-db6f-4e78-b9c2-5ae8349642dc" @ 11/16/24 13:31:29.335
  STEP: Deleting CSIDriver "inline-driver-d3fb9feb-64ca-42de-8600-cfff5ffee895" via DeleteCollection @ 11/16/24 13:31:29.339
  STEP: Confirm deletion of CSIDriver "inline-driver-d3fb9feb-64ca-42de-8600-cfff5ffee895" @ 11/16/24 13:31:29.348
  I1116 13:31:29.351783 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1740" for this suite. @ 11/16/24 13:31:29.356
• [0.096 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 11/16/24 13:31:29.363
  I1116 13:31:29.363617 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename events @ 11/16/24 13:31:29.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:31:29.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:31:29.383
  STEP: Create set of events @ 11/16/24 13:31:29.385
  STEP: get a list of Events with a label in the current namespace @ 11/16/24 13:31:29.4
  STEP: delete a list of events @ 11/16/24 13:31:29.403
  I1116 13:31:29.403475 18 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/16/24 13:31:29.434
  I1116 13:31:29.438351 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3387" for this suite. @ 11/16/24 13:31:29.442
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 11/16/24 13:31:29.45
  I1116 13:31:29.450818 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 13:31:29.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:31:29.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:31:29.471
  STEP: Setting up server cert @ 11/16/24 13:31:29.494
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 13:31:29.631
  STEP: Deploying the webhook pod @ 11/16/24 13:31:29.638
  STEP: Wait for the deployment to be ready @ 11/16/24 13:31:29.65
  I1116 13:31:29.658476 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1116 13:31:30.232544      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:31.232838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/16/24 13:31:31.67
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 13:31:31.683
  E1116 13:31:32.233263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:32.683897 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1116 13:31:32.693483 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4485-crds.webhook.example.com via the AdmissionRegistration API @ 11/16/24 13:31:33.203
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/16/24 13:31:33.218
  E1116 13:31:33.233961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:34.234185      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:35.234250      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:35.804664 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4028" for this suite. @ 11/16/24 13:31:35.809
  STEP: Destroying namespace "webhook-markers-9040" for this suite. @ 11/16/24 13:31:35.816
• [6.374 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 11/16/24 13:31:35.824
  I1116 13:31:35.824493 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename init-container @ 11/16/24 13:31:35.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:31:35.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:31:35.844
  STEP: creating the pod @ 11/16/24 13:31:35.846
  I1116 13:31:35.846752 18 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E1116 13:31:36.234766      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:37.235260      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:38.236272      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:39.236332      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:31:39.987376 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8948" for this suite. @ 11/16/24 13:31:39.992
• [4.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 11/16/24 13:31:40
  I1116 13:31:40.000621 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename subpath @ 11/16/24 13:31:40.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:31:40.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:31:40.022
  STEP: Setting up data @ 11/16/24 13:31:40.025
  STEP: Creating pod pod-subpath-test-configmap-phdn @ 11/16/24 13:31:40.035
  STEP: Creating a pod to test atomic-volume-subpath @ 11/16/24 13:31:40.035
  E1116 13:31:40.236449      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:41.236567      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:42.237507      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:43.237621      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:44.237650      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:45.237832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:46.238812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:47.238892      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:48.239615      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:49.239723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:50.240008      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:51.240194      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:52.241287      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:53.241387      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:54.242396      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:55.242494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:56.243545      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:57.243743      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:58.244244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:31:59.244337      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:00.244462      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:01.245249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:32:02.108
  I1116 13:32:02.113013 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-subpath-test-configmap-phdn container test-container-subpath-configmap-phdn: <nil>
  STEP: delete the pod @ 11/16/24 13:32:02.122
  STEP: Deleting pod pod-subpath-test-configmap-phdn @ 11/16/24 13:32:02.14
  I1116 13:32:02.140351 18 delete.go:62] Deleting pod "pod-subpath-test-configmap-phdn" in namespace "subpath-9494"
  I1116 13:32:02.145318 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9494" for this suite. @ 11/16/24 13:32:02.15
• [22.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 11/16/24 13:32:02.157
  I1116 13:32:02.157452 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:32:02.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:32:02.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:32:02.178
  STEP: Creating secret with name s-test-opt-del-3dbc331d-3ef6-4fc6-bc26-8c0944d3512b @ 11/16/24 13:32:02.183
  STEP: Creating secret with name s-test-opt-upd-c56c2f8c-8553-4836-8a21-35d62b2233f1 @ 11/16/24 13:32:02.189
  STEP: Creating the pod @ 11/16/24 13:32:02.193
  E1116 13:32:02.245914      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:03.246261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-3dbc331d-3ef6-4fc6-bc26-8c0944d3512b @ 11/16/24 13:32:04.243
  E1116 13:32:04.247093      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating secret s-test-opt-upd-c56c2f8c-8553-4836-8a21-35d62b2233f1 @ 11/16/24 13:32:04.251
  STEP: Creating secret with name s-test-opt-create-dba4db1f-cd99-47c0-9d9d-aadd75c25917 @ 11/16/24 13:32:04.256
  STEP: waiting to observe update in volume @ 11/16/24 13:32:04.261
  E1116 13:32:05.247586      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:06.247718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:07.248497      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:08.248690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:32:08.308100 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9026" for this suite. @ 11/16/24 13:32:08.312
• [6.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 11/16/24 13:32:08.32
  I1116 13:32:08.320235 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename var-expansion @ 11/16/24 13:32:08.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:32:08.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:32:08.343
  STEP: Creating a pod to test substitution in volume subpath @ 11/16/24 13:32:08.344
  E1116 13:32:09.248825      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:10.249093      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:11.249203      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:12.249425      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:32:12.372
  I1116 13:32:12.377121 18 output.go:196] Trying to get logs from node ip-172-31-72-246 pod var-expansion-dde88c24-ad2b-47f7-bb6b-85ee0a973a74 container dapi-container: <nil>
  STEP: delete the pod @ 11/16/24 13:32:12.391
  I1116 13:32:12.409482 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-202" for this suite. @ 11/16/24 13:32:12.414
• [4.102 seconds]
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 11/16/24 13:32:12.421
  I1116 13:32:12.422009 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename configmap @ 11/16/24 13:32:12.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:32:12.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:32:12.443
  STEP: creating a ConfigMap @ 11/16/24 13:32:12.445
  STEP: fetching the ConfigMap @ 11/16/24 13:32:12.451
  STEP: patching the ConfigMap @ 11/16/24 13:32:12.455
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 11/16/24 13:32:12.462
  STEP: deleting the ConfigMap by collection with a label selector @ 11/16/24 13:32:12.466
  STEP: listing all ConfigMaps in test namespace @ 11/16/24 13:32:12.477
  I1116 13:32:12.480402 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2661" for this suite. @ 11/16/24 13:32:12.484
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 11/16/24 13:32:12.491
  I1116 13:32:12.491225 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename conformance-tests @ 11/16/24 13:32:12.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:32:12.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:32:12.515
  STEP: Getting node addresses @ 11/16/24 13:32:12.517
  I1116 13:32:12.517311 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1116 13:32:12.521705 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-7229" for this suite. @ 11/16/24 13:32:12.525
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 11/16/24 13:32:12.533
  I1116 13:32:12.533831 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/16/24 13:32:12.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:32:12.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:32:12.559
  STEP: creating a target pod @ 11/16/24 13:32:12.561
  E1116 13:32:13.249959      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:14.250203      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 11/16/24 13:32:14.586
  E1116 13:32:15.250962      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:16.251056      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 11/16/24 13:32:16.605
  I1116 13:32:16.605749 18 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3218 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 13:32:16.605768 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 13:32:16.606160 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 13:32:16.606196 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-3218/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1116 13:32:16.640127 18 exec_util.go:111] Exec stderr: ""
  I1116 13:32:16.648242 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3218" for this suite. @ 11/16/24 13:32:16.653
• [4.129 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 11/16/24 13:32:16.662
  I1116 13:32:16.662752 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename runtimeclass @ 11/16/24 13:32:16.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:32:16.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:32:16.683
  E1116 13:32:17.251954      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:18.252157      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:32:18.714013 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3278" for this suite. @ 11/16/24 13:32:18.717
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 11/16/24 13:32:18.725
  I1116 13:32:18.725079 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename security-context @ 11/16/24 13:32:18.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:32:18.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:32:18.743
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/16/24 13:32:18.745
  E1116 13:32:19.252574      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:20.252678      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:21.252812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:22.253029      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:32:22.771
  I1116 13:32:22.775574 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod security-context-0e91a617-fcd6-4fe7-8e1e-ecd2a6f96416 container test-container: <nil>
  STEP: delete the pod @ 11/16/24 13:32:22.782
  I1116 13:32:22.805509 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4593" for this suite. @ 11/16/24 13:32:22.809
• [4.092 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 11/16/24 13:32:22.817
  I1116 13:32:22.817558 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:32:22.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:32:22.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:32:22.838
  STEP: Creating projection with secret that has name projected-secret-test-6ddbb8a6-6b8a-42b9-8a4a-560ff360f3be @ 11/16/24 13:32:22.841
  STEP: Creating a pod to test consume secrets @ 11/16/24 13:32:22.845
  E1116 13:32:23.253261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:24.253472      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:25.254078      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:26.254207      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:32:26.87
  I1116 13:32:26.874824 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-projected-secrets-45a56976-eda8-412f-affb-511458731e34 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 13:32:26.882
  I1116 13:32:26.903876 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5951" for this suite. @ 11/16/24 13:32:26.908
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 11/16/24 13:32:26.916
  I1116 13:32:26.916835 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename taint-multiple-pods @ 11/16/24 13:32:26.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:32:26.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:32:26.938
  I1116 13:32:26.939968 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1116 13:32:27.254300      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:28.254499      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:29.254590      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:30.255176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:31.255990      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:32.256167      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:33.256774      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:34.257788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:35.257922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:36.257965      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:37.258681      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:38.259242      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:39.259871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:40.259979      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:41.260014      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:42.260179      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:43.261020      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:44.261215      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:45.261830      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:46.261931      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:47.262769      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:48.262942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:49.263602      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:50.263685      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:51.264440      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:52.264736      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:53.265064      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:54.265164      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:55.265876      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:56.265995      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:57.266669      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:58.266788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:32:59.267699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:00.267734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:01.268406      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:02.269230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:03.269690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:04.269876      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:05.269967      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:06.269989      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:07.270803      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:08.271066      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:09.271700      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:10.271938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:11.272146      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:12.272394      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:13.273438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:14.274360      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:15.274448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:16.275236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:17.275859      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:18.276068      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:19.276504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:20.276593      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:21.277237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:22.277357      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:23.278128      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:24.278204      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:25.278929      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:26.279012      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:33:26.940970 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I1116 13:33:26.946414 18 taints.go:144] Starting informer...
  STEP: Starting pods... @ 11/16/24 13:33:26.946
  I1116 13:33:27.170985 18 taints.go:463] Pod1 is running on ip-172-31-45-197. Tainting Node
  E1116 13:33:27.279708      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:28.280485      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:29.280781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:33:29.397522 18 taints.go:471] Pod2 is running on ip-172-31-45-197. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/16/24 13:33:29.397
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/16/24 13:33:29.407
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 11/16/24 13:33:29.411
  E1116 13:33:30.280870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:31.280994      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:32.281202      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:33.281313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:34.281442      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:33:35.043025 18 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E1116 13:33:35.282346      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:36.282674      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:37.282798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:38.283288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:39.283671      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:40.283763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:41.284617      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:42.284715      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:43.285233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:44.286232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:45.286470      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:46.286753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:47.287234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:48.288237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:49.289254      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:50.289449      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:51.289703      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:52.289894      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:53.290100      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:54.290198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:33:55.074490 18 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/16/24 13:33:55.085
  I1116 13:33:55.090595 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-562" for this suite. @ 11/16/24 13:33:55.094
• [88.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 11/16/24 13:33:55.104
  I1116 13:33:55.104900 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename init-container @ 11/16/24 13:33:55.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:33:55.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:33:55.129
  STEP: creating the pod @ 11/16/24 13:33:55.131
  I1116 13:33:55.131397 18 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E1116 13:33:55.290611      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:56.291451      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:57.292147      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:33:58.069395 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4084" for this suite. @ 11/16/24 13:33:58.074
• [2.979 seconds]
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 11/16/24 13:33:58.083
  I1116 13:33:58.083904 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename dns @ 11/16/24 13:33:58.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:33:58.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:33:58.105
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/16/24 13:33:58.106
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/16/24 13:33:58.107
  STEP: creating a pod to probe DNS @ 11/16/24 13:33:58.107
  STEP: submitting the pod to kubernetes @ 11/16/24 13:33:58.107
  E1116 13:33:58.293183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:33:59.293733      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/16/24 13:34:00.127
  STEP: looking for the results for each expected name from probers @ 11/16/24 13:34:00.132
  I1116 13:34:00.147908 18 dns_common.go:527] DNS probes using dns-389/dns-test-05da837e-d183-4559-b9a8-8554598172dc succeeded

  STEP: deleting the pod @ 11/16/24 13:34:00.148
  I1116 13:34:00.161260 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-389" for this suite. @ 11/16/24 13:34:00.165
• [2.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 11/16/24 13:34:00.174
  I1116 13:34:00.174577 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename taint-single-pod @ 11/16/24 13:34:00.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:34:00.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:34:00.198
  I1116 13:34:00.200150 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1116 13:34:00.294345      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:01.294543      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:02.297932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:03.298145      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:04.298750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:05.298865      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:06.298951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:07.299172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:08.299440      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:09.299523      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:10.300084      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:11.300229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:12.300616      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:13.300796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:14.301489      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:15.301678      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:16.302013      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:17.302147      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:18.302197      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:19.302331      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:20.303019      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:21.303267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:22.303295      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:23.303431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:24.303468      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:25.303626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:26.304011      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:27.304163      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:28.304540      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:29.305231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:30.305759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:31.305920      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:32.306404      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:33.306507      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:34.306870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:35.307229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:36.308130      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:37.308320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:38.308642      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:39.308836      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:40.309411      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:41.309532      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:42.310021      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:43.310140      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:44.310578      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:45.310690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:46.311240      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:47.312245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:48.312778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:49.312889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:50.313360      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:51.313666      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:52.314380      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:53.315242      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:54.315731      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:55.316232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:56.316800      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:57.316991      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:58.317549      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:34:59.317709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:35:00.200820 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I1116 13:35:00.206378 18 taints.go:144] Starting informer...
  STEP: Starting pod... @ 11/16/24 13:35:00.206
  E1116 13:35:00.318126      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:35:00.423016 18 taints.go:294] Pod is running on ip-172-31-45-197. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/16/24 13:35:00.423
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/16/24 13:35:00.433
  STEP: Waiting short time to make sure Pod is queued for deletion @ 11/16/24 13:35:00.437
  I1116 13:35:00.437771 18 taints.go:313] Pod wasn't evicted. Proceeding
  I1116 13:35:00.437783 18 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/16/24 13:35:00.448
  STEP: Waiting some time to make sure that toleration time passed. @ 11/16/24 13:35:00.453
  E1116 13:35:01.318220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:02.318637      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:03.319239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:04.320258      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:05.321229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:06.321323      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:07.322262      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:08.322464      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:09.322709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:10.322880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:11.322976      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:12.323201      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:13.323466      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:14.323588      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:15.323749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:16.323842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:17.324266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:18.324438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:19.324475      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:20.325247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:21.325550      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:22.325640      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:23.325736      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:24.326222      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:25.326490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:26.326606      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:27.326730      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:28.326944      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:29.327070      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:30.327210      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:31.327926      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:32.328167      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:33.328807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:34.329133      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:35.329317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:36.329430      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:37.329547      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:38.329735      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:39.330233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:40.330410      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:41.330699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:42.330823      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:43.331092      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:44.331270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:45.332320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:46.333247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:47.334231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:48.334784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:49.334879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:50.335069      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:51.335158      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:52.336232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:53.336330      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:54.337254      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:55.337357      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:56.338234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:57.338268      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:58.338449      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:35:59.338633      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:00.339152      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:01.339251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:02.339376      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:03.339459      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:04.339879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:05.340257      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:06.340369      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:07.340645      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:08.341032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:09.341243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:10.341428      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:11.341567      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:12.341738      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:13.342521      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:14.342684      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:15.342876      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:36:15.454144 18 taints.go:329] Pod wasn't evicted. Test successful
  I1116 13:36:15.454319 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5674" for this suite. @ 11/16/24 13:36:15.46
• [135.296 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 11/16/24 13:36:15.47
  I1116 13:36:15.470502 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename gc @ 11/16/24 13:36:15.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:36:15.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:36:15.495
  STEP: create the rc1 @ 11/16/24 13:36:15.504
  STEP: create the rc2 @ 11/16/24 13:36:15.512
  E1116 13:36:16.345734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:17.345947      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:18.346263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:19.346449      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:20.347136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:21.348189      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 11/16/24 13:36:21.522
  STEP: delete the rc simpletest-rc-to-be-deleted @ 11/16/24 13:36:21.962
  STEP: wait for the rc to be deleted @ 11/16/24 13:36:21.972
  E1116 13:36:22.348274      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:23.348408      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:24.348595      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:25.348866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:26.349002      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:36:26.984221 18 garbage_collector.go:762] 74 pods remaining
  I1116 13:36:26.984257 18 garbage_collector.go:769] 74 pods has nil DeletionTimestamp
  I1116 13:36:26.984263 18 garbage_collector.go:770] 
  E1116 13:36:27.349023      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:28.349187      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:29.349331      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:30.349418      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:31.349531      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/16/24 13:36:31.984
  W1116 13:36:31.989909      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1116 13:36:31.989936 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1116 13:36:31.989988 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2nchh" in namespace "gc-1487"
  I1116 13:36:32.007261 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2td74" in namespace "gc-1487"
  I1116 13:36:32.023936 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2wd7n" in namespace "gc-1487"
  I1116 13:36:32.041847 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2xwh6" in namespace "gc-1487"
  I1116 13:36:32.056839 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4769n" in namespace "gc-1487"
  I1116 13:36:32.074389 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-48pdh" in namespace "gc-1487"
  I1116 13:36:32.091827 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4k7p2" in namespace "gc-1487"
  I1116 13:36:32.112347 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4l5xt" in namespace "gc-1487"
  I1116 13:36:32.134086 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4mxzc" in namespace "gc-1487"
  I1116 13:36:32.150173 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4ncgh" in namespace "gc-1487"
  I1116 13:36:32.167637 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5mm5g" in namespace "gc-1487"
  I1116 13:36:32.182879 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5r7db" in namespace "gc-1487"
  I1116 13:36:32.198184 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5s6h7" in namespace "gc-1487"
  I1116 13:36:32.216587 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5zdcr" in namespace "gc-1487"
  I1116 13:36:32.233303 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6ptfp" in namespace "gc-1487"
  I1116 13:36:32.249673 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6rcsg" in namespace "gc-1487"
  I1116 13:36:32.264816 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-77lm7" in namespace "gc-1487"
  I1116 13:36:32.280923 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7qw44" in namespace "gc-1487"
  I1116 13:36:32.300909 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7qzkk" in namespace "gc-1487"
  I1116 13:36:32.323522 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7slf7" in namespace "gc-1487"
  I1116 13:36:32.339324 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-87cvv" in namespace "gc-1487"
  E1116 13:36:32.349691      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:36:32.361583 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8sblx" in namespace "gc-1487"
  I1116 13:36:32.377411 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8scfk" in namespace "gc-1487"
  I1116 13:36:32.397424 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9bvlx" in namespace "gc-1487"
  I1116 13:36:32.416227 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9f75q" in namespace "gc-1487"
  I1116 13:36:32.434832 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9hbkl" in namespace "gc-1487"
  I1116 13:36:32.448023 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b84hp" in namespace "gc-1487"
  I1116 13:36:32.557355 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b9zxw" in namespace "gc-1487"
  I1116 13:36:32.586270 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bcbvx" in namespace "gc-1487"
  I1116 13:36:32.601662 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bdzjh" in namespace "gc-1487"
  I1116 13:36:32.616698 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bmmk9" in namespace "gc-1487"
  I1116 13:36:32.635187 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bt2h6" in namespace "gc-1487"
  I1116 13:36:32.652729 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c5fsn" in namespace "gc-1487"
  I1116 13:36:32.674474 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cdpqb" in namespace "gc-1487"
  I1116 13:36:32.698471 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ckg6g" in namespace "gc-1487"
  I1116 13:36:32.713150 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cwxrx" in namespace "gc-1487"
  I1116 13:36:32.726748 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-czsdm" in namespace "gc-1487"
  I1116 13:36:32.743473 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d92tp" in namespace "gc-1487"
  I1116 13:36:32.764820 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dlgpt" in namespace "gc-1487"
  I1116 13:36:32.783764 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dw6wj" in namespace "gc-1487"
  I1116 13:36:32.803888 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ftnfh" in namespace "gc-1487"
  I1116 13:36:32.820859 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g9s47" in namespace "gc-1487"
  I1116 13:36:32.839137 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h4x62" in namespace "gc-1487"
  I1116 13:36:32.855081 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h6snn" in namespace "gc-1487"
  I1116 13:36:32.867769 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hcj58" in namespace "gc-1487"
  I1116 13:36:32.884468 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ht8s7" in namespace "gc-1487"
  I1116 13:36:32.900225 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-htbd7" in namespace "gc-1487"
  I1116 13:36:32.922475 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hxk52" in namespace "gc-1487"
  I1116 13:36:32.945783 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hxtmz" in namespace "gc-1487"
  I1116 13:36:32.961561 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hzq8v" in namespace "gc-1487"
  I1116 13:36:32.974729 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1487" for this suite. @ 11/16/24 13:36:32.978
• [17.515 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 11/16/24 13:36:32.985
  I1116 13:36:32.986169 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename job @ 11/16/24 13:36:32.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:36:33.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:36:33.042
  STEP: Creating a job @ 11/16/24 13:36:33.054
  STEP: Ensuring job reaches completions @ 11/16/24 13:36:33.069
  E1116 13:36:33.350426      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:34.350509      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:35.351502      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:36.351790      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:37.352766      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:38.353273      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:39.354183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:40.355232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:41.355326      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:42.355409      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:43.356133      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:44.356202      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:36:45.079967 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3032" for this suite. @ 11/16/24 13:36:45.084
• [12.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 11/16/24 13:36:45.092
  I1116 13:36:45.092750 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 13:36:45.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:36:45.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:36:45.115
  STEP: Starting the proxy @ 11/16/24 13:36:45.117
  I1116 13:36:45.117683 18 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-10 proxy --unix-socket=/tmp/kubectl-proxy-unix2160142726/test'
  STEP: retrieving proxy /api/ output @ 11/16/24 13:36:45.149
  I1116 13:36:45.150059 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-10" for this suite. @ 11/16/24 13:36:45.154
• [0.070 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 11/16/24 13:36:45.162
  I1116 13:36:45.162694 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 13:36:45.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:36:45.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:36:45.186
  STEP: creating service in namespace services-2433 @ 11/16/24 13:36:45.188
  STEP: creating service affinity-nodeport-transition in namespace services-2433 @ 11/16/24 13:36:45.188
  STEP: creating replication controller affinity-nodeport-transition in namespace services-2433 @ 11/16/24 13:36:45.206
  I1116 13:36:45.213124      18 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-2433, replica count: 3
  E1116 13:36:45.357173      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:46.357287      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:47.357389      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:36:48.264132      18 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1116 13:36:48.277383 18 resource.go:361] Creating new exec pod
  E1116 13:36:48.358168      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:49.359251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:50.359430      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:36:51.304146 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-2433 exec execpod-affinityn22mh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E1116 13:36:51.359853      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:36:51.394103 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I1116 13:36:51.394138 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 13:36:51.394219 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-2433 exec execpod-affinityn22mh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.254 80'
  I1116 13:36:51.479634 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.254 80\nConnection to 10.152.183.254 80 port [tcp/http] succeeded!\n"
  I1116 13:36:51.479677 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 13:36:51.479761 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-2433 exec execpod-affinityn22mh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.107 31880'
  I1116 13:36:51.563731 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.107 31880\nConnection to 172.31.22.107 31880 port [tcp/*] succeeded!\n"
  I1116 13:36:51.563771 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 13:36:51.563863 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-2433 exec execpod-affinityn22mh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.72.246 31880'
  I1116 13:36:51.651597 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.72.246 31880\nConnection to 172.31.72.246 31880 port [tcp/*] succeeded!\n"
  I1116 13:36:51.651653 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1116 13:36:51.663482 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-2433 exec execpod-affinityn22mh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.107:31880/ ; done'
  I1116 13:36:51.836134 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n"
  I1116 13:36:51.836189 18 builder.go:147] stdout: "\naffinity-nodeport-transition-bv829\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-bv829\naffinity-nodeport-transition-tmpbh\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-tmpbh\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-tmpbh\naffinity-nodeport-transition-bv829\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-bv829\naffinity-nodeport-transition-bv829\naffinity-nodeport-transition-tmpbh\naffinity-nodeport-transition-z89hd"
  I1116 13:36:51.836202 18 service.go:242] Received response from host: affinity-nodeport-transition-bv829
  I1116 13:36:51.836284 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:51.836291 18 service.go:242] Received response from host: affinity-nodeport-transition-bv829
  I1116 13:36:51.836298 18 service.go:242] Received response from host: affinity-nodeport-transition-tmpbh
  I1116 13:36:51.836309 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:51.836315 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:51.836338 18 service.go:242] Received response from host: affinity-nodeport-transition-tmpbh
  I1116 13:36:51.836345 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:51.836351 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:51.836357 18 service.go:242] Received response from host: affinity-nodeport-transition-tmpbh
  I1116 13:36:51.836364 18 service.go:242] Received response from host: affinity-nodeport-transition-bv829
  I1116 13:36:51.836371 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:51.836383 18 service.go:242] Received response from host: affinity-nodeport-transition-bv829
  I1116 13:36:51.836393 18 service.go:242] Received response from host: affinity-nodeport-transition-bv829
  I1116 13:36:51.836409 18 service.go:242] Received response from host: affinity-nodeport-transition-tmpbh
  I1116 13:36:51.836415 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:51.847886 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-2433 exec execpod-affinityn22mh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.107:31880/ ; done'
  I1116 13:36:52.032675 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.107:31880/\n"
  I1116 13:36:52.032732 18 builder.go:147] stdout: "\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd\naffinity-nodeport-transition-z89hd"
  I1116 13:36:52.032748 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.032757 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.032764 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.032806 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.032814 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.032847 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.032853 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.032859 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.032887 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.032894 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.032900 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.032906 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.032913 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.032925 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.032932 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.032940 18 service.go:242] Received response from host: affinity-nodeport-transition-z89hd
  I1116 13:36:52.033074 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2433, will wait for the garbage collector to delete the pods @ 11/16/24 13:36:52.052
  I1116 13:36:52.116928 18 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 9.284465ms
  I1116 13:36:52.217177 18 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.245234ms
  E1116 13:36:52.360575      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:53.360996      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:54.361363      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:36:55.045291 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2433" for this suite. @ 11/16/24 13:36:55.049
• [9.894 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 11/16/24 13:36:55.057
  I1116 13:36:55.057162 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pods @ 11/16/24 13:36:55.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:36:55.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:36:55.079
  STEP: Create set of pods @ 11/16/24 13:36:55.081
  I1116 13:36:55.091570 18 pods.go:871] created test-pod-1
  I1116 13:36:55.101881 18 pods.go:871] created test-pod-2
  I1116 13:36:55.107511 18 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 11/16/24 13:36:55.107
  E1116 13:36:55.361522      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:36:56.361942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 11/16/24 13:36:57.143
  I1116 13:36:57.148186 18 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E1116 13:36:57.362491      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:36:58.149171 18 pods.go:1140] Pod quantity 1 is different from expected quantity 0
  E1116 13:36:58.363506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:36:59.149589 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8523" for this suite. @ 11/16/24 13:36:59.154
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 11/16/24 13:36:59.161
  I1116 13:36:59.161978 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename configmap @ 11/16/24 13:36:59.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:36:59.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:36:59.185
  STEP: Creating configMap configmap-3606/configmap-test-678dc681-0c65-43b1-8c87-d907df628cf9 @ 11/16/24 13:36:59.187
  STEP: Creating a pod to test consume configMaps @ 11/16/24 13:36:59.192
  E1116 13:36:59.364175      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:00.364314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:37:01.208
  I1116 13:37:01.212669 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-configmaps-19499113-cbec-4ac8-a11d-a6ef0dcaaf9f container env-test: <nil>
  STEP: delete the pod @ 11/16/24 13:37:01.234
  I1116 13:37:01.251460 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3606" for this suite. @ 11/16/24 13:37:01.254
• [2.101 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 11/16/24 13:37:01.262
  I1116 13:37:01.262795 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 13:37:01.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:37:01.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:37:01.283
  I1116 13:37:01.285421 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5806 create -f -'
  E1116 13:37:01.364788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:37:01.367955 18 builder.go:146] stderr: ""
  I1116 13:37:01.367983 18 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1116 13:37:01.368020 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5806 create -f -'
  I1116 13:37:01.464244 18 builder.go:146] stderr: ""
  I1116 13:37:01.464295 18 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/16/24 13:37:01.464
  E1116 13:37:02.365417      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:37:02.469416 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1116 13:37:02.469446 18 framework.go:733] Found 0 / 1
  E1116 13:37:03.366194      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:37:03.470508 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1116 13:37:03.470535 18 framework.go:733] Found 1 / 1
  I1116 13:37:03.470548 18 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1116 13:37:03.474625 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1116 13:37:03.474646 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1116 13:37:03.474679 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5806 describe pod agnhost-primary-pvvt5'
  I1116 13:37:03.531288 18 builder.go:146] stderr: ""
  I1116 13:37:03.531341 18 builder.go:147] stdout: "Name:             agnhost-primary-pvvt5\nNamespace:        kubectl-5806\nPriority:         0\nService Account:  default\nNode:             ip-172-31-45-197/172.31.45.197\nStart Time:       Sat, 16 Nov 2024 13:37:01 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.82.147\nIPs:\n  IP:           192.168.82.147\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://205d6dc87e1aa28a3d2c6bd9625a2c5a096f6c9678fbdee7fd497acbced17196\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 16 Nov 2024 13:37:01 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-hk9t7 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-hk9t7:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-5806/agnhost-primary-pvvt5 to ip-172-31-45-197\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I1116 13:37:03.531420 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5806 describe rc agnhost-primary'
  I1116 13:37:03.590364 18 builder.go:146] stderr: ""
  I1116 13:37:03.590409 18 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-5806\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-pvvt5\n"
  I1116 13:37:03.590468 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5806 describe service agnhost-primary'
  I1116 13:37:03.644375 18 builder.go:146] stderr: ""
  I1116 13:37:03.644460 18 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-5806\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.219\nIPs:                      10.152.183.219\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.82.147:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I1116 13:37:03.649449 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5806 describe node ip-172-31-13-41'
  I1116 13:37:03.720260 18 builder.go:146] stderr: ""
  I1116 13:37:03.720387 18 builder.go:147] stdout: "Name:               ip-172-31-13-41\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-13-41\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 16 Nov 2024 11:51:40 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-13-41\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 16 Nov 2024 13:36:53 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 16 Nov 2024 12:09:51 +0000   Sat, 16 Nov 2024 12:09:51 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 16 Nov 2024 13:34:50 +0000   Sat, 16 Nov 2024 11:51:40 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 16 Nov 2024 13:34:50 +0000   Sat, 16 Nov 2024 11:51:40 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 16 Nov 2024 13:34:50 +0000   Sat, 16 Nov 2024 11:51:40 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 16 Nov 2024 13:34:50 +0000   Sat, 16 Nov 2024 11:53:26 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.13.41\n  Hostname:    ip-172-31-13-41\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967652Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865252Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec2048ac01132a172545ebe357d0aad6\n  System UUID:                ec2048ac-0113-2a17-2545-ebe357d0aad6\n  Boot ID:                    6e28d24b-5e12-4b58-831f-52b050798dbb\n  Kernel Version:             6.8.0-1018-aws\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.31.2\n  Kube-Proxy Version:         v1.31.2\nNon-terminated Pods:          (2 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-tbxjx                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         87m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-48qzk    0 (0%)        0 (0%)      0 (0%)           0 (0%)         84m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I1116 13:37:03.720481 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5806 describe namespace kubectl-5806'
  I1116 13:37:03.777173 18 builder.go:146] stderr: ""
  I1116 13:37:03.777207 18 builder.go:147] stdout: "Name:         kubectl-5806\nLabels:       e2e-framework=kubectl\n              e2e-run=30407c67-fec0-46eb-b860-1f59b109a5a2\n              kubernetes.io/metadata.name=kubectl-5806\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1116 13:37:03.777308 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5806" for this suite. @ 11/16/24 13:37:03.782
• [2.529 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 11/16/24 13:37:03.792
  I1116 13:37:03.792078 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 13:37:03.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:37:03.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:37:03.812
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 13:37:03.814
  E1116 13:37:04.367120      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:05.367177      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:06.367296      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:07.367383      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:37:07.841
  I1116 13:37:07.845851 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downwardapi-volume-37e48944-2c8b-49f4-8c2a-a666d83ab6b2 container client-container: <nil>
  STEP: delete the pod @ 11/16/24 13:37:07.854
  I1116 13:37:07.876287 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8326" for this suite. @ 11/16/24 13:37:07.88
• [4.097 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 11/16/24 13:37:07.888
  I1116 13:37:07.888984 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename sched-preemption @ 11/16/24 13:37:07.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:37:07.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:37:07.915
  I1116 13:37:07.933597 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1116 13:37:08.368378      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:09.369256      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:10.369373      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:11.369437      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:12.369740      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:13.370027      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:14.370650      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:15.370826      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:16.371830      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:17.372166      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:18.372290      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:19.372507      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:20.374184      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:21.374839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:22.374968      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:23.375792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:24.376159      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:25.377234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:26.378226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:27.378314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:28.378413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:29.378530      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:30.379235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:31.379541      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:32.380239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:33.380418      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:34.380961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:35.380993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:36.381901      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:37.382141      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:38.382468      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:39.382607      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:40.382678      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:41.382872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:42.383748      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:43.383797      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:44.384729      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:45.385235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:46.386096      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:47.386175      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:48.386297      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:49.387235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:50.387682      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:51.387767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:52.388551      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:53.388646      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:54.388770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:55.388959      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:56.389131      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:57.389213      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:58.390130      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:37:59.390327      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:00.390765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:01.390885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:02.391031      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:03.391183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:04.391331      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:05.391504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:06.391646      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:07.391737      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:38:07.939567 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/16/24 13:38:07.944
  I1116 13:38:07.963700 18 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I1116 13:38:07.974319 18 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I1116 13:38:07.989188 18 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I1116 13:38:07.998674 18 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I1116 13:38:08.012931 18 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I1116 13:38:08.019208 18 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/16/24 13:38:08.019
  E1116 13:38:08.392270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:09.392402      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 11/16/24 13:38:10.046
  E1116 13:38:10.392511      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:11.392601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:12.392738      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:13.392956      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:38:14.170578 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9469" for this suite. @ 11/16/24 13:38:14.176
• [66.294 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 11/16/24 13:38:14.183
  I1116 13:38:14.183245 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 13:38:14.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:38:14.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:38:14.204
  STEP: Setting up server cert @ 11/16/24 13:38:14.231
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 13:38:14.393
  E1116 13:38:14.393617      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook pod @ 11/16/24 13:38:14.399
  STEP: Wait for the deployment to be ready @ 11/16/24 13:38:14.413
  I1116 13:38:14.427368 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1116 13:38:15.394368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:16.395266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/16/24 13:38:16.441
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 13:38:16.453
  E1116 13:38:17.396257      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:38:17.454457 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 11/16/24 13:38:17.463
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/16/24 13:38:17.463
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 11/16/24 13:38:17.478
  E1116 13:38:18.396334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 11/16/24 13:38:18.491
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/16/24 13:38:18.491
  E1116 13:38:19.396447      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 11/16/24 13:38:19.533
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/16/24 13:38:19.533
  E1116 13:38:20.397259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:21.397340      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:22.397467      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:23.398256      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:24.398471      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 11/16/24 13:38:24.599
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/16/24 13:38:24.599
  E1116 13:38:25.399401      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:26.399539      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:27.400344      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:28.400583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:29.400623      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:38:29.692442 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1792" for this suite. @ 11/16/24 13:38:29.697
  STEP: Destroying namespace "webhook-markers-6538" for this suite. @ 11/16/24 13:38:29.704
• [15.528 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 11/16/24 13:38:29.711
  I1116 13:38:29.711375 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:38:29.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:38:29.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:38:29.734
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 13:38:29.736
  E1116 13:38:30.400732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:31.400872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:32.401719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:33.401838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:38:33.766
  I1116 13:38:33.771280 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downwardapi-volume-83e435d6-2720-45ac-9080-b947e1ab5b56 container client-container: <nil>
  STEP: delete the pod @ 11/16/24 13:38:33.779
  I1116 13:38:33.796316 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2825" for this suite. @ 11/16/24 13:38:33.8
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 11/16/24 13:38:33.808
  I1116 13:38:33.808280 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 13:38:33.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:38:33.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:38:33.831
  STEP: creating a replication controller @ 11/16/24 13:38:33.834
  I1116 13:38:33.834701 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-9630 create -f -'
  I1116 13:38:33.916129 18 builder.go:146] stderr: ""
  I1116 13:38:33.916157 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/16/24 13:38:33.916
  I1116 13:38:33.916224 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-9630 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1116 13:38:33.961730 18 builder.go:146] stderr: ""
  I1116 13:38:33.961759 18 builder.go:147] stdout: "update-demo-nautilus-jkz8h update-demo-nautilus-s8b5x "
  I1116 13:38:33.961871 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-9630 get pods update-demo-nautilus-jkz8h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1116 13:38:34.002715 18 builder.go:146] stderr: ""
  I1116 13:38:34.002744 18 builder.go:147] stdout: ""
  I1116 13:38:34.002752 18 kubectl.go:2502] update-demo-nautilus-jkz8h is created but not running
  E1116 13:38:34.402178      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:35.402283      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:36.402737      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:37.402930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:38.403198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:38:39.002955 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-9630 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1116 13:38:39.048879 18 builder.go:146] stderr: ""
  I1116 13:38:39.048913 18 builder.go:147] stdout: "update-demo-nautilus-jkz8h update-demo-nautilus-s8b5x "
  I1116 13:38:39.048959 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-9630 get pods update-demo-nautilus-jkz8h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1116 13:38:39.091558 18 builder.go:146] stderr: ""
  I1116 13:38:39.091594 18 builder.go:147] stdout: "true"
  I1116 13:38:39.091636 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-9630 get pods update-demo-nautilus-jkz8h -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1116 13:38:39.133575 18 builder.go:146] stderr: ""
  I1116 13:38:39.133607 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1116 13:38:39.133620 18 kubectl.go:2393] validating pod update-demo-nautilus-jkz8h
  I1116 13:38:39.140082 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1116 13:38:39.140132 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1116 13:38:39.140142 18 kubectl.go:2520] update-demo-nautilus-jkz8h is verified up and running
  I1116 13:38:39.140172 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-9630 get pods update-demo-nautilus-s8b5x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1116 13:38:39.181676 18 builder.go:146] stderr: ""
  I1116 13:38:39.181719 18 builder.go:147] stdout: "true"
  I1116 13:38:39.181764 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-9630 get pods update-demo-nautilus-s8b5x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1116 13:38:39.223997 18 builder.go:146] stderr: ""
  I1116 13:38:39.224023 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1116 13:38:39.224033 18 kubectl.go:2393] validating pod update-demo-nautilus-s8b5x
  I1116 13:38:39.230192 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1116 13:38:39.230244 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1116 13:38:39.230258 18 kubectl.go:2520] update-demo-nautilus-s8b5x is verified up and running
  STEP: using delete to clean up resources @ 11/16/24 13:38:39.23
  I1116 13:38:39.230372 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-9630 delete --grace-period=0 --force -f -'
  I1116 13:38:39.281222 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1116 13:38:39.281247 18 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1116 13:38:39.281284 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-9630 get rc,svc -l name=update-demo --no-headers'
  I1116 13:38:39.341950 18 builder.go:146] stderr: "No resources found in kubectl-9630 namespace.\n"
  I1116 13:38:39.342010 18 builder.go:147] stdout: ""
  I1116 13:38:39.342088 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-9630 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1116 13:38:39.389483 18 builder.go:146] stderr: ""
  I1116 13:38:39.389524 18 builder.go:147] stdout: ""
  I1116 13:38:39.389618 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9630" for this suite. @ 11/16/24 13:38:39.395
  E1116 13:38:39.403312      18 retrywatcher.go:131] "Watch failed" err="context canceled"
• [5.596 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 11/16/24 13:38:39.408
  I1116 13:38:39.408919 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename proxy @ 11/16/24 13:38:39.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:38:39.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:38:39.43
  I1116 13:38:39.432071 18 proxy.go:293] Creating pod...
  E1116 13:38:40.403479      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:41.403623      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:38:41.453387 18 proxy.go:317] Creating service...
  I1116 13:38:41.465817 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3444/pods/agnhost/proxy/some/path/with/DELETE
  I1116 13:38:41.472338 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1116 13:38:41.472367 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3444/pods/agnhost/proxy/some/path/with/GET
  I1116 13:38:41.479933 18 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1116 13:38:41.479957 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3444/pods/agnhost/proxy/some/path/with/HEAD
  I1116 13:38:41.485118 18 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1116 13:38:41.485153 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3444/pods/agnhost/proxy/some/path/with/OPTIONS
  I1116 13:38:41.489439 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1116 13:38:41.489461 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3444/pods/agnhost/proxy/some/path/with/PATCH
  I1116 13:38:41.493722 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1116 13:38:41.493758 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3444/pods/agnhost/proxy/some/path/with/POST
  I1116 13:38:41.498947 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1116 13:38:41.498980 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3444/pods/agnhost/proxy/some/path/with/PUT
  I1116 13:38:41.503082 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1116 13:38:41.503105 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3444/services/test-service/proxy/some/path/with/DELETE
  I1116 13:38:41.510013 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1116 13:38:41.510053 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3444/services/test-service/proxy/some/path/with/GET
  I1116 13:38:41.518285 18 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1116 13:38:41.518321 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3444/services/test-service/proxy/some/path/with/HEAD
  I1116 13:38:41.524438 18 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1116 13:38:41.524459 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3444/services/test-service/proxy/some/path/with/OPTIONS
  I1116 13:38:41.532119 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1116 13:38:41.532142 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3444/services/test-service/proxy/some/path/with/PATCH
  I1116 13:38:41.540879 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1116 13:38:41.540905 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3444/services/test-service/proxy/some/path/with/POST
  I1116 13:38:41.547397 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1116 13:38:41.547426 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3444/services/test-service/proxy/some/path/with/PUT
  I1116 13:38:41.555245 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1116 13:38:41.555377 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3444" for this suite. @ 11/16/24 13:38:41.56
• [2.161 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 11/16/24 13:38:41.569
  I1116 13:38:41.569609 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-runtime @ 11/16/24 13:38:41.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:38:41.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:38:41.597
  STEP: create the container @ 11/16/24 13:38:41.602
  W1116 13:38:41.615297      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 11/16/24 13:38:41.615
  E1116 13:38:42.403745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:43.404266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:44.404543      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/16/24 13:38:44.645
  STEP: the container should be terminated @ 11/16/24 13:38:44.649
  STEP: the termination message should be set @ 11/16/24 13:38:44.649
  I1116 13:38:44.649344 18 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/16/24 13:38:44.649
  I1116 13:38:44.665637 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4519" for this suite. @ 11/16/24 13:38:44.669
• [3.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 11/16/24 13:38:44.679
  I1116 13:38:44.679213 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename chunking @ 11/16/24 13:38:44.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:38:44.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:38:44.701
  STEP: creating a large number of resources @ 11/16/24 13:38:44.703
  E1116 13:38:45.405001      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:46.405745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:47.405961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:48.406356      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:49.406651      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:50.406955      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:51.407281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:52.407799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:53.408654      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:54.409152      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:55.409225      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:56.410107      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:57.410562      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:58.411243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:38:59.411684      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:00.412534      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:01.413542      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 11/16/24 13:39:02.387
  E1116 13:39:02.413821      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:39:02.435079 18 chunking.go:163] Retrieved 40/40 results with rv 42433 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 11/16/24 13:39:02.435
  E1116 13:39:03.413969      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:04.414092      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:05.414561      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:06.415260      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:07.415351      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:08.415446      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:09.415532      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:10.415623      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:11.415764      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:12.416263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:13.416352      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:14.416452      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:15.416582      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:16.417469      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:17.417598      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:18.417717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:19.417817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:20.417996      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:21.418144      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:22.418340      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:39:22.441759 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:39:23.418729      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:24.419192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:25.419305      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:26.419635      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:27.419758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:28.419970      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:29.420172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:30.420353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:31.420682      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:32.420882      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:33.421021      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:34.421237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:35.422233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:36.422621      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:37.422854      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:38.422963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:39.423164      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:40.423293      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:41.424149      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:42.424194      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:39:42.441779 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:39:43.425235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:44.426229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:45.427220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:46.427320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:47.427519      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:48.427733      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:49.427918      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:50.428121      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:51.428437      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:52.428550      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:53.428792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:54.428976      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:55.429172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:56.429488      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:57.429598      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:58.429802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:39:59.429989      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:00.430183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:01.430617      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:02.430736      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:40:02.441183 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:40:03.430862      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:04.430985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:05.431089      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:06.431669      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:07.431891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:08.432224      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:09.432447      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:10.432686      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:11.432814      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:12.432997      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:13.433179      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:14.433313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:15.433422      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:16.433779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:17.433964      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:18.434166      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:19.435228      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:20.435328      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:21.436229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:22.436246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:40:22.441852 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:40:23.437247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:24.438239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:25.439231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:26.439551      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:27.439762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:28.439967      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:29.440170      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:30.440351      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:31.441239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:32.442282      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:33.442396      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:34.442582      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:35.442764      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:36.443087      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:37.443266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:38.443966      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:39.444097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:40.444173      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:41.445230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:40:42.441466 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:40:42.445416      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:43.446233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:44.446414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:45.447236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:46.447333      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:47.447434      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:48.447624      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:49.447813      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:50.448001      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:51.448165      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:52.448295      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:53.448515      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:54.448723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:55.448921      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:56.449174      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:57.449382      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:58.449595      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:40:59.449775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:00.449961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:01.450169      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:41:02.441841 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:41:02.450874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:03.451271      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:04.451478      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:05.451692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:06.451952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:07.452249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:08.452459      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:09.452646      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:10.452828      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:11.453161      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:12.453296      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:13.453550      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:14.453670      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:15.453912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:16.454006      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:17.454776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:18.454879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:19.455236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:20.456226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:21.456520      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:41:22.442760 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:41:22.456783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:23.457148      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:24.457294      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:25.458216      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:26.458313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:27.458484      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:28.459263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:29.459480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:30.459673      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:31.459943      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:32.460164      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:33.460287      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:34.460537      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:35.460727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:36.460985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:37.461243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:38.461428      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:39.461549      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:40.461730      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:41.462311      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:41:42.440922 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:41:42.462858      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:43.463005      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:44.463217      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:45.463410      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:46.463514      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:47.463729      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:48.464792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:49.465240      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:50.466229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:51.467271      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:52.467456      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:53.468236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:54.468441      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:55.468708      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:56.468958      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:57.469166      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:58.469406      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:41:59.469573      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:00.469786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:01.470125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:42:02.440389 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:42:02.470461      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:03.470650      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:04.470922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:05.471128      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:06.471428      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:07.471641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:08.471758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:09.471939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:10.472082      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:11.472257      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:12.472343      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:13.472535      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:14.472620      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:15.473702      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:16.474350      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:17.474484      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:18.474569      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:19.475236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:20.476251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:21.477231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:42:22.441374 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:42:22.477393      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:23.477539      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:24.477725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:25.477913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:26.478186      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:27.478400      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:28.478648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:29.478835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:30.479021      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:31.479180      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:32.479395      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:33.479577      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:34.480116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:35.480177      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:36.481243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:37.482251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:38.483228      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:39.483408      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:40.483596      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:41.484557      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:42:42.441556 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:42:42.485547      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:43.486237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:44.486421      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:45.486604      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:46.487221      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:47.487412      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:48.487615      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:49.487796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:50.487980      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:51.488111      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:52.488346      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:53.488537      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:54.489262      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:55.489448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:56.489755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:57.489905      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:58.490256      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:42:59.490442      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:00.490628      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:01.490928      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:43:02.442313 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:43:02.491311      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:03.492238      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:04.492418      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:05.492632      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:06.492799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:07.492901      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:08.492997      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:09.493289      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:10.494140      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:11.494175      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:12.494516      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:13.494682      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:14.495248      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:15.495428      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:16.496230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:17.497236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:18.497433      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:19.497629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:20.497832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:21.498172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:43:22.441157 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:43:22.499119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:23.499367      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:24.499337      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:25.499525      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:26.499846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:27.499966      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:28.500190      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:29.501236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:30.501565      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:31.501849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:32.502102      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:33.502177      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:34.502353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:35.502551      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:36.502670      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:37.502852      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:38.502974      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:39.503620      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:40.503761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:41.503858      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:43:42.441613 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:43:42.504706      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:43.505230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:44.506239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:45.507223      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:46.508159      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:47.508264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:48.508525      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:49.508707      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:50.508951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:51.509167      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:52.509285      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:53.509476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:54.509674      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:55.509924      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:56.510313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:57.510562      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:58.510744      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:43:59.510868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:00.511105      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:01.511392      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:44:02.441555 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:44:02.511615      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:03.511790      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:04.511972      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:05.512176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:06.513246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:07.513328      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:08.513966      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:09.514289      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:10.514457      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:11.515233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:12.516250      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:13.517240      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:14.517417      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:15.517656      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:16.517916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:17.518118      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:18.518353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:19.518535      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:20.519246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:21.519629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:44:22.441599 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:44:22.519652      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:23.519834      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:24.520020      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:25.520238      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:26.520560      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:27.520757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:28.521259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:29.521452      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:30.522319      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:31.522370      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:32.522569      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:33.522766      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:34.522951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:35.523675      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:36.524098      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:37.524181      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:38.524271      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:39.525244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:40.526232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:41.526347      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:44:42.441009 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:44:42.527132      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:43.527309      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:44.528242      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:45.528500      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:46.528800      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:47.529071      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:48.529249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:49.529448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:50.529681      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:51.530017      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:52.530159      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:53.530256      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:54.530435      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:55.530611      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:56.530721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:57.530919      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:58.531129      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:44:59.531314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:00.531492      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:01.532226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:45:02.441751 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:45:02.532801      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:03.533253      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:04.533435      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:05.533928      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:06.534166      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:07.534260      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:08.534418      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:09.534513      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:10.534697      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:11.534794      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:12.535231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:13.535331      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:14.536233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:15.536413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:16.536505      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:17.536615      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:18.537226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:19.538239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:20.539257      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:21.539599      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:45:22.441086 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:45:22.540092      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:23.540399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:24.540404      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:25.540904      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:26.541158      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:27.541344      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:28.542273      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:29.542526      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:30.542701      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:31.542987      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:32.543213      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:33.543388      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:34.544132      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:35.544178      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:36.545224      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:37.546225      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:38.547226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:39.548239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:40.548425      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:41.548702      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:45:42.442517 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:45:42.549616      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:43.549790      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:44.549980      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:45.550265      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:46.550626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:47.550746      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:48.551239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:49.551379      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:50.552313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:51.552439      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:52.552627      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:53.552936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:54.553144      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:55.554126      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:56.554171      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:57.555230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:58.556231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:45:59.557228      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:00.557409      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:01.557720      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:46:02.440492 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:46:02.558611      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:03.558792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:04.558981      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:05.559193      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:06.559481      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:07.559675      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:08.559866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:09.560077      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:10.560189      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:11.560516      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:12.560723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:13.560973      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:14.561169      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:15.561400      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:16.561516      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:17.561726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:18.561908      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:19.562119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:20.562312      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:21.562625      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:46:22.441613 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:46:22.562638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:23.562818      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:24.563000      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:25.563167      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:26.563272      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:27.563469      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:28.563649      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:29.563735      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:30.564553      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:31.564649      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:32.565592      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:33.565695      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:34.566238      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:35.567233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:36.568234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:37.568339      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:38.568530      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:39.568712      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:40.568815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:41.569204      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:46:42.441311 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:46:42.569326      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:43.569510      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:44.569696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:45.569891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:46.570183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:47.570295      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:48.570533      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:49.570716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:50.570899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:51.571184      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:52.571286      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:53.571491      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:54.571687      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:55.571873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:56.572187      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:57.572314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:58.572498      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:46:59.572599      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:00.572690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:01.573765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:47:02.440503 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:47:02.574576      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:03.574683      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:04.575235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:05.576229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:06.576653      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:07.576745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:08.577241      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:09.577425      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:10.577536      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:11.577641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:12.577838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:13.578580      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:14.578700      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:15.578896      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:16.579017      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:17.579151      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:18.579343      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:19.579524      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:20.580225      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:21.580392      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:47:22.442694 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:47:22.580805      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:23.581332      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:24.581249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:25.581348      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:26.581665      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:27.581781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:28.582294      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:29.582482      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:30.582594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:31.582887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:32.582992      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:33.583140      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:34.583330      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:35.584400      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:36.584499      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:37.585248      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:38.585337      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:39.586228      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:40.587290      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:41.587413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:47:42.440547 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:47:42.587679      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:43.587791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:44.587988      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:45.588268      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:46.588374      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:47.588577      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:48.588796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:49.588979      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:50.589187      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:51.589423      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:52.589546      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:53.590282      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:54.590363      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:55.590543      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:56.590758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:57.590936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:58.591164      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:47:59.591344      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:00.591529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:01.591867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:48:02.441600 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:48:02.592833      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:03.593291      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:04.594251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:05.594329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:06.594645      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:07.595268      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:08.596231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:09.597233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:10.598281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:11.598429      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:12.598681      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:13.598879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:14.599087      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:15.599319      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:16.599440      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:17.599626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:18.599807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:19.600234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:20.601300      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:21.601492      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:48:22.441370 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1116 13:48:22.602527      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:23.602735      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:24.603283      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:25.603686      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:26.604621      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:27.604719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:28.605233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:29.606231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:30.606607      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:31.606695      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:32.607237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:33.607435      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:34.607651      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:35.608330      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:36.608467      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:37.608665      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:38.608898      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:39.609142      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:40.609490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:41.609687      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:48:42.441243 18 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1116 13:48:42.441276 18 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 11/16/24 13:48:42.441
  STEP: retrieving all remaining pages @ 11/16/24 13:48:42.446
  I1116 13:48:42.450389 18 chunking.go:221] Retrieved 40/40 results with rv 43536 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MzYsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I1116 13:48:42.455494 18 chunking.go:221] Retrieved 40/40 results with rv 43536 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MzYsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I1116 13:48:42.459960 18 chunking.go:221] Retrieved 40/40 results with rv 43536 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MzYsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I1116 13:48:42.463617 18 chunking.go:221] Retrieved 40/40 results with rv 43536 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MzYsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I1116 13:48:42.467616 18 chunking.go:221] Retrieved 40/40 results with rv 43536 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MzYsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I1116 13:48:42.472159 18 chunking.go:221] Retrieved 40/40 results with rv 43536 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MzYsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I1116 13:48:42.476152 18 chunking.go:221] Retrieved 40/40 results with rv 43536 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MzYsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I1116 13:48:42.480766 18 chunking.go:221] Retrieved 40/40 results with rv 43536 and continue 
  I1116 13:48:42.480947 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8362" for this suite. @ 11/16/24 13:48:42.484
• [597.815 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 11/16/24 13:48:42.494
  I1116 13:48:42.494023 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir @ 11/16/24 13:48:42.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:48:42.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:48:42.515
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 11/16/24 13:48:42.518
  E1116 13:48:42.610470      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:43.610583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:44.610877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:45.611156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:48:46.549
  I1116 13:48:46.552879 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-1d2a7130-25c6-4819-bfd0-0fa749b1410c container test-container: <nil>
  STEP: delete the pod @ 11/16/24 13:48:46.572
  I1116 13:48:46.592557 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4238" for this suite. @ 11/16/24 13:48:46.597
• [4.111 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 11/16/24 13:48:46.605
  I1116 13:48:46.605307 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 13:48:46.605
  E1116 13:48:46.611153      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:48:46.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:48:46.627
  I1116 13:48:46.633031 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3459" for this suite. @ 11/16/24 13:48:46.636
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 11/16/24 13:48:46.644
  I1116 13:48:46.644920 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename configmap @ 11/16/24 13:48:46.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:48:46.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:48:46.664
  STEP: Creating configMap configmap-1481/configmap-test-cd7c27c3-96de-4136-b6e7-a1f2cb317d11 @ 11/16/24 13:48:46.666
  STEP: Creating a pod to test consume configMaps @ 11/16/24 13:48:46.672
  E1116 13:48:47.611318      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:48.611627      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:49.611743      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:50.612342      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:48:50.694
  I1116 13:48:50.697493 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-configmaps-78ec37b3-f782-4f76-96d0-d94fc168354d container env-test: <nil>
  STEP: delete the pod @ 11/16/24 13:48:50.705
  I1116 13:48:50.725022 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1481" for this suite. @ 11/16/24 13:48:50.73
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 11/16/24 13:48:50.738
  I1116 13:48:50.738194 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/16/24 13:48:50.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:48:50.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:48:50.759
  I1116 13:48:50.761778 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  E1116 13:48:51.612887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:48:51.785410 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3861" for this suite. @ 11/16/24 13:48:51.789
• [1.060 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 11/16/24 13:48:51.798
  I1116 13:48:51.798432 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename subpath @ 11/16/24 13:48:51.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:48:51.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:48:51.818
  STEP: Setting up data @ 11/16/24 13:48:51.819
  STEP: Creating pod pod-subpath-test-projected-5rs2 @ 11/16/24 13:48:51.83
  STEP: Creating a pod to test atomic-volume-subpath @ 11/16/24 13:48:51.83
  E1116 13:48:52.613845      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:53.614077      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:54.614179      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:55.614366      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:56.614460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:57.614553      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:58.615261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:48:59.616258      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:00.616366      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:01.617375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:02.618293      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:03.618502      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:04.618624      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:05.619367      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:06.619518      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:07.619642      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:08.619756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:09.619883      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:10.620197      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:11.620309      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:12.620403      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:13.620542      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:14.620655      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:15.621371      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:49:15.914
  I1116 13:49:15.918564 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-subpath-test-projected-5rs2 container test-container-subpath-projected-5rs2: <nil>
  STEP: delete the pod @ 11/16/24 13:49:15.927
  STEP: Deleting pod pod-subpath-test-projected-5rs2 @ 11/16/24 13:49:15.953
  I1116 13:49:15.953377 18 delete.go:62] Deleting pod "pod-subpath-test-projected-5rs2" in namespace "subpath-702"
  I1116 13:49:15.957100 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-702" for this suite. @ 11/16/24 13:49:15.961
• [24.172 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 11/16/24 13:49:15.97
  I1116 13:49:15.970297 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename cronjob @ 11/16/24 13:49:15.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:49:15.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:49:15.991
  STEP: Creating a ReplaceConcurrent cronjob @ 11/16/24 13:49:15.992
  STEP: Ensuring a job is scheduled @ 11/16/24 13:49:16.003
  E1116 13:49:16.622250      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:17.622470      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:18.622903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:19.623023      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:20.624102      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:21.624201      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:22.624945      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:23.625444      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:24.626097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:25.626336      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:26.626985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:27.627172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:28.628185      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:29.628304      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:30.629317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:31.629525      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:32.630467      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:33.630582      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:34.630682      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:35.631089      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:36.631268      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:37.631458      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:38.632264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:39.632361      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:40.633402      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:41.633511      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:42.634325      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:43.634421      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:44.634521      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:45.635325      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:46.636262      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:47.636372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:48.637244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:49.638236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:50.639102      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:51.639200      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:52.639312      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:53.639497      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:54.639611      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:55.640368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:56.641329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:57.641424      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:58.641576      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:49:59.641785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:00.642335      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:01.642448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 11/16/24 13:50:02.008
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/16/24 13:50:02.012
  STEP: Ensuring the job is replaced with a new one @ 11/16/24 13:50:02.016
  E1116 13:50:02.642600      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:03.643255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:04.643754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:05.644093      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:06.644209      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:07.644314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:08.644762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:09.644857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:10.645313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:11.645409      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:12.645511      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:13.646261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:14.646353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:15.647380      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:16.647482      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:17.647638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:18.647716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:19.647875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:20.648279      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:21.648368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:22.648494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:23.648710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:24.648798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:25.649424      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:26.649585      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:27.649703      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:28.649811      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:29.649929      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:30.650392      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:31.650485      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:32.650607      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:33.650726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:34.651273      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:35.651298      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:36.651428      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:37.651633      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:38.651763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:39.651975      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:40.652439      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:41.652685      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:42.653275      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:43.653377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:44.654187      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:45.654354      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:46.655266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:47.656258      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:48.657252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:49.657480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:50.658115      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:51.658190      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:52.659057      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:53.659266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:54.659379      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:55.660375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:56.660506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:57.660634      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:58.661487      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:50:59.661593      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:00.662309      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:01.663257      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 11/16/24 13:51:02.022
  I1116 13:51:02.030419 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4190" for this suite. @ 11/16/24 13:51:02.034
• [106.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 11/16/24 13:51:02.042
  I1116 13:51:02.042928 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename field-validation @ 11/16/24 13:51:02.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:51:02.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:51:02.064
  I1116 13:51:02.067186 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  W1116 13:51:02.067622      18 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0053e7250 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1116 13:51:02.663682      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:03.663894      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1116 13:51:04.602694      18 warnings.go:70] unknown field "alpha"
  W1116 13:51:04.602714      18 warnings.go:70] unknown field "beta"
  W1116 13:51:04.602717      18 warnings.go:70] unknown field "delta"
  W1116 13:51:04.602720      18 warnings.go:70] unknown field "epsilon"
  W1116 13:51:04.602724      18 warnings.go:70] unknown field "gamma"
  E1116 13:51:04.664696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:05.149142 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8127" for this suite. @ 11/16/24 13:51:05.153
• [3.118 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 11/16/24 13:51:05.161
  I1116 13:51:05.161567 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 13:51:05.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:51:05.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:51:05.182
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/16/24 13:51:05.186
  I1116 13:51:05.186126 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5449 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1116 13:51:05.235625 18 builder.go:146] stderr: ""
  I1116 13:51:05.235649 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 11/16/24 13:51:05.235
  E1116 13:51:05.665383      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:06.665704      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:07.666372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:08.666462      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:09.667406      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/16/24 13:51:10.287
  I1116 13:51:10.287250 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5449 get pod e2e-test-httpd-pod -o json'
  I1116 13:51:10.332583 18 builder.go:146] stderr: ""
  I1116 13:51:10.332689 18 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-11-16T13:51:05Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-5449\",\n        \"resourceVersion\": \"44440\",\n        \"uid\": \"a9cf3d0e-d808-4d10-a03b-794cb2fe79ab\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-qzgtn\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-45-197\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-qzgtn\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-16T13:51:06Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-16T13:51:05Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-16T13:51:06Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-16T13:51:06Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-16T13:51:05Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://a4f065a001816399860cbfcfe2ebcbd86a85370315e6a608f51d34d8616570ba\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-11-16T13:51:05Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-qzgtn\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.45.197\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.45.197\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.82.158\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.82.158\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-11-16T13:51:05Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 11/16/24 13:51:10.332
  I1116 13:51:10.332835 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5449 replace -f -'
  I1116 13:51:10.421553 18 builder.go:146] stderr: ""
  I1116 13:51:10.421581 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 11/16/24 13:51:10.421
  I1116 13:51:10.425550 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-5449 delete pods e2e-test-httpd-pod'
  E1116 13:51:10.668072      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:11.668279      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:12.329311 18 builder.go:146] stderr: ""
  I1116 13:51:12.329346 18 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1116 13:51:12.329478 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5449" for this suite. @ 11/16/24 13:51:12.334
• [7.181 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 11/16/24 13:51:12.342
  I1116 13:51:12.342816 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 13:51:12.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:51:12.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:51:12.368
  STEP: creating a replication controller @ 11/16/24 13:51:12.37
  I1116 13:51:12.370247 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 create -f -'
  I1116 13:51:12.455175 18 builder.go:146] stderr: ""
  I1116 13:51:12.455210 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/16/24 13:51:12.455
  I1116 13:51:12.455286 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1116 13:51:12.499694 18 builder.go:146] stderr: ""
  I1116 13:51:12.499730 18 builder.go:147] stdout: "update-demo-nautilus-rhqbx update-demo-nautilus-z8bxv "
  I1116 13:51:12.499773 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods update-demo-nautilus-rhqbx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1116 13:51:12.540218 18 builder.go:146] stderr: ""
  I1116 13:51:12.540255 18 builder.go:147] stdout: ""
  I1116 13:51:12.540264 18 kubectl.go:2502] update-demo-nautilus-rhqbx is created but not running
  E1116 13:51:12.668414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:13.668522      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:14.668601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:15.669400      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:16.669610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:17.540472 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1116 13:51:17.584665 18 builder.go:146] stderr: ""
  I1116 13:51:17.584709 18 builder.go:147] stdout: "update-demo-nautilus-rhqbx update-demo-nautilus-z8bxv "
  I1116 13:51:17.584749 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods update-demo-nautilus-rhqbx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1116 13:51:17.625927 18 builder.go:146] stderr: ""
  I1116 13:51:17.625965 18 builder.go:147] stdout: "true"
  I1116 13:51:17.626005 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods update-demo-nautilus-rhqbx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1116 13:51:17.667075 18 builder.go:146] stderr: ""
  I1116 13:51:17.667109 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1116 13:51:17.667128 18 kubectl.go:2393] validating pod update-demo-nautilus-rhqbx
  E1116 13:51:17.670263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:17.671378 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1116 13:51:17.671418 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1116 13:51:17.671429 18 kubectl.go:2520] update-demo-nautilus-rhqbx is verified up and running
  I1116 13:51:17.671456 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods update-demo-nautilus-z8bxv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1116 13:51:17.713492 18 builder.go:146] stderr: ""
  I1116 13:51:17.713529 18 builder.go:147] stdout: "true"
  I1116 13:51:17.713567 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods update-demo-nautilus-z8bxv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1116 13:51:17.754513 18 builder.go:146] stderr: ""
  I1116 13:51:17.754538 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1116 13:51:17.754548 18 kubectl.go:2393] validating pod update-demo-nautilus-z8bxv
  I1116 13:51:17.761017 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1116 13:51:17.761068 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1116 13:51:17.761081 18 kubectl.go:2520] update-demo-nautilus-z8bxv is verified up and running
  STEP: scaling down the replication controller @ 11/16/24 13:51:17.761
  I1116 13:51:17.761957 18 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1116 13:51:17.761982 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1116 13:51:18.671174      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:18.825468 18 builder.go:146] stderr: ""
  I1116 13:51:18.825609 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/16/24 13:51:18.825
  I1116 13:51:18.825707 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1116 13:51:18.876239 18 builder.go:146] stderr: ""
  I1116 13:51:18.876280 18 builder.go:147] stdout: "update-demo-nautilus-rhqbx "
  I1116 13:51:18.876320 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods update-demo-nautilus-rhqbx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1116 13:51:18.918649 18 builder.go:146] stderr: ""
  I1116 13:51:18.918691 18 builder.go:147] stdout: "true"
  I1116 13:51:18.918775 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods update-demo-nautilus-rhqbx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1116 13:51:18.962309 18 builder.go:146] stderr: ""
  I1116 13:51:18.962339 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1116 13:51:18.962349 18 kubectl.go:2393] validating pod update-demo-nautilus-rhqbx
  I1116 13:51:18.967274 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1116 13:51:18.967318 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1116 13:51:18.967329 18 kubectl.go:2520] update-demo-nautilus-rhqbx is verified up and running
  STEP: scaling up the replication controller @ 11/16/24 13:51:18.967
  I1116 13:51:18.968063 18 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1116 13:51:18.968087 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1116 13:51:19.672092      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:20.031848 18 builder.go:146] stderr: ""
  I1116 13:51:20.031884 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/16/24 13:51:20.031
  I1116 13:51:20.032006 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1116 13:51:20.076582 18 builder.go:146] stderr: ""
  I1116 13:51:20.076615 18 builder.go:147] stdout: "update-demo-nautilus-rhqbx update-demo-nautilus-zt6bz "
  I1116 13:51:20.076675 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods update-demo-nautilus-rhqbx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1116 13:51:20.120293 18 builder.go:146] stderr: ""
  I1116 13:51:20.120342 18 builder.go:147] stdout: "true"
  I1116 13:51:20.120379 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods update-demo-nautilus-rhqbx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1116 13:51:20.163251 18 builder.go:146] stderr: ""
  I1116 13:51:20.163282 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1116 13:51:20.163294 18 kubectl.go:2393] validating pod update-demo-nautilus-rhqbx
  I1116 13:51:20.168147 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1116 13:51:20.168190 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1116 13:51:20.168199 18 kubectl.go:2520] update-demo-nautilus-rhqbx is verified up and running
  I1116 13:51:20.168244 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods update-demo-nautilus-zt6bz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1116 13:51:20.209875 18 builder.go:146] stderr: ""
  I1116 13:51:20.209908 18 builder.go:147] stdout: ""
  I1116 13:51:20.209918 18 kubectl.go:2502] update-demo-nautilus-zt6bz is created but not running
  E1116 13:51:20.672402      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:21.672593      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:22.672806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:23.673225      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:24.673220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:25.210156 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1116 13:51:25.256857 18 builder.go:146] stderr: ""
  I1116 13:51:25.256895 18 builder.go:147] stdout: "update-demo-nautilus-rhqbx update-demo-nautilus-zt6bz "
  I1116 13:51:25.256936 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods update-demo-nautilus-rhqbx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1116 13:51:25.301351 18 builder.go:146] stderr: ""
  I1116 13:51:25.301384 18 builder.go:147] stdout: "true"
  I1116 13:51:25.301424 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods update-demo-nautilus-rhqbx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1116 13:51:25.343300 18 builder.go:146] stderr: ""
  I1116 13:51:25.343336 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1116 13:51:25.343346 18 kubectl.go:2393] validating pod update-demo-nautilus-rhqbx
  I1116 13:51:25.348132 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1116 13:51:25.348171 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1116 13:51:25.348185 18 kubectl.go:2520] update-demo-nautilus-rhqbx is verified up and running
  I1116 13:51:25.348215 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods update-demo-nautilus-zt6bz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1116 13:51:25.390559 18 builder.go:146] stderr: ""
  I1116 13:51:25.390579 18 builder.go:147] stdout: "true"
  I1116 13:51:25.390614 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods update-demo-nautilus-zt6bz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1116 13:51:25.432133 18 builder.go:146] stderr: ""
  I1116 13:51:25.432161 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1116 13:51:25.432170 18 kubectl.go:2393] validating pod update-demo-nautilus-zt6bz
  I1116 13:51:25.439319 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1116 13:51:25.439388 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1116 13:51:25.439402 18 kubectl.go:2520] update-demo-nautilus-zt6bz is verified up and running
  STEP: using delete to clean up resources @ 11/16/24 13:51:25.439
  I1116 13:51:25.439505 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 delete --grace-period=0 --force -f -'
  I1116 13:51:25.490125 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1116 13:51:25.490150 18 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1116 13:51:25.490183 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get rc,svc -l name=update-demo --no-headers'
  I1116 13:51:25.550329 18 builder.go:146] stderr: "No resources found in kubectl-389 namespace.\n"
  I1116 13:51:25.550381 18 builder.go:147] stdout: ""
  I1116 13:51:25.550524 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-389 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1116 13:51:25.613911 18 builder.go:146] stderr: ""
  I1116 13:51:25.613959 18 builder.go:147] stdout: ""
  I1116 13:51:25.614163 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-389" for this suite. @ 11/16/24 13:51:25.618
• [13.284 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 11/16/24 13:51:25.627
  I1116 13:51:25.627426 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pods @ 11/16/24 13:51:25.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:51:25.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:51:25.666
  E1116 13:51:25.675171      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating the pod @ 11/16/24 13:51:25.677
  STEP: submitting the pod to kubernetes @ 11/16/24 13:51:25.677
  STEP: verifying QOS class is set on the pod @ 11/16/24 13:51:25.686
  I1116 13:51:25.691565 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-857" for this suite. @ 11/16/24 13:51:25.697
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 11/16/24 13:51:25.706
  I1116 13:51:25.706833 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubelet-test @ 11/16/24 13:51:25.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:51:25.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:51:25.73
  I1116 13:51:26.017486 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2362" for this suite. @ 11/16/24 13:51:26.022
• [0.323 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 11/16/24 13:51:26.03
  I1116 13:51:26.030148 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename daemonsets @ 11/16/24 13:51:26.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:51:26.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:51:26.051
  I1116 13:51:26.072714 18 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 11/16/24 13:51:26.078
  I1116 13:51:26.081585 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:51:26.081608 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 11/16/24 13:51:26.081
  I1116 13:51:26.102964 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:51:26.102984 18 fixtures.go:130] Node ip-172-31-45-197 is running 0 daemon pod, expected 1
  E1116 13:51:26.676260      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:27.104614 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:51:27.104651 18 fixtures.go:130] Node ip-172-31-45-197 is running 0 daemon pod, expected 1
  E1116 13:51:27.677270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:28.104718 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1116 13:51:28.104753 18 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 11/16/24 13:51:28.108
  I1116 13:51:28.125326 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1116 13:51:28.125349 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E1116 13:51:28.678105      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:29.127230 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:51:29.127262 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 11/16/24 13:51:29.127
  I1116 13:51:29.138569 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:51:29.138589 18 fixtures.go:130] Node ip-172-31-45-197 is running 0 daemon pod, expected 1
  E1116 13:51:29.678206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:30.139862 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:51:30.139890 18 fixtures.go:130] Node ip-172-31-45-197 is running 0 daemon pod, expected 1
  E1116 13:51:30.678336      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:31.139349 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1116 13:51:31.139381 18 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/16/24 13:51:31.147
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-608, will wait for the garbage collector to delete the pods @ 11/16/24 13:51:31.147
  I1116 13:51:31.212026 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.834704ms
  I1116 13:51:31.312563 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.532468ms
  E1116 13:51:31.678951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:32.418253 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1116 13:51:32.418294 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1116 13:51:32.422760 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"44752"},"items":null}

  I1116 13:51:32.428764 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"44752"},"items":null}

  I1116 13:51:32.452364 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-608" for this suite. @ 11/16/24 13:51:32.458
• [6.436 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 11/16/24 13:51:32.466
  I1116 13:51:32.466996 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 13:51:32.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:51:32.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:51:32.491
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 13:51:32.494
  E1116 13:51:32.679497      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:33.679634      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:34.680023      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:35.680360      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:51:36.522
  I1116 13:51:36.526631 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downwardapi-volume-1aee6063-d299-402a-aced-2e2a6b63871c container client-container: <nil>
  STEP: delete the pod @ 11/16/24 13:51:36.539
  I1116 13:51:36.561569 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3603" for this suite. @ 11/16/24 13:51:36.565
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 11/16/24 13:51:36.573
  I1116 13:51:36.573432 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename sched-pred @ 11/16/24 13:51:36.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:51:36.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:51:36.596
  I1116 13:51:36.598322 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1116 13:51:36.605353 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I1116 13:51:36.608350 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-107 before test
  I1116 13:51:36.613362 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-7hw6s from ingress-nginx-kubernetes-worker started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 13:51:36.613378 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1116 13:51:36.613386 18 predicates.go:957] calico-node-g5csg from kube-system started at 2024-11-16 12:10:00 +0000 UTC (1 container statuses recorded)
  I1116 13:51:36.613391 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1116 13:51:36.613428 18 predicates.go:957] coredns-5b4857d7c8-88vmq from kube-system started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 13:51:36.613433 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1116 13:51:36.613438 18 predicates.go:957] kube-state-metrics-5d7bdccd49-5l6xl from kube-system started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 13:51:36.613444 18 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 6
  I1116 13:51:36.613449 18 predicates.go:957] metrics-server-v0.7.1-6c77d69467-9jqds from kube-system started at 2024-11-16 11:52:55 +0000 UTC (2 container statuses recorded)
  I1116 13:51:36.613455 18 predicates.go:959] 	Container metrics-server ready: true, restart count 2
  I1116 13:51:36.613460 18 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1116 13:51:36.613466 18 predicates.go:957] dashboard-metrics-scraper-64757cf48d-8s8xh from kubernetes-dashboard started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 13:51:36.613471 18 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1116 13:51:36.613477 18 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-8bp7b from kubernetes-dashboard started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 13:51:36.613482 18 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 1
  I1116 13:51:36.613488 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-v89qq from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 13:51:36.613493 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 13:51:36.613498 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1116 13:51:36.613505 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-45-197 before test
  I1116 13:51:36.619196 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-fpkvd from ingress-nginx-kubernetes-worker started at 2024-11-16 13:35:11 +0000 UTC (1 container statuses recorded)
  I1116 13:51:36.619212 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1116 13:51:36.619219 18 predicates.go:957] calico-node-r7kq9 from kube-system started at 2024-11-16 12:09:29 +0000 UTC (1 container statuses recorded)
  I1116 13:51:36.619224 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1116 13:51:36.619230 18 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-16 12:12:38 +0000 UTC (1 container statuses recorded)
  I1116 13:51:36.619235 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1116 13:51:36.619240 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-tcwcj from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 13:51:36.619246 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 13:51:36.619250 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1116 13:51:36.619256 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-72-246 before test
  I1116 13:51:36.624532 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-nk2r4 from ingress-nginx-kubernetes-worker started at 2024-11-16 12:03:58 +0000 UTC (1 container statuses recorded)
  I1116 13:51:36.624549 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1116 13:51:36.624556 18 predicates.go:957] calico-node-95c66 from kube-system started at 2024-11-16 12:09:39 +0000 UTC (1 container statuses recorded)
  I1116 13:51:36.624561 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1116 13:51:36.624567 18 predicates.go:957] sonobuoy-e2e-job-06d9258fa7d041d4 from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 13:51:36.624572 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1116 13:51:36.624578 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 13:51:36.624585 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-wf799 from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 13:51:36.624590 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 13:51:36.624595 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 11/16/24 13:51:36.624
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1808772e1bf355b9], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 11/16/24 13:51:36.653
  E1116 13:51:36.680403      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:37.649417 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3290" for this suite. @ 11/16/24 13:51:37.652
• [1.087 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 11/16/24 13:51:37.66
  I1116 13:51:37.660536 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename configmap @ 11/16/24 13:51:37.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:51:37.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:51:37.679
  E1116 13:51:37.680595      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating configMap with name configmap-test-volume-f28d89bf-3322-4ad1-8bb2-15dc1e91cdc4 @ 11/16/24 13:51:37.681
  STEP: Creating a pod to test consume configMaps @ 11/16/24 13:51:37.685
  E1116 13:51:38.680782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:39.680882      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:51:39.707
  I1116 13:51:39.711849 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-configmaps-278bc489-faee-49f4-8c5a-999470c5a66e container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 13:51:39.721
  I1116 13:51:39.741547 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2503" for this suite. @ 11/16/24 13:51:39.744
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 11/16/24 13:51:39.752
  I1116 13:51:39.752343 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:51:39.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:51:39.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:51:39.775
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 13:51:39.777
  E1116 13:51:40.681444      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:41.681643      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:42.681779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:43.681889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:51:43.804
  I1116 13:51:43.809670 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod downwardapi-volume-96e8c009-3ea9-41d0-9e8f-83742a75ce7b container client-container: <nil>
  STEP: delete the pod @ 11/16/24 13:51:43.817
  I1116 13:51:43.834158 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3771" for this suite. @ 11/16/24 13:51:43.838
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 11/16/24 13:51:43.846
  I1116 13:51:43.846599 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename configmap @ 11/16/24 13:51:43.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:51:43.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:51:43.865
  STEP: Creating configMap with name configmap-test-upd-b8d8e422-e2f0-4edb-9fcd-af14c04f7971 @ 11/16/24 13:51:43.87
  STEP: Creating the pod @ 11/16/24 13:51:43.875
  E1116 13:51:44.682010      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:45.682304      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 11/16/24 13:51:45.897
  STEP: Waiting for pod with binary data @ 11/16/24 13:51:45.904
  I1116 13:51:45.912385 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8794" for this suite. @ 11/16/24 13:51:45.916
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 11/16/24 13:51:45.924
  I1116 13:51:45.924053 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename gc @ 11/16/24 13:51:45.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:51:45.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:51:45.944
  STEP: create the rc @ 11/16/24 13:51:45.951
  W1116 13:51:45.956587      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1116 13:51:46.683286      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:47.685259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:48.685508      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:49.686118      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:50.686744      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:51:51.688032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 11/16/24 13:51:51.961
  STEP: wait for the rc to be deleted @ 11/16/24 13:51:51.97
  E1116 13:51:52.688196      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:52.990749 18 garbage_collector.go:670] 80 pods remaining
  I1116 13:51:52.990778 18 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I1116 13:51:52.990783 18 garbage_collector.go:678] 
  E1116 13:51:53.688653      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:53.984177 18 garbage_collector.go:670] 71 pods remaining
  I1116 13:51:53.984218 18 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I1116 13:51:53.984224 18 garbage_collector.go:678] 
  E1116 13:51:54.688894      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:54.981455 18 garbage_collector.go:670] 60 pods remaining
  I1116 13:51:54.981482 18 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I1116 13:51:54.981487 18 garbage_collector.go:678] 
  E1116 13:51:55.689652      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:55.987716 18 garbage_collector.go:670] 40 pods remaining
  I1116 13:51:55.987983 18 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I1116 13:51:55.988022 18 garbage_collector.go:678] 
  E1116 13:51:56.689792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:56.988121 18 garbage_collector.go:670] 31 pods remaining
  I1116 13:51:56.988156 18 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I1116 13:51:56.988164 18 garbage_collector.go:678] 
  E1116 13:51:57.690192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:51:57.979584 18 garbage_collector.go:670] 20 pods remaining
  I1116 13:51:57.979608 18 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I1116 13:51:57.979613 18 garbage_collector.go:678] 
  E1116 13:51:58.691843      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/16/24 13:51:58.977
  W1116 13:51:58.987887      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1116 13:51:58.988084 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1116 13:51:58.988226 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6196" for this suite. @ 11/16/24 13:51:58.992
• [13.075 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 11/16/24 13:51:58.999
  I1116 13:51:58.999429 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename gc @ 11/16/24 13:51:59
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:51:59.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:51:59.022
  STEP: create the deployment @ 11/16/24 13:51:59.025
  W1116 13:51:59.036249      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/16/24 13:51:59.036
  STEP: delete the deployment @ 11/16/24 13:51:59.552
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 11/16/24 13:51:59.561
  E1116 13:51:59.692083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/16/24 13:52:00.078
  W1116 13:52:00.083947      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1116 13:52:00.083977 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1116 13:52:00.084263 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4702" for this suite. @ 11/16/24 13:52:00.088
• [1.096 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 11/16/24 13:52:00.095
  I1116 13:52:00.095683 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename deployment @ 11/16/24 13:52:00.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:52:00.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:52:00.118
  I1116 13:52:00.119628 18 deployment.go:792] Creating deployment "test-recreate-deployment"
  I1116 13:52:00.127017 18 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1116 13:52:00.133286 18 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  E1116 13:52:00.692835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:01.693090      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:52:02.141263 18 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I1116 13:52:02.145574 18 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I1116 13:52:02.158210 18 deployment.go:313] Updating deployment test-recreate-deployment
  I1116 13:52:02.158234 18 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1116 13:52:02.255948 18 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7204",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e0cbcb7-2ea5-4f08-8fde-7591822e520c",
      ResourceVersion: (string) (len=5) "46927",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867361920,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361920,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1116 13:52:02.261057 18 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7204",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20342d43-48f1-4857-9f94-814747d8aa69",
      ResourceVersion: (string) (len=5) "46923",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867361922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "3e0cbcb7-2ea5-4f08-8fde-7591822e520c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 65 30 63 62 63  62 37 2d 32 65 61 35 2d  |\"3e0cbcb7-2ea5-|
              00000120  34 66 30 38 2d 38 66 64  65 2d 37 35 39 31 38 32  |4f08-8fde-759182|
              00000130  32 65 35 32 30 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |2e520c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1116 13:52:02.261542 18 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1116 13:52:02.261870 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7204",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7be667e3-6631-4323-87e3-8f62d15da9e0",
      ResourceVersion: (string) (len=5) "46913",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867361920,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "3e0cbcb7-2ea5-4f08-8fde-7591822e520c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 65 30 63 62 63  62 37 2d 32 65 61 35 2d  |\"3e0cbcb7-2ea5-|
              00000120  34 66 30 38 2d 38 66 64  65 2d 37 35 39 31 38 32  |4f08-8fde-759182|
              00000130  32 65 35 32 30 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |2e520c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1116 13:52:02.266903 18 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-nkk4z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-nkk4z",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-7204",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9006bdba-db51-4585-89fa-ec4383c3e731",
      ResourceVersion: (string) (len=5) "46926",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867361922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "20342d43-48f1-4857-9f94-814747d8aa69",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  33 34 32 64 34 33 2d 34  |d\":\"20342d43-4|
              00000090  38 66 31 2d 34 38 35 37  2d 39 66 39 34 2d 38 31  |8f1-4857-9f94-81|
              000000a0  34 37 34 37 64 38 61 61  36 39 5c 22 7d 22 3a 7b  |4747d8aa69\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lnn6s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lnn6s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867361922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867361922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lnn6s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:52:02.267973 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7204" for this suite. @ 11/16/24 13:52:02.272
• [2.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 11/16/24 13:52:02.28
  I1116 13:52:02.280471 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename cronjob @ 11/16/24 13:52:02.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:52:02.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:52:02.302
  STEP: Creating a ForbidConcurrent cronjob @ 11/16/24 13:52:02.303
  STEP: Ensuring a job is scheduled @ 11/16/24 13:52:02.309
  E1116 13:52:02.693136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:03.693362      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:04.694239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:05.694308      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:06.695170      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:07.695267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:08.695368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:09.695463      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:10.696516      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:11.696591      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:12.697298      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:13.697403      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:14.698119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:15.698443      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:16.699283      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:17.699486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:18.700098      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:19.700334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:20.700938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:21.701067      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:22.701184      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:23.701286      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:24.702136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:25.702495      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:26.702627      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:27.702657      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:28.703569      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:29.703760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:30.704530      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:31.705269      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:32.706099      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:33.706206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:34.706799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:35.707475      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:36.708141      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:37.708233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:38.708344      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:39.708564      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:40.708915      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:41.709159      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:42.709249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:43.709337      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:44.709848      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:45.710497      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:46.710617      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:47.710735      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:48.710868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:49.711002      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:50.711257      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:51.712229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:52.713017      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:53.713145      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:54.713256      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:55.713324      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:56.714116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:57.714248      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:58.714901      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:52:59.715283      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 11/16/24 13:53:00.314
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/16/24 13:53:00.317
  STEP: Ensuring no more jobs are scheduled @ 11/16/24 13:53:00.321
  STEP: Removing cronjob @ 11/16/24 13:53:00.324
  I1116 13:53:00.331078 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2544" for this suite. @ 11/16/24 13:53:00.334
• [58.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 11/16/24 13:53:00.342
  I1116 13:53:00.342514 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:53:00.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:53:00.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:53:00.366
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 13:53:00.368
  E1116 13:53:00.715384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:01.716279      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:02.716394      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:03.716612      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:53:04.394
  I1116 13:53:04.398825 18 output.go:196] Trying to get logs from node ip-172-31-72-246 pod downwardapi-volume-2d2dc778-3ebb-43fb-89d4-ca5d0395134e container client-container: <nil>
  STEP: delete the pod @ 11/16/24 13:53:04.415
  I1116 13:53:04.437835 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5292" for this suite. @ 11/16/24 13:53:04.443
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 11/16/24 13:53:04.45
  I1116 13:53:04.450918 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename resourcequota @ 11/16/24 13:53:04.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:53:04.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:53:04.474
  STEP: Discovering how many secrets are in namespace by default @ 11/16/24 13:53:04.476
  E1116 13:53:04.716655      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:05.717426      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:06.718271      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:07.719000      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:08.719071      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 11/16/24 13:53:09.48
  E1116 13:53:09.719199      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:10.719499      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:11.720478      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:12.720972      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:13.721946      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/16/24 13:53:14.485
  STEP: Ensuring resource quota status is calculated @ 11/16/24 13:53:14.492
  E1116 13:53:14.722583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:15.723561      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 11/16/24 13:53:16.497
  STEP: Ensuring resource quota status captures secret creation @ 11/16/24 13:53:16.509
  E1116 13:53:16.723756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:17.724706      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 11/16/24 13:53:18.515
  STEP: Ensuring resource quota status released usage @ 11/16/24 13:53:18.523
  E1116 13:53:18.725161      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:19.725213      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:53:20.528997 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5052" for this suite. @ 11/16/24 13:53:20.532
• [16.090 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 11/16/24 13:53:20.541
  I1116 13:53:20.541063 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pod-network-test @ 11/16/24 13:53:20.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:53:20.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:53:20.562
  STEP: Performing setup for networking test in namespace pod-network-test-2807 @ 11/16/24 13:53:20.563
  STEP: creating a selector @ 11/16/24 13:53:20.563
  STEP: Creating the service pods in kubernetes @ 11/16/24 13:53:20.564
  I1116 13:53:20.564010 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1116 13:53:20.725900      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:21.726033      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:22.726262      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:23.726596      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:24.727173      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:25.727448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:26.727831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:27.727954      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:28.728246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:29.728376      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:30.728457      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:31.729255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:32.729411      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:33.729632      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:34.730112      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:35.730476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:36.730720      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:37.730809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:38.731835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:39.731968      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:40.732972      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:41.733186      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/16/24 13:53:42.678
  E1116 13:53:42.733535      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:43.733953      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:53:44.714512 18 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1116 13:53:44.714546 18 utils.go:496] Going to poll 192.168.164.95 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1116 13:53:44.717714 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.164.95 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2807 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 13:53:44.717734 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 13:53:44.718226 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 13:53:44.718269 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2807/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.164.95+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1116 13:53:44.734492      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:45.735403      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:53:45.767701 18 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1116 13:53:45.767742 18 utils.go:496] Going to poll 192.168.82.140 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1116 13:53:45.773125 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.82.140 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2807 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 13:53:45.773146 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 13:53:45.773536 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 13:53:45.773573 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2807/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.82.140+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1116 13:53:46.735757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:53:46.809348 18 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1116 13:53:46.809429 18 utils.go:496] Going to poll 192.168.216.67 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1116 13:53:46.814027 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.216.67 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2807 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1116 13:53:46.814064 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  I1116 13:53:46.814443 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I1116 13:53:46.814481 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2807/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.216.67+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1116 13:53:47.736192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:53:47.854315 18 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1116 13:53:47.854451 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2807" for this suite. @ 11/16/24 13:53:47.859
• [27.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 11/16/24 13:53:47.868
  I1116 13:53:47.868069 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename podtemplate @ 11/16/24 13:53:47.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:53:47.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:53:47.89
  I1116 13:53:47.927337 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2818" for this suite. @ 11/16/24 13:53:47.932
• [0.072 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 11/16/24 13:53:47.94
  I1116 13:53:47.940266 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename sched-pred @ 11/16/24 13:53:47.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:53:47.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:53:47.961
  I1116 13:53:47.963228 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1116 13:53:47.970059 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I1116 13:53:47.973305 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-107 before test
  I1116 13:53:47.978533 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-7hw6s from ingress-nginx-kubernetes-worker started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.978546 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1116 13:53:47.978553 18 predicates.go:957] calico-node-g5csg from kube-system started at 2024-11-16 12:10:00 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.978559 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1116 13:53:47.978565 18 predicates.go:957] coredns-5b4857d7c8-88vmq from kube-system started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.978570 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1116 13:53:47.978575 18 predicates.go:957] kube-state-metrics-5d7bdccd49-5l6xl from kube-system started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.978580 18 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 6
  I1116 13:53:47.978591 18 predicates.go:957] metrics-server-v0.7.1-6c77d69467-9jqds from kube-system started at 2024-11-16 11:52:55 +0000 UTC (2 container statuses recorded)
  I1116 13:53:47.978596 18 predicates.go:959] 	Container metrics-server ready: true, restart count 2
  I1116 13:53:47.978601 18 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1116 13:53:47.978607 18 predicates.go:957] dashboard-metrics-scraper-64757cf48d-8s8xh from kubernetes-dashboard started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.978611 18 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1116 13:53:47.978617 18 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-8bp7b from kubernetes-dashboard started at 2024-11-16 11:52:55 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.978622 18 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 1
  I1116 13:53:47.978627 18 predicates.go:957] netserver-0 from pod-network-test-2807 started at 2024-11-16 13:53:20 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.978632 18 predicates.go:959] 	Container webserver ready: true, restart count 0
  I1116 13:53:47.978637 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-v89qq from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 13:53:47.978642 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 13:53:47.978646 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1116 13:53:47.978652 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-45-197 before test
  I1116 13:53:47.983642 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-fpkvd from ingress-nginx-kubernetes-worker started at 2024-11-16 13:35:11 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.983653 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1116 13:53:47.983659 18 predicates.go:957] calico-node-r7kq9 from kube-system started at 2024-11-16 12:09:29 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.983670 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1116 13:53:47.983676 18 predicates.go:957] netserver-1 from pod-network-test-2807 started at 2024-11-16 13:53:20 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.983680 18 predicates.go:959] 	Container webserver ready: true, restart count 0
  I1116 13:53:47.983686 18 predicates.go:957] test-container-pod from pod-network-test-2807 started at 2024-11-16 13:53:42 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.983694 18 predicates.go:959] 	Container webserver ready: true, restart count 0
  I1116 13:53:47.983700 18 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-16 12:12:38 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.983705 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1116 13:53:47.983710 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-tcwcj from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 13:53:47.983714 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 13:53:47.983796 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1116 13:53:47.983803 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-72-246 before test
  I1116 13:53:47.990293 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-nk2r4 from ingress-nginx-kubernetes-worker started at 2024-11-16 12:03:58 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.990310 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1116 13:53:47.990318 18 predicates.go:957] calico-node-95c66 from kube-system started at 2024-11-16 12:09:39 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.990323 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1116 13:53:47.990330 18 predicates.go:957] host-test-container-pod from pod-network-test-2807 started at 2024-11-16 13:53:42 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.990334 18 predicates.go:959] 	Container agnhost-container ready: true, restart count 0
  I1116 13:53:47.990340 18 predicates.go:957] netserver-2 from pod-network-test-2807 started at 2024-11-16 13:53:20 +0000 UTC (1 container statuses recorded)
  I1116 13:53:47.990345 18 predicates.go:959] 	Container webserver ready: true, restart count 0
  I1116 13:53:47.990355 18 predicates.go:957] sonobuoy-e2e-job-06d9258fa7d041d4 from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 13:53:47.990359 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1116 13:53:47.990364 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 13:53:47.990369 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-622e9a76c7e74675-wf799 from sonobuoy started at 2024-11-16 12:12:41 +0000 UTC (2 container statuses recorded)
  I1116 13:53:47.990400 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1116 13:53:47.990405 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/16/24 13:53:47.99
  E1116 13:53:48.736296      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:49.736572      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/16/24 13:53:50.022
  STEP: Trying to apply a random label on the found node. @ 11/16/24 13:53:50.04
  STEP: verifying the node has the label kubernetes.io/e2e-24247629-a6c6-4820-9bfb-6c64870bf523 95 @ 11/16/24 13:53:50.048
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 11/16/24 13:53:50.052
  E1116 13:53:50.737273      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:51.738266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.45.197 on the node which pod4 resides and expect not scheduled @ 11/16/24 13:53:52.069
  E1116 13:53:52.738384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:53.738505      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:54.738611      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:55.739384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:56.739601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:57.739877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:58.740871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:53:59.741176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:00.741214      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:01.741325      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:02.741421      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:03.741518      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:04.741682      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:05.742453      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:06.742571      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:07.742712      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:08.743671      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:09.743848      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:10.743947      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:11.744016      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:12.744930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:13.745056      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:14.745581      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:15.746428      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:16.746714      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:17.747653      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:18.747835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:19.748076      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:20.748483      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:21.748696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:22.748800      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:23.748896      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:24.749022      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:25.749356      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:26.749478      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:27.749608      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:28.749707      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:29.749830      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:30.750522      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:31.750753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:32.750867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:33.750985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:34.751064      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:35.751393      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:36.751844      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:37.751968      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:38.752101      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:39.752730      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:40.753343      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:41.753442      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:42.754255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:43.754384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:44.754476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:45.755449      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:46.756274      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:47.757267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:48.757359      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:49.757461      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:50.758536      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:51.758657      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:52.759655      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:53.759869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:54.759990      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:55.760343      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:56.760463      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:57.760556      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:58.760656      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:54:59.760762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:00.760862      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:01.760983      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:02.761208      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:03.762264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:04.763334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:05.763423      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:06.764425      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:07.764518      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:08.764610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:09.764696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:10.765531      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:11.765638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:12.765730      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:13.765829      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:14.765930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:15.766538      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:16.766688      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:17.767279      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:18.768207      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:19.768405      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:20.769276      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:21.769494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:22.769607      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:23.769901      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:24.770206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:25.770451      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:26.770795      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:27.771003      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:28.772061      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:29.772178      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:30.772575      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:31.772659      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:32.773679      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:33.773691      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:34.773785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:35.774416      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:36.775150      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:37.775242      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:38.775449      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:39.775547      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:40.775991      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:41.776172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:42.776951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:43.777093      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:44.777479      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:45.778482      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:46.778656      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:47.778846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:48.778885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:49.778986      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:50.779535      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:51.779724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:52.780259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:53.780363      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:54.781233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:55.781353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:56.782393      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:57.782489      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:58.783178      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:55:59.783377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:00.783900      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:01.784737      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:02.785241      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:03.786232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:04.786786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:05.787537      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:06.788558      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:07.788687      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:08.789239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:09.789335      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:10.790334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:11.790529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:12.791226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:13.791344      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:14.792170      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:15.792515      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:16.793513      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:17.793625      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:18.793706      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:19.793811      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:20.793876      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:21.794889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:22.795237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:23.795330      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:24.796257      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:25.796342      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:26.796799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:27.796980      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:28.797810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:29.798027      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:30.798885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:31.799013      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:32.799875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:33.800003      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:34.800407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:35.800495      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:36.801246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:37.801400      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:38.801516      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:39.801710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:40.801758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:41.801970      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:42.802105      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:43.802221      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:44.803149      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:45.803228      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:46.804005      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:47.804208      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:48.804871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:49.804983      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:50.805994      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:51.806109      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:52.806268      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:53.806368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:54.806455      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:55.807499      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:56.807558      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:57.808476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:58.808949      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:56:59.809281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:00.809682      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:01.809781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:02.810398      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:03.811412      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:04.812243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:05.812335      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:06.812440      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:07.812517      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:08.813073      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:09.813195      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:10.814177      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:11.814365      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:12.814987      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:13.815199      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:14.815294      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:15.815380      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:16.815486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:17.816275      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:18.816616      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:19.816725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:20.817696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:21.817899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:22.818726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:23.819029      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:24.819460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:25.819494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:26.819993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:27.820159      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:28.821230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:29.822237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:30.822915      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:31.823069      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:32.823856      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:33.824448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:34.824535      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:35.824867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:36.825445      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:37.826230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:38.826979      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:39.827124      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:40.827955      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:41.828111      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:42.828661      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:43.828784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:44.829637      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:45.830247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:46.830754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:47.830897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:48.831745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:49.831868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:50.832227      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:51.832380      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:52.832676      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:53.832778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:54.833017      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:55.833275      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:56.833847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:57.833933      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:58.834890      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:57:59.834988      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:00.835232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:01.835329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:02.836088      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:03.836169      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:04.836977      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:05.837680      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:06.838278      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:07.839331      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:08.839369      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:09.839566      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:10.840525      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:11.840649      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:12.841016      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:13.841164      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:14.841227      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:15.841435      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:16.841890      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:17.842016      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:18.842459      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:19.842610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:20.842902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:21.843107      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:22.843956      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:23.844104      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:24.844584      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:25.845566      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:26.846401      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:27.847235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:28.848236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:29.848386      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:30.848914      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:31.849138      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:32.849970      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:33.850107      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:34.850383      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:35.851376      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:36.851497      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:37.852020      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:38.852165      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:39.852316      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:40.852532      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:41.852639      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:42.853546      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:43.853638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:44.853903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:45.854558      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:46.854767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:47.854875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:48.855254      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:49.855354      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:50.855475      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:51.856190      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-24247629-a6c6-4820-9bfb-6c64870bf523 off the node ip-172-31-45-197 @ 11/16/24 13:58:52.077
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-24247629-a6c6-4820-9bfb-6c64870bf523 @ 11/16/24 13:58:52.09
  I1116 13:58:52.094835 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1504" for this suite. @ 11/16/24 13:58:52.099
• [304.166 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 11/16/24 13:58:52.106
  I1116 13:58:52.106900 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename downward-api @ 11/16/24 13:58:52.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:58:52.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:58:52.131
  STEP: Creating a pod to test downward API volume plugin @ 11/16/24 13:58:52.133
  E1116 13:58:52.857194      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:53.858258      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:54.859247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:55.859376      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:58:56.157
  I1116 13:58:56.161573 18 output.go:196] Trying to get logs from node ip-172-31-72-246 pod downwardapi-volume-ace259d3-0dc1-4b8e-880f-3f15c2fa53fa container client-container: <nil>
  STEP: delete the pod @ 11/16/24 13:58:56.177
  I1116 13:58:56.197451 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1742" for this suite. @ 11/16/24 13:58:56.201
• [4.101 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 11/16/24 13:58:56.208
  I1116 13:58:56.208058 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 13:58:56.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:58:56.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:58:56.232
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-8970 @ 11/16/24 13:58:56.234
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/16/24 13:58:56.246
  STEP: creating service externalsvc in namespace services-8970 @ 11/16/24 13:58:56.246
  STEP: creating replication controller externalsvc in namespace services-8970 @ 11/16/24 13:58:56.257
  I1116 13:58:56.262607      18 runners.go:193] Created replication controller with name: externalsvc, namespace: services-8970, replica count: 2
  E1116 13:58:56.860249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:57.860360      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:58:58.860464      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:58:59.313826      18 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 11/16/24 13:58:59.318
  I1116 13:58:59.338013 18 resource.go:361] Creating new exec pod
  E1116 13:58:59.861191      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:00.861342      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:59:01.358942 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=services-8970 exec execpodtxrmp -- /bin/sh -x -c nslookup clusterip-service.services-8970.svc.cluster.local'
  I1116 13:59:01.462505 18 builder.go:146] stderr: "+ nslookup clusterip-service.services-8970.svc.cluster.local\n"
  I1116 13:59:01.462548 18 builder.go:147] stdout: "Server:\t\t10.152.183.158\nAddress:\t10.152.183.158#53\n\nclusterip-service.services-8970.svc.cluster.local\tcanonical name = externalsvc.services-8970.svc.cluster.local.\nName:\texternalsvc.services-8970.svc.cluster.local\nAddress: 10.152.183.222\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8970, will wait for the garbage collector to delete the pods @ 11/16/24 13:59:01.462
  I1116 13:59:01.530265 18 resources.go:139] Deleting ReplicationController externalsvc took: 9.346181ms
  I1116 13:59:01.631318 18 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.048286ms
  E1116 13:59:01.862002      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:02.862520      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:03.863589      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:59:04.554971 18 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I1116 13:59:04.568069 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8970" for this suite. @ 11/16/24 13:59:04.572
• [8.371 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 11/16/24 13:59:04.579
  I1116 13:59:04.579197 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir @ 11/16/24 13:59:04.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:04.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:04.6
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/16/24 13:59:04.602
  E1116 13:59:04.864422      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:05.864506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:59:06.62
  I1116 13:59:06.624425 18 output.go:196] Trying to get logs from node ip-172-31-72-246 pod pod-185fd30a-0382-4c27-9350-9f4557d6b8b9 container test-container: <nil>
  STEP: delete the pod @ 11/16/24 13:59:06.632
  I1116 13:59:06.652607 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6693" for this suite. @ 11/16/24 13:59:06.655
• [2.084 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 11/16/24 13:59:06.663
  I1116 13:59:06.663568 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename deployment @ 11/16/24 13:59:06.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:06.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:06.686
  I1116 13:59:06.688087 18 deployment.go:1196] Creating deployment "webserver-deployment"
  I1116 13:59:06.693859 18 deployment.go:1200] Waiting for observed generation 1
  E1116 13:59:06.865248      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:07.865358      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:59:08.705538 18 deployment.go:1205] Waiting for all required pods to come up
  I1116 13:59:08.709885 18 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 11/16/24 13:59:08.709
  I1116 13:59:08.710005 18 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I1116 13:59:08.717544 18 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I1116 13:59:08.728133 18 deployment.go:313] Updating deployment webserver-deployment
  I1116 13:59:08.728160 18 deployment.go:1224] Waiting for observed generation 2
  E1116 13:59:08.866175      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:09.866378      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:59:10.737749 18 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1116 13:59:10.741881 18 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1116 13:59:10.745114 18 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1116 13:59:10.756024 18 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1116 13:59:10.756066 18 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1116 13:59:10.759941 18 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1116 13:59:10.766386 18 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1116 13:59:10.766406 18 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1116 13:59:10.775398 18 deployment.go:313] Updating deployment webserver-deployment
  I1116 13:59:10.775425 18 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1116 13:59:10.785099 18 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1116 13:59:10.788410 18 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  E1116 13:59:10.867072      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:11.868202      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:59:12.798973 18 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e59159c6-50a1-468c-a84e-766b224ad8ab",
      ResourceVersion: (string) (len=5) "49303",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 15,
      AvailableReplicas: (int32) 15,
      UnavailableReplicas: (int32) 18,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1116 13:59:12.803332 18 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed60e991-7f63-4623-85c7-858c74fd57af",
      ResourceVersion: (string) (len=5) "49108",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362348,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "e59159c6-50a1-468c-a84e-766b224ad8ab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 35 39 31 35 39  63 36 2d 35 30 61 31 2d  |\"e59159c6-50a1-|
              00000120  34 36 38 63 2d 61 38 34  65 2d 37 36 36 62 32 32  |468c-a84e-766b22|
              00000130  34 61 64 38 61 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4ad8ab\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1116 13:59:12.804333 18 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I1116 13:59:12.804541 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
      ResourceVersion: (string) (len=5) "49302",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "e59159c6-50a1-468c-a84e-766b224ad8ab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 35 39 31 35 39  63 36 2d 35 30 61 31 2d  |\"e59159c6-50a1-|
              00000120  34 36 38 63 2d 61 38 34  65 2d 37 36 36 62 32 32  |468c-a84e-766b22|
              00000130  34 61 64 38 61 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4ad8ab\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 15,
      AvailableReplicas: (int32) 15,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1116 13:59:12.810678 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-2frrq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-2frrq",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40129b6f-806f-4e1d-8b7d-03c52a3a755c",
      ResourceVersion: (string) (len=5) "49298",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  36 2e 36 39 5c 22 7d 22  |2.168.216.69\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fgdz6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fgdz6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-246",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.246",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.246"
        }
      },
      PodIP: (string) (len=14) "192.168.216.69",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.216.69"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362352,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7e6ace389847fe1794953233a7a0c851c54f10cafea25c1b3b66d01972c5bd60",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fgdz6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.812796 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-46s2w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-46s2w",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "231e7355-0f52-4d93-b9b7-8d59ad4d84ed",
      ResourceVersion: (string) (len=5) "49128",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362351,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-29jxf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-29jxf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-29jxf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.814582 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-6tfff" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-6tfff",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ce7f1f7-59c4-4818-957b-250367b7f774",
      ResourceVersion: (string) (len=5) "49124",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362351,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vp8qx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vp8qx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-107",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.107"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vp8qx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.815877 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-6v2px" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-6v2px",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "013b02ba-458f-486f-8b12-20fa9945ec6e",
      ResourceVersion: (string) (len=5) "49295",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  36 2e 39 32 5c 22 7d 22  |2.168.216.92\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-26nfs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-26nfs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-246",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.246",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.246"
        }
      },
      PodIP: (string) (len=14) "192.168.216.92",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.216.92"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362352,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b13f54b4fe06825e8aa861c2fc67d4c671b1e78e5dbd14dcc126a6543d77f57a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-26nfs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.817163 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-8hx6t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-8hx6t",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b85ec89a-9aff-4c46-9b00-66f6ab1f2026",
      ResourceVersion: (string) (len=5) "49282",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  36 2e 37 39 5c 22 7d 22  |2.168.216.79\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7blhf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7blhf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-246",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.246",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.246"
        }
      },
      PodIP: (string) (len=14) "192.168.216.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.216.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362352,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://78b8e7d7889a28f810b456f4540dae562d4d48c29b64115d55645dc6db6add13",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7blhf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.820142 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-blml9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-blml9",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4fe31e48-f43b-42a0-bdd9-aede97c21d22",
      ResourceVersion: (string) (len=5) "49289",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  36 2e 38 34 5c 22 7d 22  |2.168.216.84\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kq4p9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kq4p9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-246",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.246",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.246"
        }
      },
      PodIP: (string) (len=14) "192.168.216.84",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.216.84"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362352,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d5bcd198ea516d656aa93b7c6b4571a75ac17b557a3af5ad59b9d3f9ae58b448",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kq4p9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.821504 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-bngpp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-bngpp",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e7acd58-9232-4b1b-8002-feecaf02703e",
      ResourceVersion: (string) (len=5) "48884",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 34 36 5c 22 7d 22  |2.168.82.146\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f7qph",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f7qph",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) (len=14) "192.168.82.146",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.146"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362347,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://92f9ed6cca51defde15561baaec09939fde3668d441f32238f0b70e28a8d5503",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-f7qph",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.822798 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-cdnns" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-cdnns",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "432638de-11cd-48a3-a6bc-a1fc13d73232",
      ResourceVersion: (string) (len=5) "49234",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362351,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 35 30 5c 22 7d 22  |2.168.82.150\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qhkf9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qhkf9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362351,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362351,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362351,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) (len=14) "192.168.82.150",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.150"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362351,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://953ee126d4548659dfd6d4c57f800af7e1f870cd8dbb0bb0efb2c8dbed3c4bd3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qhkf9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.825207 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-drvmg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-drvmg",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23e44426-bb60-464c-a2a2-3b7f0fbe1548",
      ResourceVersion: (string) (len=5) "48881",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 34 37 5c 22 7d 22  |2.168.82.147\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t2vmk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t2vmk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) (len=14) "192.168.82.147",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.147"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362347,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b78c572ffec26d371dd45029ab1c955af763a793aa85d0d1fdd656cfde055197",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t2vmk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.827090 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-dtq94" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-dtq94",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4aa0239c-49f5-447e-8f37-2a2a9f71230a",
      ResourceVersion: (string) (len=5) "49109",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zlg24",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zlg24",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-107",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.107"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zlg24",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.828706 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-hzk8m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hzk8m",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff1f1ead-1350-41c4-a09a-23dec5629275",
      ResourceVersion: (string) (len=5) "49115",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zqbhn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zqbhn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zqbhn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.831026 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-k789f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-k789f",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2360c64-3a0a-4c9e-81d6-5572b00ad5fa",
      ResourceVersion: (string) (len=5) "49094",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-twnnc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-twnnc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-107",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.107"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-twnnc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.832231 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-mhm8r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-mhm8r",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f61188d1-6d78-4aa3-aa07-af502b5871ff",
      ResourceVersion: (string) (len=5) "48878",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 34 33 5c 22 7d 22  |2.168.82.143\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kvj96",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kvj96",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) (len=14) "192.168.82.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362347,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ee64c6810735b32866777c197980698eecc40eb71d419af07b351d885724a818",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kvj96",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.833512 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-mxsnh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-mxsnh",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4255c770-6db9-4307-8924-1d81126be177",
      ResourceVersion: (string) (len=5) "48866",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  34 2e 39 34 5c 22 7d 22  |2.168.164.94\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vq58z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vq58z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-107",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.107"
        }
      },
      PodIP: (string) (len=14) "192.168.164.94",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.164.94"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362347,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c8c330899656cc150e72962720cfb7133cfb69a42eb18069f5d17d5b5a75b15c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vq58z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.835476 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-nhkf7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-nhkf7",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a4a9138-174d-444d-953d-b17760974f09",
      ResourceVersion: (string) (len=5) "48875",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 34 38 5c 22 7d 22  |2.168.82.148\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6rd2r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6rd2r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) (len=14) "192.168.82.148",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.148"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362347,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://47c24bad57adb657457647665c29bd2c8798636fbf41d59b81e9cc2cccff5e03",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6rd2r",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.836688 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-nzmbl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-nzmbl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8724b33-97b1-4e93-b66d-59ac7a79cfe9",
      ResourceVersion: (string) (len=5) "49292",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  36 2e 37 37 5c 22 7d 22  |2.168.216.77\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x22qt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x22qt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-246",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.246",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.246"
        }
      },
      PodIP: (string) (len=14) "192.168.216.77",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.216.77"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362351,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7ee704708726e725baaa45500b148b8ca4c8f1b91d15b73a5a93f42a6368e28b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x22qt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.837899 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-t52zf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-t52zf",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d50d6b2-1431-4484-a0ad-8580cadd6f29",
      ResourceVersion: (string) (len=5) "48872",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  34 2e 31 32 35 5c 22 7d  |2.168.164.125\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tj2kj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tj2kj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-107",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.107"
        }
      },
      PodIP: (string) (len=15) "192.168.164.125",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.164.125"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362347,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a2374b09f6fa08ddc851d4442fd451e1b0f303199ab7ada376b0030bd5caa70e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tj2kj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.839147 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-tn4jb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-tn4jb",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ca847c0-eaf0-464b-9724-6b4eab89620a",
      ResourceVersion: (string) (len=5) "48869",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  34 2e 31 32 33 5c 22 7d  |2.168.164.123\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9wftw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9wftw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-107",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.107"
        }
      },
      PodIP: (string) (len=15) "192.168.164.123",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.164.123"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362347,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d5ebc347b0c31d16d721bfc1db3dd781c719a475d1933280562013b0cb36f189",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9wftw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.840957 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-v68fl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-v68fl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b31c8eca-bdce-4068-bd84-e2437144b000",
      ResourceVersion: (string) (len=5) "48888",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  36 2e 31 32 31 5c 22 7d  |2.168.216.121\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mccxl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mccxl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-246",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362346,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.246",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.246"
        }
      },
      PodIP: (string) (len=15) "192.168.216.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.216.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362346,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362347,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://653b1e4294218a6e8a2a5839e51085a6ec1e858b38650ed66703230a1a17e31f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mccxl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.842170 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-wvmz6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-wvmz6",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ffff1602-f28f-4079-affe-91f0bae77793",
      ResourceVersion: (string) (len=5) "49301",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0ec3f09-1a1a-438f-9238-372102fdc577",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  65 63 33 66 30 39 2d 31  |d\":\"f0ec3f09-1|
              00000090  61 31 61 2d 34 33 38 66  2d 39 32 33 38 2d 33 37  |a1a-438f-9238-37|
              000000a0  32 31 30 32 66 64 63 35  37 37 5c 22 7d 22 3a 7b  |2102fdc577\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  36 2e 38 39 5c 22 7d 22  |2.168.216.89\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xn4bf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xn4bf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-246",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.246",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.246"
        }
      },
      PodIP: (string) (len=14) "192.168.216.89",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.216.89"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362352,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2626c92fc03c6a66b12f0d84797052d8d4cec08e7181b0558bb88f6396b99352",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xn4bf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.843347 18 deployment.go:67] Pod "webserver-deployment-786f49d774-4xn88" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-4xn88",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "583d7f16-2a22-4a6a-b7b4-92406161d268",
      ResourceVersion: (string) (len=5) "49023",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362348,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ed60e991-7f63-4623-85c7-858c74fd57af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 30 65 39 39 31 2d 37  |d\":\"ed60e991-7|
              00000090  66 36 33 2d 34 36 32 33  2d 38 35 63 37 2d 38 35  |f63-4623-85c7-85|
              000000a0  38 63 37 34 66 64 35 37  61 66 5c 22 7d 22 3a 7b  |8c74fd57af\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 31 36 2e 39  35 5c 22 7d 22 3a 7b 22  |68.216.95\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s7k74",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s7k74",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-246",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.246",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.246"
        }
      },
      PodIP: (string) (len=14) "192.168.216.95",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.216.95"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362348,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s7k74",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.844894 18 deployment.go:67] Pod "webserver-deployment-786f49d774-7nvht" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-7nvht",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "879b3c14-a548-4af1-bedb-bcea8f78d22c",
      ResourceVersion: (string) (len=5) "49119",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ed60e991-7f63-4623-85c7-858c74fd57af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 30 65 39 39 31 2d 37  |d\":\"ed60e991-7|
              00000090  66 36 33 2d 34 36 32 33  2d 38 35 63 37 2d 38 35  |f63-4623-85c7-85|
              000000a0  38 63 37 34 66 64 35 37  61 66 5c 22 7d 22 3a 7b  |8c74fd57af\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362351,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qshqg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qshqg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-107",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.107"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qshqg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.847651 18 deployment.go:67] Pod "webserver-deployment-786f49d774-8jsdh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-8jsdh",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0479ca0a-882d-4e2e-8766-8a56ec4610ed",
      ResourceVersion: (string) (len=5) "49069",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ed60e991-7f63-4623-85c7-858c74fd57af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 30 65 39 39 31 2d 37  |d\":\"ed60e991-7|
              00000090  66 36 33 2d 34 36 32 33  2d 38 35 63 37 2d 38 35  |f63-4623-85c7-85|
              000000a0  38 63 37 34 66 64 35 37  61 66 5c 22 7d 22 3a 7b  |8c74fd57af\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2kn7w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2kn7w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-107",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.107"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2kn7w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.848853 18 deployment.go:67] Pod "webserver-deployment-786f49d774-cn9qj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-cn9qj",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "edb0bc30-b9da-4f53-9ce5-13b230b555b4",
      ResourceVersion: (string) (len=5) "49304",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ed60e991-7f63-4623-85c7-858c74fd57af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 30 65 39 39 31 2d 37  |d\":\"ed60e991-7|
              00000090  66 36 33 2d 34 36 32 33  2d 38 35 63 37 2d 38 35  |f63-4623-85c7-85|
              000000a0  38 63 37 34 66 64 35 37  61 66 5c 22 7d 22 3a 7b  |8c74fd57af\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 31 36 2e 38  31 5c 22 7d 22 3a 7b 22  |68.216.81\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dpft8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dpft8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-246",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.246",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.246"
        }
      },
      PodIP: (string) (len=14) "192.168.216.81",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.216.81"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dpft8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.851373 18 deployment.go:67] Pod "webserver-deployment-786f49d774-f9w8r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-f9w8r",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be3c0f15-530a-4bec-ae68-576428ba1bde",
      ResourceVersion: (string) (len=5) "49002",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362348,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ed60e991-7f63-4623-85c7-858c74fd57af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 30 65 39 39 31 2d 37  |d\":\"ed60e991-7|
              00000090  66 36 33 2d 34 36 32 33  2d 38 35 63 37 2d 38 35  |f63-4623-85c7-85|
              000000a0  38 63 37 34 66 64 35 37  61 66 5c 22 7d 22 3a 7b  |8c74fd57af\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 36 34 2e 31  31 38 5c 22 7d 22 3a 7b  |68.164.118\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l8j7d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l8j7d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-107",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.107"
        }
      },
      PodIP: (string) (len=15) "192.168.164.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.164.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362348,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l8j7d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.852627 18 deployment.go:67] Pod "webserver-deployment-786f49d774-gmzqq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-gmzqq",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "51981a90-6729-482e-a3a2-ab879eac939b",
      ResourceVersion: (string) (len=5) "49130",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ed60e991-7f63-4623-85c7-858c74fd57af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 30 65 39 39 31 2d 37  |d\":\"ed60e991-7|
              00000090  66 36 33 2d 34 36 32 33  2d 38 35 63 37 2d 38 35  |f63-4623-85c7-85|
              000000a0  38 63 37 34 66 64 35 37  61 66 5c 22 7d 22 3a 7b  |8c74fd57af\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362351,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7svbf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7svbf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7svbf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.853854 18 deployment.go:67] Pod "webserver-deployment-786f49d774-h7pmp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-h7pmp",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c742222-ddd2-4ae3-9cfa-fc9a60e9195d",
      ResourceVersion: (string) (len=5) "49242",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ed60e991-7f63-4623-85c7-858c74fd57af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 30 65 39 39 31 2d 37  |d\":\"ed60e991-7|
              00000090  66 36 33 2d 34 36 32 33  2d 38 35 63 37 2d 38 35  |f63-4623-85c7-85|
              000000a0  38 63 37 34 66 64 35 37  61 66 5c 22 7d 22 3a 7b  |8c74fd57af\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362351,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 32 2e 31 35  35 5c 22 7d 22 3a 7b 22  |68.82.155\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zkbft",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zkbft",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362351,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) (len=14) "192.168.82.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zkbft",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.855086 18 deployment.go:67] Pod "webserver-deployment-786f49d774-qwg5j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-qwg5j",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "105f3456-db46-49ba-924f-96cef986431a",
      ResourceVersion: (string) (len=5) "49013",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362348,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ed60e991-7f63-4623-85c7-858c74fd57af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 30 65 39 39 31 2d 37  |d\":\"ed60e991-7|
              00000090  66 36 33 2d 34 36 32 33  2d 38 35 63 37 2d 38 35  |f63-4623-85c7-85|
              000000a0  38 63 37 34 66 64 35 37  61 66 5c 22 7d 22 3a 7b  |8c74fd57af\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 32 2e 31 34  39 5c 22 7d 22 3a 7b 22  |68.82.149\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l5hrn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l5hrn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) (len=14) "192.168.82.149",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.149"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362348,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l5hrn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.856337 18 deployment.go:67] Pod "webserver-deployment-786f49d774-sqnc7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-sqnc7",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9800076f-e3d0-4548-87a3-6af5fbf29574",
      ResourceVersion: (string) (len=5) "49010",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362348,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ed60e991-7f63-4623-85c7-858c74fd57af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 30 65 39 39 31 2d 37  |d\":\"ed60e991-7|
              00000090  66 36 33 2d 34 36 32 33  2d 38 35 63 37 2d 38 35  |f63-4623-85c7-85|
              000000a0  38 63 37 34 66 64 35 37  61 66 5c 22 7d 22 3a 7b  |8c74fd57af\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 32 2e 31 35  31 5c 22 7d 22 3a 7b 22  |68.82.151\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vbnm7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vbnm7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) (len=14) "192.168.82.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362348,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vbnm7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.857571 18 deployment.go:67] Pod "webserver-deployment-786f49d774-vdlxs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-vdlxs",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d5f5ce5-2efd-414a-9e50-555dee0bb6ed",
      ResourceVersion: (string) (len=5) "49120",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ed60e991-7f63-4623-85c7-858c74fd57af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 30 65 39 39 31 2d 37  |d\":\"ed60e991-7|
              00000090  66 36 33 2d 34 36 32 33  2d 38 35 63 37 2d 38 35  |f63-4623-85c7-85|
              000000a0  38 63 37 34 66 64 35 37  61 66 5c 22 7d 22 3a 7b  |8c74fd57af\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362351,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m2txr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m2txr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m2txr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.858761 18 deployment.go:67] Pod "webserver-deployment-786f49d774-w4d6q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-w4d6q",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e0e786e-0dad-4103-b195-55a44b7ed789",
      ResourceVersion: (string) (len=5) "49114",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ed60e991-7f63-4623-85c7-858c74fd57af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 30 65 39 39 31 2d 37  |d\":\"ed60e991-7|
              00000090  66 36 33 2d 34 36 32 33  2d 38 35 63 37 2d 38 35  |f63-4623-85c7-85|
              000000a0  38 63 37 34 66 64 35 37  61 66 5c 22 7d 22 3a 7b  |8c74fd57af\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fmb66",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fmb66",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-107",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.107"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fmb66",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.860988 18 deployment.go:67] Pod "webserver-deployment-786f49d774-xpz9l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xpz9l",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e949076b-9f02-46ca-9f40-0201882392bc",
      ResourceVersion: (string) (len=5) "49288",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ed60e991-7f63-4623-85c7-858c74fd57af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 30 65 39 39 31 2d 37  |d\":\"ed60e991-7|
              00000090  66 36 33 2d 34 36 32 33  2d 38 35 63 37 2d 38 35  |f63-4623-85c7-85|
              000000a0  38 63 37 34 66 64 35 37  61 66 5c 22 7d 22 3a 7b  |8c74fd57af\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 31 36 2e 31  32 32 5c 22 7d 22 3a 7b  |68.216.122\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vxhtr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vxhtr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-246",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362350,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.246",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.246"
        }
      },
      PodIP: (string) (len=15) "192.168.216.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.216.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362350,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vxhtr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.862233 18 deployment.go:67] Pod "webserver-deployment-786f49d774-znrjf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-znrjf",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4484",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "29ac695e-f89a-403c-ab22-faeb6408c90a",
      ResourceVersion: (string) (len=5) "48972",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362348,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ed60e991-7f63-4623-85c7-858c74fd57af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 30 65 39 39 31 2d 37  |d\":\"ed60e991-7|
              00000090  66 36 33 2d 34 36 32 33  2d 38 35 63 37 2d 38 35  |f63-4623-85c7-85|
              000000a0  38 63 37 34 66 64 35 37  61 66 5c 22 7d 22 3a 7b  |8c74fd57af\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 31 36 2e 39  33 5c 22 7d 22 3a 7b 22  |68.216.93\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5xjmg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5xjmg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-246",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.246",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.246"
        }
      },
      PodIP: (string) (len=14) "192.168.216.93",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.216.93"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362348,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5xjmg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:12.865299 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1116 13:59:12.868441      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "deployment-4484" for this suite. @ 11/16/24 13:59:12.869
• [6.218 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 11/16/24 13:59:12.882
  I1116 13:59:12.882312 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename replication-controller @ 11/16/24 13:59:12.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:12.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:12.905
  STEP: Creating replication controller my-hostname-basic-83e938dc-898d-48b2-be7f-f2988856a00b @ 11/16/24 13:59:12.907
  I1116 13:59:12.919000 18 resource.go:87] Pod name my-hostname-basic-83e938dc-898d-48b2-be7f-f2988856a00b: Found 0 pods out of 1
  E1116 13:59:13.868735      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:14.868848      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:15.869594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:16.869710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:17.869847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:59:17.924510 18 resource.go:87] Pod name my-hostname-basic-83e938dc-898d-48b2-be7f-f2988856a00b: Found 1 pods out of 1
  I1116 13:59:17.924541 18 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-83e938dc-898d-48b2-be7f-f2988856a00b" are running
  I1116 13:59:17.928269 18 rc.go:523] Pod "my-hostname-basic-83e938dc-898d-48b2-be7f-f2988856a00b-lskl4" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-16 13:59:13 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-16 13:59:12 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-16 13:59:13 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-16 13:59:13 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-16 13:59:12 +0000 UTC Reason: Message:}])
  I1116 13:59:17.928291 18 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/16/24 13:59:17.928
  I1116 13:59:17.944433 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-213" for this suite. @ 11/16/24 13:59:17.951
• [5.084 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 11/16/24 13:59:17.965
  I1116 13:59:17.965972 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubectl @ 11/16/24 13:59:17.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:18.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:18.005
  STEP: creating Agnhost RC @ 11/16/24 13:59:18.008
  I1116 13:59:18.008310 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-4826 create -f -'
  I1116 13:59:18.306665 18 builder.go:146] stderr: ""
  I1116 13:59:18.306811 18 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/16/24 13:59:18.306
  E1116 13:59:18.870329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:59:19.311877 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1116 13:59:19.311981 18 framework.go:733] Found 0 / 1
  E1116 13:59:19.870399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:59:20.313361 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1116 13:59:20.313392 18 framework.go:733] Found 1 / 1
  I1116 13:59:20.313404 18 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 11/16/24 13:59:20.313
  I1116 13:59:20.316932 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1116 13:59:20.316953 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1116 13:59:20.316999 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3491498336 --namespace=kubectl-4826 patch pod agnhost-primary-9hndl -p {"metadata":{"annotations":{"x":"y"}}}'
  I1116 13:59:20.373362 18 builder.go:146] stderr: ""
  I1116 13:59:20.373391 18 builder.go:147] stdout: "pod/agnhost-primary-9hndl patched\n"
  STEP: checking annotations @ 11/16/24 13:59:20.373
  I1116 13:59:20.377285 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1116 13:59:20.377307 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1116 13:59:20.377460 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4826" for this suite. @ 11/16/24 13:59:20.382
• [2.424 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 11/16/24 13:59:20.39
  I1116 13:59:20.390430 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:59:20.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:20.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:20.419
  STEP: Creating configMap with name projected-configmap-test-volume-f18983ca-d95f-4d1f-848f-b19cc938a6ab @ 11/16/24 13:59:20.421
  STEP: Creating a pod to test consume configMaps @ 11/16/24 13:59:20.425
  E1116 13:59:20.871881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:21.872112      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:22.872708      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:23.873193      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:59:24.448
  I1116 13:59:24.452895 18 output.go:196] Trying to get logs from node ip-172-31-72-246 pod pod-projected-configmaps-d104a323-a30f-43ff-985f-731ba76f9664 container agnhost-container: <nil>
  STEP: delete the pod @ 11/16/24 13:59:24.46
  I1116 13:59:24.478749 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2501" for this suite. @ 11/16/24 13:59:24.482
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 11/16/24 13:59:24.489
  I1116 13:59:24.489458 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename services @ 11/16/24 13:59:24.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:24.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:24.512
  STEP: creating an Endpoint @ 11/16/24 13:59:24.519
  STEP: waiting for available Endpoint @ 11/16/24 13:59:24.524
  STEP: listing all Endpoints @ 11/16/24 13:59:24.525
  STEP: updating the Endpoint @ 11/16/24 13:59:24.529
  STEP: fetching the Endpoint @ 11/16/24 13:59:24.535
  STEP: patching the Endpoint @ 11/16/24 13:59:24.538
  STEP: fetching the Endpoint @ 11/16/24 13:59:24.546
  STEP: deleting the Endpoint by Collection @ 11/16/24 13:59:24.548
  STEP: waiting for Endpoint deletion @ 11/16/24 13:59:24.557
  STEP: fetching the Endpoint @ 11/16/24 13:59:24.558
  I1116 13:59:24.563103 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7852" for this suite. @ 11/16/24 13:59:24.567
• [0.085 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 11/16/24 13:59:24.574
  I1116 13:59:24.574862 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename deployment @ 11/16/24 13:59:24.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:24.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:24.596
  I1116 13:59:24.598426 18 deployment.go:1645] Creating simple deployment test-new-deployment
  I1116 13:59:24.610996 18 deployment.go:222] new replicaset for deployment "test-new-deployment" is yet to be created
  E1116 13:59:24.873471      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:25.873557      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 11/16/24 13:59:26.626
  STEP: updating a scale subresource @ 11/16/24 13:59:26.63
  STEP: verifying the deployment Spec.Replicas was modified @ 11/16/24 13:59:26.636
  STEP: Patch a scale subresource @ 11/16/24 13:59:26.639
  I1116 13:59:26.654741 18 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8940",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b81241d-587f-4a5c-82d2-efad1f04a0c4",
      ResourceVersion: (string) (len=5) "49868",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362364,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362364,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362364,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1116 13:59:26.662009 18 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8940",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "15969f53-261c-4afb-be0d-a1d3a8393e63",
      ResourceVersion: (string) (len=5) "49867",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362364,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "7b81241d-587f-4a5c-82d2-efad1f04a0c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 62 38 31 32 34  31 64 2d 35 38 37 66 2d  |\"7b81241d-587f-|
              00000120  34 61 35 63 2d 38 32 64  32 2d 65 66 61 64 31 66  |4a5c-82d2-efad1f|
              00000130  30 34 61 30 63 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |04a0c4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1116 13:59:26.667423 18 deployment.go:67] Pod "test-new-deployment-64bcfc6446-jvz24" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-jvz24",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8940",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f863f17c-15fe-4367-a6fc-af392b3d2dba",
      ResourceVersion: (string) (len=5) "49871",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "15969f53-261c-4afb-be0d-a1d3a8393e63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  39 36 39 66 35 33 2d 32  |d\":\"15969f53-2|
              00000090  36 31 63 2d 34 61 66 62  2d 62 65 30 64 2d 61 31  |61c-4afb-be0d-a1|
              000000a0  64 33 61 38 33 39 33 65  36 33 5c 22 7d 22 3a 7b  |d3a8393e63\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mqmbt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mqmbt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-246",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:26.668219 18 deployment.go:67] Pod "test-new-deployment-64bcfc6446-xpqbj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-xpqbj",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8940",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2fabf73f-d66d-4024-a1ff-05c0d5a761e6",
      ResourceVersion: (string) (len=5) "49859",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362364,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "15969f53-261c-4afb-be0d-a1d3a8393e63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362364,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  39 36 39 66 35 33 2d 32  |d\":\"15969f53-2|
              00000090  36 31 63 2d 34 61 66 62  2d 62 65 30 64 2d 61 31  |61c-4afb-be0d-a1|
              000000a0  64 33 61 38 33 39 33 65  36 33 5c 22 7d 22 3a 7b  |d3a8393e63\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 35 39 5c 22 7d 22  |2.168.82.159\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dzhfr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dzhfr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-197",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362364,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867362364,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.197",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.197"
        }
      },
      PodIP: (string) (len=14) "192.168.82.159",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.159"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867362364,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867362365,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d2cd67af74a4522d6fc4890010e5ee3642312b40f8613be56cd3d96a2b629427",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dzhfr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1116 13:59:26.670102 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8940" for this suite. @ 11/16/24 13:59:26.673
• [2.113 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 11/16/24 13:59:26.687
  I1116 13:59:26.687920 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/16/24 13:59:26.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:26.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:26.765
  I1116 13:59:26.769583 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7465" for this suite. @ 11/16/24 13:59:26.775
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 11/16/24 13:59:26.783
  I1116 13:59:26.783084 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:59:26.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:26.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:26.803
  STEP: Creating projection with secret that has name projected-secret-test-map-b1e7e37d-2589-4c0a-8fa5-c0edcb5620b5 @ 11/16/24 13:59:26.805
  STEP: Creating a pod to test consume secrets @ 11/16/24 13:59:26.811
  E1116 13:59:26.874139      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:27.874206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:28.874879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:29.874987      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:59:30.837
  I1116 13:59:30.843417 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-projected-secrets-426cce78-7a9c-44bc-9b84-c10650bf4377 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 13:59:30.867
  E1116 13:59:30.875386      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:59:30.886869 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1644" for this suite. @ 11/16/24 13:59:30.89
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 11/16/24 13:59:30.898
  I1116 13:59:30.898236 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename replication-controller @ 11/16/24 13:59:30.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:30.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:30.923
  STEP: Given a ReplicationController is created @ 11/16/24 13:59:30.927
  STEP: When the matched label of one of its pods change @ 11/16/24 13:59:30.933
  I1116 13:59:30.936859 18 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E1116 13:59:31.876252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:32.876419      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:33.876485      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:34.876580      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:35.877479      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:59:35.942085 18 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/16/24 13:59:35.954
  E1116 13:59:36.877552      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:59:36.962896 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4331" for this suite. @ 11/16/24 13:59:36.966
• [6.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 11/16/24 13:59:36.974
  I1116 13:59:36.974985 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename projected @ 11/16/24 13:59:36.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:36.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:36.994
  STEP: Creating configMap with name configmap-projected-all-test-volume-2d2553c2-2c94-4aa5-8b3b-fabed97248a4 @ 11/16/24 13:59:36.996
  STEP: Creating secret with name secret-projected-all-test-volume-bbfe6256-a2b3-4103-83f0-388c9be4b5f6 @ 11/16/24 13:59:37
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 11/16/24 13:59:37.006
  E1116 13:59:37.877673      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:38.877887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:39.877980      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:40.878644      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:59:41.034
  I1116 13:59:41.038816 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod projected-volume-1c9ef825-5f75-4f30-8a8c-d0e75faf8ab4 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 13:59:41.047
  I1116 13:59:41.065146 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9085" for this suite. @ 11/16/24 13:59:41.068
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 11/16/24 13:59:41.076
  I1116 13:59:41.076939 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename webhook @ 11/16/24 13:59:41.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:41.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:41.098
  STEP: Setting up server cert @ 11/16/24 13:59:41.125
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/16/24 13:59:41.326
  STEP: Deploying the webhook pod @ 11/16/24 13:59:41.336
  STEP: Wait for the deployment to be ready @ 11/16/24 13:59:41.347
  I1116 13:59:41.357209 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1116 13:59:41.878764      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:42.878878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/16/24 13:59:43.37
  STEP: Verifying the service has paired with the endpoint @ 11/16/24 13:59:43.382
  E1116 13:59:43.879738      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:59:44.382209 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 11/16/24 13:59:44.391
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/16/24 13:59:44.405
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 11/16/24 13:59:44.411
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/16/24 13:59:44.422
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 11/16/24 13:59:44.434
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/16/24 13:59:44.441
  I1116 13:59:44.495957 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5574" for this suite. @ 11/16/24 13:59:44.499
  STEP: Destroying namespace "webhook-markers-9972" for this suite. @ 11/16/24 13:59:44.508
• [3.439 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 11/16/24 13:59:44.516
  I1116 13:59:44.516059 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename gc @ 11/16/24 13:59:44.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:44.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:44.535
  I1116 13:59:44.568361 18 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"28e36de9-63d6-4724-855b-7192528410b1", Controller:(*bool)(0xc003b53cd6), BlockOwnerDeletion:(*bool)(0xc003b53cd7)}}
  I1116 13:59:44.573688 18 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"b683ab9d-5416-4c18-943b-f68083cb761d", Controller:(*bool)(0xc001902cc6), BlockOwnerDeletion:(*bool)(0xc001902cc7)}}
  I1116 13:59:44.584435 18 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"db9bed49-a550-45bd-bf3b-3667ab8fb98f", Controller:(*bool)(0xc001902f06), BlockOwnerDeletion:(*bool)(0xc001902f07)}}
  E1116 13:59:44.879891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:45.879977      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:46.880202      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:47.880438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:48.881263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 13:59:49.600239 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5266" for this suite. @ 11/16/24 13:59:49.604
• [5.097 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 11/16/24 13:59:49.613
  I1116 13:59:49.613221 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename emptydir @ 11/16/24 13:59:49.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:49.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:49.637
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/16/24 13:59:49.639
  E1116 13:59:49.881685      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:50.882610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:51.883480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:52.883717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:59:53.662
  I1116 13:59:53.667416 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-3fe07584-b611-4d27-9a53-73bb3fa232c1 container test-container: <nil>
  STEP: delete the pod @ 11/16/24 13:59:53.675
  I1116 13:59:53.694232 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4483" for this suite. @ 11/16/24 13:59:53.699
• [4.094 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 11/16/24 13:59:53.707
  I1116 13:59:53.707255 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename secrets @ 11/16/24 13:59:53.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:53.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:53.73
  STEP: Creating secret with name secret-test-51aed5af-b9c9-4a9e-8ed6-4763b23d8bcd @ 11/16/24 13:59:53.731
  STEP: Creating a pod to test consume secrets @ 11/16/24 13:59:53.735
  E1116 13:59:53.883821      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:54.883906      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:55.884098      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:56.884203      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 13:59:57.758
  I1116 13:59:57.763169 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod pod-secrets-99c4b9e8-fa36-4afa-a853-074da939ea9a container secret-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 13:59:57.77
  I1116 13:59:57.794425 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7623" for this suite. @ 11/16/24 13:59:57.798
• [4.098 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 11/16/24 13:59:57.805
  I1116 13:59:57.805835 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename security-context-test @ 11/16/24 13:59:57.806
  E1116 13:59:57.884556      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 13:59:57.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 13:59:57.901
  E1116 13:59:58.885195      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 13:59:59.886260      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 14:00:00.886472      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 14:00:01.886587      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 14:00:01.935599 18 security_context.go:538] Got logs for pod "busybox-privileged-false-08257728-56e8-433d-b271-455331d0fcca": "ip: RTNETLINK answers: Operation not permitted\n"
  I1116 14:00:01.935728 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4379" for this suite. @ 11/16/24 14:00:01.94
• [4.143 seconds]
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 11/16/24 14:00:01.948
  I1116 14:00:01.948794 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename secrets @ 11/16/24 14:00:01.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 14:00:01.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 14:00:01.971
  STEP: Creating projection with secret that has name secret-emptykey-test-3586c9ff-17dc-4b17-9b91-77e979ce7a43 @ 11/16/24 14:00:01.972
  I1116 14:00:01.974081 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3873" for this suite. @ 11/16/24 14:00:01.977
• [0.036 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 11/16/24 14:00:01.984
  I1116 14:00:01.984725 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename pods @ 11/16/24 14:00:01.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 14:00:02.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 14:00:02.006
  I1116 14:00:02.008090 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: creating the pod @ 11/16/24 14:00:02.008
  STEP: submitting the pod to kubernetes @ 11/16/24 14:00:02.008
  E1116 14:00:02.886629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 14:00:03.887260      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 14:00:04.092590 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-654" for this suite. @ 11/16/24 14:00:04.097
• [2.120 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 11/16/24 14:00:04.104
  I1116 14:00:04.104394 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename secrets @ 11/16/24 14:00:04.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 14:00:04.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 14:00:04.128
  STEP: Creating secret with name secret-test-34f14ce8-382c-4757-b5a8-735af3f24523 @ 11/16/24 14:00:04.13
  STEP: Creating a pod to test consume secrets @ 11/16/24 14:00:04.135
  E1116 14:00:04.887358      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 14:00:05.887540      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 14:00:06.887824      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 14:00:07.887923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 14:00:08.161
  I1116 14:00:08.165937 18 output.go:196] Trying to get logs from node ip-172-31-72-246 pod pod-secrets-03683f54-a8a7-4e68-94fe-52a6c29ac1f7 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/16/24 14:00:08.173
  I1116 14:00:08.195170 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2810" for this suite. @ 11/16/24 14:00:08.199
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 11/16/24 14:00:08.208
  I1116 14:00:08.208778 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/16/24 14:00:08.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 14:00:08.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 14:00:08.231
  STEP: create the container to handle the HTTPGet hook request. @ 11/16/24 14:00:08.236
  E1116 14:00:08.888063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 14:00:09.888276      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 11/16/24 14:00:10.262
  E1116 14:00:10.889067      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 14:00:11.889292      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 11/16/24 14:00:12.282
  E1116 14:00:12.889419      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 14:00:13.889600      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 11/16/24 14:00:14.301
  I1116 14:00:14.322483 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6318" for this suite. @ 11/16/24 14:00:14.326
• [6.127 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 11/16/24 14:00:14.335
  I1116 14:00:14.335716 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename var-expansion @ 11/16/24 14:00:14.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 14:00:14.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 14:00:14.356
  STEP: Creating a pod to test substitution in container's command @ 11/16/24 14:00:14.358
  E1116 14:00:14.890068      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 14:00:15.890469      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 14:00:16.890602      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 14:00:17.890807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/16/24 14:00:18.383
  I1116 14:00:18.387075 18 output.go:196] Trying to get logs from node ip-172-31-45-197 pod var-expansion-898b4b2f-3912-4a51-a9db-b5d166d85427 container dapi-container: <nil>
  STEP: delete the pod @ 11/16/24 14:00:18.395
  I1116 14:00:18.416374 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5745" for this suite. @ 11/16/24 14:00:18.42
• [4.095 seconds]
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 11/16/24 14:00:18.43
  I1116 14:00:18.430389 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename disruption @ 11/16/24 14:00:18.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 14:00:18.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 14:00:18.452
  STEP: Waiting for the pdb to be processed @ 11/16/24 14:00:18.459
  E1116 14:00:18.891827      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 14:00:19.892030      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 11/16/24 14:00:20.489
  I1116 14:00:20.492921 18 disruption.go:691] running pods: 0 < 3
  E1116 14:00:20.892566      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 14:00:21.892669      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 14:00:22.499360 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5517" for this suite. @ 11/16/24 14:00:22.503
• [4.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 11/16/24 14:00:22.511
  I1116 14:00:22.511145 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename kubelet-test @ 11/16/24 14:00:22.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 14:00:22.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 14:00:22.535
  E1116 14:00:22.892742      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1116 14:00:23.892893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1116 14:00:24.568353 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1810" for this suite. @ 11/16/24 14:00:24.572
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 11/16/24 14:00:24.58
  I1116 14:00:24.580570 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3491498336
  STEP: Building a namespace api object, basename ingress @ 11/16/24 14:00:24.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/16/24 14:00:24.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/16/24 14:00:24.602
  STEP: getting /apis @ 11/16/24 14:00:24.603
  STEP: getting /apis/networking.k8s.io @ 11/16/24 14:00:24.606
  STEP: getting /apis/networking.k8s.iov1 @ 11/16/24 14:00:24.606
  STEP: creating @ 11/16/24 14:00:24.607
  STEP: getting @ 11/16/24 14:00:24.625
  STEP: listing @ 11/16/24 14:00:24.628
  STEP: watching @ 11/16/24 14:00:24.632
  I1116 14:00:24.633026 18 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 11/16/24 14:00:24.633
  STEP: cluster-wide watching @ 11/16/24 14:00:24.637
  I1116 14:00:24.637483 18 ingress.go:198] starting watch
  STEP: patching @ 11/16/24 14:00:24.638
  STEP: updating @ 11/16/24 14:00:24.643
  I1116 14:00:24.657829 18 ingress.go:221] waiting for watch events with expected annotations
  I1116 14:00:24.657858 18 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 11/16/24 14:00:24.657
  STEP: updating /status @ 11/16/24 14:00:24.668
  STEP: get /status @ 11/16/24 14:00:24.678
  STEP: deleting @ 11/16/24 14:00:24.685
  STEP: deleting a collection @ 11/16/24 14:00:24.701
  I1116 14:00:24.722089 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-8792" for this suite. @ 11/16/24 14:00:24.725
• [0.152 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1116 14:00:24.732300 18 suites.go:34] Running AfterSuite actions on node 1
  I1116 14:00:24.732336 18 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.030 seconds]
------------------------------

Ran 404 of 6605 Specs in 6453.893 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6201 Skipped
PASS

Ginkgo ran 1 suite in 1h47m34.723455319s
Test Suite Passed
