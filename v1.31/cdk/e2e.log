  I1005 12:24:26.286873      19 e2e.go:109] Starting e2e run "49728754-3de7-461b-a75e-2caa8ae866e3" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1728131065 - will randomize all specs

Will run 404 of 6603 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1005 12:24:26.580660 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 12:24:26.581734 19 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1005 12:24:26.617754 19 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1005 12:24:26.622858 19 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I1005 12:24:26.623133 19 e2e.go:245] e2e test version: v1.31.1
  I1005 12:24:26.624385 19 e2e.go:254] kube-apiserver version: v1.31.1
  I1005 12:24:26.624615 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 12:24:26.630024 19 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.049 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 10/05/24 12:24:26.84
  I1005 12:24:26.840330 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 12:24:26.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:24:26.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:24:26.868
  STEP: validating api versions @ 10/05/24 12:24:26.87
  I1005 12:24:26.870832 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1324 api-versions'
  I1005 12:24:26.936042 19 builder.go:146] stderr: ""
  I1005 12:24:26.936082 19 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I1005 12:24:26.936190 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1324" for this suite. @ 10/05/24 12:24:26.941
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 10/05/24 12:24:26.95
  I1005 12:24:26.950817 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename server-version @ 10/05/24 12:24:26.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:24:26.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:24:26.973
  STEP: Request ServerVersion @ 10/05/24 12:24:26.976
  STEP: Confirm major version @ 10/05/24 12:24:26.977
  I1005 12:24:26.977167 19 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 10/05/24 12:24:26.977
  I1005 12:24:26.977198 19 server_version.go:58] cleanMinorVersion: 31
  I1005 12:24:26.977253 19 server_version.go:62] Minor version: 31
  I1005 12:24:26.977405 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-6608" for this suite. @ 10/05/24 12:24:26.981
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 10/05/24 12:24:26.991
  I1005 12:24:26.991539 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename sched-preemption @ 10/05/24 12:24:26.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:24:27.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:24:27.016
  I1005 12:24:27.033444 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1005 12:25:27.039203 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/05/24 12:25:27.042
  I1005 12:25:27.065913 19 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I1005 12:25:27.074428 19 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I1005 12:25:27.092037 19 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I1005 12:25:27.099793 19 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I1005 12:25:27.126792 19 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I1005 12:25:27.132803 19 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/05/24 12:25:27.132
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 10/05/24 12:25:29.17
  I1005 12:25:33.291824 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1827" for this suite. @ 10/05/24 12:25:33.295
• [66.310 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 10/05/24 12:25:33.302
  I1005 12:25:33.302135 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename secrets @ 10/05/24 12:25:33.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:25:33.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:25:33.326
  STEP: Creating secret with name secret-test-c9e71713-b907-42ec-8f8d-5bd24ecb85a9 @ 10/05/24 12:25:33.329
  STEP: Creating a pod to test consume secrets @ 10/05/24 12:25:33.333
  STEP: Saw pod success @ 10/05/24 12:25:39.365
  I1005 12:25:39.369167 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod pod-secrets-d69f8ca5-f1b7-4489-b8e2-8a0f4ce9d402 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/05/24 12:25:39.385
  I1005 12:25:39.403520 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2547" for this suite. @ 10/05/24 12:25:39.407
• [6.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 10/05/24 12:25:39.415
  I1005 12:25:39.415828 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename csistoragecapacity @ 10/05/24 12:25:39.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:25:39.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:25:39.437
  STEP: getting /apis @ 10/05/24 12:25:39.44
  STEP: getting /apis/storage.k8s.io @ 10/05/24 12:25:39.443
  STEP: getting /apis/storage.k8s.io/v1 @ 10/05/24 12:25:39.444
  STEP: creating @ 10/05/24 12:25:39.445
  STEP: watching @ 10/05/24 12:25:39.463
  I1005 12:25:39.463284 19 csistoragecapacity.go:143] starting watch
  STEP: getting @ 10/05/24 12:25:39.47
  STEP: listing in namespace @ 10/05/24 12:25:39.474
  STEP: listing across namespaces @ 10/05/24 12:25:39.478
  STEP: patching @ 10/05/24 12:25:39.481
  STEP: updating @ 10/05/24 12:25:39.487
  I1005 12:25:39.492337 19 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1005 12:25:39.492410 19 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 10/05/24 12:25:39.492
  STEP: deleting a collection @ 10/05/24 12:25:39.505
  I1005 12:25:39.534656 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-3036" for this suite. @ 10/05/24 12:25:39.544
• [0.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 10/05/24 12:25:39.552
  I1005 12:25:39.552661 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename job @ 10/05/24 12:25:39.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:25:39.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:25:39.577
  STEP: Creating a job @ 10/05/24 12:25:39.58
  STEP: Ensuring active pods == parallelism @ 10/05/24 12:25:39.589
  STEP: delete a job @ 10/05/24 12:25:41.595
  STEP: deleting Job.batch foo in namespace job-755, will wait for the garbage collector to delete the pods @ 10/05/24 12:25:41.595
  I1005 12:25:41.660092 19 resources.go:139] Deleting Job.batch foo took: 10.059137ms
  I1005 12:25:41.761095 19 resources.go:163] Terminating Job.batch foo pods took: 100.998532ms
  STEP: Ensuring job was deleted @ 10/05/24 12:25:42.861
  I1005 12:25:42.867523 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-755" for this suite. @ 10/05/24 12:25:42.871
• [3.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 10/05/24 12:25:42.88
  I1005 12:25:42.880410 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename resourcequota @ 10/05/24 12:25:42.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:25:42.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:25:42.907
  STEP: Creating resourceQuota "e2e-rq-status-jwfz4" @ 10/05/24 12:25:42.914
  I1005 12:25:42.923733 19 resource_quota.go:1102] Resource quota "e2e-rq-status-jwfz4" reports spec: hard cpu limit of 500m
  I1005 12:25:42.923757 19 resource_quota.go:1104] Resource quota "e2e-rq-status-jwfz4" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-jwfz4" /status @ 10/05/24 12:25:42.923
  STEP: Confirm /status for "e2e-rq-status-jwfz4" resourceQuota via watch @ 10/05/24 12:25:42.958
  I1005 12:25:42.959584 19 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-jwfz4" in namespace "resourcequota-3699" with hard status: v1.ResourceList(nil)
  I1005 12:25:42.959663 19 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-jwfz4" in namespace "resourcequota-3699" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1005 12:25:42.959676 19 resource_quota.go:1141] ResourceQuota "e2e-rq-status-jwfz4" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 10/05/24 12:25:42.963
  I1005 12:25:42.969157 19 resource_quota.go:1152] Resource quota "e2e-rq-status-jwfz4" reports spec: hard cpu limit of 1
  I1005 12:25:42.969184 19 resource_quota.go:1153] Resource quota "e2e-rq-status-jwfz4" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-jwfz4" /status @ 10/05/24 12:25:42.969
  STEP: Confirm /status for "e2e-rq-status-jwfz4" resourceQuota via watch @ 10/05/24 12:25:42.977
  I1005 12:25:42.978584 19 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-jwfz4" in namespace "resourcequota-3699" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1005 12:25:42.978624 19 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-jwfz4" in namespace "resourcequota-3699" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1005 12:25:42.978636 19 resource_quota.go:1185] ResourceQuota "e2e-rq-status-jwfz4" /status was patched
  STEP: Get "e2e-rq-status-jwfz4" /status @ 10/05/24 12:25:42.978
  I1005 12:25:42.982389 19 resource_quota.go:1196] Resourcequota "e2e-rq-status-jwfz4" reports status: hard cpu of 1
  I1005 12:25:42.982410 19 resource_quota.go:1198] Resourcequota "e2e-rq-status-jwfz4" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-jwfz4" /status before checking Spec is unchanged @ 10/05/24 12:25:42.986
  I1005 12:25:42.992592 19 resource_quota.go:1218] Resourcequota "e2e-rq-status-jwfz4" reports status: hard cpu of 2
  I1005 12:25:42.992619 19 resource_quota.go:1220] Resourcequota "e2e-rq-status-jwfz4" reports status: hard memory of 2Gi
  I1005 12:25:42.993839 19 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-jwfz4" in namespace "resourcequota-3699" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1005 12:25:42.997552 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000921d28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000921d58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000921da0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:25:47.998691 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137d380), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137d3c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137d3f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:25:52.999360 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000921f20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000921f50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0000), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:25:57.999527 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137d5a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137d5d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137d638), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:26:03.000876 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa01f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa02b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:26:07.999438 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa04e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:26:12.998577 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137d800), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137d848), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137d890), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:26:18.000368 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa06d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0738), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0768), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:26:22.999014 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137da28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137da70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137dad0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:26:28.000531 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0930), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa09a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa09d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:26:33.000937 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0b88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0bb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0c18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:26:37.999039 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137dd10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137dd70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137dda0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:26:43.000960 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00137df50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072000), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072030), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:26:48.000572 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072168), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072198), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050721f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:26:52.999728 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0e28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0e88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0ed0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:26:57.999860 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072438), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072468), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:27:02.999343 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050725d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072618), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072648), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:27:07.998644 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa10f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1128), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa11a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:27:12.999573 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072780), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050727c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072810), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:27:18.000144 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1398), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa13e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1440), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:27:22.998473 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0048), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa00a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:27:27.999199 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa02b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa02e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0360), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:27:32.999949 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072138), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:27:37.999037 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050723d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:27:43.000252 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072540), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072570), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050725a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:27:47.999569 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa05b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0660), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:27:52.999716 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa07c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:27:58.000522 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072738), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072768), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072798), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:28:03.000768 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa09d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0a38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0a80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:28:08.000208 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0c18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0c60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0ca8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:28:12.999265 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0e28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0e88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa0ed0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:28:17.998638 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1050), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa10b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa10f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:28:22.999829 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1278), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa12a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa12f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:28:27.999503 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa14b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1500), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1560), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:28:32.999466 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa16e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1728), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1770), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:28:37.999882 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1908), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1938), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1968), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:28:43.000477 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1ae8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1b30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1b60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:28:47.998771 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1ce0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1d40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1d88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:28:53.000371 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1ef0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fa1f38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64000), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:28:57.998736 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f641c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f641f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:29:02.998798 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64378), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f643a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f643f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:29:07.999566 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f645b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f645e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:29:13.001007 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072c60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072cc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072d08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:29:17.999578 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072e58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072e88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072eb8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:29:23.002485 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072fd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005073008), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005073038), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:29:28.002158 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072078), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050720d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:29:32.999099 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050721f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072288), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050722e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:29:38.000506 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072468), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050724e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:29:43.000582 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072630), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072660), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072690), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:29:47.998727 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050727f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072840), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:29:52.999964 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072948), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072978), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050729a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:29:57.999310 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072b28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072b58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072ba0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:30:02.998586 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072cc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072d08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005072d50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:30:08.000061 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f642d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64330), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:30:13.000194 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f644f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f645b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:30:18.000658 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f647e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64828), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:30:22.999716 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64a38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64a68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64af8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:30:27.999266 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64cd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64d50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64d98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:30:33.000424 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jwfz4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jwfz4", GenerateName:"", Namespace:"resourcequota-3699", SelfLink:"", UID:"12a210e8-de6c-4be9-9051-557c2ff7198a", ResourceVersion:"4763", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jwfz4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64f48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64f90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 25, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f64fc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1005 12:30:38.000453 19 resource_quota.go:1260] ResourceQuota "e2e-rq-status-jwfz4" Spec was unchanged and /status reset
  I1005 12:30:38.000556 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3699" for this suite. @ 10/05/24 12:30:38.004
• [295.133 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 10/05/24 12:30:38.013
  I1005 12:30:38.013513 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename dns @ 10/05/24 12:30:38.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:30:38.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:30:38.038
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/05/24 12:30:38.04
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/05/24 12:30:38.04
  STEP: creating a pod to probe DNS @ 10/05/24 12:30:38.04
  STEP: submitting the pod to kubernetes @ 10/05/24 12:30:38.04
  STEP: retrieving the pod @ 10/05/24 12:30:46.079
  STEP: looking for the results for each expected name from probers @ 10/05/24 12:30:46.082
  I1005 12:30:46.105591 19 dns_common.go:527] DNS probes using dns-265/dns-test-b19ca02a-230b-4a32-980e-6ef46c266770 succeeded

  STEP: deleting the pod @ 10/05/24 12:30:46.105
  I1005 12:30:46.123602 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-265" for this suite. @ 10/05/24 12:30:46.128
• [8.122 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 10/05/24 12:30:46.135
  I1005 12:30:46.135952 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename sched-pred @ 10/05/24 12:30:46.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:30:46.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:30:46.158
  I1005 12:30:46.160882 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1005 12:30:46.169421 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1005 12:30:46.173510 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-60 before test
  I1005 12:30:46.179015 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-fttd5 from ingress-nginx-kubernetes-worker started at 2024-10-05 12:19:40 +0000 UTC (1 container statuses recorded)
  I1005 12:30:46.179035 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1005 12:30:46.179043 19 predicates.go:957] calico-node-p547s from kube-system started at 2024-10-05 12:19:31 +0000 UTC (1 container statuses recorded)
  I1005 12:30:46.179048 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1005 12:30:46.179053 19 predicates.go:957] sonobuoy-e2e-job-16f17f2aa4c640ea from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 12:30:46.179058 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1005 12:30:46.179064 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 12:30:46.179070 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-c9n82 from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 12:30:46.179075 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 12:30:46.179080 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1005 12:30:46.179086 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-45-162 before test
  I1005 12:30:46.185195 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-ck6w9 from ingress-nginx-kubernetes-worker started at 2024-10-05 12:15:52 +0000 UTC (1 container statuses recorded)
  I1005 12:30:46.185212 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1005 12:30:46.185237 19 predicates.go:957] calico-node-pl9rk from kube-system started at 2024-10-05 12:19:21 +0000 UTC (1 container statuses recorded)
  I1005 12:30:46.185242 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1005 12:30:46.185248 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-10-05 12:24:14 +0000 UTC (1 container statuses recorded)
  I1005 12:30:46.185253 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1005 12:30:46.185259 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-5zzg2 from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 12:30:46.185264 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 12:30:46.185269 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1005 12:30:46.185281 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-83-192 before test
  I1005 12:30:46.191811 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hdfk2 from ingress-nginx-kubernetes-worker started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 12:30:46.191827 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1005 12:30:46.191835 19 predicates.go:957] calico-node-rtdfm from kube-system started at 2024-10-05 12:17:35 +0000 UTC (1 container statuses recorded)
  I1005 12:30:46.191840 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1005 12:30:46.191846 19 predicates.go:957] coredns-5b4857d7c8-h56gc from kube-system started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 12:30:46.191850 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1005 12:30:46.191874 19 predicates.go:957] kube-state-metrics-5d7bdccd49-r9dmj from kube-system started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 12:30:46.191879 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1005 12:30:46.191885 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-pn79v from kube-system started at 2024-10-05 12:15:37 +0000 UTC (2 container statuses recorded)
  I1005 12:30:46.191890 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1005 12:30:46.191895 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1005 12:30:46.191911 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-bhj4s from kubernetes-dashboard started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 12:30:46.191916 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1005 12:30:46.191922 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-4wgvx from kubernetes-dashboard started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 12:30:46.191927 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1005 12:30:46.191934 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-69jb9 from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 12:30:46.191943 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 12:30:46.191947 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/05/24 12:30:46.191
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/05/24 12:30:48.213
  STEP: Trying to apply a random label on the found node. @ 10/05/24 12:30:48.236
  STEP: verifying the node has the label kubernetes.io/e2e-248a185d-aad6-40b5-a5b3-6d688a793ef9 95 @ 10/05/24 12:30:48.245
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 10/05/24 12:30:48.25
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.45.162 on the node which pod4 resides and expect not scheduled @ 10/05/24 12:30:52.279
  STEP: removing the label kubernetes.io/e2e-248a185d-aad6-40b5-a5b3-6d688a793ef9 off the node ip-172-31-45-162 @ 10/05/24 12:35:52.287
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-248a185d-aad6-40b5-a5b3-6d688a793ef9 @ 10/05/24 12:35:52.301
  I1005 12:35:52.305769 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9355" for this suite. @ 10/05/24 12:35:52.311
• [306.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 10/05/24 12:35:52.319
  I1005 12:35:52.319715 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename podtemplate @ 10/05/24 12:35:52.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:35:52.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:35:52.343
  STEP: Create set of pod templates @ 10/05/24 12:35:52.346
  I1005 12:35:52.352426 19 podtemplates.go:143] created test-podtemplate-1
  I1005 12:35:52.358730 19 podtemplates.go:143] created test-podtemplate-2
  I1005 12:35:52.363953 19 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 10/05/24 12:35:52.363
  STEP: delete collection of pod templates @ 10/05/24 12:35:52.367
  I1005 12:35:52.367721 19 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 10/05/24 12:35:52.39
  I1005 12:35:52.390756 19 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1005 12:35:52.395287 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8560" for this suite. @ 10/05/24 12:35:52.399
• [0.088 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 10/05/24 12:35:52.408
  I1005 12:35:52.408144 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename init-container @ 10/05/24 12:35:52.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:35:52.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:35:52.431
  STEP: creating the pod @ 10/05/24 12:35:52.433
  I1005 12:35:52.433337 19 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I1005 12:36:33.604806 19 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-7328e45d-d73f-484e-a0c6-723d879da48f", GenerateName:"", Namespace:"init-container-5777", SelfLink:"", UID:"277efb2d-94a6-4baf-89b8-e3b4c22fbe85", ResourceVersion:"6216", Generation:0, CreationTimestamp:time.Date(2024, time.October, 5, 12, 35, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"433328242"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 35, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004fcc408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 5, 12, 36, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004fcc498), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-hnjl6", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000aeadc0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hnjl6", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hnjl6", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hnjl6", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc001d14fa8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-20-60", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00264b700), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc001d15030)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc001d15050)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc001d15058), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc001d1505c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004b263a0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 5, 12, 35, 53, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 5, 12, 35, 52, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 5, 12, 35, 52, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 5, 12, 35, 52, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 5, 12, 35, 52, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.20.60", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.20.60"}}, PodIP:"192.168.89.71", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.89.71"}}, StartTime:time.Date(2024, time.October, 5, 12, 35, 52, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00088f650)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00088f6c0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://e4af5dba5d3700bca199ccaf9799b774f3c0411f623a86ee6cdd90e3c746b2b0", Started:(*bool)(0xc001d1510a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-hnjl6", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004b263d0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000aeae20), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc001d1511d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-hnjl6", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004b26400)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000aeae00), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc001d150df), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-hnjl6", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004b263c0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1005 12:36:33.604958 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5777" for this suite. @ 10/05/24 12:36:33.609
• [41.211 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 10/05/24 12:36:33.619
  I1005 12:36:33.619246 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename taint-multiple-pods @ 10/05/24 12:36:33.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:36:33.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:36:33.642
  I1005 12:36:33.645094 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1005 12:37:33.645444 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1005 12:37:33.650668 19 taints.go:144] Starting informer...
  STEP: Starting pods... @ 10/05/24 12:37:33.65
  I1005 12:37:33.872041 19 taints.go:463] Pod1 is running on ip-172-31-45-162. Tainting Node
  I1005 12:37:36.094980 19 taints.go:471] Pod2 is running on ip-172-31-45-162. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/05/24 12:37:36.095
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/05/24 12:37:36.105
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 10/05/24 12:37:36.109
  I1005 12:37:41.987133 19 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I1005 12:38:02.013007 19 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/05/24 12:38:02.024
  I1005 12:38:02.027922 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-6450" for this suite. @ 10/05/24 12:38:02.032
• [88.424 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 10/05/24 12:38:02.043
  I1005 12:38:02.043263 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir @ 10/05/24 12:38:02.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:38:02.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:38:02.081
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/05/24 12:38:02.084
  STEP: Saw pod success @ 10/05/24 12:38:06.115
  I1005 12:38:06.119180 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-156ff60e-4c7e-4dc5-92c3-1c597537767a container test-container: <nil>
  STEP: delete the pod @ 10/05/24 12:38:06.14
  I1005 12:38:06.163214 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5745" for this suite. @ 10/05/24 12:38:06.166
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 10/05/24 12:38:06.175
  I1005 12:38:06.175543 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename taint-single-pod @ 10/05/24 12:38:06.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:38:06.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:38:06.197
  I1005 12:38:06.199752 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1005 12:39:06.201366 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1005 12:39:06.206593 19 taints.go:144] Starting informer...
  STEP: Starting pod... @ 10/05/24 12:39:06.206
  I1005 12:39:06.424162 19 taints.go:294] Pod is running on ip-172-31-45-162. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/05/24 12:39:06.424
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/05/24 12:39:06.435
  STEP: Waiting short time to make sure Pod is queued for deletion @ 10/05/24 12:39:06.439
  I1005 12:39:06.439339 19 taints.go:313] Pod wasn't evicted. Proceeding
  I1005 12:39:06.439355 19 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/05/24 12:39:06.456
  STEP: Waiting some time to make sure that toleration time passed. @ 10/05/24 12:39:06.468
  I1005 12:40:21.469323 19 taints.go:329] Pod wasn't evicted. Test successful
  I1005 12:40:21.469533 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-7485" for this suite. @ 10/05/24 12:40:21.475
• [135.308 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 10/05/24 12:40:21.483
  I1005 12:40:21.483915 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename discovery @ 10/05/24 12:40:21.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:40:21.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:40:21.506
  STEP: Setting up server cert @ 10/05/24 12:40:21.509
  STEP: Requesting APIResourceList from "/api/v1" @ 10/05/24 12:40:21.788
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 10/05/24 12:40:21.791
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 10/05/24 12:40:21.792
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 10/05/24 12:40:21.793
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 10/05/24 12:40:21.794
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 10/05/24 12:40:21.795
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 10/05/24 12:40:21.796
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 10/05/24 12:40:21.797
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 10/05/24 12:40:21.799
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 10/05/24 12:40:21.8
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 10/05/24 12:40:21.801
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 10/05/24 12:40:21.801
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 10/05/24 12:40:21.803
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 10/05/24 12:40:21.804
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 10/05/24 12:40:21.804
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 10/05/24 12:40:21.805
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 10/05/24 12:40:21.807
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 10/05/24 12:40:21.808
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 10/05/24 12:40:21.809
  I1005 12:40:21.810872 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7138" for this suite. @ 10/05/24 12:40:21.816
• [0.342 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 10/05/24 12:40:21.826
  I1005 12:40:21.826448 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 12:40:21.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:40:21.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:40:21.851
  STEP: Creating a pod to test downward api env vars @ 10/05/24 12:40:21.853
  STEP: Saw pod success @ 10/05/24 12:40:25.879
  I1005 12:40:25.884032 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downward-api-562f68a7-c1c1-4208-8b87-78063e4fc3f7 container dapi-container: <nil>
  STEP: delete the pod @ 10/05/24 12:40:25.897
  I1005 12:40:25.915252 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9183" for this suite. @ 10/05/24 12:40:25.92
• [4.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 10/05/24 12:40:25.928
  I1005 12:40:25.928918 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 12:40:25.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:40:25.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:40:25.951
  STEP: starting the proxy server @ 10/05/24 12:40:25.954
  I1005 12:40:25.954596 19 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-7090 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 10/05/24 12:40:25.988
  I1005 12:40:25.993176 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1005 12:40:25.994707 19 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:42103

  I1005 12:40:25.994705 19 kubectl.go:2229] kubectl proxy stderr: W1005 12:40:25.988095      32 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-7090" for this suite. @ 10/05/24 12:40:25.998
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 10/05/24 12:40:26.008
  I1005 12:40:26.008041 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir @ 10/05/24 12:40:26.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:40:26.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:40:26.03
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/05/24 12:40:26.033
  STEP: Saw pod success @ 10/05/24 12:40:30.062
  I1005 12:40:30.066880 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-77a3391a-18a0-4f8c-9833-66f47627f952 container test-container: <nil>
  STEP: delete the pod @ 10/05/24 12:40:30.075
  I1005 12:40:30.093662 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2373" for this suite. @ 10/05/24 12:40:30.098
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 10/05/24 12:40:30.106
  I1005 12:40:30.106997 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 12:40:30.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:40:30.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:40:30.132
  STEP: creating service in namespace services-5992 @ 10/05/24 12:40:30.135
  STEP: creating service affinity-clusterip in namespace services-5992 @ 10/05/24 12:40:30.135
  STEP: creating replication controller affinity-clusterip in namespace services-5992 @ 10/05/24 12:40:30.15
  I1005 12:40:30.159849      19 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-5992, replica count: 3
  I1005 12:40:33.210925      19 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1005 12:40:33.220964 19 resource.go:361] Creating new exec pod
  I1005 12:40:36.241089 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-5992 exec execpod-affinityg7brj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1005 12:40:36.343655 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I1005 12:40:36.343702 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 12:40:36.343784 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-5992 exec execpod-affinityg7brj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.33 80'
  I1005 12:40:36.429640 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.33 80\nConnection to 10.152.183.33 80 port [tcp/http] succeeded!\n"
  I1005 12:40:36.429690 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 12:40:36.429774 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-5992 exec execpod-affinityg7brj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.33:80/ ; done'
  I1005 12:40:36.560541 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.33:80/\n"
  I1005 12:40:36.560591 19 builder.go:147] stdout: "\naffinity-clusterip-949fm\naffinity-clusterip-949fm\naffinity-clusterip-949fm\naffinity-clusterip-949fm\naffinity-clusterip-949fm\naffinity-clusterip-949fm\naffinity-clusterip-949fm\naffinity-clusterip-949fm\naffinity-clusterip-949fm\naffinity-clusterip-949fm\naffinity-clusterip-949fm\naffinity-clusterip-949fm\naffinity-clusterip-949fm\naffinity-clusterip-949fm\naffinity-clusterip-949fm\naffinity-clusterip-949fm"
  I1005 12:40:36.560607 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560615 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560622 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560628 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560634 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560640 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560647 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560653 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560659 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560665 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560672 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560678 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560685 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560691 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560696 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560701 19 service.go:242] Received response from host: affinity-clusterip-949fm
  I1005 12:40:36.560771 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-5992, will wait for the garbage collector to delete the pods @ 10/05/24 12:40:36.576
  I1005 12:40:36.641615 19 resources.go:139] Deleting ReplicationController affinity-clusterip took: 9.123651ms
  I1005 12:40:36.742043 19 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.425608ms
  I1005 12:40:39.564626 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5992" for this suite. @ 10/05/24 12:40:39.569
• [9.472 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 10/05/24 12:40:39.578
  I1005 12:40:39.578792 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 12:40:39.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:40:39.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:40:39.599
  STEP: Setting up server cert @ 10/05/24 12:40:39.629
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 12:40:39.766
  STEP: Deploying the webhook pod @ 10/05/24 12:40:39.778
  STEP: Wait for the deployment to be ready @ 10/05/24 12:40:39.793
  I1005 12:40:39.801885 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/05/24 12:40:41.817
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 12:40:41.829
  I1005 12:40:42.830176 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/05/24 12:40:42.839
  STEP: verifying the mutating webhook match conditions @ 10/05/24 12:40:42.854
  STEP: updating the mutating webhook match conditions @ 10/05/24 12:40:42.858
  STEP: verifying the mutating webhook match conditions @ 10/05/24 12:40:42.867
  I1005 12:40:42.924866 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-173" for this suite. @ 10/05/24 12:40:42.929
  STEP: Destroying namespace "webhook-markers-7907" for this suite. @ 10/05/24 12:40:42.935
• [3.368 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 10/05/24 12:40:42.946
  I1005 12:40:42.946779 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-runtime @ 10/05/24 12:40:42.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:40:42.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:40:42.969
  STEP: create the container @ 10/05/24 12:40:42.972
  W1005 12:40:42.983348      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 10/05/24 12:40:42.983
  STEP: get the container status @ 10/05/24 12:40:46.009
  STEP: the container should be terminated @ 10/05/24 12:40:46.013
  STEP: the termination message should be set @ 10/05/24 12:40:46.013
  I1005 12:40:46.013700 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/05/24 12:40:46.013
  I1005 12:40:46.031754 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5611" for this suite. @ 10/05/24 12:40:46.036
• [3.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 10/05/24 12:40:46.045
  I1005 12:40:46.045963 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename var-expansion @ 10/05/24 12:40:46.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:40:46.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:40:46.076
  I1005 12:40:48.098133 19 delete.go:62] Deleting pod "var-expansion-24545176-7545-43c6-9ebe-ae763e194537" in namespace "var-expansion-6510"
  I1005 12:40:48.106918 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-24545176-7545-43c6-9ebe-ae763e194537" to be fully deleted
  I1005 12:40:50.116561 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6510" for this suite. @ 10/05/24 12:40:50.121
• [4.083 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 10/05/24 12:40:50.129
  I1005 12:40:50.129444 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename endpointslice @ 10/05/24 12:40:50.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:40:50.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:40:50.154
  STEP: getting /apis @ 10/05/24 12:40:50.156
  STEP: getting /apis/discovery.k8s.io @ 10/05/24 12:40:50.16
  STEP: getting /apis/discovery.k8s.iov1 @ 10/05/24 12:40:50.161
  STEP: creating @ 10/05/24 12:40:50.162
  STEP: getting @ 10/05/24 12:40:50.179
  STEP: listing @ 10/05/24 12:40:50.183
  STEP: watching @ 10/05/24 12:40:50.187
  I1005 12:40:50.187518 19 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 10/05/24 12:40:50.188
  STEP: cluster-wide watching @ 10/05/24 12:40:50.192
  I1005 12:40:50.192417 19 endpointslice.go:459] starting watch
  STEP: patching @ 10/05/24 12:40:50.193
  STEP: updating @ 10/05/24 12:40:50.199
  I1005 12:40:50.210350 19 endpointslice.go:482] waiting for watch events with expected annotations
  I1005 12:40:50.210398 19 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 10/05/24 12:40:50.21
  STEP: deleting a collection @ 10/05/24 12:40:50.226
  I1005 12:40:50.249157 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9077" for this suite. @ 10/05/24 12:40:50.254
• [0.132 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 10/05/24 12:40:50.262
  I1005 12:40:50.262044 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 12:40:50.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:40:50.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:40:50.285
  STEP: Setting up server cert @ 10/05/24 12:40:50.313
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 12:40:50.501
  STEP: Deploying the webhook pod @ 10/05/24 12:40:50.508
  STEP: Wait for the deployment to be ready @ 10/05/24 12:40:50.523
  I1005 12:40:50.532132 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/05/24 12:40:52.545
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 12:40:52.559
  I1005 12:40:53.559348 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 10/05/24 12:40:53.569
  STEP: create a configmap that should be updated by the webhook @ 10/05/24 12:40:53.585
  I1005 12:40:53.652411 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-54" for this suite. @ 10/05/24 12:40:53.656
  STEP: Destroying namespace "webhook-markers-4092" for this suite. @ 10/05/24 12:40:53.664
• [3.411 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 10/05/24 12:40:53.672
  I1005 12:40:53.672980 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 12:40:53.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:40:53.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:40:53.698
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/05/24 12:40:53.7
  I1005 12:40:53.700690 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-9679 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1005 12:40:53.756506 19 builder.go:146] stderr: ""
  I1005 12:40:53.756551 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/05/24 12:40:53.756
  I1005 12:40:53.762336 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-9679 delete pods e2e-test-httpd-pod'
  I1005 12:40:55.321024 19 builder.go:146] stderr: ""
  I1005 12:40:55.321061 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1005 12:40:55.321205 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9679" for this suite. @ 10/05/24 12:40:55.325
• [1.660 seconds]
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 10/05/24 12:40:55.332
  I1005 12:40:55.332926 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 12:40:55.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:40:55.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:40:55.359
  I1005 12:40:55.367292 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-520" for this suite. @ 10/05/24 12:40:55.371
• [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 10/05/24 12:40:55.378
  I1005 12:40:55.378313 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename field-validation @ 10/05/24 12:40:55.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:40:55.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:40:55.403
  I1005 12:40:55.405681 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 12:40:58.515032 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5323" for this suite. @ 10/05/24 12:40:58.519
• [3.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 10/05/24 12:40:58.526
  I1005 12:40:58.526833 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename dns @ 10/05/24 12:40:58.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:40:58.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:40:58.553
  STEP: Creating a test headless service @ 10/05/24 12:40:58.556
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2638.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-2638.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2638.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-2638.svc.cluster.local;sleep 1; done
   @ 10/05/24 12:40:58.56
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2638.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2638.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2638.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2638.svc.cluster.local;sleep 1; done
   @ 10/05/24 12:40:58.561
  STEP: creating a pod to probe DNS @ 10/05/24 12:40:58.561
  STEP: submitting the pod to kubernetes @ 10/05/24 12:40:58.561
  STEP: retrieving the pod @ 10/05/24 12:41:00.582
  STEP: looking for the results for each expected name from probers @ 10/05/24 12:41:00.586
  I1005 12:41:00.592284 19 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local from pod dns-2638/dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e: the server could not find the requested resource (get pods dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e)
  I1005 12:41:00.596363 19 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local from pod dns-2638/dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e: the server could not find the requested resource (get pods dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e)
  I1005 12:41:00.601764 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-2638.svc.cluster.local from pod dns-2638/dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e: the server could not find the requested resource (get pods dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e)
  I1005 12:41:00.606009 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-2638.svc.cluster.local from pod dns-2638/dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e: the server could not find the requested resource (get pods dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e)
  I1005 12:41:00.610026 19 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local from pod dns-2638/dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e: the server could not find the requested resource (get pods dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e)
  I1005 12:41:00.614497 19 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local from pod dns-2638/dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e: the server could not find the requested resource (get pods dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e)
  I1005 12:41:00.621657 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-2638.svc.cluster.local from pod dns-2638/dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e: the server could not find the requested resource (get pods dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e)
  I1005 12:41:00.625542 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-2638.svc.cluster.local from pod dns-2638/dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e: the server could not find the requested resource (get pods dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e)
  I1005 12:41:00.625570 19 dns_common.go:489] Lookups using dns-2638/dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2638.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2638.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2638.svc.cluster.local jessie_udp@dns-test-service-2.dns-2638.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2638.svc.cluster.local]

  I1005 12:41:00.635086 19 dns_common.go:495] Pod client logs for webserver: 
  I1005 12:41:00.643963 19 dns_common.go:495] Pod client logs for querier: 
  I1005 12:41:00.651160 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I1005 12:41:05.631537 19 dns_common.go:527] DNS probes using dns-2638/dns-test-4d1544a7-44cd-4c5b-bd3e-e948172f8c1e succeeded

  STEP: deleting the pod @ 10/05/24 12:41:05.631
  STEP: deleting the test headless service @ 10/05/24 12:41:05.645
  I1005 12:41:05.664412 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2638" for this suite. @ 10/05/24 12:41:05.669
• [7.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 10/05/24 12:41:05.679
  I1005 12:41:05.679359 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 12:41:05.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:41:05.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:41:05.704
  STEP: Setting up server cert @ 10/05/24 12:41:05.734
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 12:41:06.031
  STEP: Deploying the webhook pod @ 10/05/24 12:41:06.038
  STEP: Wait for the deployment to be ready @ 10/05/24 12:41:06.053
  I1005 12:41:06.062033 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/05/24 12:41:08.077
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 12:41:08.091
  I1005 12:41:09.091856 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 10/05/24 12:41:09.101
  STEP: verifying the validating webhook match conditions @ 10/05/24 12:41:09.11
  STEP: updating the validating webhook match conditions @ 10/05/24 12:41:09.114
  STEP: verifying the validating webhook match conditions @ 10/05/24 12:41:09.123
  I1005 12:41:09.183343 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8396" for this suite. @ 10/05/24 12:41:09.188
  STEP: Destroying namespace "webhook-markers-6381" for this suite. @ 10/05/24 12:41:09.195
• [3.526 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 10/05/24 12:41:09.205
  I1005 12:41:09.205371 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename secrets @ 10/05/24 12:41:09.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:41:09.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:41:09.227
  I1005 12:41:09.274185 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-43" for this suite. @ 10/05/24 12:41:09.278
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 10/05/24 12:41:09.287
  I1005 12:41:09.287767 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-probe @ 10/05/24 12:41:09.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:41:09.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:41:09.309
  STEP: Creating pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558 @ 10/05/24 12:41:09.312
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/05/24 12:41:11.332
  I1005 12:41:11.336112 19 container_probe.go:1749] Initial restart count of pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 is 0
  I1005 12:41:11.340554 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:13.346286 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:15.352430 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:17.358237 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:19.363498 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:21.370529 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:23.375827 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:25.382626 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:27.387797 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:29.394362 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:31.399978 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:33.406304 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:35.412014 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:37.418357 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:39.424146 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:41.429989 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:43.435066 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:45.441192 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:47.446499 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:49.453319 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:51.459751 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:53.466319 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:55.472336 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:57.479119 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:41:59.484263 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:01.490474 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:03.495357 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:05.502135 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:07.507204 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:09.513190 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:11.519513 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:13.526208 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:15.531482 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:17.537647 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:19.543443 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:21.549871 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:23.555761 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:25.561999 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:27.566922 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:29.572955 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:31.579775 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:33.585866 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:35.592626 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:37.598537 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:39.605366 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:41.611324 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:43.617870 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:45.623908 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:47.630388 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:49.637115 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:51.642264 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:53.649190 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:55.656203 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:57.661365 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:42:59.669772 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:01.676460 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:03.683361 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:05.689098 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:07.695545 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:09.702077 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:11.707849 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:13.714183 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:15.719979 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:17.725139 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:19.732270 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:21.739330 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:23.746265 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:25.753177 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:27.760259 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:29.765969 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:31.772104 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:33.778253 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:35.784765 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:37.791118 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:39.796812 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:41.802795 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:43.808915 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:45.814383 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:47.820980 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:49.826457 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:51.832972 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:53.838393 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:55.845058 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:57.851930 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:43:59.857368 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:01.862741 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:03.869540 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:05.874941 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:07.882111 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:09.887409 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:11.894285 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:13.900123 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:15.906868 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:17.913299 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:19.919633 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:21.925087 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:23.931396 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:25.939215 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:27.944083 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:29.949897 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:31.955380 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:33.962165 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:35.968392 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:37.975294 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:39.980557 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:41.987110 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:43.992080 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:45.998300 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:48.004108 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:50.009808 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:52.017251 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:54.023392 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:56.029156 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:44:58.035844 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:45:00.042144 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:45:02.048513 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:45:04.054288 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:45:06.061416 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:45:08.067425 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  I1005 12:45:10.074435 19 container_probe.go:1759] Get pod test-webserver-1790abd0-0987-4e65-b2cb-1a01c7d9d5c5 in namespace container-probe-3558
  STEP: deleting the pod @ 10/05/24 12:45:12.074
  I1005 12:45:12.090199 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3558" for this suite. @ 10/05/24 12:45:12.095
• [242.818 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 10/05/24 12:45:12.105
  I1005 12:45:12.105648 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename subjectreview @ 10/05/24 12:45:12.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:45:12.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:45:12.132
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-1321" @ 10/05/24 12:45:12.134
  I1005 12:45:12.139720 19 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-1321:e2e"
  I1005 12:45:12.139746 19 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-1321"}
  I1005 12:45:12.139753 19 subjectreviews.go:71] saUID: "1baee2fd-a1e1-47cb-ada3-e8ceb554daaf"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-1321:e2e" @ 10/05/24 12:45:12.139
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-1321:e2e" @ 10/05/24 12:45:12.14
  I1005 12:45:12.141695 19 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-1321:e2e" api 'list' configmaps in "subjectreview-1321" namespace @ 10/05/24 12:45:12.141
  I1005 12:45:12.142987 19 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-1321:e2e" @ 10/05/24 12:45:12.143
  I1005 12:45:12.145137 19 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1005 12:45:12.145155 19 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1005 12:45:12.145258 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-1321" for this suite. @ 10/05/24 12:45:12.148
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 10/05/24 12:45:12.159
  I1005 12:45:12.159962 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename statefulset @ 10/05/24 12:45:12.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:45:12.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:45:12.184
  STEP: Creating service test in namespace statefulset-8265 @ 10/05/24 12:45:12.186
  STEP: Creating statefulset ss in namespace statefulset-8265 @ 10/05/24 12:45:12.196
  I1005 12:45:12.206211 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I1005 12:45:22.209722 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 10/05/24 12:45:22.217
  STEP: Getting /status @ 10/05/24 12:45:22.227
  I1005 12:45:22.232414 19 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 10/05/24 12:45:22.232
  I1005 12:45:22.243138 19 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 10/05/24 12:45:22.243
  I1005 12:45:22.244610 19 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I1005 12:45:22.244640 19 statefulset.go:1111] Found Statefulset ss in namespace statefulset-8265 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1005 12:45:22.244650 19 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 10/05/24 12:45:22.244
  I1005 12:45:22.244676 19 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1005 12:45:22.253606 19 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 10/05/24 12:45:22.253
  I1005 12:45:22.255007 19 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I1005 12:45:22.255029 19 statefulset.go:1151] Observed Statefulset ss in namespace statefulset-8265 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1005 12:45:22.255116 19 statefulset.go:1155] Observed &StatefulSet event: MODIFIED
  I1005 12:45:22.255164 19 statefulset.go:138] Deleting all statefulset in ns statefulset-8265
  I1005 12:45:22.258666 19 rest.go:150] Scaling statefulset ss to 0
  I1005 12:45:32.276557 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1005 12:45:32.280301 19 rest.go:88] Deleting statefulset ss
  I1005 12:45:32.296745 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8265" for this suite. @ 10/05/24 12:45:32.301
• [20.151 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 10/05/24 12:45:32.31
  I1005 12:45:32.310731 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 12:45:32.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:45:32.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:45:32.334
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 12:45:32.336
  STEP: Saw pod success @ 10/05/24 12:45:36.364
  I1005 12:45:36.367877 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downwardapi-volume-e72b710b-a355-4d07-be14-746866a862b3 container client-container: <nil>
  STEP: delete the pod @ 10/05/24 12:45:36.389
  I1005 12:45:36.410538 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4459" for this suite. @ 10/05/24 12:45:36.414
• [4.112 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 10/05/24 12:45:36.423
  I1005 12:45:36.423081 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename deployment @ 10/05/24 12:45:36.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:45:36.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:45:36.446
  I1005 12:45:36.449166 19 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1005 12:45:36.460802 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1005 12:45:41.467756 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/05/24 12:45:41.467
  I1005 12:45:41.467831 19 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I1005 12:45:41.473593 19 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1005 12:45:41.484016 19 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I1005 12:45:43.495401 19 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1005 12:45:43.499556 19 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1005 12:45:43.513951 19 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-805",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fdf4e277-fdec-4c76-b41e-51c373e71f0d",
      ResourceVersion: (string) (len=4) "8388",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863729141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1005 12:45:43.519733 19 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-805",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2216060-59f5-47b2-8787-2c0d68813212",
      ResourceVersion: (string) (len=4) "8378",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863729141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "fdf4e277-fdec-4c76-b41e-51c373e71f0d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 64 66 34 65 32  37 37 2d 66 64 65 63 2d  |\"fdf4e277-fdec-|
              00000120  34 63 37 36 2d 62 34 31  65 2d 35 31 63 33 37 33  |4c76-b41e-51c373|
              00000130  65 37 31 66 30 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e71f0d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1005 12:45:43.520240 19 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1005 12:45:43.520438 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-805",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e79ce03f-ea62-4534-9752-74af80e74cd9",
      ResourceVersion: (string) (len=4) "8387",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863729136,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "fdf4e277-fdec-4c76-b41e-51c373e71f0d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 66 64 66 34 65 32 37  |"uid\":\"fdf4e27|
              000000b0  37 2d 66 64 65 63 2d 34  63 37 36 2d 62 34 31 65  |7-fdec-4c76-b41e|
              000000c0  2d 35 31 63 33 37 33 65  37 31 66 30 64 5c 22 7d  |-51c373e71f0d\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1005 12:45:43.525956 19 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-9xgf6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-9xgf6",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=14) "deployment-805",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64f6ab30-6d0c-41de-9ed8-fc09bfb41c11",
      ResourceVersion: (string) (len=4) "8377",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863729141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "b2216060-59f5-47b2-8787-2c0d68813212",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  32 31 36 30 36 30 2d 35  |d\":\"b2216060-5|
              00000090  39 66 35 2d 34 37 62 32  2d 38 37 38 37 2d 32 63  |9f5-47b2-8787-2c|
              000000a0  30 64 36 38 38 31 33 32  31 32 5c 22 7d 22 3a 7b  |0d68813212\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 39  2e 37 33 5c 22 7d 22 3a  |2.168.89.73\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bvbdc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bvbdc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-60",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.60",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.60"
        }
      },
      PodIP: (string) (len=13) "192.168.89.73",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.89.73"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863729141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863729142,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://3fc05c0f6acfc1891640dad0d9700699e8152ccc75d17af8475afcafe31bdd04",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bvbdc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 12:45:43.528347 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-805" for this suite. @ 10/05/24 12:45:43.533
• [7.120 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 10/05/24 12:45:43.543
  I1005 12:45:43.543062 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename replicaset @ 10/05/24 12:45:43.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:45:43.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:45:43.57
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 10/05/24 12:45:43.573
  STEP: When a replicaset with a matching selector is created @ 10/05/24 12:45:45.604
  STEP: Then the orphan pod is adopted @ 10/05/24 12:45:45.612
  STEP: When the matched label of one of its pods change @ 10/05/24 12:45:46.623
  I1005 12:45:46.628013 19 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/05/24 12:45:46.641
  I1005 12:45:47.651391 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2460" for this suite. @ 10/05/24 12:45:47.655
• [4.120 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 10/05/24 12:45:47.663
  I1005 12:45:47.663270 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pods @ 10/05/24 12:45:47.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:45:47.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:45:47.687
  STEP: Create set of pods @ 10/05/24 12:45:47.69
  I1005 12:45:47.699257 19 pods.go:871] created test-pod-1
  I1005 12:45:47.706734 19 pods.go:871] created test-pod-2
  I1005 12:45:47.712740 19 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 10/05/24 12:45:47.712
  STEP: waiting for all pods to be deleted @ 10/05/24 12:45:49.755
  I1005 12:45:49.758879 19 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I1005 12:45:50.760854 19 pods.go:1140] Pod quantity 2 is different from expected quantity 0
  I1005 12:45:51.761438 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6357" for this suite. @ 10/05/24 12:45:51.766
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 10/05/24 12:45:51.774
  I1005 12:45:51.774552 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename field-validation @ 10/05/24 12:45:51.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:45:51.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:45:51.802
  I1005 12:45:51.805031 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  W1005 12:45:54.341925      19 warnings.go:70] unknown field "alpha"
  W1005 12:45:54.341954      19 warnings.go:70] unknown field "beta"
  W1005 12:45:54.341957      19 warnings.go:70] unknown field "delta"
  W1005 12:45:54.341960      19 warnings.go:70] unknown field "epsilon"
  W1005 12:45:54.341963      19 warnings.go:70] unknown field "gamma"
  I1005 12:45:54.896597 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1341" for this suite. @ 10/05/24 12:45:54.9
• [3.136 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 10/05/24 12:45:54.91
  I1005 12:45:54.910704 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/05/24 12:45:54.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:45:54.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:45:54.935
  I1005 12:45:54.941236 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8567" for this suite. @ 10/05/24 12:45:54.945
• [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 10/05/24 12:45:54.955
  I1005 12:45:54.955482 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 12:45:54.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:45:54.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:45:54.977
  STEP: creating a Service @ 10/05/24 12:45:54.983
  STEP: watching for the Service to be added @ 10/05/24 12:45:54.998
  I1005 12:45:55.000768 19 service.go:3445] Found Service test-service-k294f in namespace services-6260 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31201}]
  I1005 12:45:55.000801 19 service.go:3452] Service test-service-k294f created
  STEP: Getting /status @ 10/05/24 12:45:55
  I1005 12:45:55.006009 19 service.go:3463] Service test-service-k294f has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 10/05/24 12:45:55.006
  STEP: watching for the Service to be patched @ 10/05/24 12:45:55.013
  I1005 12:45:55.015296 19 service.go:3486] observed Service test-service-k294f in namespace services-6260 with annotations: map[] & LoadBalancer: {[]}
  I1005 12:45:55.015330 19 service.go:3489] Found Service test-service-k294f in namespace services-6260 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000b6e120 []}]}
  I1005 12:45:55.015340 19 service.go:3496] Service test-service-k294f has service status patched
  STEP: updating the ServiceStatus @ 10/05/24 12:45:55.015
  I1005 12:45:55.025704 19 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 10/05/24 12:45:55.025
  I1005 12:45:55.027249 19 service.go:3527] Observed Service test-service-k294f in namespace services-6260 with annotations: map[] & Conditions: []
  I1005 12:45:55.027275 19 service.go:3538] Observed Service test-service-k294f in namespace services-6260 with annotations: map[patchedstatus:true] & Conditions: []
  I1005 12:45:55.027299 19 service.go:3534] Found Service test-service-k294f in namespace services-6260 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1005 12:45:55.027309 19 service.go:3545] Service test-service-k294f has service status updated
  STEP: patching the service @ 10/05/24 12:45:55.027
  STEP: watching for the Service to be patched @ 10/05/24 12:45:55.039
  I1005 12:45:55.040896 19 service.go:3568] observed Service test-service-k294f in namespace services-6260 with labels: map[test-service-static:true]
  I1005 12:45:55.040930 19 service.go:3568] observed Service test-service-k294f in namespace services-6260 with labels: map[test-service-static:true]
  I1005 12:45:55.040941 19 service.go:3568] observed Service test-service-k294f in namespace services-6260 with labels: map[test-service-static:true]
  I1005 12:45:55.040979 19 service.go:3571] Found Service test-service-k294f in namespace services-6260 with labels: map[test-service:patched test-service-static:true]
  I1005 12:45:55.040987 19 service.go:3578] Service test-service-k294f patched
  STEP: deleting the service @ 10/05/24 12:45:55.041
  STEP: watching for the Service to be deleted @ 10/05/24 12:45:55.063
  I1005 12:45:55.064525 19 service.go:3602] Observed event: ADDED
  I1005 12:45:55.064557 19 service.go:3602] Observed event: MODIFIED
  I1005 12:45:55.064567 19 service.go:3602] Observed event: MODIFIED
  I1005 12:45:55.064634 19 service.go:3602] Observed event: MODIFIED
  I1005 12:45:55.064653 19 service.go:3598] Found Service test-service-k294f in namespace services-6260 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1005 12:45:55.064661 19 service.go:3607] Service test-service-k294f deleted
  I1005 12:45:55.064757 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6260" for this suite. @ 10/05/24 12:45:55.069
• [0.124 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 10/05/24 12:45:55.079
  I1005 12:45:55.079200 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename field-validation @ 10/05/24 12:45:55.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:45:55.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:45:55.104
  STEP: apply creating a deployment @ 10/05/24 12:45:55.106
  I1005 12:45:55.122416 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6509" for this suite. @ 10/05/24 12:45:55.126
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 10/05/24 12:45:55.136
  I1005 12:45:55.136854 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pods @ 10/05/24 12:45:55.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:45:55.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:45:55.163
  I1005 12:45:55.166696 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: creating the pod @ 10/05/24 12:45:55.167
  STEP: submitting the pod to kubernetes @ 10/05/24 12:45:55.167
  I1005 12:45:57.217887 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6647" for this suite. @ 10/05/24 12:45:57.223
• [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 10/05/24 12:45:57.233
  I1005 12:45:57.233514 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename csi-storageclass @ 10/05/24 12:45:57.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:45:57.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:45:57.254
  STEP: Creating a StorageClass @ 10/05/24 12:45:57.257
  STEP: Get StorageClass "e2e-vpghc" @ 10/05/24 12:45:57.262
  STEP: Patching the StorageClass "e2e-vpghc" @ 10/05/24 12:45:57.265
  STEP: Delete StorageClass "e2e-vpghc" @ 10/05/24 12:45:57.272
  STEP: Confirm deletion of StorageClass "e2e-vpghc" @ 10/05/24 12:45:57.279
  STEP: Create a replacement StorageClass @ 10/05/24 12:45:57.283
  STEP: Updating StorageClass "e2e-v2-jjkb2" @ 10/05/24 12:45:57.288
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-jjkb2=updated" @ 10/05/24 12:45:57.297
  STEP: Deleting StorageClass "e2e-v2-jjkb2" via DeleteCollection @ 10/05/24 12:45:57.301
  STEP: Confirm deletion of StorageClass "e2e-v2-jjkb2" @ 10/05/24 12:45:57.313
  I1005 12:45:57.317125 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-7428" for this suite. @ 10/05/24 12:45:57.321
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 10/05/24 12:45:57.33
  I1005 12:45:57.330493 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pv @ 10/05/24 12:45:57.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:45:57.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:45:57.356
  STEP: Creating initial PV and PVC @ 10/05/24 12:45:57.358
  I1005 12:45:57.358618 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-708" @ 10/05/24 12:45:57.375
  STEP: Listing PVCs in namespace "pv-708" @ 10/05/24 12:45:57.379
  STEP: Patching the PV "pv-708-mbts5" @ 10/05/24 12:45:57.383
  STEP: Patching the PVC "pvc-fnm7f" @ 10/05/24 12:45:57.398
  STEP: Getting PV "pv-708-mbts5" @ 10/05/24 12:45:57.404
  STEP: Getting PVC "pvc-fnm7f" @ 10/05/24 12:45:57.407
  STEP: Deleting PVC "pvc-fnm7f" @ 10/05/24 12:45:57.413
  STEP: Confirm deletion of PVC "pvc-fnm7f" @ 10/05/24 12:45:57.422
  STEP: Deleting PV "pv-708-mbts5" @ 10/05/24 12:45:59.436
  STEP: Confirm deletion of PV "pv-708-mbts5" @ 10/05/24 12:45:59.446
  STEP: Recreating another PV & PVC @ 10/05/24 12:46:01.456
  I1005 12:46:01.456453 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-708-4x7zt" @ 10/05/24 12:46:01.47
  STEP: Updating the PVC "pvc-rdktn" @ 10/05/24 12:46:01.48
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-rdktn=updated" @ 10/05/24 12:46:01.491
  STEP: Deleting PVC "pvc-rdktn" via DeleteCollection @ 10/05/24 12:46:01.494
  STEP: Confirm deletion of PVC "pvc-rdktn" @ 10/05/24 12:46:01.505
  STEP: Deleting PV "pv-708-4x7zt" via DeleteCollection @ 10/05/24 12:46:03.515
  STEP: Confirm deletion of PV "pv-708-4x7zt" @ 10/05/24 12:46:03.529
  I1005 12:46:05.537766 19 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1005 12:46:05.537795 19 pv.go:205] Deleting PersistentVolumeClaim "pvc-rdktn"
  I1005 12:46:05.541905 19 pv.go:193] Deleting PersistentVolume "pv-708-4x7zt"
  I1005 12:46:05.546147 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-708" for this suite. @ 10/05/24 12:46:05.55
• [8.230 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 10/05/24 12:46:05.56
  I1005 12:46:05.560589 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 12:46:05.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:46:05.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:46:05.591
  STEP: Creating projection with secret that has name projected-secret-test-1c53b6ed-c812-40f5-a38c-db8567ecc056 @ 10/05/24 12:46:05.593
  STEP: Creating a pod to test consume secrets @ 10/05/24 12:46:05.599
  STEP: Saw pod success @ 10/05/24 12:46:09.627
  I1005 12:46:09.632389 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod pod-projected-secrets-ae0f140f-24af-4305-8ea4-8168eba5d8ee container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/05/24 12:46:09.649
  I1005 12:46:09.667545 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7225" for this suite. @ 10/05/24 12:46:09.672
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 10/05/24 12:46:09.684
  I1005 12:46:09.684684 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename conformance-tests @ 10/05/24 12:46:09.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:46:09.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:46:09.711
  STEP: Getting node addresses @ 10/05/24 12:46:09.713
  I1005 12:46:09.713806 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1005 12:46:09.719373 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8838" for this suite. @ 10/05/24 12:46:09.724
• [0.049 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 10/05/24 12:46:09.734
  I1005 12:46:09.734059 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename endpointslice @ 10/05/24 12:46:09.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:46:09.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:46:09.757
  I1005 12:46:13.822501 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8453" for this suite. @ 10/05/24 12:46:13.827
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 10/05/24 12:46:13.837
  I1005 12:46:13.837552 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename secrets @ 10/05/24 12:46:13.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:46:13.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:46:13.86
  STEP: Creating secret with name s-test-opt-del-f09658b2-2913-4b7a-8622-017de13a41d7 @ 10/05/24 12:46:13.866
  STEP: Creating secret with name s-test-opt-upd-18a4eb04-a4e6-40ea-b0f4-3f79522dbd45 @ 10/05/24 12:46:13.871
  STEP: Creating the pod @ 10/05/24 12:46:13.876
  STEP: Deleting secret s-test-opt-del-f09658b2-2913-4b7a-8622-017de13a41d7 @ 10/05/24 12:46:15.929
  STEP: Updating secret s-test-opt-upd-18a4eb04-a4e6-40ea-b0f4-3f79522dbd45 @ 10/05/24 12:46:15.935
  STEP: Creating secret with name s-test-opt-create-b07ee124-d927-42ec-90d5-535baf47ca7b @ 10/05/24 12:46:15.941
  STEP: waiting to observe update in volume @ 10/05/24 12:46:15.948
  I1005 12:47:32.390055 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-274" for this suite. @ 10/05/24 12:47:32.394
• [78.567 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 10/05/24 12:47:32.404
  I1005 12:47:32.404350 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename resourcequota @ 10/05/24 12:47:32.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:47:32.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:47:32.428
  STEP: Creating a ResourceQuota @ 10/05/24 12:47:32.43
  STEP: Getting a ResourceQuota @ 10/05/24 12:47:32.435
  STEP: Listing all ResourceQuotas with LabelSelector @ 10/05/24 12:47:32.438
  STEP: Patching the ResourceQuota @ 10/05/24 12:47:32.442
  STEP: Deleting a Collection of ResourceQuotas @ 10/05/24 12:47:32.448
  STEP: Verifying the deleted ResourceQuota @ 10/05/24 12:47:32.459
  I1005 12:47:32.462934 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2148" for this suite. @ 10/05/24 12:47:32.467
• [0.070 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 10/05/24 12:47:32.475
  I1005 12:47:32.475421 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename secrets @ 10/05/24 12:47:32.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:47:32.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:47:32.5
  STEP: Creating secret with name secret-test-map-a9df63b4-e61c-44c0-9717-b4ef303882b9 @ 10/05/24 12:47:32.503
  STEP: Creating a pod to test consume secrets @ 10/05/24 12:47:32.508
  STEP: Saw pod success @ 10/05/24 12:47:36.534
  I1005 12:47:36.539034 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod pod-secrets-5dcce1b4-a8d5-4452-b0ec-78a4d3101dd5 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/05/24 12:47:36.547
  I1005 12:47:36.566375 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1697" for this suite. @ 10/05/24 12:47:36.569
• [4.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 10/05/24 12:47:36.578
  I1005 12:47:36.578245 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 12:47:36.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:47:36.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:47:36.602
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 12:47:36.604
  STEP: Saw pod success @ 10/05/24 12:47:40.63
  I1005 12:47:40.635298 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod downwardapi-volume-3896914d-709a-4811-91ad-8d34b1c1cbf2 container client-container: <nil>
  STEP: delete the pod @ 10/05/24 12:47:40.644
  I1005 12:47:40.662514 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2975" for this suite. @ 10/05/24 12:47:40.666
• [4.097 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 10/05/24 12:47:40.675
  I1005 12:47:40.675595 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 12:47:40.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:47:40.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:47:40.703
  STEP: Setting up server cert @ 10/05/24 12:47:40.733
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 12:47:41.122
  STEP: Deploying the webhook pod @ 10/05/24 12:47:41.133
  STEP: Wait for the deployment to be ready @ 10/05/24 12:47:41.144
  I1005 12:47:41.152685 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/05/24 12:47:43.168
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 12:47:43.18
  I1005 12:47:44.181451 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 10/05/24 12:47:44.19
  STEP: Creating a custom resource definition that should be denied by the webhook @ 10/05/24 12:47:44.207
  I1005 12:47:44.207071 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 12:47:44.271321 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8774" for this suite. @ 10/05/24 12:47:44.276
  STEP: Destroying namespace "webhook-markers-6562" for this suite. @ 10/05/24 12:47:44.283
• [3.617 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 10/05/24 12:47:44.292
  I1005 12:47:44.293013 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubelet-test @ 10/05/24 12:47:44.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:47:44.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:47:44.318
  I1005 12:47:48.341808 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6850" for this suite. @ 10/05/24 12:47:48.347
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 10/05/24 12:47:48.355
  I1005 12:47:48.355866 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename watch @ 10/05/24 12:47:48.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:47:48.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:47:48.378
  STEP: creating a watch on configmaps with a certain label @ 10/05/24 12:47:48.381
  STEP: creating a new configmap @ 10/05/24 12:47:48.382
  STEP: modifying the configmap once @ 10/05/24 12:47:48.388
  STEP: changing the label value of the configmap @ 10/05/24 12:47:48.396
  STEP: Expecting to observe a delete notification for the watched object @ 10/05/24 12:47:48.406
  I1005 12:47:48.406497 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-871  a299891b-5240-4601-b617-9711130a854a 9269 0 2024-10-05 12:47:48 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-05 12:47:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 12:47:48.406619 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-871  a299891b-5240-4601-b617-9711130a854a 9270 0 2024-10-05 12:47:48 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-05 12:47:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 12:47:48.406682 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-871  a299891b-5240-4601-b617-9711130a854a 9271 0 2024-10-05 12:47:48 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-05 12:47:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 10/05/24 12:47:48.406
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 10/05/24 12:47:48.416
  STEP: changing the label value of the configmap back @ 10/05/24 12:47:58.418
  STEP: modifying the configmap a third time @ 10/05/24 12:47:58.429
  STEP: deleting the configmap @ 10/05/24 12:47:58.439
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 10/05/24 12:47:58.446
  I1005 12:47:58.446486 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-871  a299891b-5240-4601-b617-9711130a854a 9321 0 2024-10-05 12:47:48 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-05 12:47:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 12:47:58.446591 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-871  a299891b-5240-4601-b617-9711130a854a 9323 0 2024-10-05 12:47:48 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-05 12:47:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 12:47:58.446646 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-871  a299891b-5240-4601-b617-9711130a854a 9324 0 2024-10-05 12:47:48 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-05 12:47:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 12:47:58.446728 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-871" for this suite. @ 10/05/24 12:47:58.45
• [10.105 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 10/05/24 12:47:58.46
  I1005 12:47:58.460846 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 12:47:58.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:47:58.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:47:58.485
  STEP: Setting up server cert @ 10/05/24 12:47:58.516
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 12:47:58.877
  STEP: Deploying the webhook pod @ 10/05/24 12:47:58.883
  STEP: Wait for the deployment to be ready @ 10/05/24 12:47:58.895
  I1005 12:47:58.908114 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/05/24 12:48:00.921
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 12:48:00.937
  I1005 12:48:01.937294 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1005 12:48:01.946633 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8679-crds.webhook.example.com via the AdmissionRegistration API @ 10/05/24 12:48:02.459
  STEP: Creating a custom resource while v1 is storage version @ 10/05/24 12:48:02.474
  STEP: Patching Custom Resource Definition to set v2 as storage @ 10/05/24 12:48:04.507
  STEP: Patching the custom resource while v2 is storage version @ 10/05/24 12:48:04.521
  I1005 12:48:05.120061 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-369" for this suite. @ 10/05/24 12:48:05.125
  STEP: Destroying namespace "webhook-markers-3269" for this suite. @ 10/05/24 12:48:05.134
• [6.684 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 10/05/24 12:48:05.145
  I1005 12:48:05.145606 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename chunking @ 10/05/24 12:48:05.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:48:05.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:48:05.167
  STEP: creating a large number of resources @ 10/05/24 12:48:05.17
  STEP: retrieving those results in paged fashion several times @ 10/05/24 12:48:22.853
  I1005 12:48:22.902430 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I1005 12:48:22.951499 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I1005 12:48:23.002464 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I1005 12:48:23.052599 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I1005 12:48:23.101855 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I1005 12:48:23.151889 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I1005 12:48:23.201860 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I1005 12:48:23.251047 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I1005 12:48:23.302184 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I1005 12:48:23.351609 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I1005 12:48:23.401909 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I1005 12:48:23.451853 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I1005 12:48:23.501663 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I1005 12:48:23.550830 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I1005 12:48:23.601982 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I1005 12:48:23.652091 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I1005 12:48:23.701254 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I1005 12:48:23.752283 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I1005 12:48:23.801831 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I1005 12:48:23.851197 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I1005 12:48:23.902318 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I1005 12:48:23.951838 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I1005 12:48:24.001193 19 chunking.go:98] Retrieved 17/17 results with rv 9875 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I1005 12:48:24.051550 19 chunking.go:98] Retrieved 9/17 results with rv 9875 and continue 
  I1005 12:48:24.102300 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I1005 12:48:24.151609 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I1005 12:48:24.202271 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I1005 12:48:24.251670 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I1005 12:48:24.300367 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I1005 12:48:24.352494 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I1005 12:48:24.402454 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I1005 12:48:24.450685 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I1005 12:48:24.502052 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I1005 12:48:24.552414 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I1005 12:48:24.601210 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I1005 12:48:24.652449 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I1005 12:48:24.702136 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I1005 12:48:24.751349 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I1005 12:48:24.802026 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I1005 12:48:24.851653 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I1005 12:48:24.900117 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I1005 12:48:24.952436 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I1005 12:48:25.002086 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I1005 12:48:25.051324 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I1005 12:48:25.102160 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I1005 12:48:25.151869 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I1005 12:48:25.201101 19 chunking.go:98] Retrieved 17/17 results with rv 9876 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3Niwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I1005 12:48:25.252207 19 chunking.go:98] Retrieved 9/17 results with rv 9876 and continue 
  I1005 12:48:25.302096 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I1005 12:48:25.350895 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I1005 12:48:25.402265 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I1005 12:48:25.451643 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I1005 12:48:25.500623 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I1005 12:48:25.551758 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I1005 12:48:25.601444 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I1005 12:48:25.651281 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I1005 12:48:25.702151 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I1005 12:48:25.752073 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I1005 12:48:25.801267 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I1005 12:48:25.852036 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I1005 12:48:25.901386 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I1005 12:48:25.951139 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I1005 12:48:26.002143 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I1005 12:48:26.051801 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I1005 12:48:26.100704 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I1005 12:48:26.151521 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I1005 12:48:26.202043 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I1005 12:48:26.251327 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I1005 12:48:26.302349 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I1005 12:48:26.351895 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I1005 12:48:26.401117 19 chunking.go:98] Retrieved 17/17 results with rv 9879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTg3OSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I1005 12:48:26.452034 19 chunking.go:98] Retrieved 9/17 results with rv 9879 and continue 
  STEP: retrieving those results all at once @ 10/05/24 12:48:26.452
  I1005 12:48:26.507666 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3548" for this suite. @ 10/05/24 12:48:26.551
• [21.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 10/05/24 12:48:26.606
  I1005 12:48:26.606285 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename configmap @ 10/05/24 12:48:26.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:48:26.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:48:26.633
  STEP: Creating configMap with name cm-test-opt-del-2f4588b8-c33e-43ee-bd9f-5045cb820d53 @ 10/05/24 12:48:26.639
  STEP: Creating configMap with name cm-test-opt-upd-44a14bfc-dce3-44b3-9a6f-bf3c1c02efb2 @ 10/05/24 12:48:26.645
  STEP: Creating the pod @ 10/05/24 12:48:26.65
  STEP: Deleting configmap cm-test-opt-del-2f4588b8-c33e-43ee-bd9f-5045cb820d53 @ 10/05/24 12:48:28.704
  STEP: Updating configmap cm-test-opt-upd-44a14bfc-dce3-44b3-9a6f-bf3c1c02efb2 @ 10/05/24 12:48:28.712
  STEP: Creating configMap with name cm-test-opt-create-582570d0-0df9-4eb0-8444-be580aa14f5c @ 10/05/24 12:48:28.718
  STEP: waiting to observe update in volume @ 10/05/24 12:48:28.723
  I1005 12:49:47.172490 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-623" for this suite. @ 10/05/24 12:49:47.177
• [80.579 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 10/05/24 12:49:47.185
  I1005 12:49:47.185153 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/05/24 12:49:47.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:49:47.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:49:47.208
  I1005 12:49:47.214741 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8313" for this suite. @ 10/05/24 12:49:47.22
• [0.042 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 10/05/24 12:49:47.227
  I1005 12:49:47.227464 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-probe @ 10/05/24 12:49:47.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:49:47.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:49:47.255
  STEP: Creating pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820 @ 10/05/24 12:49:47.258
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/05/24 12:49:49.276
  I1005 12:49:49.280804 19 container_probe.go:1749] Initial restart count of pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 is 0
  I1005 12:49:49.285518 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:49:51.290481 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:49:53.296723 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:49:55.302192 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:49:57.308323 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:49:59.314525 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:01.321817 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:03.327980 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:05.333795 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:07.339197 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:09.346262 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:11.351483 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:13.359793 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:15.365235 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:17.371198 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:19.378046 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:21.383734 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:23.389289 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:25.395157 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:27.400900 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:29.405375 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:31.411273 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:33.416578 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:35.422769 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:37.429349 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:39.436148 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:41.442462 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:43.450170 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:45.455085 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:47.461187 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:49.466994 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:51.473774 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:53.480053 19 container_probe.go:1759] Get pod test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 in namespace container-probe-6820
  I1005 12:50:53.480092 19 container_probe.go:1763] Restart count of pod container-probe-6820/test-grpc-d7ae8afa-582b-4bf7-93a8-19c956e92502 is now 1 (1m4.199258055s elapsed)
  STEP: deleting the pod @ 10/05/24 12:50:53.48
  I1005 12:50:53.497340 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6820" for this suite. @ 10/05/24 12:50:53.501
• [66.283 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 10/05/24 12:50:53.51
  I1005 12:50:53.510413 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename runtimeclass @ 10/05/24 12:50:53.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:50:53.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:50:53.533
  I1005 12:50:55.573064 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9585" for this suite. @ 10/05/24 12:50:55.577
• [2.076 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 10/05/24 12:50:55.586
  I1005 12:50:55.586527 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename podtemplate @ 10/05/24 12:50:55.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:50:55.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:50:55.611
  I1005 12:50:55.649971 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8088" for this suite. @ 10/05/24 12:50:55.655
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 10/05/24 12:50:55.663
  I1005 12:50:55.663917 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename sched-pred @ 10/05/24 12:50:55.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:50:55.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:50:55.688
  I1005 12:50:55.691294 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1005 12:50:55.699401 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1005 12:50:55.702910 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-60 before test
  I1005 12:50:55.708206 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-fttd5 from ingress-nginx-kubernetes-worker started at 2024-10-05 12:19:40 +0000 UTC (1 container statuses recorded)
  I1005 12:50:55.708241 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1005 12:50:55.708248 19 predicates.go:957] calico-node-p547s from kube-system started at 2024-10-05 12:19:31 +0000 UTC (1 container statuses recorded)
  I1005 12:50:55.708253 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1005 12:50:55.708259 19 predicates.go:957] sonobuoy-e2e-job-16f17f2aa4c640ea from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 12:50:55.708264 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1005 12:50:55.708269 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 12:50:55.708275 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-c9n82 from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 12:50:55.708280 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 12:50:55.708286 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1005 12:50:55.708317 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-45-162 before test
  I1005 12:50:55.714170 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hqqb6 from ingress-nginx-kubernetes-worker started at 2024-10-05 12:39:17 +0000 UTC (1 container statuses recorded)
  I1005 12:50:55.714187 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1005 12:50:55.714194 19 predicates.go:957] calico-node-pl9rk from kube-system started at 2024-10-05 12:19:21 +0000 UTC (1 container statuses recorded)
  I1005 12:50:55.714200 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1005 12:50:55.714205 19 predicates.go:957] test-runtimeclass-runtimeclass-9585-preconfigured-handler-fpccc from runtimeclass-9585 started at 2024-10-05 12:50:53 +0000 UTC (1 container statuses recorded)
  I1005 12:50:55.714211 19 predicates.go:959] 	Container test ready: false, restart count 0
  I1005 12:50:55.714236 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-10-05 12:24:14 +0000 UTC (1 container statuses recorded)
  I1005 12:50:55.714241 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1005 12:50:55.714248 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-5zzg2 from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 12:50:55.714258 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 12:50:55.714264 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1005 12:50:55.714270 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-83-192 before test
  I1005 12:50:55.720733 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hdfk2 from ingress-nginx-kubernetes-worker started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 12:50:55.720750 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1005 12:50:55.720757 19 predicates.go:957] calico-node-rtdfm from kube-system started at 2024-10-05 12:17:35 +0000 UTC (1 container statuses recorded)
  I1005 12:50:55.720763 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1005 12:50:55.720770 19 predicates.go:957] coredns-5b4857d7c8-h56gc from kube-system started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 12:50:55.720775 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1005 12:50:55.720781 19 predicates.go:957] kube-state-metrics-5d7bdccd49-r9dmj from kube-system started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 12:50:55.720785 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1005 12:50:55.720791 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-pn79v from kube-system started at 2024-10-05 12:15:37 +0000 UTC (2 container statuses recorded)
  I1005 12:50:55.720796 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1005 12:50:55.720801 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1005 12:50:55.720806 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-bhj4s from kubernetes-dashboard started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 12:50:55.720812 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1005 12:50:55.720823 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-4wgvx from kubernetes-dashboard started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 12:50:55.720827 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1005 12:50:55.720833 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-69jb9 from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 12:50:55.720838 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 12:50:55.720843 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-20-60 @ 10/05/24 12:50:55.736
  STEP: verifying the node has the label node ip-172-31-45-162 @ 10/05/24 12:50:55.749
  STEP: verifying the node has the label node ip-172-31-83-192 @ 10/05/24 12:50:55.761
  I1005 12:50:55.777268 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-fttd5 requesting resource cpu=0m on Node ip-172-31-20-60
  I1005 12:50:55.777995 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-hdfk2 requesting resource cpu=0m on Node ip-172-31-83-192
  I1005 12:50:55.778015 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-hqqb6 requesting resource cpu=0m on Node ip-172-31-45-162
  I1005 12:50:55.778023 19 predicates.go:372] Pod calico-node-p547s requesting resource cpu=250m on Node ip-172-31-20-60
  I1005 12:50:55.778029 19 predicates.go:372] Pod calico-node-pl9rk requesting resource cpu=250m on Node ip-172-31-45-162
  I1005 12:50:55.778036 19 predicates.go:372] Pod calico-node-rtdfm requesting resource cpu=250m on Node ip-172-31-83-192
  I1005 12:50:55.778162 19 predicates.go:372] Pod coredns-5b4857d7c8-h56gc requesting resource cpu=100m on Node ip-172-31-83-192
  I1005 12:50:55.778173 19 predicates.go:372] Pod kube-state-metrics-5d7bdccd49-r9dmj requesting resource cpu=0m on Node ip-172-31-83-192
  I1005 12:50:55.778180 19 predicates.go:372] Pod metrics-server-v0.7.1-6c77d69467-pn79v requesting resource cpu=5m on Node ip-172-31-83-192
  I1005 12:50:55.778186 19 predicates.go:372] Pod dashboard-metrics-scraper-64757cf48d-bhj4s requesting resource cpu=0m on Node ip-172-31-83-192
  I1005 12:50:55.778192 19 predicates.go:372] Pod kubernetes-dashboard-7b6b7bcb5d-4wgvx requesting resource cpu=0m on Node ip-172-31-83-192
  I1005 12:50:55.778198 19 predicates.go:372] Pod test-runtimeclass-runtimeclass-9585-preconfigured-handler-fpccc requesting resource cpu=0m on Node ip-172-31-45-162
  I1005 12:50:55.778203 19 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-45-162
  I1005 12:50:55.778208 19 predicates.go:372] Pod sonobuoy-e2e-job-16f17f2aa4c640ea requesting resource cpu=0m on Node ip-172-31-20-60
  I1005 12:50:55.778214 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-5zzg2 requesting resource cpu=0m on Node ip-172-31-45-162
  I1005 12:50:55.778237 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-69jb9 requesting resource cpu=0m on Node ip-172-31-83-192
  I1005 12:50:55.778242 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-c9n82 requesting resource cpu=0m on Node ip-172-31-20-60
  STEP: Starting Pods to consume most of the cluster CPU. @ 10/05/24 12:50:55.778
  I1005 12:50:55.778271 19 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-20-60
  I1005 12:50:55.788062 19 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-45-162
  I1005 12:50:55.795145 19 predicates.go:382] Creating a pod which consumes cpu=1151m on Node ip-172-31-83-192
  STEP: Creating another pod that requires unavailable amount of CPU. @ 10/05/24 12:50:57.823
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-45336601-a592-4980-a258-55834d1cb19e.17fb8f7e923747b2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4359/filler-pod-45336601-a592-4980-a258-55834d1cb19e to ip-172-31-45-162] @ 10/05/24 12:50:57.827
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-45336601-a592-4980-a258-55834d1cb19e.17fb8f7ec108dbb4], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 10/05/24 12:50:57.827
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-45336601-a592-4980-a258-55834d1cb19e.17fb8f7ec1f3f590], Reason = [Created], Message = [Created container filler-pod-45336601-a592-4980-a258-55834d1cb19e] @ 10/05/24 12:50:57.827
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-45336601-a592-4980-a258-55834d1cb19e.17fb8f7ec436bc6f], Reason = [Started], Message = [Started container filler-pod-45336601-a592-4980-a258-55834d1cb19e] @ 10/05/24 12:50:57.827
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d3c475a3-cb89-4a18-8047-80b5114ef26b.17fb8f7e91933aff], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4359/filler-pod-d3c475a3-cb89-4a18-8047-80b5114ef26b to ip-172-31-20-60] @ 10/05/24 12:50:57.827
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d3c475a3-cb89-4a18-8047-80b5114ef26b.17fb8f7eaeeb0e71], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 10/05/24 12:50:57.828
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d3c475a3-cb89-4a18-8047-80b5114ef26b.17fb8f7eafe80f9a], Reason = [Created], Message = [Created container filler-pod-d3c475a3-cb89-4a18-8047-80b5114ef26b] @ 10/05/24 12:50:57.828
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d3c475a3-cb89-4a18-8047-80b5114ef26b.17fb8f7eb2777966], Reason = [Started], Message = [Started container filler-pod-d3c475a3-cb89-4a18-8047-80b5114ef26b] @ 10/05/24 12:50:57.828
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dbee9aa7-ffa2-4fc3-a248-ce9c03eb3661.17fb8f7e928c97fe], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4359/filler-pod-dbee9aa7-ffa2-4fc3-a248-ce9c03eb3661 to ip-172-31-83-192] @ 10/05/24 12:50:57.828
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dbee9aa7-ffa2-4fc3-a248-ce9c03eb3661.17fb8f7eaf45bd94], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 10/05/24 12:50:57.828
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dbee9aa7-ffa2-4fc3-a248-ce9c03eb3661.17fb8f7eb01deaa4], Reason = [Created], Message = [Created container filler-pod-dbee9aa7-ffa2-4fc3-a248-ce9c03eb3661] @ 10/05/24 12:50:57.828
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dbee9aa7-ffa2-4fc3-a248-ce9c03eb3661.17fb8f7eb2e27213], Reason = [Started], Message = [Started container filler-pod-dbee9aa7-ffa2-4fc3-a248-ce9c03eb3661] @ 10/05/24 12:50:57.828
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17fb8f7f0b07f83f], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 10/05/24 12:50:57.843
  STEP: removing the label node off the node ip-172-31-83-192 @ 10/05/24 12:50:58.84
  STEP: verifying the node doesn't have the label node @ 10/05/24 12:50:58.853
  STEP: removing the label node off the node ip-172-31-20-60 @ 10/05/24 12:50:58.859
  STEP: verifying the node doesn't have the label node @ 10/05/24 12:50:58.871
  STEP: removing the label node off the node ip-172-31-45-162 @ 10/05/24 12:50:58.875
  STEP: verifying the node doesn't have the label node @ 10/05/24 12:50:58.891
  I1005 12:50:58.895024 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4359" for this suite. @ 10/05/24 12:50:58.902
• [3.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 10/05/24 12:50:58.916
  I1005 12:50:58.916934 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 12:50:58.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:50:58.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:50:58.939
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8529 @ 10/05/24 12:50:58.941
  STEP: changing the ExternalName service to type=NodePort @ 10/05/24 12:50:58.946
  STEP: creating replication controller externalname-service in namespace services-8529 @ 10/05/24 12:50:58.969
  I1005 12:50:58.978069      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-8529, replica count: 2
  I1005 12:51:02.028749      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1005 12:51:02.028789 19 resource.go:361] Creating new exec pod
  I1005 12:51:05.056521 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-8529 exec execpodvtxl9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1005 12:51:05.155517 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1005 12:51:05.155586 19 builder.go:147] stdout: "externalname-service-mztln"
  I1005 12:51:05.155764 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-8529 exec execpodvtxl9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.198 80'
  I1005 12:51:05.240809 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.198 80\nConnection to 10.152.183.198 80 port [tcp/http] succeeded!\n"
  I1005 12:51:05.240850 19 builder.go:147] stdout: "externalname-service-27jqj"
  I1005 12:51:05.240933 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-8529 exec execpodvtxl9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.162 30689'
  I1005 12:51:05.321693 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.45.162 30689\nConnection to 172.31.45.162 30689 port [tcp/*] succeeded!\n"
  I1005 12:51:05.321739 19 builder.go:147] stdout: "externalname-service-27jqj"
  I1005 12:51:05.321876 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-8529 exec execpodvtxl9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.83.192 30689'
  I1005 12:51:05.406802 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.83.192 30689\nConnection to 172.31.83.192 30689 port [tcp/*] succeeded!\n"
  I1005 12:51:05.406854 19 builder.go:147] stdout: "externalname-service-mztln"
  I1005 12:51:05.406967 19 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I1005 12:51:05.431779 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8529" for this suite. @ 10/05/24 12:51:05.437
• [6.531 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 10/05/24 12:51:05.447
  I1005 12:51:05.447753 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 12:51:05.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:51:05.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:51:05.473
  STEP: Creating the pod @ 10/05/24 12:51:05.475
  I1005 12:51:08.027994 19 pod_client.go:173] Successfully updated pod "annotationupdate9f8c2536-34bb-4c34-8ea3-e681246a7ab9"
  I1005 12:51:10.046830 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2633" for this suite. @ 10/05/24 12:51:10.052
• [4.613 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 10/05/24 12:51:10.06
  I1005 12:51:10.060607 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename var-expansion @ 10/05/24 12:51:10.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:51:10.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:51:10.087
  STEP: Creating a pod to test substitution in container's args @ 10/05/24 12:51:10.09
  STEP: Saw pod success @ 10/05/24 12:51:14.12
  I1005 12:51:14.124915 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod var-expansion-fb18d764-6a1b-4f5d-8310-39be62efd49e container dapi-container: <nil>
  STEP: delete the pod @ 10/05/24 12:51:14.14
  I1005 12:51:14.157138 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9390" for this suite. @ 10/05/24 12:51:14.161
• [4.109 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 10/05/24 12:51:14.169
  I1005 12:51:14.169368 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-probe @ 10/05/24 12:51:14.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:51:14.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:51:14.194
  STEP: Creating pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553 @ 10/05/24 12:51:14.196
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/05/24 12:51:16.219
  I1005 12:51:16.224578 19 container_probe.go:1749] Initial restart count of pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f is 0
  I1005 12:51:16.228753 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:18.234302 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:20.240922 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:22.247004 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:24.253323 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:26.259343 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:28.266693 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:30.272144 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:32.277878 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:34.283637 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:36.289857 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:38.296393 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:40.302254 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:42.309313 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:44.316316 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:46.320784 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:48.326499 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:50.332462 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:52.339180 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:54.344307 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:56.350036 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:51:58.357164 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:00.363144 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:02.369398 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:04.376079 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:06.381803 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:08.388743 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:10.394096 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:12.399902 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:14.404886 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:16.411416 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:18.417859 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:20.424245 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:22.430284 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:24.436609 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:26.442208 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:28.449574 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:30.454549 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:32.460823 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:34.466254 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:36.472353 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:38.478840 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:40.484710 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:42.491568 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:44.497280 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:46.502096 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:48.509618 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:50.514391 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:52.520728 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:54.525877 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:56.532132 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:52:58.538853 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:00.544790 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:02.551463 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:04.557595 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:06.563734 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:08.569617 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:10.576346 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:12.581952 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:14.589068 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:16.593905 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:18.600030 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:20.605306 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:22.611707 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:24.616152 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:26.622511 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:28.629075 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:30.635116 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:32.640373 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:34.647183 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:36.652773 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:38.660132 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:40.666828 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:42.672159 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:44.677971 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:46.684846 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:48.691116 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:50.697679 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:52.704000 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:54.708937 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:56.715199 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:53:58.721102 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:00.726796 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:02.732399 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:04.739290 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:06.746085 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:08.752722 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:10.759998 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:12.766210 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:14.772278 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:16.778167 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:18.784340 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:20.792292 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:22.798568 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:24.804886 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:26.811733 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:28.818581 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:30.825097 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:32.831991 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:34.838234 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:36.844335 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:38.850530 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:40.856839 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:42.862598 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:44.867809 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:46.872709 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:48.879432 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:50.885277 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:52.891406 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:54.897252 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:56.904378 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:54:58.911130 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:55:00.917450 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:55:02.924499 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:55:04.930948 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:55:06.936940 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:55:08.942799 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:55:10.949137 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:55:12.955804 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  I1005 12:55:14.962126 19 container_probe.go:1759] Get pod liveness-4573cc62-7f24-4aa8-b9f9-f4cbb8efd45f in namespace container-probe-8553
  STEP: deleting the pod @ 10/05/24 12:55:16.963
  I1005 12:55:16.977481 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8553" for this suite. @ 10/05/24 12:55:16.981
• [242.820 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 10/05/24 12:55:16.989
  I1005 12:55:16.989901 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir @ 10/05/24 12:55:16.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:55:17.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:55:17.016
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/05/24 12:55:17.018
  STEP: Saw pod success @ 10/05/24 12:55:19.042
  I1005 12:55:19.048050 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-96b6bdfa-c2e4-467e-a418-181d51a9b788 container test-container: <nil>
  STEP: delete the pod @ 10/05/24 12:55:19.064
  I1005 12:55:19.082018 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8440" for this suite. @ 10/05/24 12:55:19.086
• [2.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 10/05/24 12:55:19.094
  I1005 12:55:19.094877 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 12:55:19.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:55:19.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:55:19.117
  STEP: creating service multi-endpoint-test in namespace services-2726 @ 10/05/24 12:55:19.119
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2726 to expose endpoints map[] @ 10/05/24 12:55:19.132
  I1005 12:55:19.136336 19 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I1005 12:55:20.147011 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-2726 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2726 @ 10/05/24 12:55:20.147
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2726 to expose endpoints map[pod1:[100]] @ 10/05/24 12:55:22.173
  I1005 12:55:22.185581 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-2726 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-2726 @ 10/05/24 12:55:22.185
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2726 to expose endpoints map[pod1:[100] pod2:[101]] @ 10/05/24 12:55:24.207
  I1005 12:55:24.222622 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-2726 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 10/05/24 12:55:24.222
  I1005 12:55:24.222687 19 resource.go:361] Creating new exec pod
  I1005 12:55:27.239395 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-2726 exec execpodxlc4c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1005 12:55:27.325575 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I1005 12:55:27.325618 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 12:55:27.325717 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-2726 exec execpodxlc4c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.120 80'
  I1005 12:55:27.416848 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.120 80\nConnection to 10.152.183.120 80 port [tcp/http] succeeded!\n"
  I1005 12:55:27.416889 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 12:55:27.416981 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-2726 exec execpodxlc4c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1005 12:55:27.503814 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I1005 12:55:27.503874 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 12:55:27.503961 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-2726 exec execpodxlc4c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.120 81'
  I1005 12:55:27.590982 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.120 81\nConnection to 10.152.183.120 81 port [tcp/*] succeeded!\n"
  I1005 12:55:27.591038 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2726 @ 10/05/24 12:55:27.591
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2726 to expose endpoints map[pod2:[101]] @ 10/05/24 12:55:27.604
  I1005 12:55:28.638445 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-2726 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-2726 @ 10/05/24 12:55:28.638
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2726 to expose endpoints map[] @ 10/05/24 12:55:28.652
  I1005 12:55:28.664074 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-2726 exposes endpoints map[]
  I1005 12:55:28.686357 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2726" for this suite. @ 10/05/24 12:55:28.691
• [9.605 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 10/05/24 12:55:28.699
  I1005 12:55:28.699829 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename proxy @ 10/05/24 12:55:28.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:55:28.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:55:28.725
  STEP: starting an echo server on multiple ports @ 10/05/24 12:55:28.742
  STEP: creating replication controller proxy-service-h5pvq in namespace proxy-138 @ 10/05/24 12:55:28.742
  I1005 12:55:28.753204      19 runners.go:193] Created replication controller with name: proxy-service-h5pvq, namespace: proxy-138, replica count: 1
  I1005 12:55:29.804064      19 runners.go:193] proxy-service-h5pvq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I1005 12:55:30.804352      19 runners.go:193] proxy-service-h5pvq Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1005 12:55:30.809498 19 proxy.go:230] setup took 2.080597403s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 10/05/24 12:55:30.809
  I1005 12:55:30.816390 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 6.779443ms)
  I1005 12:55:30.816446 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 6.870436ms)
  I1005 12:55:30.816460 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 6.78962ms)
  I1005 12:55:30.818474 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 8.722766ms)
  I1005 12:55:30.818505 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 8.661135ms)
  I1005 12:55:30.818618 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 8.85006ms)
  I1005 12:55:30.820610 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 10.744419ms)
  I1005 12:55:30.820673 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 10.94599ms)
  I1005 12:55:30.820694 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 10.816581ms)
  I1005 12:55:30.820708 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 10.904616ms)
  I1005 12:55:30.820906 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 11.198318ms)
  I1005 12:55:30.821558 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 11.76769ms)
  I1005 12:55:30.821579 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 11.935648ms)
  I1005 12:55:30.821623 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 11.734544ms)
  I1005 12:55:30.822100 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 12.267516ms)
  I1005 12:55:30.822135 19 proxy.go:558] (0) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 12.229456ms)
  I1005 12:55:30.826495 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 4.200169ms)
  I1005 12:55:30.826762 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 4.409599ms)
  I1005 12:55:30.827131 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 4.74175ms)
  I1005 12:55:30.827971 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 5.495545ms)
  I1005 12:55:30.827993 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 5.650039ms)
  I1005 12:55:30.828473 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 6.309972ms)
  I1005 12:55:30.828926 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 6.51939ms)
  I1005 12:55:30.830017 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 7.42477ms)
  I1005 12:55:30.830084 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 7.659932ms)
  I1005 12:55:30.830088 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 7.413882ms)
  I1005 12:55:30.830099 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 7.56121ms)
  I1005 12:55:30.830104 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 7.610074ms)
  I1005 12:55:30.830483 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 8.025542ms)
  I1005 12:55:30.830905 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 8.280184ms)
  I1005 12:55:30.831358 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 8.555862ms)
  I1005 12:55:30.831693 19 proxy.go:558] (1) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 9.253648ms)
  I1005 12:55:30.835621 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 3.900895ms)
  I1005 12:55:30.836298 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 4.450121ms)
  I1005 12:55:30.836594 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 4.580408ms)
  I1005 12:55:30.836733 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 4.771374ms)
  I1005 12:55:30.837488 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 5.493444ms)
  I1005 12:55:30.837884 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 5.832531ms)
  I1005 12:55:30.838189 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 6.120522ms)
  I1005 12:55:30.838205 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 6.463119ms)
  I1005 12:55:30.838875 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 6.837529ms)
  I1005 12:55:30.838879 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 6.795937ms)
  I1005 12:55:30.839267 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 7.323614ms)
  I1005 12:55:30.839408 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 7.526888ms)
  I1005 12:55:30.839413 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 7.630686ms)
  I1005 12:55:30.839801 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 7.908635ms)
  I1005 12:55:30.840820 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 8.896674ms)
  I1005 12:55:30.841048 19 proxy.go:558] (2) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 9.069637ms)
  I1005 12:55:30.846289 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 5.094215ms)
  I1005 12:55:30.846311 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 5.233352ms)
  I1005 12:55:30.846467 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 5.102776ms)
  I1005 12:55:30.846811 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 5.36042ms)
  I1005 12:55:30.847291 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 6.034103ms)
  I1005 12:55:30.847826 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 6.59004ms)
  I1005 12:55:30.848118 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 6.647985ms)
  I1005 12:55:30.848340 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 7.244335ms)
  I1005 12:55:30.848453 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 7.154583ms)
  I1005 12:55:30.848422 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 7.138377ms)
  I1005 12:55:30.849012 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 7.579099ms)
  I1005 12:55:30.849587 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 8.426703ms)
  I1005 12:55:30.849981 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 8.571142ms)
  I1005 12:55:30.850084 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 8.764421ms)
  I1005 12:55:30.851332 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 9.948374ms)
  I1005 12:55:30.851627 19 proxy.go:558] (3) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 10.280819ms)
  I1005 12:55:30.856106 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 4.445531ms)
  I1005 12:55:30.857283 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 5.393221ms)
  I1005 12:55:30.857456 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 5.717694ms)
  I1005 12:55:30.857662 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 5.71935ms)
  I1005 12:55:30.857895 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 6.103826ms)
  I1005 12:55:30.857981 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 6.139165ms)
  I1005 12:55:30.858035 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 6.178354ms)
  I1005 12:55:30.858400 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 6.625838ms)
  I1005 12:55:30.858601 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 6.773925ms)
  I1005 12:55:30.858789 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 7.032433ms)
  I1005 12:55:30.858789 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 7.068512ms)
  I1005 12:55:30.859420 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 7.54515ms)
  I1005 12:55:30.859684 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 7.779588ms)
  I1005 12:55:30.860058 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 8.377957ms)
  I1005 12:55:30.860287 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 8.47996ms)
  I1005 12:55:30.861397 19 proxy.go:558] (4) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 9.476738ms)
  I1005 12:55:30.865277 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 3.766334ms)
  I1005 12:55:30.866270 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 4.737191ms)
  I1005 12:55:30.867097 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 5.382462ms)
  I1005 12:55:30.867121 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 5.424177ms)
  I1005 12:55:30.867123 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 5.37314ms)
  I1005 12:55:30.868004 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 6.234639ms)
  I1005 12:55:30.868736 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 7.117761ms)
  I1005 12:55:30.868770 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 7.137848ms)
  I1005 12:55:30.868784 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 7.052722ms)
  I1005 12:55:30.868786 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 7.188596ms)
  I1005 12:55:30.869563 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 7.982885ms)
  I1005 12:55:30.869596 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 7.920155ms)
  I1005 12:55:30.870256 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 8.472564ms)
  I1005 12:55:30.870776 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 8.971688ms)
  I1005 12:55:30.870776 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 9.352072ms)
  I1005 12:55:30.870982 19 proxy.go:558] (5) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 9.329409ms)
  I1005 12:55:30.875577 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 4.512747ms)
  I1005 12:55:30.876704 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 5.4547ms)
  I1005 12:55:30.878695 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 7.592003ms)
  I1005 12:55:30.878802 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 7.537694ms)
  I1005 12:55:30.878729 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 7.448005ms)
  I1005 12:55:30.878889 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 7.880438ms)
  I1005 12:55:30.879263 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 8.067826ms)
  I1005 12:55:30.879436 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 8.224786ms)
  I1005 12:55:30.879595 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 8.418813ms)
  I1005 12:55:30.879626 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 8.496831ms)
  I1005 12:55:30.879990 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 8.906108ms)
  I1005 12:55:30.881109 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 9.807307ms)
  I1005 12:55:30.881132 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 9.971962ms)
  I1005 12:55:30.881133 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 10.106346ms)
  I1005 12:55:30.882294 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 11.14784ms)
  I1005 12:55:30.882593 19 proxy.go:558] (6) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 11.276516ms)
  I1005 12:55:30.886569 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 3.947685ms)
  I1005 12:55:30.887033 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 4.363725ms)
  I1005 12:55:30.888159 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 5.430794ms)
  I1005 12:55:30.888310 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 5.474944ms)
  I1005 12:55:30.888349 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 5.532291ms)
  I1005 12:55:30.888481 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 5.629807ms)
  I1005 12:55:30.888610 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 5.808187ms)
  I1005 12:55:30.888730 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 5.777825ms)
  I1005 12:55:30.889548 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 6.609464ms)
  I1005 12:55:30.889599 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 6.697097ms)
  I1005 12:55:30.889734 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 6.983073ms)
  I1005 12:55:30.891186 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 8.486455ms)
  I1005 12:55:30.891186 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 8.31564ms)
  I1005 12:55:30.891242 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 8.458013ms)
  I1005 12:55:30.892690 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 9.801351ms)
  I1005 12:55:30.892690 19 proxy.go:558] (7) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 9.771208ms)
  I1005 12:55:30.897215 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 4.344416ms)
  I1005 12:55:30.898477 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 5.508464ms)
  I1005 12:55:30.898477 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 5.450644ms)
  I1005 12:55:30.899112 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 6.294386ms)
  I1005 12:55:30.899137 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 6.214266ms)
  I1005 12:55:30.899337 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 6.240115ms)
  I1005 12:55:30.899481 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 6.535299ms)
  I1005 12:55:30.899486 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 6.365549ms)
  I1005 12:55:30.899984 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 7.250525ms)
  I1005 12:55:30.900006 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 7.021781ms)
  I1005 12:55:30.900012 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 6.967079ms)
  I1005 12:55:30.900165 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 7.088518ms)
  I1005 12:55:30.900627 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 7.562751ms)
  I1005 12:55:30.901019 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 8.234882ms)
  I1005 12:55:30.901524 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 8.386878ms)
  I1005 12:55:30.901540 19 proxy.go:558] (8) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 8.653979ms)
  I1005 12:55:30.906127 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 4.564563ms)
  I1005 12:55:30.906490 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 4.845748ms)
  I1005 12:55:30.907449 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 5.663081ms)
  I1005 12:55:30.907697 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 5.818121ms)
  I1005 12:55:30.907754 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 6.001029ms)
  I1005 12:55:30.907788 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 6.125153ms)
  I1005 12:55:30.908144 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 6.443772ms)
  I1005 12:55:30.908131 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 6.393069ms)
  I1005 12:55:30.908177 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 6.458766ms)
  I1005 12:55:30.908189 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 6.366639ms)
  I1005 12:55:30.909156 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 7.54348ms)
  I1005 12:55:30.909235 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 7.463424ms)
  I1005 12:55:30.909581 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 7.723068ms)
  I1005 12:55:30.910175 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 8.492673ms)
  I1005 12:55:30.910796 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 8.990406ms)
  I1005 12:55:30.911031 19 proxy.go:558] (9) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 9.192898ms)
  I1005 12:55:30.915814 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 4.49328ms)
  I1005 12:55:30.916538 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 5.255521ms)
  I1005 12:55:30.917115 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 5.903116ms)
  I1005 12:55:30.917252 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 6.059627ms)
  I1005 12:55:30.918005 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 6.945444ms)
  I1005 12:55:30.918127 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 6.831351ms)
  I1005 12:55:30.918848 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 7.508775ms)
  I1005 12:55:30.919038 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 7.776389ms)
  I1005 12:55:30.919069 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 7.655795ms)
  I1005 12:55:30.919257 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 7.797046ms)
  I1005 12:55:30.919514 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 8.422674ms)
  I1005 12:55:30.919650 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 8.280641ms)
  I1005 12:55:30.920135 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 8.889396ms)
  I1005 12:55:30.920395 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 9.232273ms)
  I1005 12:55:30.920577 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 9.191581ms)
  I1005 12:55:30.920577 19 proxy.go:558] (10) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 9.224682ms)
  I1005 12:55:30.924647 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 4.037005ms)
  I1005 12:55:30.925980 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 5.273158ms)
  I1005 12:55:30.926445 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 5.584025ms)
  I1005 12:55:30.926492 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 5.593979ms)
  I1005 12:55:30.926741 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 5.911819ms)
  I1005 12:55:30.927516 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 6.906227ms)
  I1005 12:55:30.927687 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 6.812221ms)
  I1005 12:55:30.927991 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 7.26748ms)
  I1005 12:55:30.928018 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 7.207037ms)
  I1005 12:55:30.928022 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 7.280428ms)
  I1005 12:55:30.928115 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 7.321136ms)
  I1005 12:55:30.929066 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 8.389801ms)
  I1005 12:55:30.929265 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 8.507059ms)
  I1005 12:55:30.929462 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 8.809351ms)
  I1005 12:55:30.929775 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 8.998446ms)
  I1005 12:55:30.930503 19 proxy.go:558] (11) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 9.655961ms)
  I1005 12:55:30.935099 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 4.555914ms)
  I1005 12:55:30.935392 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 4.789359ms)
  I1005 12:55:30.935803 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 5.191505ms)
  I1005 12:55:30.936557 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 5.848342ms)
  I1005 12:55:30.936686 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 5.954632ms)
  I1005 12:55:30.936825 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 6.062119ms)
  I1005 12:55:30.937165 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 6.302748ms)
  I1005 12:55:30.937196 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 6.387051ms)
  I1005 12:55:30.937810 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 6.978795ms)
  I1005 12:55:30.938024 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 7.380238ms)
  I1005 12:55:30.938330 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 7.61471ms)
  I1005 12:55:30.939349 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 8.505199ms)
  I1005 12:55:30.939514 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 8.735428ms)
  I1005 12:55:30.939640 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 8.894094ms)
  I1005 12:55:30.940767 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 9.96521ms)
  I1005 12:55:30.940864 19 proxy.go:558] (12) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 10.199099ms)
  I1005 12:55:30.944821 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 3.880867ms)
  I1005 12:55:30.945962 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 4.998985ms)
  I1005 12:55:30.945977 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 4.981608ms)
  I1005 12:55:30.946290 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 5.309887ms)
  I1005 12:55:30.946424 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 5.521939ms)
  I1005 12:55:30.946948 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 5.801984ms)
  I1005 12:55:30.947730 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 6.667673ms)
  I1005 12:55:30.948286 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 7.117834ms)
  I1005 12:55:30.948392 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 7.192735ms)
  I1005 12:55:30.948510 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 7.492471ms)
  I1005 12:55:30.948639 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 7.532182ms)
  I1005 12:55:30.949972 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 9.081383ms)
  I1005 12:55:30.950145 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 9.021264ms)
  I1005 12:55:30.950772 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 9.728434ms)
  I1005 12:55:30.951736 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 10.547986ms)
  I1005 12:55:30.952265 19 proxy.go:558] (13) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 11.021188ms)
  I1005 12:55:30.956204 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 3.901405ms)
  I1005 12:55:30.956910 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 4.398403ms)
  I1005 12:55:30.957102 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 4.650597ms)
  I1005 12:55:30.958247 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 5.650404ms)
  I1005 12:55:30.958277 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 5.579713ms)
  I1005 12:55:30.958202 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 5.721126ms)
  I1005 12:55:30.958754 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 6.056568ms)
  I1005 12:55:30.958892 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 6.155986ms)
  I1005 12:55:30.959438 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 7.09356ms)
  I1005 12:55:30.960421 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 7.879324ms)
  I1005 12:55:30.960487 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 7.922442ms)
  I1005 12:55:30.961170 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 8.74825ms)
  I1005 12:55:30.961482 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 8.831116ms)
  I1005 12:55:30.961624 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 9.246113ms)
  I1005 12:55:30.961645 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 9.021847ms)
  I1005 12:55:30.961993 19 proxy.go:558] (14) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 9.590865ms)
  I1005 12:55:30.966601 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 4.016415ms)
  I1005 12:55:30.966837 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 4.341128ms)
  I1005 12:55:30.967350 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 4.492763ms)
  I1005 12:55:30.967635 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 4.62781ms)
  I1005 12:55:30.969117 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 6.570129ms)
  I1005 12:55:30.969117 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 6.14883ms)
  I1005 12:55:30.969144 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 6.526425ms)
  I1005 12:55:30.969189 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 6.534828ms)
  I1005 12:55:30.969568 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 6.800488ms)
  I1005 12:55:30.969657 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 6.831048ms)
  I1005 12:55:30.969607 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 6.924179ms)
  I1005 12:55:30.970516 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 8.132613ms)
  I1005 12:55:30.970899 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 8.104888ms)
  I1005 12:55:30.971013 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 8.286169ms)
  I1005 12:55:30.971464 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 8.577208ms)
  I1005 12:55:30.971865 19 proxy.go:558] (15) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 8.946159ms)
  I1005 12:55:30.975886 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 3.938673ms)
  I1005 12:55:30.976109 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 4.190445ms)
  I1005 12:55:30.976408 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 4.371087ms)
  I1005 12:55:30.976611 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 4.629195ms)
  I1005 12:55:30.977502 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 5.300241ms)
  I1005 12:55:30.978001 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 5.996282ms)
  I1005 12:55:30.978190 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 6.047201ms)
  I1005 12:55:30.978194 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 6.015104ms)
  I1005 12:55:30.978378 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 6.25648ms)
  I1005 12:55:30.978423 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 6.339897ms)
  I1005 12:55:30.979327 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 7.253184ms)
  I1005 12:55:30.979859 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 7.737072ms)
  I1005 12:55:30.979874 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 7.986227ms)
  I1005 12:55:30.979999 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 7.95807ms)
  I1005 12:55:30.981634 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 9.413864ms)
  I1005 12:55:30.981634 19 proxy.go:558] (16) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 9.475162ms)
  I1005 12:55:30.985705 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 4.029271ms)
  I1005 12:55:30.987155 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 5.216613ms)
  I1005 12:55:30.987544 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 5.589416ms)
  I1005 12:55:30.987850 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 5.809242ms)
  I1005 12:55:30.987857 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 6.020431ms)
  I1005 12:55:30.988143 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 6.139574ms)
  I1005 12:55:30.989712 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 7.722844ms)
  I1005 12:55:30.989744 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 7.8434ms)
  I1005 12:55:30.989755 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 7.735824ms)
  I1005 12:55:30.990063 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 8.296338ms)
  I1005 12:55:30.990054 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 8.082795ms)
  I1005 12:55:30.990637 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 8.720254ms)
  I1005 12:55:30.991119 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 9.250008ms)
  I1005 12:55:30.991158 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 9.351007ms)
  I1005 12:55:30.991304 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 9.421365ms)
  I1005 12:55:30.991677 19 proxy.go:558] (17) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 9.839435ms)
  I1005 12:55:30.996748 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 4.916028ms)
  I1005 12:55:30.997691 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 5.714608ms)
  I1005 12:55:30.997787 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 5.970803ms)
  I1005 12:55:30.997941 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 5.938058ms)
  I1005 12:55:30.998304 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 6.336057ms)
  I1005 12:55:30.998354 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 6.428687ms)
  I1005 12:55:30.998824 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 7.044805ms)
  I1005 12:55:30.998845 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 6.96166ms)
  I1005 12:55:30.998980 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 7.11396ms)
  I1005 12:55:30.999142 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 7.114687ms)
  I1005 12:55:30.999767 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 7.859312ms)
  I1005 12:55:30.999885 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 8.183821ms)
  I1005 12:55:31.000326 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 8.475466ms)
  I1005 12:55:31.000756 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 8.81345ms)
  I1005 12:55:31.001010 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 9.023661ms)
  I1005 12:55:31.001602 19 proxy.go:558] (18) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 9.836378ms)
  I1005 12:55:31.006213 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">test</... (200; 4.54641ms)
  I1005 12:55:31.006246 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 4.615615ms)
  I1005 12:55:31.006969 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj/proxy/rewriteme">test</a> (200; 5.070867ms)
  I1005 12:55:31.007058 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:160/proxy/: foo (200; 5.311039ms)
  I1005 12:55:31.008045 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:462/proxy/: tls qux (200; 6.115744ms)
  I1005 12:55:31.008466 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:1080/proxy/rewriteme">t... (200; 6.741074ms)
  I1005 12:55:31.008463 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname2/proxy/: bar (200; 6.578641ms)
  I1005 12:55:31.008626 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:460/proxy/: tls baz (200; 6.843782ms)
  I1005 12:55:31.008777 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/pods/http:proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 6.92849ms)
  I1005 12:55:31.008936 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/pods/proxy-service-h5pvq-7l8rj:162/proxy/: bar (200; 7.138265ms)
  I1005 12:55:31.009169 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/: <a href="/api/v1/namespaces/proxy-138/pods/https:proxy-service-h5pvq-7l8rj:443/proxy/tlsrewriteme... (200; 7.404467ms)
  I1005 12:55:31.010597 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname1/proxy/: tls baz (200; 8.730845ms)
  I1005 12:55:31.010612 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/services/https:proxy-service-h5pvq:tlsportname2/proxy/: tls qux (200; 8.906078ms)
  I1005 12:55:31.011317 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname2/proxy/: bar (200; 9.483995ms)
  I1005 12:55:31.011985 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/services/http:proxy-service-h5pvq:portname1/proxy/: foo (200; 10.072957ms)
  I1005 12:55:31.012775 19 proxy.go:558] (19) /api/v1/namespaces/proxy-138/services/proxy-service-h5pvq:portname1/proxy/: foo (200; 10.960465ms)
  STEP: deleting ReplicationController proxy-service-h5pvq in namespace proxy-138, will wait for the garbage collector to delete the pods @ 10/05/24 12:55:31.012
  I1005 12:55:31.077658 19 resources.go:139] Deleting ReplicationController proxy-service-h5pvq took: 9.519077ms
  I1005 12:55:31.178356 19 resources.go:163] Terminating ReplicationController proxy-service-h5pvq pods took: 100.69643ms
  I1005 12:55:33.479451 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-138" for this suite. @ 10/05/24 12:55:33.484
• [4.793 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 10/05/24 12:55:33.493
  I1005 12:55:33.493240 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename var-expansion @ 10/05/24 12:55:33.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:55:33.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:55:33.52
  I1005 12:55:35.541916 19 delete.go:62] Deleting pod "var-expansion-1eeb11ef-27ea-467c-80b3-3b4e2815cec3" in namespace "var-expansion-5966"
  I1005 12:55:35.552521 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-1eeb11ef-27ea-467c-80b3-3b4e2815cec3" to be fully deleted
  I1005 12:55:37.564068 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5966" for this suite. @ 10/05/24 12:55:37.569
• [4.084 seconds]
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 10/05/24 12:55:37.577
  I1005 12:55:37.577096 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename gc @ 10/05/24 12:55:37.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:55:37.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:55:37.601
  I1005 12:55:37.635354 19 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"e5691210-0a56-42c0-8fbf-104826d6e916", Controller:(*bool)(0xc0028011c6), BlockOwnerDeletion:(*bool)(0xc0028011c7)}}
  I1005 12:55:37.643523 19 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"d8c35002-91cb-442e-a582-2951cd349701", Controller:(*bool)(0xc00280140e), BlockOwnerDeletion:(*bool)(0xc00280140f)}}
  I1005 12:55:37.653275 19 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"a0855090-c155-44cf-a929-4fd0d0f1f6b1", Controller:(*bool)(0xc00280162a), BlockOwnerDeletion:(*bool)(0xc00280162b)}}
  I1005 12:55:42.673620 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1853" for this suite. @ 10/05/24 12:55:42.678
• [5.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 10/05/24 12:55:42.687
  I1005 12:55:42.687917 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pods @ 10/05/24 12:55:42.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:55:42.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:55:42.712
  STEP: Saw pod success @ 10/05/24 12:55:46.773
  I1005 12:55:46.777844 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod client-envvars-5374ddf5-7db5-4f2a-8121-1f043d95307e container env3cont: <nil>
  STEP: delete the pod @ 10/05/24 12:55:46.79
  I1005 12:55:46.807109 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-430" for this suite. @ 10/05/24 12:55:46.811
• [4.132 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 10/05/24 12:55:46.82
  I1005 12:55:46.820153 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename var-expansion @ 10/05/24 12:55:46.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:55:46.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:55:46.846
  STEP: Creating a pod to test substitution in volume subpath @ 10/05/24 12:55:46.848
  STEP: Saw pod success @ 10/05/24 12:55:48.868
  I1005 12:55:48.873101 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod var-expansion-571f5e3e-5ff7-4cba-b538-49feb2c8076e container dapi-container: <nil>
  STEP: delete the pod @ 10/05/24 12:55:48.88
  I1005 12:55:48.901477 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9038" for this suite. @ 10/05/24 12:55:48.905
• [2.094 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 10/05/24 12:55:48.914
  I1005 12:55:48.914536 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 12:55:48.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:55:48.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:55:48.933
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/05/24 12:55:48.935
  I1005 12:55:48.935952 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-962 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1005 12:55:48.993040 19 builder.go:146] stderr: ""
  I1005 12:55:48.993087 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 10/05/24 12:55:48.993
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/05/24 12:55:54.046
  I1005 12:55:54.046206 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-962 get pod e2e-test-httpd-pod -o json'
  I1005 12:55:54.092363 19 builder.go:146] stderr: ""
  I1005 12:55:54.092548 19 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-10-05T12:55:48Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-962\",\n        \"resourceVersion\": \"11922\",\n        \"uid\": \"2f0a0b47-3cdc-4fd7-9b12-bf86ff01adc2\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-pmtj9\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-45-162\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-pmtj9\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-05T12:55:49Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-05T12:55:48Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-05T12:55:49Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-05T12:55:49Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-05T12:55:48Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://d71f9eab49ed5b79ac80e17076d2e71cf55878c4a2fe9300c7b6f53b21da9f63\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-10-05T12:55:49Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-pmtj9\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.45.162\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.45.162\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.59.109\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.59.109\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-10-05T12:55:48Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 10/05/24 12:55:54.092
  I1005 12:55:54.092634 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-962 replace -f -'
  I1005 12:55:54.186915 19 builder.go:146] stderr: ""
  I1005 12:55:54.186962 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 10/05/24 12:55:54.186
  I1005 12:55:54.193418 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-962 delete pods e2e-test-httpd-pod'
  I1005 12:55:55.840894 19 builder.go:146] stderr: ""
  I1005 12:55:55.840931 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1005 12:55:55.841115 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-962" for this suite. @ 10/05/24 12:55:55.846
• [6.940 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 10/05/24 12:55:55.854
  I1005 12:55:55.854781 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename disruption @ 10/05/24 12:55:55.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:55:55.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:55:55.879
  STEP: Waiting for the pdb to be processed @ 10/05/24 12:55:55.886
  STEP: Waiting for all pods to be running @ 10/05/24 12:55:57.924
  I1005 12:55:57.930643 19 disruption.go:691] running pods: 0 < 3
  I1005 12:55:59.934739 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3140" for this suite. @ 10/05/24 12:55:59.938
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 10/05/24 12:55:59.949
  I1005 12:55:59.949590 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 12:55:59.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:55:59.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:55:59.973
  STEP: Setting up server cert @ 10/05/24 12:56:00.004
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 12:56:00.223
  STEP: Deploying the webhook pod @ 10/05/24 12:56:00.234
  STEP: Wait for the deployment to be ready @ 10/05/24 12:56:00.249
  I1005 12:56:00.257259 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/05/24 12:56:02.271
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 12:56:02.285
  I1005 12:56:03.285272 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/05/24 12:56:03.294
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/05/24 12:56:03.308
  STEP: Creating a dummy validating-webhook-configuration object @ 10/05/24 12:56:03.32
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 10/05/24 12:56:03.329
  STEP: Creating a dummy mutating-webhook-configuration object @ 10/05/24 12:56:03.337
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 10/05/24 12:56:03.347
  I1005 12:56:03.409479 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8000" for this suite. @ 10/05/24 12:56:03.413
  STEP: Destroying namespace "webhook-markers-4377" for this suite. @ 10/05/24 12:56:03.42
• [3.478 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 10/05/24 12:56:03.427
  I1005 12:56:03.427613 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename runtimeclass @ 10/05/24 12:56:03.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:03.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:03.451
  I1005 12:56:03.461812 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1287" for this suite. @ 10/05/24 12:56:03.466
• [0.046 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 10/05/24 12:56:03.474
  I1005 12:56:03.474015 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir @ 10/05/24 12:56:03.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:03.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:03.498
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/05/24 12:56:03.5
  STEP: Saw pod success @ 10/05/24 12:56:07.526
  I1005 12:56:07.531571 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-ead6e117-555b-4c58-a6c5-e251d7824870 container test-container: <nil>
  STEP: delete the pod @ 10/05/24 12:56:07.545
  I1005 12:56:07.563150 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5914" for this suite. @ 10/05/24 12:56:07.568
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 10/05/24 12:56:07.577
  I1005 12:56:07.577273 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename sysctl @ 10/05/24 12:56:07.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:07.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:07.606
  STEP: Creating a pod with one valid and two invalid sysctls @ 10/05/24 12:56:07.609
  I1005 12:56:07.617141 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8856" for this suite. @ 10/05/24 12:56:07.622
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 10/05/24 12:56:07.629
  I1005 12:56:07.629955 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename certificates @ 10/05/24 12:56:07.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:07.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:07.654
  STEP: getting /apis @ 10/05/24 12:56:08.022
  STEP: getting /apis/certificates.k8s.io @ 10/05/24 12:56:08.026
  STEP: getting /apis/certificates.k8s.io/v1 @ 10/05/24 12:56:08.027
  STEP: creating @ 10/05/24 12:56:08.028
  STEP: getting @ 10/05/24 12:56:08.05
  STEP: listing @ 10/05/24 12:56:08.054
  STEP: watching @ 10/05/24 12:56:08.059
  I1005 12:56:08.059240 19 certificates.go:316] starting watch
  STEP: patching @ 10/05/24 12:56:08.06
  STEP: updating @ 10/05/24 12:56:08.067
  I1005 12:56:08.074424 19 certificates.go:332] waiting for watch events with expected annotations
  I1005 12:56:08.074482 19 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 10/05/24 12:56:08.074
  STEP: patching /approval @ 10/05/24 12:56:08.079
  STEP: updating /approval @ 10/05/24 12:56:08.086
  STEP: getting /status @ 10/05/24 12:56:08.092
  STEP: patching /status @ 10/05/24 12:56:08.096
  STEP: updating /status @ 10/05/24 12:56:08.104
  STEP: deleting @ 10/05/24 12:56:08.111
  STEP: deleting a collection @ 10/05/24 12:56:08.128
  I1005 12:56:08.148880 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-8462" for this suite. @ 10/05/24 12:56:08.152
• [0.531 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 10/05/24 12:56:08.161
  I1005 12:56:08.161570 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir @ 10/05/24 12:56:08.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:08.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:08.186
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 10/05/24 12:56:08.188
  STEP: Saw pod success @ 10/05/24 12:56:10.209
  I1005 12:56:10.214519 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-9ec75659-ceae-4d8d-9cf7-184832d2e886 container test-container: <nil>
  STEP: delete the pod @ 10/05/24 12:56:10.223
  I1005 12:56:10.240665 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7663" for this suite. @ 10/05/24 12:56:10.245
• [2.093 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 10/05/24 12:56:10.254
  I1005 12:56:10.254628 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename replication-controller @ 10/05/24 12:56:10.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:10.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:10.282
  STEP: Creating ReplicationController "e2e-rc-58q6h" @ 10/05/24 12:56:10.285
  I1005 12:56:10.291804 19 rc.go:792] Get Replication Controller "e2e-rc-58q6h" to confirm replicas
  I1005 12:56:11.292199 19 rc.go:792] Get Replication Controller "e2e-rc-58q6h" to confirm replicas
  I1005 12:56:11.297730 19 rc.go:801] Found 1 replicas for "e2e-rc-58q6h" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-58q6h" @ 10/05/24 12:56:11.297
  STEP: Updating a scale subresource @ 10/05/24 12:56:11.301
  STEP: Verifying replicas where modified for replication controller "e2e-rc-58q6h" @ 10/05/24 12:56:11.309
  I1005 12:56:11.309550 19 rc.go:792] Get Replication Controller "e2e-rc-58q6h" to confirm replicas
  I1005 12:56:12.310505 19 rc.go:792] Get Replication Controller "e2e-rc-58q6h" to confirm replicas
  I1005 12:56:12.314712 19 rc.go:801] Found 2 replicas for "e2e-rc-58q6h" replication controller
  I1005 12:56:12.314872 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5078" for this suite. @ 10/05/24 12:56:12.318
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 10/05/24 12:56:12.328
  I1005 12:56:12.328163 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename disruption @ 10/05/24 12:56:12.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:12.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:12.353
  STEP: Creating a kubernetes client @ 10/05/24 12:56:12.355
  I1005 12:56:12.355763 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename disruption-2 @ 10/05/24 12:56:12.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:12.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:12.381
  STEP: Waiting for the pdb to be processed @ 10/05/24 12:56:12.388
  STEP: Waiting for the pdb to be processed @ 10/05/24 12:56:14.399
  STEP: Waiting for the pdb to be processed @ 10/05/24 12:56:14.411
  STEP: listing a collection of PDBs across all namespaces @ 10/05/24 12:56:14.419
  STEP: listing a collection of PDBs in namespace disruption-6431 @ 10/05/24 12:56:14.426
  STEP: deleting a collection of PDBs @ 10/05/24 12:56:14.429
  STEP: Waiting for the PDB collection to be deleted @ 10/05/24 12:56:14.446
  I1005 12:56:14.450334 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-9160" for this suite. @ 10/05/24 12:56:14.455
  I1005 12:56:14.468860 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6431" for this suite. @ 10/05/24 12:56:14.473
• [2.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 10/05/24 12:56:14.481
  I1005 12:56:14.481668 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename job @ 10/05/24 12:56:14.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:14.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:14.507
  STEP: Creating a suspended job @ 10/05/24 12:56:14.515
  STEP: Patching the Job @ 10/05/24 12:56:14.526
  STEP: Watching for Job to be patched @ 10/05/24 12:56:14.544
  I1005 12:56:14.546256 19 job.go:1330] Event ADDED observed for Job e2e-62bww in namespace job-6544 with labels: map[e2e-job-label:e2e-62bww] and annotations: map[]
  I1005 12:56:14.546287 19 job.go:1330] Event MODIFIED observed for Job e2e-62bww in namespace job-6544 with labels: map[e2e-job-label:e2e-62bww] and annotations: map[]
  I1005 12:56:14.546311 19 job.go:1333] Event MODIFIED found for Job e2e-62bww in namespace job-6544 with labels: map[e2e-62bww:patched e2e-job-label:e2e-62bww] and annotations: map[]
  STEP: Updating the job @ 10/05/24 12:56:14.546
  STEP: Watching for Job to be updated @ 10/05/24 12:56:14.557
  I1005 12:56:14.558706 19 job.go:1333] Event MODIFIED found for Job e2e-62bww in namespace job-6544 with labels: map[e2e-62bww:patched e2e-job-label:e2e-62bww] and annotations: map[updated:true]
  I1005 12:56:14.558747 19 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 10/05/24 12:56:14.558
  I1005 12:56:14.562212 19 job.go:1233] Job: e2e-62bww as labels: map[e2e-62bww:patched e2e-job-label:e2e-62bww]
  STEP: Waiting for job to complete @ 10/05/24 12:56:14.562
  STEP: Delete a job collection with a labelselector @ 10/05/24 12:56:24.574
  STEP: Watching for Job to be deleted @ 10/05/24 12:56:24.586
  I1005 12:56:24.587566 19 job.go:1330] Event MODIFIED observed for Job e2e-62bww in namespace job-6544 with labels: map[e2e-62bww:patched e2e-job-label:e2e-62bww] and annotations: map[updated:true]
  I1005 12:56:24.587595 19 job.go:1330] Event MODIFIED observed for Job e2e-62bww in namespace job-6544 with labels: map[e2e-62bww:patched e2e-job-label:e2e-62bww] and annotations: map[updated:true]
  I1005 12:56:24.587606 19 job.go:1330] Event MODIFIED observed for Job e2e-62bww in namespace job-6544 with labels: map[e2e-62bww:patched e2e-job-label:e2e-62bww] and annotations: map[updated:true]
  I1005 12:56:24.587679 19 job.go:1330] Event MODIFIED observed for Job e2e-62bww in namespace job-6544 with labels: map[e2e-62bww:patched e2e-job-label:e2e-62bww] and annotations: map[updated:true]
  I1005 12:56:24.587801 19 job.go:1330] Event MODIFIED observed for Job e2e-62bww in namespace job-6544 with labels: map[e2e-62bww:patched e2e-job-label:e2e-62bww] and annotations: map[updated:true]
  I1005 12:56:24.587817 19 job.go:1330] Event MODIFIED observed for Job e2e-62bww in namespace job-6544 with labels: map[e2e-62bww:patched e2e-job-label:e2e-62bww] and annotations: map[updated:true]
  I1005 12:56:24.587828 19 job.go:1330] Event MODIFIED observed for Job e2e-62bww in namespace job-6544 with labels: map[e2e-62bww:patched e2e-job-label:e2e-62bww] and annotations: map[updated:true]
  I1005 12:56:24.587941 19 job.go:1330] Event MODIFIED observed for Job e2e-62bww in namespace job-6544 with labels: map[e2e-62bww:patched e2e-job-label:e2e-62bww] and annotations: map[updated:true]
  I1005 12:56:24.587951 19 job.go:1330] Event MODIFIED observed for Job e2e-62bww in namespace job-6544 with labels: map[e2e-62bww:patched e2e-job-label:e2e-62bww] and annotations: map[updated:true]
  I1005 12:56:24.587963 19 job.go:1333] Event DELETED found for Job e2e-62bww in namespace job-6544 with labels: map[e2e-62bww:patched e2e-job-label:e2e-62bww] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 10/05/24 12:56:24.587
  I1005 12:56:24.592376 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6544" for this suite. @ 10/05/24 12:56:24.596
• [10.130 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 10/05/24 12:56:24.612
  I1005 12:56:24.612111 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 12:56:24.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:24.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:24.633
  STEP: Setting up server cert @ 10/05/24 12:56:24.659
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 12:56:24.981
  STEP: Deploying the webhook pod @ 10/05/24 12:56:24.99
  STEP: Wait for the deployment to be ready @ 10/05/24 12:56:25.005
  I1005 12:56:25.013954 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/05/24 12:56:27.027
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 12:56:27.038
  I1005 12:56:28.039336 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 10/05/24 12:56:28.048
  STEP: create a namespace for the webhook @ 10/05/24 12:56:28.064
  STEP: create a configmap should be unconditionally rejected by the webhook @ 10/05/24 12:56:28.082
  I1005 12:56:28.168022 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5183" for this suite. @ 10/05/24 12:56:28.172
  STEP: Destroying namespace "webhook-markers-7473" for this suite. @ 10/05/24 12:56:28.182
  STEP: Destroying namespace "fail-closed-namespace-2794" for this suite. @ 10/05/24 12:56:28.188
• [3.584 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 10/05/24 12:56:28.196
  I1005 12:56:28.196545 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 12:56:28.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:28.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:28.226
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7293 @ 10/05/24 12:56:28.228
  STEP: changing the ExternalName service to type=ClusterIP @ 10/05/24 12:56:28.233
  STEP: creating replication controller externalname-service in namespace services-7293 @ 10/05/24 12:56:28.25
  I1005 12:56:28.258780      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-7293, replica count: 2
  I1005 12:56:31.310472      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1005 12:56:31.310523 19 resource.go:361] Creating new exec pod
  I1005 12:56:34.333482 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-7293 exec execpodhtzxl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1005 12:56:34.425352 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1005 12:56:34.425463 19 builder.go:147] stdout: "externalname-service-fzzlw"
  I1005 12:56:34.425551 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-7293 exec execpodhtzxl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.75 80'
  I1005 12:56:34.510590 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.75 80\nConnection to 10.152.183.75 80 port [tcp/http] succeeded!\n"
  I1005 12:56:34.510703 19 builder.go:147] stdout: "externalname-service-ktt8d"
  I1005 12:56:34.510787 19 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I1005 12:56:34.532547 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7293" for this suite. @ 10/05/24 12:56:34.538
• [6.351 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 10/05/24 12:56:34.547
  I1005 12:56:34.547236 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename configmap @ 10/05/24 12:56:34.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:34.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:34.571
  STEP: Creating configMap with name configmap-test-volume-5732d831-96b6-4896-b4e8-39d1eda459f0 @ 10/05/24 12:56:34.574
  STEP: Creating a pod to test consume configMaps @ 10/05/24 12:56:34.581
  STEP: Saw pod success @ 10/05/24 12:56:38.61
  I1005 12:56:38.614624 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod pod-configmaps-74c115d8-8bd4-46d2-978f-359f6601d99c container configmap-volume-test: <nil>
  STEP: delete the pod @ 10/05/24 12:56:38.634
  I1005 12:56:38.657326 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6974" for this suite. @ 10/05/24 12:56:38.662
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 10/05/24 12:56:38.67
  I1005 12:56:38.670454 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename dns @ 10/05/24 12:56:38.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:38.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:38.693
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 10/05/24 12:56:38.696
  I1005 12:56:38.709316 19 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5189  78246986-d0dc-4963-afa1-3ffa4d446333 12779 0 2024-10-05 12:56:38 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-10-05 12:56:38 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7kbvd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7kbvd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 10/05/24 12:56:40.718
  I1005 12:56:40.718574 19 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5189 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 12:56:40.718594 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 12:56:40.719069 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 12:56:40.719111 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-5189/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 10/05/24 12:56:40.774
  I1005 12:56:40.775029 19 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5189 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 12:56:40.775113 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 12:56:40.775567 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 12:56:40.775616 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-5189/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1005 12:56:40.825488 19 dns.go:423] Deleting pod test-dns-nameservers...
  I1005 12:56:40.839450 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5189" for this suite. @ 10/05/24 12:56:40.843
• [2.180 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 10/05/24 12:56:40.85
  I1005 12:56:40.850136 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pod-network-test @ 10/05/24 12:56:40.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:40.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:40.871
  STEP: Performing setup for networking test in namespace pod-network-test-1018 @ 10/05/24 12:56:40.873
  STEP: creating a selector @ 10/05/24 12:56:40.873
  STEP: Creating the service pods in kubernetes @ 10/05/24 12:56:40.873
  I1005 12:56:40.873905 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/05/24 12:56:52.967
  I1005 12:56:54.988887 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1005 12:56:54.988922 19 networking.go:42] Breadth first check of 192.168.89.94 on host 172.31.20.60...
  I1005 12:56:54.992706 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.59.122:9080/dial?request=hostname&protocol=http&host=192.168.89.94&port=8083&tries=1'] Namespace:pod-network-test-1018 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 12:56:54.992731 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 12:56:54.993238 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 12:56:54.993317 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1018/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.59.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.89.94%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1005 12:56:55.044014 19 utils.go:356] Waiting for responses: map[]
  I1005 12:56:55.044056 19 utils.go:360] reached 192.168.89.94 after 0/1 tries
  I1005 12:56:55.044067 19 networking.go:42] Breadth first check of 192.168.59.121 on host 172.31.45.162...
  I1005 12:56:55.049762 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.59.122:9080/dial?request=hostname&protocol=http&host=192.168.59.121&port=8083&tries=1'] Namespace:pod-network-test-1018 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 12:56:55.049787 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 12:56:55.050239 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 12:56:55.050285 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1018/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.59.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.59.121%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1005 12:56:55.095431 19 utils.go:356] Waiting for responses: map[]
  I1005 12:56:55.095481 19 utils.go:360] reached 192.168.59.121 after 0/1 tries
  I1005 12:56:55.095491 19 networking.go:42] Breadth first check of 192.168.195.138 on host 172.31.83.192...
  I1005 12:56:55.101012 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.59.122:9080/dial?request=hostname&protocol=http&host=192.168.195.138&port=8083&tries=1'] Namespace:pod-network-test-1018 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 12:56:55.101037 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 12:56:55.101470 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 12:56:55.101516 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1018/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.59.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.195.138%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1005 12:56:55.144930 19 utils.go:356] Waiting for responses: map[]
  I1005 12:56:55.144968 19 utils.go:360] reached 192.168.195.138 after 0/1 tries
  I1005 12:56:55.144978 19 networking.go:53] Going to retry 0 out of 3 pods....
  I1005 12:56:55.145070 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1018" for this suite. @ 10/05/24 12:56:55.15
• [14.309 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 10/05/24 12:56:55.159
  I1005 12:56:55.159596 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/05/24 12:56:55.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:55.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:55.186
  STEP: creating @ 10/05/24 12:56:55.188
  STEP: getting @ 10/05/24 12:56:55.212
  STEP: listing in namespace @ 10/05/24 12:56:55.216
  STEP: patching @ 10/05/24 12:56:55.22
  STEP: deleting @ 10/05/24 12:56:55.23
  I1005 12:56:55.246593 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4055" for this suite. @ 10/05/24 12:56:55.251
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 10/05/24 12:56:55.26
  I1005 12:56:55.260604 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl-logs @ 10/05/24 12:56:55.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:56:55.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:56:55.287
  STEP: creating a pod @ 10/05/24 12:56:55.289
  I1005 12:56:55.289975 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-logs-8742 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1005 12:56:55.342961 19 builder.go:146] stderr: ""
  I1005 12:56:55.342998 19 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 10/05/24 12:56:55.343
  I1005 12:56:55.343162 19 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I1005 12:56:57.351914 19 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 10/05/24 12:56:57.351
  I1005 12:56:57.352031 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-logs-8742 logs logs-generator logs-generator'
  I1005 12:56:57.409051 19 builder.go:146] stderr: ""
  I1005 12:56:57.409111 19 builder.go:147] stdout: "I1005 12:56:55.904236       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/d5h 425\nI1005 12:56:56.104614       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/s7zj 523\nI1005 12:56:56.304916       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/v46 597\nI1005 12:56:56.505187       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/2r4x 305\nI1005 12:56:56.704421       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/kvb 542\nI1005 12:56:56.904582       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/vkd 331\nI1005 12:56:57.104884       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/qmf 321\nI1005 12:56:57.305182       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/5hb 381\n"
  STEP: limiting log lines @ 10/05/24 12:56:57.409
  I1005 12:56:57.409193 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-logs-8742 logs logs-generator logs-generator --tail=1'
  I1005 12:56:57.464714 19 builder.go:146] stderr: ""
  I1005 12:56:57.464751 19 builder.go:147] stdout: "I1005 12:56:57.305182       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/5hb 381\n"
  I1005 12:56:57.464761 19 logs.go:180] got output "I1005 12:56:57.305182       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/5hb 381\n"
  STEP: limiting log bytes @ 10/05/24 12:56:57.464
  I1005 12:56:57.464845 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-logs-8742 logs logs-generator logs-generator --limit-bytes=1'
  I1005 12:56:57.522921 19 builder.go:146] stderr: ""
  I1005 12:56:57.522970 19 builder.go:147] stdout: "I"
  I1005 12:56:57.522990 19 logs.go:186] got output "I"
  STEP: exposing timestamps @ 10/05/24 12:56:57.523
  I1005 12:56:57.523074 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-logs-8742 logs logs-generator logs-generator --tail=1 --timestamps'
  I1005 12:56:57.578352 19 builder.go:146] stderr: ""
  I1005 12:56:57.578389 19 builder.go:147] stdout: "2024-10-05T12:56:57.504514513Z I1005 12:56:57.504413       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/mfrh 558\n"
  I1005 12:56:57.578399 19 logs.go:192] got output "2024-10-05T12:56:57.504514513Z I1005 12:56:57.504413       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/mfrh 558\n"
  STEP: restricting to a time range @ 10/05/24 12:56:57.578
  I1005 12:57:00.080111 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-logs-8742 logs logs-generator logs-generator --since=1s'
  I1005 12:57:00.136383 19 builder.go:146] stderr: ""
  I1005 12:57:00.136436 19 builder.go:147] stdout: "I1005 12:56:59.304581       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/f8rw 450\nI1005 12:56:59.504704       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/mhh 213\nI1005 12:56:59.705000       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/r9c 384\nI1005 12:56:59.904253       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/c54 238\nI1005 12:57:00.104614       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/rjw 428\n"
  I1005 12:57:00.136488 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-logs-8742 logs logs-generator logs-generator --since=24h'
  I1005 12:57:00.188832 19 builder.go:146] stderr: ""
  I1005 12:57:00.188897 19 builder.go:147] stdout: "I1005 12:56:55.904236       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/d5h 425\nI1005 12:56:56.104614       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/s7zj 523\nI1005 12:56:56.304916       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/v46 597\nI1005 12:56:56.505187       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/2r4x 305\nI1005 12:56:56.704421       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/kvb 542\nI1005 12:56:56.904582       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/vkd 331\nI1005 12:56:57.104884       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/qmf 321\nI1005 12:56:57.305182       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/5hb 381\nI1005 12:56:57.504413       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/mfrh 558\nI1005 12:56:57.704585       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/w25d 365\nI1005 12:56:57.904885       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/8tg7 509\nI1005 12:56:58.105179       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/ww2r 487\nI1005 12:56:58.304415       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/sf54 553\nI1005 12:56:58.504572       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/f88x 206\nI1005 12:56:58.704815       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/dwz 451\nI1005 12:56:58.905112       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/zqd 583\nI1005 12:56:59.104325       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/z26x 549\nI1005 12:56:59.304581       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/f8rw 450\nI1005 12:56:59.504704       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/mhh 213\nI1005 12:56:59.705000       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/r9c 384\nI1005 12:56:59.904253       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/c54 238\nI1005 12:57:00.104614       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/rjw 428\n"
  I1005 12:57:00.189049 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-logs-8742 delete pod logs-generator'
  I1005 12:57:01.051427 19 builder.go:146] stderr: ""
  I1005 12:57:01.051472 19 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1005 12:57:01.051587 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-8742" for this suite. @ 10/05/24 12:57:01.056
• [5.804 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 10/05/24 12:57:01.064
  I1005 12:57:01.065041 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir @ 10/05/24 12:57:01.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:57:01.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:57:01.089
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/05/24 12:57:01.092
  STEP: Saw pod success @ 10/05/24 12:57:05.119
  I1005 12:57:05.123762 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-720019fd-1a87-4cb9-bd73-63cc9b0b6a4a container test-container: <nil>
  STEP: delete the pod @ 10/05/24 12:57:05.133
  I1005 12:57:05.149726 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3684" for this suite. @ 10/05/24 12:57:05.154
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 10/05/24 12:57:05.164
  I1005 12:57:05.164234 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename statefulset @ 10/05/24 12:57:05.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:57:05.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:57:05.189
  STEP: Creating service test in namespace statefulset-9967 @ 10/05/24 12:57:05.191
  I1005 12:57:05.211362 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I1005 12:57:15.215329 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 10/05/24 12:57:15.224
  I1005 12:57:15.240293 19 wait.go:40] Found 1 stateful pods, waiting for 2
  I1005 12:57:25.241960 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1005 12:57:25.241996 19 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 10/05/24 12:57:25.25
  STEP: Delete all of the StatefulSets @ 10/05/24 12:57:25.253
  STEP: Verify that StatefulSets have been deleted @ 10/05/24 12:57:25.264
  I1005 12:57:25.269336 19 statefulset.go:138] Deleting all statefulset in ns statefulset-9967
  I1005 12:57:25.288470 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9967" for this suite. @ 10/05/24 12:57:25.293
• [20.140 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 10/05/24 12:57:25.303
  I1005 12:57:25.303829 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pods @ 10/05/24 12:57:25.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:57:25.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:57:25.327
  STEP: creating the pod @ 10/05/24 12:57:25.331
  STEP: setting up watch @ 10/05/24 12:57:25.331
  STEP: submitting the pod to kubernetes @ 10/05/24 12:57:25.436
  STEP: verifying the pod is in kubernetes @ 10/05/24 12:57:25.447
  STEP: verifying pod creation was observed @ 10/05/24 12:57:25.452
  STEP: deleting the pod gracefully @ 10/05/24 12:57:27.467
  STEP: verifying pod deletion was observed @ 10/05/24 12:57:27.476
  I1005 12:57:28.117360 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5961" for this suite. @ 10/05/24 12:57:28.122
• [2.827 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 10/05/24 12:57:28.13
  I1005 12:57:28.130575 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename replication-controller @ 10/05/24 12:57:28.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:57:28.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:57:28.153
  STEP: Given a ReplicationController is created @ 10/05/24 12:57:28.155
  STEP: When the matched label of one of its pods change @ 10/05/24 12:57:28.162
  I1005 12:57:28.166532 19 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I1005 12:57:33.172802 19 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/05/24 12:57:33.184
  I1005 12:57:34.193499 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1656" for this suite. @ 10/05/24 12:57:34.198
• [6.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 10/05/24 12:57:34.207
  I1005 12:57:34.207852 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename proxy @ 10/05/24 12:57:34.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:57:34.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:57:34.229
  I1005 12:57:34.231514 19 proxy.go:387] Creating pod...
  I1005 12:57:36.251404 19 proxy.go:411] Creating service...
  I1005 12:57:36.263471 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7422/pods/agnhost/proxy?method=DELETE
  I1005 12:57:36.269502 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1005 12:57:36.269539 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7422/pods/agnhost/proxy?method=OPTIONS
  I1005 12:57:36.273798 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1005 12:57:36.273830 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7422/pods/agnhost/proxy?method=PATCH
  I1005 12:57:36.278935 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1005 12:57:36.278963 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7422/pods/agnhost/proxy?method=POST
  I1005 12:57:36.283089 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1005 12:57:36.283121 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7422/pods/agnhost/proxy?method=PUT
  I1005 12:57:36.288145 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1005 12:57:36.288174 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7422/services/e2e-proxy-test-service/proxy?method=DELETE
  I1005 12:57:36.294931 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1005 12:57:36.294979 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7422/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1005 12:57:36.300636 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1005 12:57:36.300672 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7422/services/e2e-proxy-test-service/proxy?method=PATCH
  I1005 12:57:36.307812 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1005 12:57:36.307837 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7422/services/e2e-proxy-test-service/proxy?method=POST
  I1005 12:57:36.313935 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1005 12:57:36.313964 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7422/services/e2e-proxy-test-service/proxy?method=PUT
  I1005 12:57:36.320399 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1005 12:57:36.320433 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7422/pods/agnhost/proxy?method=GET
  I1005 12:57:36.324410 19 proxy.go:487] http.Client request:GET StatusCode:301
  I1005 12:57:36.324452 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7422/services/e2e-proxy-test-service/proxy?method=GET
  I1005 12:57:36.331147 19 proxy.go:487] http.Client request:GET StatusCode:301
  I1005 12:57:36.331170 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7422/pods/agnhost/proxy?method=HEAD
  I1005 12:57:36.335612 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1005 12:57:36.335650 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7422/services/e2e-proxy-test-service/proxy?method=HEAD
  I1005 12:57:36.342349 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1005 12:57:36.342579 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7422" for this suite. @ 10/05/24 12:57:36.346
• [2.148 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 10/05/24 12:57:36.356
  I1005 12:57:36.356126 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 12:57:36.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:57:36.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:57:36.38
  STEP: fetching services @ 10/05/24 12:57:36.383
  I1005 12:57:36.387172 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9497" for this suite. @ 10/05/24 12:57:36.391
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 10/05/24 12:57:36.399
  I1005 12:57:36.399123 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename crd-webhook @ 10/05/24 12:57:36.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:57:36.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:57:36.425
  STEP: Setting up server cert @ 10/05/24 12:57:36.428
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/05/24 12:57:36.556
  STEP: Deploying the custom resource conversion webhook pod @ 10/05/24 12:57:36.569
  STEP: Wait for the deployment to be ready @ 10/05/24 12:57:36.585
  I1005 12:57:36.594080 19 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/05/24 12:57:38.607
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 12:57:38.618
  I1005 12:57:39.619523 19 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1005 12:57:39.628429 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Creating a v1 custom resource @ 10/05/24 12:57:42.185
  STEP: v2 custom resource should be converted @ 10/05/24 12:57:42.191
  I1005 12:57:42.764026 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5297" for this suite. @ 10/05/24 12:57:42.768
• [6.380 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 10/05/24 12:57:42.779
  I1005 12:57:42.779624 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename resourcequota @ 10/05/24 12:57:42.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:57:42.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:57:42.802
  STEP: Counting existing ResourceQuota @ 10/05/24 12:57:42.804
  STEP: Creating a ResourceQuota @ 10/05/24 12:57:47.811
  STEP: Ensuring resource quota status is calculated @ 10/05/24 12:57:47.818
  I1005 12:57:49.824101 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4668" for this suite. @ 10/05/24 12:57:49.828
• [7.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 10/05/24 12:57:49.838
  I1005 12:57:49.838287 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename security-context-test @ 10/05/24 12:57:49.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:57:49.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:57:49.864
  I1005 12:57:53.894136 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9200" for this suite. @ 10/05/24 12:57:53.899
• [4.071 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 10/05/24 12:57:53.91
  I1005 12:57:53.910988 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 12:57:53.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:57:53.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:57:53.938
  STEP: Creating secret with name s-test-opt-del-ac0d846e-28fc-436a-b372-5e8a53d52df9 @ 10/05/24 12:57:53.944
  STEP: Creating secret with name s-test-opt-upd-423c124a-4cb9-4676-ba74-edd13743816a @ 10/05/24 12:57:53.949
  STEP: Creating the pod @ 10/05/24 12:57:53.954
  STEP: Deleting secret s-test-opt-del-ac0d846e-28fc-436a-b372-5e8a53d52df9 @ 10/05/24 12:57:56.004
  STEP: Updating secret s-test-opt-upd-423c124a-4cb9-4676-ba74-edd13743816a @ 10/05/24 12:57:56.013
  STEP: Creating secret with name s-test-opt-create-0f326e30-13b1-457e-a0d5-51790bd6f236 @ 10/05/24 12:57:56.019
  STEP: waiting to observe update in volume @ 10/05/24 12:57:56.025
  I1005 12:59:16.482331 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3689" for this suite. @ 10/05/24 12:59:16.487
• [82.584 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 10/05/24 12:59:16.495
  I1005 12:59:16.495033 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename configmap @ 10/05/24 12:59:16.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:59:16.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:59:16.517
  STEP: Creating configMap with name configmap-test-volume-map-8562be4c-4b6d-4e76-8688-b6e0684ad742 @ 10/05/24 12:59:16.52
  STEP: Creating a pod to test consume configMaps @ 10/05/24 12:59:16.525
  STEP: Saw pod success @ 10/05/24 12:59:20.55
  I1005 12:59:20.555692 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod pod-configmaps-71064449-23d1-42ba-a3af-5be640cba227 container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 12:59:20.567
  I1005 12:59:20.592484 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-841" for this suite. @ 10/05/24 12:59:20.596
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 10/05/24 12:59:20.604
  I1005 12:59:20.604849 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 12:59:20.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:59:20.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:59:20.627
  STEP: creating the pod @ 10/05/24 12:59:20.63
  I1005 12:59:20.630212 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1901 create -f -'
  I1005 12:59:20.721172 19 builder.go:146] stderr: ""
  I1005 12:59:20.721237 19 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 10/05/24 12:59:22.735
  I1005 12:59:22.735965 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1901 label pods pause testing-label=testing-label-value'
  I1005 12:59:22.790511 19 builder.go:146] stderr: ""
  I1005 12:59:22.790550 19 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 10/05/24 12:59:22.79
  I1005 12:59:22.790651 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1901 get pod pause -L testing-label'
  I1005 12:59:22.843992 19 builder.go:146] stderr: ""
  I1005 12:59:22.844030 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 10/05/24 12:59:22.844
  I1005 12:59:22.844106 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1901 label pods pause testing-label-'
  I1005 12:59:22.899373 19 builder.go:146] stderr: ""
  I1005 12:59:22.899413 19 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 10/05/24 12:59:22.899
  I1005 12:59:22.899491 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1901 get pod pause -L testing-label'
  I1005 12:59:22.947844 19 builder.go:146] stderr: ""
  I1005 12:59:22.947893 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 10/05/24 12:59:22.947
  I1005 12:59:22.948041 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1901 delete --grace-period=0 --force -f -'
  I1005 12:59:23.010426 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1005 12:59:23.010466 19 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1005 12:59:23.010505 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1901 get rc,svc -l name=pause --no-headers'
  I1005 12:59:23.061886 19 builder.go:146] stderr: "No resources found in kubectl-1901 namespace.\n"
  I1005 12:59:23.061929 19 builder.go:147] stdout: ""
  I1005 12:59:23.061977 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1901 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1005 12:59:23.108743 19 builder.go:146] stderr: ""
  I1005 12:59:23.108786 19 builder.go:147] stdout: ""
  I1005 12:59:23.108911 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1901" for this suite. @ 10/05/24 12:59:23.113
• [2.519 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 10/05/24 12:59:23.124
  I1005 12:59:23.124153 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename events @ 10/05/24 12:59:23.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:59:23.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:59:23.148
  STEP: Create set of events @ 10/05/24 12:59:23.15
  STEP: get a list of Events with a label in the current namespace @ 10/05/24 12:59:23.171
  STEP: delete a list of events @ 10/05/24 12:59:23.175
  I1005 12:59:23.175804 19 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/05/24 12:59:23.208
  I1005 12:59:23.212605 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-393" for this suite. @ 10/05/24 12:59:23.216
• [0.100 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 10/05/24 12:59:23.224
  I1005 12:59:23.224558 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename containers @ 10/05/24 12:59:23.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:59:23.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:59:23.249
  STEP: Creating a pod to test override arguments @ 10/05/24 12:59:23.251
  STEP: Saw pod success @ 10/05/24 12:59:27.277
  I1005 12:59:27.280589 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod client-containers-139244a1-2cf6-45f8-acc8-615a63e42c17 container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 12:59:27.29
  I1005 12:59:27.312656 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8810" for this suite. @ 10/05/24 12:59:27.316
• [4.102 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 10/05/24 12:59:27.326
  I1005 12:59:27.326318 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 12:59:27.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:59:27.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:59:27.361
  STEP: Setting up server cert @ 10/05/24 12:59:27.392
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 12:59:27.575
  STEP: Deploying the webhook pod @ 10/05/24 12:59:27.587
  STEP: Wait for the deployment to be ready @ 10/05/24 12:59:27.602
  I1005 12:59:27.610150 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/05/24 12:59:29.624
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 12:59:29.639
  I1005 12:59:30.639870 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/05/24 12:59:30.65
  STEP: create a pod that should be denied by the webhook @ 10/05/24 12:59:30.665
  STEP: create a pod that causes the webhook to hang @ 10/05/24 12:59:30.678
  STEP: create a configmap that should be denied by the webhook @ 10/05/24 12:59:40.687
  STEP: create a configmap that should be admitted by the webhook @ 10/05/24 12:59:40.695
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/05/24 12:59:40.705
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/05/24 12:59:40.715
  STEP: create a namespace that bypass the webhook @ 10/05/24 12:59:40.722
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 10/05/24 12:59:40.744
  I1005 12:59:40.806324 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1382" for this suite. @ 10/05/24 12:59:40.81
  STEP: Destroying namespace "webhook-markers-5208" for this suite. @ 10/05/24 12:59:40.82
  STEP: Destroying namespace "exempted-namespace-9988" for this suite. @ 10/05/24 12:59:40.828
• [13.509 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 10/05/24 12:59:40.835
  I1005 12:59:40.835777 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 12:59:40.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:59:40.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:59:40.858
  I1005 12:59:40.860552 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-5771 version'
  I1005 12:59:40.899967 19 builder.go:146] stderr: ""
  I1005 12:59:40.900008 19 builder.go:147] stdout: "Client Version: v1.31.1\nKustomize Version: v5.4.2\nServer Version: v1.31.1\n"
  I1005 12:59:40.900272 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5771" for this suite. @ 10/05/24 12:59:40.906
• [0.083 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 10/05/24 12:59:40.918
  I1005 12:59:40.918624 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename deployment @ 10/05/24 12:59:40.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:59:40.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:59:40.946
  I1005 12:59:40.948754 19 deployment.go:792] Creating deployment "test-recreate-deployment"
  I1005 12:59:40.953580 19 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1005 12:59:40.961693 19 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I1005 12:59:42.973273 19 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I1005 12:59:42.977180 19 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I1005 12:59:42.988890 19 deployment.go:313] Updating deployment test-recreate-deployment
  I1005 12:59:42.988928 19 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1005 12:59:43.190551 19 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1647",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "236a93fb-1a60-4c1c-9eb8-3b0b5e7c8612",
      ResourceVersion: (string) (len=5) "14115",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863729980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1005 12:59:43.195405 19 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1647",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59ca1b45-bf70-400a-853c-048336218016",
      ResourceVersion: (string) (len=5) "14114",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863729983,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "236a93fb-1a60-4c1c-9eb8-3b0b5e7c8612",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 33 36 61 39 33  66 62 2d 31 61 36 30 2d  |\"236a93fb-1a60-|
              00000120  34 63 31 63 2d 39 65 62  38 2d 33 62 30 62 35 65  |4c1c-9eb8-3b0b5e|
              00000130  37 63 38 36 31 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7c8612\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1005 12:59:43.195882 19 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1005 12:59:43.196061 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1647",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c74f5512-e16d-4b5c-8f75-14cb20157941",
      ResourceVersion: (string) (len=5) "14103",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863729980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "236a93fb-1a60-4c1c-9eb8-3b0b5e7c8612",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 33 36 61 39 33  66 62 2d 31 61 36 30 2d  |\"236a93fb-1a60-|
              00000120  34 63 31 63 2d 39 65 62  38 2d 33 62 30 62 35 65  |4c1c-9eb8-3b0b5e|
              00000130  37 63 38 36 31 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7c8612\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1005 12:59:43.200570 19 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-4f9tc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-4f9tc",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-1647",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8759130-93a2-4dac-8644-a705da64716c",
      ResourceVersion: (string) (len=5) "14113",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863729983,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "59ca1b45-bf70-400a-853c-048336218016",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 61 31 62 34 35 2d 62  |d\":\"59ca1b45-b|
              00000090  66 37 30 2d 34 30 30 61  2d 38 35 33 63 2d 30 34  |f70-400a-853c-04|
              000000a0  38 33 33 36 32 31 38 30  31 36 5c 22 7d 22 3a 7b  |8336218016\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vxfvs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vxfvs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863729983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.162",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.162"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863729983,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vxfvs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 12:59:43.201627 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1647" for this suite. @ 10/05/24 12:59:43.206
• [2.296 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 10/05/24 12:59:43.214
  I1005 12:59:43.214994 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/05/24 12:59:43.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:59:43.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:59:43.236
  STEP: getting /apis @ 10/05/24 12:59:43.243
  STEP: getting /apis/admissionregistration.k8s.io @ 10/05/24 12:59:43.246
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 10/05/24 12:59:43.247
  STEP: creating @ 10/05/24 12:59:43.248
  STEP: getting @ 10/05/24 12:59:43.267
  STEP: listing @ 10/05/24 12:59:43.27
  STEP: watching @ 10/05/24 12:59:43.274
  I1005 12:59:43.274198 19 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 10/05/24 12:59:43.275
  STEP: updating @ 10/05/24 12:59:43.281
  I1005 12:59:43.320107 19 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 10/05/24 12:59:43.32
  STEP: patching /status @ 10/05/24 12:59:43.325
  STEP: updating /status @ 10/05/24 12:59:43.332
  STEP: deleting @ 10/05/24 12:59:43.364
  STEP: deleting a collection @ 10/05/24 12:59:43.38
  I1005 12:59:43.405130 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6803" for this suite. @ 10/05/24 12:59:43.409
• [0.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 10/05/24 12:59:43.419
  I1005 12:59:43.419517 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 12:59:43.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:59:43.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:59:43.443
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 12:59:43.446
  STEP: Saw pod success @ 10/05/24 12:59:47.476
  I1005 12:59:47.481641 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod downwardapi-volume-c3cd2913-3ef2-4746-a01f-8b8901727ece container client-container: <nil>
  STEP: delete the pod @ 10/05/24 12:59:47.491
  I1005 12:59:47.508155 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7336" for this suite. @ 10/05/24 12:59:47.512
• [4.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 10/05/24 12:59:47.52
  I1005 12:59:47.520949 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/05/24 12:59:47.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:59:47.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:59:47.544
  I1005 12:59:47.547318 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/05/24 12:59:48.993
  I1005 12:59:48.993879 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6624 --namespace=crd-publish-openapi-6624 create -f -'
  I1005 12:59:49.063337 19 builder.go:146] stderr: ""
  I1005 12:59:49.063382 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2028-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1005 12:59:49.063433 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6624 --namespace=crd-publish-openapi-6624 delete e2e-test-crd-publish-openapi-2028-crds test-cr'
  I1005 12:59:49.117997 19 builder.go:146] stderr: ""
  I1005 12:59:49.118040 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2028-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1005 12:59:49.118144 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6624 --namespace=crd-publish-openapi-6624 apply -f -'
  I1005 12:59:49.175497 19 builder.go:146] stderr: ""
  I1005 12:59:49.175537 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2028-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1005 12:59:49.175588 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6624 --namespace=crd-publish-openapi-6624 delete e2e-test-crd-publish-openapi-2028-crds test-cr'
  I1005 12:59:49.229548 19 builder.go:146] stderr: ""
  I1005 12:59:49.229591 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2028-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/05/24 12:59:49.229
  I1005 12:59:49.229670 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6624 explain e2e-test-crd-publish-openapi-2028-crds'
  I1005 12:59:49.272555 19 builder.go:146] stderr: ""
  I1005 12:59:49.272629 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-2028-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I1005 12:59:50.474253 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6624" for this suite. @ 10/05/24 12:59:50.479
• [2.968 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 10/05/24 12:59:50.488
  I1005 12:59:50.488963 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-probe @ 10/05/24 12:59:50.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 12:59:50.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 12:59:50.509
  STEP: Creating pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625 @ 10/05/24 12:59:50.511
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/05/24 12:59:52.528
  I1005 12:59:52.533153 19 container_probe.go:1749] Initial restart count of pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 is 0
  I1005 12:59:52.537542 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 12:59:54.542825 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 12:59:56.548568 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 12:59:58.554291 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:00.560334 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:02.566146 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:04.572147 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:06.577883 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:08.583013 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:10.588816 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:12.594337 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:14.600524 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:16.604330 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:18.610205 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:20.615187 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:22.620767 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:24.625657 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:26.630958 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:28.636083 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:30.641323 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:32.647412 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:34.653345 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:36.658755 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:38.664765 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:40.670082 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:42.676293 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:44.681926 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:46.687682 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:48.694045 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:50.699965 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:52.706155 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:54.711899 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:56.718743 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:00:58.725084 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:00.730985 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:02.736947 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:04.742573 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:06.747876 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:08.752988 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:10.758348 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:12.764625 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:14.770916 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:16.776774 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:18.782942 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:20.789749 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:22.795642 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:24.802199 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:26.807778 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:28.813732 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:30.819964 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:32.825794 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:34.831768 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:36.836696 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:38.842180 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:40.847592 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:42.853981 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:44.858686 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:46.864522 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:48.871754 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:50.876637 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:52.882890 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:54.889392 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:56.894913 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:01:58.900389 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:00.905413 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:02.912609 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:04.918440 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:06.923661 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:08.928961 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:10.935055 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:12.941550 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:14.945777 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:16.950766 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:18.955949 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:20.961414 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:22.966867 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:24.972897 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:26.978798 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:28.984837 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:30.989945 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:32.995784 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:35.000968 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:37.005673 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:39.011568 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:41.016535 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:43.022302 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:45.028828 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:47.034601 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:49.040408 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:51.046782 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:53.052675 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:55.058436 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:57.064657 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:02:59.070111 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:01.075082 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:03.081172 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:05.086553 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:07.092039 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:09.097420 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:11.103201 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:13.108500 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:15.115373 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:17.120999 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:19.127464 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:21.133716 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:23.139282 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:25.144931 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:27.150424 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:29.155696 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:31.162192 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:33.168591 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:35.174987 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:37.180086 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:39.185789 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:41.191357 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:43.197329 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:45.202903 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:47.207614 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:49.215050 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  I1005 13:03:51.219762 19 container_probe.go:1759] Get pod test-grpc-babcc47f-ce11-4423-9399-a5ee16f9c205 in namespace container-probe-4625
  STEP: deleting the pod @ 10/05/24 13:03:53.221
  I1005 13:03:53.241460 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4625" for this suite. @ 10/05/24 13:03:53.247
• [242.766 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 10/05/24 13:03:53.255
  I1005 13:03:53.255202 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename proxy @ 10/05/24 13:03:53.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:03:53.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:03:53.277
  I1005 13:03:53.280495 19 proxy.go:293] Creating pod...
  I1005 13:03:55.306911 19 proxy.go:317] Creating service...
  I1005 13:03:55.319168 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4533/pods/agnhost/proxy/some/path/with/DELETE
  I1005 13:03:55.327211 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1005 13:03:55.327265 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4533/pods/agnhost/proxy/some/path/with/GET
  I1005 13:03:55.332134 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1005 13:03:55.332163 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4533/pods/agnhost/proxy/some/path/with/HEAD
  I1005 13:03:55.341522 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1005 13:03:55.341556 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4533/pods/agnhost/proxy/some/path/with/OPTIONS
  I1005 13:03:55.346700 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1005 13:03:55.346729 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4533/pods/agnhost/proxy/some/path/with/PATCH
  I1005 13:03:55.350997 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1005 13:03:55.351029 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4533/pods/agnhost/proxy/some/path/with/POST
  I1005 13:03:55.355334 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1005 13:03:55.355373 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4533/pods/agnhost/proxy/some/path/with/PUT
  I1005 13:03:55.360197 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1005 13:03:55.360235 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4533/services/test-service/proxy/some/path/with/DELETE
  I1005 13:03:55.367340 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1005 13:03:55.367370 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4533/services/test-service/proxy/some/path/with/GET
  I1005 13:03:55.375046 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1005 13:03:55.375074 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4533/services/test-service/proxy/some/path/with/HEAD
  I1005 13:03:55.382329 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1005 13:03:55.382362 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4533/services/test-service/proxy/some/path/with/OPTIONS
  I1005 13:03:55.389660 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1005 13:03:55.389696 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4533/services/test-service/proxy/some/path/with/PATCH
  I1005 13:03:55.396854 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1005 13:03:55.396887 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4533/services/test-service/proxy/some/path/with/POST
  I1005 13:03:55.404802 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1005 13:03:55.404835 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4533/services/test-service/proxy/some/path/with/PUT
  I1005 13:03:55.412261 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1005 13:03:55.412377 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4533" for this suite. @ 10/05/24 13:03:55.416
• [2.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 10/05/24 13:03:55.425
  I1005 13:03:55.425771 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename deployment @ 10/05/24 13:03:55.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:03:55.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:03:55.447
  I1005 13:03:55.448732 19 deployment.go:1196] Creating deployment "webserver-deployment"
  I1005 13:03:55.455628 19 deployment.go:1200] Waiting for observed generation 1
  I1005 13:03:57.464890 19 deployment.go:1205] Waiting for all required pods to come up
  I1005 13:03:57.468920 19 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 10/05/24 13:03:57.468
  I1005 13:03:59.478031 19 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I1005 13:03:59.485825 19 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I1005 13:03:59.496663 19 deployment.go:313] Updating deployment webserver-deployment
  I1005 13:03:59.496694 19 deployment.go:1224] Waiting for observed generation 2
  I1005 13:04:01.505839 19 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1005 13:04:01.510493 19 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1005 13:04:01.513868 19 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1005 13:04:01.524113 19 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1005 13:04:01.524150 19 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1005 13:04:01.528114 19 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1005 13:04:01.534897 19 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1005 13:04:01.534921 19 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1005 13:04:01.544815 19 deployment.go:313] Updating deployment webserver-deployment
  I1005 13:04:01.544855 19 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1005 13:04:01.558112 19 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1005 13:04:01.569641 19 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I1005 13:04:01.601284 19 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d14df81b-5d0d-4c21-ad4f-b5029da700b5",
      ResourceVersion: (string) (len=5) "15098",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1005 13:04:01.632557 19 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "626ae6b4-8a68-4d9c-82a4-f1fb4f958824",
      ResourceVersion: (string) (len=5) "15089",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "d14df81b-5d0d-4c21-ad4f-b5029da700b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 31 34 64 66 38  31 62 2d 35 64 30 64 2d  |\"d14df81b-5d0d-|
              00000120  34 63 32 31 2d 61 64 34  66 2d 62 35 30 32 39 64  |4c21-ad4f-b5029d|
              00000130  61 37 30 30 62 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a700b5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1005 13:04:01.633421 19 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I1005 13:04:01.633761 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
      ResourceVersion: (string) (len=5) "15088",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "d14df81b-5d0d-4c21-ad4f-b5029da700b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 31 34 64 66 38  31 62 2d 35 64 30 64 2d  |\"d14df81b-5d0d-|
              00000120  34 63 32 31 2d 61 64 34  66 2d 62 35 30 32 39 64  |4c21-ad4f-b5029d|
              00000130  61 37 30 30 62 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a700b5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1005 13:04:01.669148 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-56qgv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-56qgv",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c603d82-e510-4d60-b094-78002c452091",
      ResourceVersion: (string) (len=5) "14899",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 39  2e 31 30 30 5c 22 7d 22  |2.168.89.100\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8tczt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8tczt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-60",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.60",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.60"
        }
      },
      PodIP: (string) (len=14) "192.168.89.100",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.89.100"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863730236,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3215a6b870e7b808501e31b007eb46d03d96f445607364fe02f73574fb9b998b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8tczt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.670425 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-5jzhl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5jzhl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6182edaa-8c6f-4fbf-ac14-eb2bb298eec1",
      ResourceVersion: (string) (len=5) "15127",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dxn56",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dxn56",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-60",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.671256 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-5p5vq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5p5vq",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bdef7230-330e-4003-9958-c841eb52e601",
      ResourceVersion: (string) (len=5) "15125",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vbzzj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vbzzj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.672336 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-7wb44" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-7wb44",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bfa9605d-1cbd-4ded-945e-39b9697cfe23",
      ResourceVersion: (string) (len=5) "14929",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 39  2e 31 30 32 5c 22 7d 22  |2.168.89.102\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j4lpx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j4lpx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-60",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.60",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.60"
        }
      },
      PodIP: (string) (len=14) "192.168.89.102",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.89.102"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863730236,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c22e7b1ba2ba58e7415daff9c95031d7aa2ef276b8aeadf71f3d12e4d5780b2a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j4lpx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.674494 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-8smcg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-8smcg",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "60429c1f-aa0c-4ac6-b3a2-9b3e8f0405cb",
      ResourceVersion: (string) (len=5) "15134",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-42q4b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-42q4b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.676870 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-brdln" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-brdln",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a7fe306b-979b-4d03-b235-773a94826ddb",
      ResourceVersion: (string) (len=5) "14926",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 39  2e 37 35 5c 22 7d 22 3a  |2.168.59.75\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w7swp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w7swp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.162",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.162"
        }
      },
      PodIP: (string) (len=13) "192.168.59.75",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.59.75"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863730236,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://846ae6a78144cbebec26128a19f073fabe4ab679eae34fd49fb9683b24b484b0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w7swp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.678530 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-dbwvc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-dbwvc",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d6fa242-4f9f-4255-b021-d9d62f8bb20a",
      ResourceVersion: (string) (len=5) "14923",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 39  2e 37 39 5c 22 7d 22 3a  |2.168.59.79\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hnwdt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hnwdt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.162",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.162"
        }
      },
      PodIP: (string) (len=13) "192.168.59.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.59.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863730236,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c93bb615253d5f66ce8f971a840738177f98e8a01320408b9e828864f8ed307f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hnwdt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.682450 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-fdgm6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-fdgm6",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3f11607-3bdc-4bdf-a3bb-14645573f99b",
      ResourceVersion: (string) (len=5) "15142",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-75l8l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-75l8l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.683534 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-fk8j9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-fk8j9",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c71badd7-4bd8-40c2-9810-7aa08ad73c78",
      ResourceVersion: (string) (len=5) "15132",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-22kr9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-22kr9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-192",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.684336 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-gs6tp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-gs6tp",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "379cb35d-eb09-4d3f-890c-1f1f7d1bc6ae",
      ResourceVersion: (string) (len=5) "15143",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j2lws",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j2lws",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.685265 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-hr9t4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hr9t4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f42f470b-3a32-4b32-af57-6769b9a33a3a",
      ResourceVersion: (string) (len=5) "15138",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nkvxt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nkvxt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.686884 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-l4px5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-l4px5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5acdb2ac-072d-46b9-b561-7c2fb3bddf84",
      ResourceVersion: (string) (len=5) "15141",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6hqzd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6hqzd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-192",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.192",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.192"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6hqzd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.688362 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-n7j48" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-n7j48",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "34f3a43e-7c05-49d2-bc5a-df9c9a5eccf0",
      ResourceVersion: (string) (len=5) "15136",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s75hc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s75hc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-60",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.60",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.60"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s75hc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.690358 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-p9c5c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-p9c5c",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "048c9409-2fa2-4ca8-b99b-1569a79330eb",
      ResourceVersion: (string) (len=5) "14947",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  35 2e 31 34 30 5c 22 7d  |2.168.195.140\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dkxhh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dkxhh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-192",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.192",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.192"
        }
      },
      PodIP: (string) (len=15) "192.168.195.140",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.140"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863730238,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a03fe2015bdab0d5c3aa898d2f40e05f0e1b8b3e28ddbee0893dec6dee1f1a00",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dkxhh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.692259 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-qbqp2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-qbqp2",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f32010b4-1851-4091-8132-368948d10a21",
      ResourceVersion: (string) (len=5) "14950",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  35 2e 31 33 39 5c 22 7d  |2.168.195.139\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c5gxj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c5gxj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-192",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.192",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.192"
        }
      },
      PodIP: (string) (len=15) "192.168.195.139",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.139"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863730238,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://75ccf72ee7f27973ae35e42cb0f45cac8360db987f0d1b570845317b2e9880e1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-c5gxj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.695135 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-qwhcw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-qwhcw",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca80c64e-e2c1-444c-a396-5c650adbdc4e",
      ResourceVersion: (string) (len=5) "15140",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p4stc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p4stc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.696085 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-r6b87" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-r6b87",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6bdf016d-3486-4cd8-995e-034896539170",
      ResourceVersion: (string) (len=5) "15110",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-99pc9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-99pc9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.162",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.162"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-99pc9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.697530 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-tz55r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-tz55r",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a04ed0f0-88d5-48ad-814d-a94b7ef22c6b",
      ResourceVersion: (string) (len=5) "14903",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 39  2e 31 30 31 5c 22 7d 22  |2.168.89.101\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fr7ms",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fr7ms",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-60",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.60",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.60"
        }
      },
      PodIP: (string) (len=14) "192.168.89.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.89.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863730236,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://81132e9809a51d3c036b1f124373057ffe57777060bc8723088768bd94ebc457",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fr7ms",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.699614 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-w2849" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-w2849",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8367fb07-16bc-4638-8131-454cf8294555",
      ResourceVersion: (string) (len=5) "14961",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  35 2e 31 34 31 5c 22 7d  |2.168.195.141\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z6gjz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z6gjz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-192",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.192",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.192"
        }
      },
      PodIP: (string) (len=15) "192.168.195.141",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.141"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863730238,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8b3a3d0ad39625cd51c2843cf40b28a089f8bb1c495a3b5cbcc2eb138a387ef5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-z6gjz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.701572 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-xmjqm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-xmjqm",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc45cfa9-0fc2-4913-9966-93346f127625",
      ResourceVersion: (string) (len=5) "15131",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd6f53dd-3831-401d-8245-d2992089785c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  36 66 35 33 64 64 2d 33  |d\":\"cd6f53dd-3|
              00000090  38 33 31 2d 34 30 31 64  2d 38 32 34 35 2d 64 32  |831-401d-8245-d2|
              000000a0  39 39 32 30 38 39 37 38  35 63 5c 22 7d 22 3a 7b  |992089785c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pmgvk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pmgvk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.162",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.162"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pmgvk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.702854 19 deployment.go:67] Pod "webserver-deployment-786f49d774-68nrx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-68nrx",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db1b0212-bda4-4cc0-9257-39531ce7b13d",
      ResourceVersion: (string) (len=5) "15057",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "626ae6b4-8a68-4d9c-82a4-f1fb4f958824",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 32  36 61 65 36 62 34 2d 38  |d\":\"626ae6b4-8|
              00000090  61 36 38 2d 34 64 39 63  2d 38 32 61 34 2d 66 31  |a68-4d9c-82a4-f1|
              000000a0  66 62 34 66 39 35 38 38  32 34 5c 22 7d 22 3a 7b  |fb4f958824\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 39 2e 31 30  34 5c 22 7d 22 3a 7b 22  |68.89.104\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xs5fs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xs5fs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-60",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.60",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.60"
        }
      },
      PodIP: (string) (len=14) "192.168.89.104",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.89.104"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xs5fs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.704751 19 deployment.go:67] Pod "webserver-deployment-786f49d774-79lrq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-79lrq",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "258fd5bc-b759-4040-afd9-c6835d8ed0a9",
      ResourceVersion: (string) (len=5) "15109",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "626ae6b4-8a68-4d9c-82a4-f1fb4f958824",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 32  36 61 65 36 62 34 2d 38  |d\":\"626ae6b4-8|
              00000090  61 36 38 2d 34 64 39 63  2d 38 32 61 34 2d 66 31  |a68-4d9c-82a4-f1|
              000000a0  66 62 34 66 39 35 38 38  32 34 5c 22 7d 22 3a 7b  |fb4f958824\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fwxqf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fwxqf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.705720 19 deployment.go:67] Pod "webserver-deployment-786f49d774-98n2b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-98n2b",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8403b152-7545-4aea-9acd-d19d87fc7e8b",
      ResourceVersion: (string) (len=5) "15053",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "626ae6b4-8a68-4d9c-82a4-f1fb4f958824",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 32  36 61 65 36 62 34 2d 38  |d\":\"626ae6b4-8|
              00000090  61 36 38 2d 34 64 39 63  2d 38 32 61 34 2d 66 31  |a68-4d9c-82a4-f1|
              000000a0  66 62 34 66 39 35 38 38  32 34 5c 22 7d 22 3a 7b  |fb4f958824\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 39 2e 31 30  33 5c 22 7d 22 3a 7b 22  |68.89.103\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r6bw5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r6bw5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-60",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.60",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.60"
        }
      },
      PodIP: (string) (len=14) "192.168.89.103",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.89.103"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r6bw5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.707020 19 deployment.go:67] Pod "webserver-deployment-786f49d774-dw75w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-dw75w",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f60b818-fb58-4458-82b0-79d8d4028668",
      ResourceVersion: (string) (len=5) "15084",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "626ae6b4-8a68-4d9c-82a4-f1fb4f958824",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 32  36 61 65 36 62 34 2d 38  |d\":\"626ae6b4-8|
              00000090  61 36 38 2d 34 64 39 63  2d 38 32 61 34 2d 66 31  |a68-4d9c-82a4-f1|
              000000a0  66 62 34 66 39 35 38 38  32 34 5c 22 7d 22 3a 7b  |fb4f958824\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 35 39 2e 38 30  5c 22 7d 22 3a 7b 22 2e  |68.59.80\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-srcpt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-srcpt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.162",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.162"
        }
      },
      PodIP: (string) (len=13) "192.168.59.80",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.59.80"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-srcpt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.708380 19 deployment.go:67] Pod "webserver-deployment-786f49d774-hcz2f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-hcz2f",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "03831502-99c6-4853-9dca-5c4d6d98ee22",
      ResourceVersion: (string) (len=5) "15060",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "626ae6b4-8a68-4d9c-82a4-f1fb4f958824",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 32  36 61 65 36 62 34 2d 38  |d\":\"626ae6b4-8|
              00000090  61 36 38 2d 34 64 39 63  2d 38 32 61 34 2d 66 31  |a68-4d9c-82a4-f1|
              000000a0  66 62 34 66 39 35 38 38  32 34 5c 22 7d 22 3a 7b  |fb4f958824\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 39 35 2e 31  34 32 5c 22 7d 22 3a 7b  |68.195.142\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7mtk5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7mtk5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-192",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.192",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.192"
        }
      },
      PodIP: (string) (len=15) "192.168.195.142",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.142"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7mtk5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.709780 19 deployment.go:67] Pod "webserver-deployment-786f49d774-ljgg5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-ljgg5",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56052d02-f551-4c95-bbe1-0a291128952b",
      ResourceVersion: (string) (len=5) "15085",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "626ae6b4-8a68-4d9c-82a4-f1fb4f958824",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 32  36 61 65 36 62 34 2d 38  |d\":\"626ae6b4-8|
              00000090  61 36 38 2d 34 64 39 63  2d 38 32 61 34 2d 66 31  |a68-4d9c-82a4-f1|
              000000a0  66 62 34 66 39 35 38 38  32 34 5c 22 7d 22 3a 7b  |fb4f958824\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 35 39 2e 38 31  5c 22 7d 22 3a 7b 22 2e  |68.59.81\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wwvh7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wwvh7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.162",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.162"
        }
      },
      PodIP: (string) (len=13) "192.168.59.81",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.59.81"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wwvh7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.710927 19 deployment.go:67] Pod "webserver-deployment-786f49d774-m425g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-m425g",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31573e0e-0f27-4778-b9e3-4066f79e143d",
      ResourceVersion: (string) (len=5) "15126",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "626ae6b4-8a68-4d9c-82a4-f1fb4f958824",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 32  36 61 65 36 62 34 2d 38  |d\":\"626ae6b4-8|
              00000090  61 36 38 2d 34 64 39 63  2d 38 32 61 34 2d 66 31  |a68-4d9c-82a4-f1|
              000000a0  66 62 34 66 39 35 38 38  32 34 5c 22 7d 22 3a 7b  |fb4f958824\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w44cd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w44cd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.711754 19 deployment.go:67] Pod "webserver-deployment-786f49d774-m92mb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-m92mb",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f55e7ab-5cdc-4211-ac8c-60d22f013790",
      ResourceVersion: (string) (len=5) "15120",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "626ae6b4-8a68-4d9c-82a4-f1fb4f958824",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 32  36 61 65 36 62 34 2d 38  |d\":\"626ae6b4-8|
              00000090  61 36 38 2d 34 64 39 63  2d 38 32 61 34 2d 66 31  |a68-4d9c-82a4-f1|
              000000a0  66 62 34 66 39 35 38 38  32 34 5c 22 7d 22 3a 7b  |fb4f958824\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zp9qd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zp9qd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-192",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.192",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.192"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zp9qd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.712829 19 deployment.go:67] Pod "webserver-deployment-786f49d774-pztbg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-pztbg",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18fa2ae3-48c8-493e-bc47-8568ebdbbce9",
      ResourceVersion: (string) (len=5) "15130",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "626ae6b4-8a68-4d9c-82a4-f1fb4f958824",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 32  36 61 65 36 62 34 2d 38  |d\":\"626ae6b4-8|
              00000090  61 36 38 2d 34 64 39 63  2d 38 32 61 34 2d 66 31  |a68-4d9c-82a4-f1|
              000000a0  66 62 34 66 39 35 38 38  32 34 5c 22 7d 22 3a 7b  |fb4f958824\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kprnd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kprnd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-60",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.713683 19 deployment.go:67] Pod "webserver-deployment-786f49d774-rcnj8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-rcnj8",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7176c0b-7835-42e6-a8e7-fe68d51dfcd3",
      ResourceVersion: (string) (len=5) "15128",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "626ae6b4-8a68-4d9c-82a4-f1fb4f958824",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 32  36 61 65 36 62 34 2d 38  |d\":\"626ae6b4-8|
              00000090  61 36 38 2d 34 64 39 63  2d 38 32 61 34 2d 66 31  |a68-4d9c-82a4-f1|
              000000a0  66 62 34 66 39 35 38 38  32 34 5c 22 7d 22 3a 7b  |fb4f958824\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w59qw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w59qw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-192",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.714477 19 deployment.go:67] Pod "webserver-deployment-786f49d774-tlh4r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-tlh4r",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6dadc33b-eeb5-44e2-8ba0-f2fb01686f62",
      ResourceVersion: (string) (len=5) "15139",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "626ae6b4-8a68-4d9c-82a4-f1fb4f958824",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 32  36 61 65 36 62 34 2d 38  |d\":\"626ae6b4-8|
              00000090  61 36 38 2d 34 64 39 63  2d 38 32 61 34 2d 66 31  |a68-4d9c-82a4-f1|
              000000a0  66 62 34 66 39 35 38 38  32 34 5c 22 7d 22 3a 7b  |fb4f958824\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w5bq7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w5bq7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.715141 19 deployment.go:67] Pod "webserver-deployment-786f49d774-xb6sr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xb6sr",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32d7ca90-1206-4ee2-8130-59c220dc8ab4",
      ResourceVersion: (string) (len=5) "15133",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "626ae6b4-8a68-4d9c-82a4-f1fb4f958824",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 32  36 61 65 36 62 34 2d 38  |d\":\"626ae6b4-8|
              00000090  61 36 38 2d 34 64 39 63  2d 38 32 61 34 2d 66 31  |a68-4d9c-82a4-f1|
              000000a0  66 62 34 66 39 35 38 38  32 34 5c 22 7d 22 3a 7b  |fb4f958824\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gxq5m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gxq5m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-192",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.718748 19 deployment.go:67] Pod "webserver-deployment-786f49d774-xlhbg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xlhbg",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-100",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fde41b9a-273c-44bd-862e-50458e3a25b6",
      ResourceVersion: (string) (len=5) "15112",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "626ae6b4-8a68-4d9c-82a4-f1fb4f958824",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 32  36 61 65 36 62 34 2d 38  |d\":\"626ae6b4-8|
              00000090  61 36 38 2d 34 64 39 63  2d 38 32 61 34 2d 66 31  |a68-4d9c-82a4-f1|
              000000a0  66 62 34 66 39 35 38 38  32 34 5c 22 7d 22 3a 7b  |fb4f958824\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r8dk2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r8dk2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-60",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:04:01.721545 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-100" for this suite. @ 10/05/24 13:04:01.729
• [6.318 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 10/05/24 13:04:01.744
  I1005 13:04:01.744966 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename namespaces @ 10/05/24 13:04:01.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:04:01.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:04:01.803
  STEP: creating a Namespace @ 10/05/24 13:04:01.806
  STEP: patching the Namespace @ 10/05/24 13:04:01.842
  STEP: get the Namespace and ensuring it has the label @ 10/05/24 13:04:01.858
  I1005 13:04:01.875133 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9138" for this suite. @ 10/05/24 13:04:01.881
  STEP: Destroying namespace "nspatchtest-832564cf-13af-4d95-9800-2aa576f234c7-8598" for this suite. @ 10/05/24 13:04:01.89
• [0.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 10/05/24 13:04:01.899
  I1005 13:04:01.899733 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename svcaccounts @ 10/05/24 13:04:01.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:04:01.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:04:01.921
  STEP: reading a file in the container @ 10/05/24 13:04:03.951
  I1005 13:04:03.952065 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2815 pod-service-account-3286b3f3-f8fa-455a-841b-ec9192e8a7e4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 10/05/24 13:04:04.039
  I1005 13:04:04.039665 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2815 pod-service-account-3286b3f3-f8fa-455a-841b-ec9192e8a7e4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 10/05/24 13:04:04.122
  I1005 13:04:04.122113 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2815 pod-service-account-3286b3f3-f8fa-455a-841b-ec9192e8a7e4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1005 13:04:04.214938 19 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-2815"
  I1005 13:04:04.216583 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2815" for this suite. @ 10/05/24 13:04:04.22
• [2.331 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 10/05/24 13:04:04.23
  I1005 13:04:04.230552 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir @ 10/05/24 13:04:04.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:04:04.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:04:04.248
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/05/24 13:04:04.25
  STEP: Saw pod success @ 10/05/24 13:04:08.276
  I1005 13:04:08.279805 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod pod-004730ba-155b-4e12-94a6-e64e0c3ba9e6 container test-container: <nil>
  STEP: delete the pod @ 10/05/24 13:04:08.292
  I1005 13:04:08.310374 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3444" for this suite. @ 10/05/24 13:04:08.314
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 10/05/24 13:04:08.321
  I1005 13:04:08.321681 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:04:08.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:04:08.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:04:08.342
  STEP: Creating configMap with name cm-test-opt-del-05fc9b8c-6197-461b-9066-a58e182300b5 @ 10/05/24 13:04:08.35
  STEP: Creating configMap with name cm-test-opt-upd-5b5b9d48-e992-4d3a-9ed9-218e378ac4e1 @ 10/05/24 13:04:08.355
  STEP: Creating the pod @ 10/05/24 13:04:08.361
  STEP: Deleting configmap cm-test-opt-del-05fc9b8c-6197-461b-9066-a58e182300b5 @ 10/05/24 13:04:10.41
  STEP: Updating configmap cm-test-opt-upd-5b5b9d48-e992-4d3a-9ed9-218e378ac4e1 @ 10/05/24 13:04:10.418
  STEP: Creating configMap with name cm-test-opt-create-417ccb0d-9a47-46e4-a9bc-5622c63a2ba1 @ 10/05/24 13:04:10.423
  STEP: waiting to observe update in volume @ 10/05/24 13:04:10.428
  I1005 13:05:32.857356 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3420" for this suite. @ 10/05/24 13:05:32.861
• [84.546 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 10/05/24 13:05:32.868
  I1005 13:05:32.868133 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename gc @ 10/05/24 13:05:32.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:05:32.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:05:32.89
  STEP: create the deployment @ 10/05/24 13:05:32.893
  W1005 13:05:32.904192      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/05/24 13:05:32.904
  STEP: delete the deployment @ 10/05/24 13:05:33.414
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 10/05/24 13:05:33.424
  STEP: Gathering metrics @ 10/05/24 13:05:33.945
  W1005 13:05:33.950479      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1005 13:05:33.950513 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1005 13:05:33.950700 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3351" for this suite. @ 10/05/24 13:05:33.955
• [1.096 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 10/05/24 13:05:33.964
  I1005 13:05:33.964127 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename field-validation @ 10/05/24 13:05:33.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:05:33.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:05:33.986
  I1005 13:05:33.987835 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  W1005 13:05:36.531003      19 warnings.go:70] unknown field "alpha"
  W1005 13:05:36.531030      19 warnings.go:70] unknown field "beta"
  W1005 13:05:36.531034      19 warnings.go:70] unknown field "delta"
  W1005 13:05:36.531036      19 warnings.go:70] unknown field "epsilon"
  W1005 13:05:36.531040      19 warnings.go:70] unknown field "gamma"
  I1005 13:05:37.079111 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1141" for this suite. @ 10/05/24 13:05:37.083
• [3.129 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 10/05/24 13:05:37.093
  I1005 13:05:37.093707 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/05/24 13:05:37.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:05:37.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:05:37.113
  STEP: creating a target pod @ 10/05/24 13:05:37.116
  STEP: adding an ephemeral container @ 10/05/24 13:05:39.139
  STEP: checking pod container endpoints @ 10/05/24 13:05:41.161
  I1005 13:05:41.161534 19 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8492 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:05:41.161553 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:05:41.161996 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:05:41.162038 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-8492/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1005 13:05:41.199180 19 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 10/05/24 13:05:41.217
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 10/05/24 13:05:41.223
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 10/05/24 13:05:41.236
  I1005 13:05:41.240442 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8492" for this suite. @ 10/05/24 13:05:41.245
• [4.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 10/05/24 13:05:41.257
  I1005 13:05:41.257762 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 13:05:41.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:05:41.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:05:41.277
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 13:05:41.28
  STEP: Saw pod success @ 10/05/24 13:05:45.305
  I1005 13:05:45.311140 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod downwardapi-volume-778a59cd-b041-441a-8e8b-1330bcde0e34 container client-container: <nil>
  STEP: delete the pod @ 10/05/24 13:05:45.319
  I1005 13:05:45.335096 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-716" for this suite. @ 10/05/24 13:05:45.339
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 10/05/24 13:05:45.347
  I1005 13:05:45.347429 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename resourcequota @ 10/05/24 13:05:45.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:05:45.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:05:45.369
  STEP: Counting existing ResourceQuota @ 10/05/24 13:05:45.37
  STEP: Creating a ResourceQuota @ 10/05/24 13:05:50.374
  STEP: Ensuring resource quota status is calculated @ 10/05/24 13:05:50.38
  STEP: Creating a Pod that fits quota @ 10/05/24 13:05:52.386
  STEP: Ensuring ResourceQuota status captures the pod usage @ 10/05/24 13:05:52.406
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 10/05/24 13:05:54.411
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 10/05/24 13:05:54.413
  STEP: Ensuring a pod cannot update its resource requirements @ 10/05/24 13:05:54.415
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 10/05/24 13:05:54.42
  STEP: Deleting the pod @ 10/05/24 13:05:56.426
  STEP: Ensuring resource quota status released the pod usage @ 10/05/24 13:05:56.447
  I1005 13:05:58.453871 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8708" for this suite. @ 10/05/24 13:05:58.459
• [13.120 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 10/05/24 13:05:58.467
  I1005 13:05:58.467659 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubelet-test @ 10/05/24 13:05:58.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:05:58.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:05:58.49
  I1005 13:05:58.517039 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1927" for this suite. @ 10/05/24 13:05:58.521
• [0.062 seconds]
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 10/05/24 13:05:58.529
  I1005 13:05:58.529779 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename replicaset @ 10/05/24 13:05:58.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:05:58.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:05:58.551
  STEP: Create a ReplicaSet @ 10/05/24 13:05:58.553
  STEP: Verify that the required pods have come up @ 10/05/24 13:05:58.56
  I1005 13:05:58.564125 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I1005 13:06:03.571910 19 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 10/05/24 13:06:03.571
  I1005 13:06:03.576880 19 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 10/05/24 13:06:03.576
  STEP: DeleteCollection of the ReplicaSets @ 10/05/24 13:06:03.581
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 10/05/24 13:06:03.59
  I1005 13:06:03.594672 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5956" for this suite. @ 10/05/24 13:06:03.598
• [5.094 seconds]
------------------------------
S
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 10/05/24 13:06:03.623
  I1005 13:06:03.623411 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pv @ 10/05/24 13:06:03.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:06:03.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:06:03.645
  STEP: Creating initial PV and PVC @ 10/05/24 13:06:03.647
  I1005 13:06:03.647454 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8155" @ 10/05/24 13:06:03.664
  STEP: Listing PVCs in namespace "pv-8155" @ 10/05/24 13:06:03.672
  STEP: Reading "pvc-lnfc7" Status @ 10/05/24 13:06:03.677
  STEP: Reading "pv-8155-c76zq" Status @ 10/05/24 13:06:03.687
  STEP: Patching "pvc-lnfc7" Status @ 10/05/24 13:06:03.698
  STEP: Patching "pv-8155-c76zq" Status @ 10/05/24 13:06:03.718
  STEP: Updating "pvc-lnfc7" Status @ 10/05/24 13:06:03.731
  STEP: Updating "pv-8155-c76zq" Status @ 10/05/24 13:06:03.746
  I1005 13:06:03.765816 19 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1005 13:06:03.765854 19 pv.go:205] Deleting PersistentVolumeClaim "pvc-lnfc7"
  I1005 13:06:03.785828 19 pv.go:193] Deleting PersistentVolume "pv-8155-c76zq"
  I1005 13:06:03.800494 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8155" for this suite. @ 10/05/24 13:06:03.807
• [0.198 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 10/05/24 13:06:03.822
  I1005 13:06:03.822020 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename disruption @ 10/05/24 13:06:03.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:06:03.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:06:03.846
  STEP: creating the pdb @ 10/05/24 13:06:03.848
  STEP: Waiting for the pdb to be processed @ 10/05/24 13:06:03.854
  STEP: updating the pdb @ 10/05/24 13:06:05.86
  STEP: Waiting for the pdb to be processed @ 10/05/24 13:06:05.869
  STEP: patching the pdb @ 10/05/24 13:06:07.873
  STEP: Waiting for the pdb to be processed @ 10/05/24 13:06:07.883
  STEP: Waiting for the pdb to be deleted @ 10/05/24 13:06:09.896
  I1005 13:06:09.900493 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1742" for this suite. @ 10/05/24 13:06:09.904
• [6.091 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 10/05/24 13:06:09.913
  I1005 13:06:09.913466 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 13:06:09.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:06:09.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:06:09.932
  STEP: Creating a pod to test downward api env vars @ 10/05/24 13:06:09.934
  STEP: Saw pod success @ 10/05/24 13:06:11.954
  I1005 13:06:11.958814 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod downward-api-f10c071f-7fa4-4df2-ab69-b6091a2159b9 container dapi-container: <nil>
  STEP: delete the pod @ 10/05/24 13:06:11.966
  I1005 13:06:11.984257 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-108" for this suite. @ 10/05/24 13:06:11.988
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 10/05/24 13:06:11.996
  I1005 13:06:11.996894 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename cronjob @ 10/05/24 13:06:11.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:06:12.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:06:12.017
  STEP: Creating a cronjob @ 10/05/24 13:06:12.019
  STEP: creating @ 10/05/24 13:06:12.019
  STEP: getting @ 10/05/24 13:06:12.029
  STEP: listing @ 10/05/24 13:06:12.033
  STEP: watching @ 10/05/24 13:06:12.036
  I1005 13:06:12.036659 19 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 10/05/24 13:06:12.037
  STEP: cluster-wide watching @ 10/05/24 13:06:12.041
  I1005 13:06:12.041601 19 cronjob.go:382] starting watch
  STEP: patching @ 10/05/24 13:06:12.042
  STEP: updating @ 10/05/24 13:06:12.048
  I1005 13:06:12.059976 19 cronjob.go:406] waiting for watch events with expected annotations
  I1005 13:06:12.060017 19 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 10/05/24 13:06:12.06
  STEP: updating /status @ 10/05/24 13:06:12.067
  STEP: get /status @ 10/05/24 13:06:12.076
  STEP: deleting @ 10/05/24 13:06:12.081
  STEP: deleting a collection @ 10/05/24 13:06:12.1
  I1005 13:06:12.114661 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1594" for this suite. @ 10/05/24 13:06:12.118
• [0.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 10/05/24 13:06:12.127
  I1005 13:06:12.127316 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename init-container @ 10/05/24 13:06:12.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:06:12.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:06:12.149
  STEP: creating the pod @ 10/05/24 13:06:12.151
  I1005 13:06:12.151737 19 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I1005 13:06:15.628142 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3015" for this suite. @ 10/05/24 13:06:15.634
• [3.515 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 10/05/24 13:06:15.642
  I1005 13:06:15.642873 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename watch @ 10/05/24 13:06:15.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:06:15.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:06:15.664
  STEP: creating a watch on configmaps with label A @ 10/05/24 13:06:15.667
  STEP: creating a watch on configmaps with label B @ 10/05/24 13:06:15.667
  STEP: creating a watch on configmaps with label A or B @ 10/05/24 13:06:15.668
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 10/05/24 13:06:15.669
  I1005 13:06:15.674105 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1418  69c5e8b0-f5a4-4160-b6f4-8eea0a98bd01 16332 0 2024-10-05 13:06:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-05 13:06:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 13:06:15.674237 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1418  69c5e8b0-f5a4-4160-b6f4-8eea0a98bd01 16332 0 2024-10-05 13:06:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-05 13:06:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 10/05/24 13:06:15.674
  I1005 13:06:15.683350 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1418  69c5e8b0-f5a4-4160-b6f4-8eea0a98bd01 16333 0 2024-10-05 13:06:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-05 13:06:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 13:06:15.683445 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1418  69c5e8b0-f5a4-4160-b6f4-8eea0a98bd01 16333 0 2024-10-05 13:06:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-05 13:06:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 10/05/24 13:06:15.683
  I1005 13:06:15.693421 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1418  69c5e8b0-f5a4-4160-b6f4-8eea0a98bd01 16334 0 2024-10-05 13:06:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-05 13:06:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 13:06:15.693508 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1418  69c5e8b0-f5a4-4160-b6f4-8eea0a98bd01 16334 0 2024-10-05 13:06:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-05 13:06:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 10/05/24 13:06:15.693
  I1005 13:06:15.701455 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1418  69c5e8b0-f5a4-4160-b6f4-8eea0a98bd01 16335 0 2024-10-05 13:06:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-05 13:06:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 13:06:15.701659 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1418  69c5e8b0-f5a4-4160-b6f4-8eea0a98bd01 16335 0 2024-10-05 13:06:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-05 13:06:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 10/05/24 13:06:15.701
  I1005 13:06:15.708691 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1418  9576445e-f00d-4f2e-b710-627d66f928e2 16336 0 2024-10-05 13:06:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-05 13:06:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 13:06:15.708774 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1418  9576445e-f00d-4f2e-b710-627d66f928e2 16336 0 2024-10-05 13:06:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-05 13:06:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 10/05/24 13:06:25.712
  I1005 13:06:25.724567 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1418  9576445e-f00d-4f2e-b710-627d66f928e2 16402 0 2024-10-05 13:06:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-05 13:06:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 13:06:25.724617 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1418  9576445e-f00d-4f2e-b710-627d66f928e2 16402 0 2024-10-05 13:06:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-05 13:06:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 13:06:35.728885 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1418" for this suite. @ 10/05/24 13:06:35.734
• [20.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 10/05/24 13:06:35.742
  I1005 13:06:35.742794 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/05/24 13:06:35.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:06:35.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:06:35.77
  STEP: create the container to handle the HTTPGet hook request. @ 10/05/24 13:06:35.777
  STEP: create the pod with lifecycle hook @ 10/05/24 13:06:37.803
  STEP: check poststart hook @ 10/05/24 13:06:39.827
  STEP: delete the pod with lifecycle hook @ 10/05/24 13:06:39.836
  I1005 13:06:41.856623 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4726" for this suite. @ 10/05/24 13:06:41.861
• [6.127 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 10/05/24 13:06:41.869
  I1005 13:06:41.869523 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 13:06:41.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:06:41.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:06:41.891
  STEP: Setting up server cert @ 10/05/24 13:06:41.913
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 13:06:42.203
  STEP: Deploying the webhook pod @ 10/05/24 13:06:42.212
  STEP: Wait for the deployment to be ready @ 10/05/24 13:06:42.227
  I1005 13:06:42.234560 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/05/24 13:06:44.248
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 13:06:44.261
  I1005 13:06:45.261931 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 10/05/24 13:06:45.271
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 10/05/24 13:06:45.272
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 10/05/24 13:06:45.272
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 10/05/24 13:06:45.272
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 10/05/24 13:06:45.272
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/05/24 13:06:45.272
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/05/24 13:06:45.273
  I1005 13:06:45.317490 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5075" for this suite. @ 10/05/24 13:06:45.321
  STEP: Destroying namespace "webhook-markers-7403" for this suite. @ 10/05/24 13:06:45.33
• [3.469 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 10/05/24 13:06:45.338
  I1005 13:06:45.338808 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 13:06:45.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:06:45.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:06:45.36
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-5995 @ 10/05/24 13:06:45.362
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/05/24 13:06:45.381
  STEP: creating service externalsvc in namespace services-5995 @ 10/05/24 13:06:45.381
  STEP: creating replication controller externalsvc in namespace services-5995 @ 10/05/24 13:06:45.397
  I1005 13:06:45.406177      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-5995, replica count: 2
  I1005 13:06:48.458315      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 10/05/24 13:06:48.465
  I1005 13:06:48.484430 19 resource.go:361] Creating new exec pod
  I1005 13:06:50.504009 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-5995 exec execpodcms7q -- /bin/sh -x -c nslookup clusterip-service.services-5995.svc.cluster.local'
  I1005 13:06:50.604700 19 builder.go:146] stderr: "+ nslookup clusterip-service.services-5995.svc.cluster.local\n"
  I1005 13:06:50.604752 19 builder.go:147] stdout: "Server:\t\t10.152.183.202\nAddress:\t10.152.183.202#53\n\nclusterip-service.services-5995.svc.cluster.local\tcanonical name = externalsvc.services-5995.svc.cluster.local.\nName:\texternalsvc.services-5995.svc.cluster.local\nAddress: 10.152.183.196\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-5995, will wait for the garbage collector to delete the pods @ 10/05/24 13:06:50.604
  I1005 13:06:50.671237 19 resources.go:139] Deleting ReplicationController externalsvc took: 9.073929ms
  I1005 13:06:50.772043 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.820549ms
  I1005 13:06:53.795697 19 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I1005 13:06:53.809817 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5995" for this suite. @ 10/05/24 13:06:53.814
• [8.484 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 10/05/24 13:06:53.823
  I1005 13:06:53.823186 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 13:06:53.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:06:53.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:06:53.843
  STEP: creating a collection of services @ 10/05/24 13:06:53.846
  I1005 13:06:53.846334 19 service.go:3655] Creating e2e-svc-a-h2n89
  I1005 13:06:53.859685 19 service.go:3655] Creating e2e-svc-b-mkngz
  I1005 13:06:53.871762 19 service.go:3655] Creating e2e-svc-c-5t7jf
  STEP: deleting service collection @ 10/05/24 13:06:53.886
  I1005 13:06:53.925526 19 service.go:3690] Collection of services has been deleted
  I1005 13:06:53.925643 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-45" for this suite. @ 10/05/24 13:06:53.929
• [0.113 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 10/05/24 13:06:53.936
  I1005 13:06:53.936432 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:06:53.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:06:53.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:06:53.956
  STEP: Creating configMap with name projected-configmap-test-volume-92996ce4-77a5-4df1-9f46-0421a3decbe0 @ 10/05/24 13:06:53.958
  STEP: Creating a pod to test consume configMaps @ 10/05/24 13:06:53.967
  STEP: Saw pod success @ 10/05/24 13:06:55.991
  I1005 13:06:55.995308 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod pod-projected-configmaps-809f3eb8-0b74-4b42-8ec4-cee9790cd371 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 10/05/24 13:06:56.002
  I1005 13:06:56.021826 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6176" for this suite. @ 10/05/24 13:06:56.025
• [2.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 10/05/24 13:06:56.036
  I1005 13:06:56.036122 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename replication-controller @ 10/05/24 13:06:56.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:06:56.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:06:56.055
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 10/05/24 13:06:56.058
  STEP: When a replication controller with a matching selector is created @ 10/05/24 13:06:58.08
  STEP: Then the orphan pod is adopted @ 10/05/24 13:06:58.085
  I1005 13:06:59.093982 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-577" for this suite. @ 10/05/24 13:06:59.097
• [3.071 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 10/05/24 13:06:59.106
  I1005 13:06:59.106765 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename replicaset @ 10/05/24 13:06:59.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:06:59.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:06:59.135
  I1005 13:06:59.141418 19 replica_set.go:191] Creating ReplicaSet my-hostname-basic-b26c2cbb-0d03-4a57-9aa9-8e71a5c6656c
  I1005 13:06:59.151433 19 resource.go:87] Pod name my-hostname-basic-b26c2cbb-0d03-4a57-9aa9-8e71a5c6656c: Found 0 pods out of 1
  I1005 13:07:04.155497 19 resource.go:87] Pod name my-hostname-basic-b26c2cbb-0d03-4a57-9aa9-8e71a5c6656c: Found 1 pods out of 1
  I1005 13:07:04.155533 19 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-b26c2cbb-0d03-4a57-9aa9-8e71a5c6656c" is running
  I1005 13:07:04.159413 19 replica_set.go:220] Pod "my-hostname-basic-b26c2cbb-0d03-4a57-9aa9-8e71a5c6656c-vvgft" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-05 13:07:00 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-05 13:06:59 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-05 13:07:00 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-05 13:07:00 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-05 13:06:59 +0000 UTC Reason: Message:}])
  I1005 13:07:04.159443 19 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/05/24 13:07:04.159
  I1005 13:07:04.170889 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6697" for this suite. @ 10/05/24 13:07:04.174
• [5.079 seconds]
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 10/05/24 13:07:04.185
  I1005 13:07:04.185604 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename security-context-test @ 10/05/24 13:07:04.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:07:04.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:07:04.209
  I1005 13:07:08.250639 19 security_context.go:538] Got logs for pod "busybox-privileged-false-bb8caff6-5dc6-4fe4-90d7-548bb9d8a8e3": "ip: RTNETLINK answers: Operation not permitted\n"
  I1005 13:07:08.250783 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8423" for this suite. @ 10/05/24 13:07:08.254
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 10/05/24 13:07:08.263
  I1005 13:07:08.263288 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:07:08.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:07:08.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:07:08.291
  STEP: Creating configMap with name projected-configmap-test-volume-map-84bf2fe8-314f-46e6-a039-a56e30e09c38 @ 10/05/24 13:07:08.298
  STEP: Creating a pod to test consume configMaps @ 10/05/24 13:07:08.305
  STEP: Saw pod success @ 10/05/24 13:07:10.333
  I1005 13:07:10.337433 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-projected-configmaps-58324ee3-a462-486e-80b1-9ac2077a2213 container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 13:07:10.346
  I1005 13:07:10.364187 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1754" for this suite. @ 10/05/24 13:07:10.368
• [2.113 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 10/05/24 13:07:10.376
  I1005 13:07:10.376792 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/05/24 13:07:10.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:07:10.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:07:10.397
  STEP: create the container to handle the HTTPGet hook request. @ 10/05/24 13:07:10.402
  STEP: create the pod with lifecycle hook @ 10/05/24 13:07:12.428
  STEP: delete the pod with lifecycle hook @ 10/05/24 13:07:14.45
  STEP: check prestop hook @ 10/05/24 13:07:16.469
  I1005 13:07:16.477858 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-177" for this suite. @ 10/05/24 13:07:16.481
• [6.112 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 10/05/24 13:07:16.489
  I1005 13:07:16.489446 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 13:07:16.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:07:16.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:07:16.511
  STEP: Setting up server cert @ 10/05/24 13:07:16.537
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 13:07:16.851
  STEP: Deploying the webhook pod @ 10/05/24 13:07:16.863
  STEP: Wait for the deployment to be ready @ 10/05/24 13:07:16.879
  I1005 13:07:16.889693 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/05/24 13:07:18.903
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 13:07:18.915
  I1005 13:07:19.915339 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1005 13:07:19.924730 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 10/05/24 13:07:20.435
  STEP: Creating a custom resource that should be denied by the webhook @ 10/05/24 13:07:20.452
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 10/05/24 13:07:22.469
  STEP: Updating the custom resource with disallowed data should be denied @ 10/05/24 13:07:22.478
  STEP: Deleting the custom resource should be denied @ 10/05/24 13:07:22.488
  STEP: Remove the offending key and value from the custom resource data @ 10/05/24 13:07:22.497
  STEP: Deleting the updated custom resource should be successful @ 10/05/24 13:07:22.508
  I1005 13:07:23.082715 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3470" for this suite. @ 10/05/24 13:07:23.087
  STEP: Destroying namespace "webhook-markers-1282" for this suite. @ 10/05/24 13:07:23.095
• [6.616 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 10/05/24 13:07:23.105
  I1005 13:07:23.105308 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 13:07:23.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:07:23.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:07:23.126
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 13:07:23.127
  STEP: Saw pod success @ 10/05/24 13:07:27.157
  I1005 13:07:27.162468 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downwardapi-volume-bfc6a358-901e-4ab6-a06d-54d9f418f69d container client-container: <nil>
  STEP: delete the pod @ 10/05/24 13:07:27.17
  I1005 13:07:27.187528 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8616" for this suite. @ 10/05/24 13:07:27.191
• [4.094 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 10/05/24 13:07:27.198
  I1005 13:07:27.198907 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename events @ 10/05/24 13:07:27.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:07:27.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:07:27.221
  STEP: creating a test event @ 10/05/24 13:07:27.222
  STEP: listing all events in all namespaces @ 10/05/24 13:07:27.23
  STEP: patching the test event @ 10/05/24 13:07:27.24
  STEP: fetching the test event @ 10/05/24 13:07:27.249
  STEP: updating the test event @ 10/05/24 13:07:27.251
  STEP: getting the test event @ 10/05/24 13:07:27.263
  STEP: deleting the test event @ 10/05/24 13:07:27.267
  STEP: listing all events in all namespaces @ 10/05/24 13:07:27.276
  I1005 13:07:27.287531 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3141" for this suite. @ 10/05/24 13:07:27.291
• [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 10/05/24 13:07:27.301
  I1005 13:07:27.301058 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/05/24 13:07:27.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:07:27.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:07:27.324
  STEP: creating a target pod @ 10/05/24 13:07:27.327
  STEP: adding an ephemeral container @ 10/05/24 13:07:29.355
  STEP: checking pod container endpoints @ 10/05/24 13:07:31.375
  I1005 13:07:31.375554 19 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7399 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:07:31.375577 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:07:31.376108 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:07:31.376148 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-7399/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1005 13:07:31.412377 19 exec_util.go:111] Exec stderr: ""
  I1005 13:07:31.421142 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7399" for this suite. @ 10/05/24 13:07:31.425
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 10/05/24 13:07:31.432
  I1005 13:07:31.432950 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename gc @ 10/05/24 13:07:31.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:07:31.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:07:31.456
  STEP: create the rc @ 10/05/24 13:07:31.463
  W1005 13:07:31.471408      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 10/05/24 13:07:37.481
  STEP: wait for the rc to be deleted @ 10/05/24 13:07:37.502
  I1005 13:07:38.520988 19 garbage_collector.go:670] 80 pods remaining
  I1005 13:07:38.521030 19 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I1005 13:07:38.521036 19 garbage_collector.go:678] 
  I1005 13:07:39.518015 19 garbage_collector.go:670] 71 pods remaining
  I1005 13:07:39.518047 19 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I1005 13:07:39.518052 19 garbage_collector.go:678] 
  I1005 13:07:40.513282 19 garbage_collector.go:670] 60 pods remaining
  I1005 13:07:40.513309 19 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I1005 13:07:40.513316 19 garbage_collector.go:678] 
  I1005 13:07:41.517804 19 garbage_collector.go:670] 40 pods remaining
  I1005 13:07:41.517841 19 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I1005 13:07:41.517849 19 garbage_collector.go:678] 
  I1005 13:07:42.512480 19 garbage_collector.go:670] 31 pods remaining
  I1005 13:07:42.512521 19 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I1005 13:07:42.512528 19 garbage_collector.go:678] 
  I1005 13:07:43.514503 19 garbage_collector.go:670] 20 pods remaining
  I1005 13:07:43.515759 19 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I1005 13:07:43.515780 19 garbage_collector.go:678] 
  STEP: Gathering metrics @ 10/05/24 13:07:44.516
  W1005 13:07:44.520988      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1005 13:07:44.521032 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1005 13:07:44.521175 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1493" for this suite. @ 10/05/24 13:07:44.541
• [13.122 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 10/05/24 13:07:44.561
  I1005 13:07:44.561668 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename ingressclass @ 10/05/24 13:07:44.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:07:44.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:07:44.609
  STEP: getting /apis @ 10/05/24 13:07:44.622
  STEP: getting /apis/networking.k8s.io @ 10/05/24 13:07:44.636
  STEP: getting /apis/networking.k8s.iov1 @ 10/05/24 13:07:44.637
  STEP: creating @ 10/05/24 13:07:44.646
  STEP: getting @ 10/05/24 13:07:44.662
  STEP: listing @ 10/05/24 13:07:44.666
  STEP: watching @ 10/05/24 13:07:44.671
  I1005 13:07:44.671319 19 ingressclass.go:348] starting watch
  STEP: patching @ 10/05/24 13:07:44.672
  STEP: updating @ 10/05/24 13:07:44.68
  I1005 13:07:44.687788 19 ingressclass.go:364] waiting for watch events with expected annotations
  I1005 13:07:44.689479 19 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 10/05/24 13:07:44.689
  STEP: deleting a collection @ 10/05/24 13:07:44.709
  I1005 13:07:44.732468 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4655" for this suite. @ 10/05/24 13:07:44.737
• [0.190 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 10/05/24 13:07:44.746
  I1005 13:07:44.746121 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 13:07:44.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:07:44.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:07:44.765
  STEP: Setting up server cert @ 10/05/24 13:07:44.794
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 13:07:45.022
  STEP: Deploying the webhook pod @ 10/05/24 13:07:45.027
  STEP: Wait for the deployment to be ready @ 10/05/24 13:07:45.04
  I1005 13:07:45.048568 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 10/05/24 13:07:47.062
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 13:07:47.075
  I1005 13:07:48.075278 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1005 13:07:48.084295 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5534-crds.webhook.example.com via the AdmissionRegistration API @ 10/05/24 13:07:48.595
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/05/24 13:07:48.611
  I1005 13:07:51.215235 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6170" for this suite. @ 10/05/24 13:07:51.219
  STEP: Destroying namespace "webhook-markers-1754" for this suite. @ 10/05/24 13:07:51.227
• [6.490 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 10/05/24 13:07:51.235
  I1005 13:07:51.235836 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename secrets @ 10/05/24 13:07:51.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:07:51.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:07:51.257
  STEP: Creating secret with name secret-test-9fb4db35-797b-4d96-a14a-83352604f5f5 @ 10/05/24 13:07:51.282
  STEP: Creating a pod to test consume secrets @ 10/05/24 13:07:51.286
  STEP: Saw pod success @ 10/05/24 13:07:53.305
  I1005 13:07:53.309912 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod pod-secrets-624a2855-19f5-4eda-9809-0799e72d667e container secret-volume-test: <nil>
  STEP: delete the pod @ 10/05/24 13:07:53.316
  I1005 13:07:53.334851 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6860" for this suite. @ 10/05/24 13:07:53.338
  STEP: Destroying namespace "secret-namespace-1837" for this suite. @ 10/05/24 13:07:53.348
• [2.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 10/05/24 13:07:53.356
  I1005 13:07:53.356677 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 13:07:53.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:07:53.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:07:53.376
  STEP: Creating the pod @ 10/05/24 13:07:53.377
  I1005 13:07:55.929791 19 pod_client.go:173] Successfully updated pod "labelsupdate6afdc0c6-5609-4c49-9112-bbb55369e72e"
  I1005 13:07:59.961571 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1782" for this suite. @ 10/05/24 13:07:59.965
• [6.618 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 10/05/24 13:07:59.975
  I1005 13:07:59.975267 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename dns @ 10/05/24 13:07:59.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:07:59.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:07:59.997
  STEP: Creating a test headless service @ 10/05/24 13:07:59.999
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2650.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2650.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2650.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2650.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2650.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2650.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2650.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2650.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2650.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2650.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2650.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2650.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 134.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.134_udp@PTR;check="$$(dig +tcp +noall +answer +search 134.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.134_tcp@PTR;sleep 1; done
   @ 10/05/24 13:08:00.02
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2650.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2650.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2650.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2650.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2650.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2650.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2650.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2650.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2650.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2650.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2650.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2650.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 134.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.134_udp@PTR;check="$$(dig +tcp +noall +answer +search 134.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.134_tcp@PTR;sleep 1; done
   @ 10/05/24 13:08:00.02
  STEP: creating a pod to probe DNS @ 10/05/24 13:08:00.02
  STEP: submitting the pod to kubernetes @ 10/05/24 13:08:00.02
  STEP: retrieving the pod @ 10/05/24 13:08:06.066
  STEP: looking for the results for each expected name from probers @ 10/05/24 13:08:06.07
  I1005 13:08:06.075115 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2650.svc.cluster.local from pod dns-2650/dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4: the server could not find the requested resource (get pods dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4)
  I1005 13:08:06.079194 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2650.svc.cluster.local from pod dns-2650/dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4: the server could not find the requested resource (get pods dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4)
  I1005 13:08:06.082722 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2650.svc.cluster.local from pod dns-2650/dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4: the server could not find the requested resource (get pods dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4)
  I1005 13:08:06.086494 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2650.svc.cluster.local from pod dns-2650/dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4: the server could not find the requested resource (get pods dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4)
  I1005 13:08:06.104293 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2650.svc.cluster.local from pod dns-2650/dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4: the server could not find the requested resource (get pods dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4)
  I1005 13:08:06.107782 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2650.svc.cluster.local from pod dns-2650/dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4: the server could not find the requested resource (get pods dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4)
  I1005 13:08:06.111458 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2650.svc.cluster.local from pod dns-2650/dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4: the server could not find the requested resource (get pods dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4)
  I1005 13:08:06.114725 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2650.svc.cluster.local from pod dns-2650/dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4: the server could not find the requested resource (get pods dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4)
  I1005 13:08:06.130112 19 dns_common.go:489] Lookups using dns-2650/dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4 failed for: [wheezy_udp@dns-test-service.dns-2650.svc.cluster.local wheezy_tcp@dns-test-service.dns-2650.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2650.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2650.svc.cluster.local jessie_udp@dns-test-service.dns-2650.svc.cluster.local jessie_tcp@dns-test-service.dns-2650.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2650.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2650.svc.cluster.local]

  I1005 13:08:06.137579 19 dns_common.go:495] Pod client logs for webserver: 
  I1005 13:08:06.144502 19 dns_common.go:495] Pod client logs for querier: 
  I1005 13:08:06.151988 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I1005 13:08:11.137983 19 dns_common.go:527] DNS probes using dns-2650/dns-test-b08b9525-e704-4412-b3f7-6bb3508c52a4 succeeded

  STEP: deleting the pod @ 10/05/24 13:08:11.138
  STEP: deleting the test service @ 10/05/24 13:08:11.154
  STEP: deleting the test headless service @ 10/05/24 13:08:11.183
  I1005 13:08:11.197894 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2650" for this suite. @ 10/05/24 13:08:11.202
• [11.239 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 10/05/24 13:08:11.213
  I1005 13:08:11.213832 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-runtime @ 10/05/24 13:08:11.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:08:11.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:08:11.232
  STEP: create the container @ 10/05/24 13:08:11.234
  W1005 13:08:11.242896      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/05/24 13:08:11.243
  STEP: get the container status @ 10/05/24 13:08:13.264
  STEP: the container should be terminated @ 10/05/24 13:08:13.267
  STEP: the termination message should be set @ 10/05/24 13:08:13.267
  I1005 13:08:13.267813 19 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 10/05/24 13:08:13.267
  I1005 13:08:13.290666 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1983" for this suite. @ 10/05/24 13:08:13.3
• [2.095 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 10/05/24 13:08:13.309
  I1005 13:08:13.309485 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename job @ 10/05/24 13:08:13.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:08:13.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:08:13.33
  STEP: Creating Indexed job @ 10/05/24 13:08:13.332
  STEP: Ensuring job reaches completions @ 10/05/24 13:08:13.34
  STEP: Ensuring pods with index for job exist @ 10/05/24 13:08:23.351
  I1005 13:08:23.356971 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2787" for this suite. @ 10/05/24 13:08:23.361
• [10.060 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 10/05/24 13:08:23.369
  I1005 13:08:23.369774 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename daemonsets @ 10/05/24 13:08:23.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:08:23.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:08:23.394
  STEP: Creating simple DaemonSet "daemon-set" @ 10/05/24 13:08:23.42
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/05/24 13:08:23.425
  I1005 13:08:23.429187 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:08:23.429240 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:08:23.432554 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:08:23.432575 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  I1005 13:08:24.431573 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:08:24.431630 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:08:24.435938 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:08:24.435959 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  I1005 13:08:25.431338 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:08:25.431375 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:08:25.435283 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1005 13:08:25.435303 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 10/05/24 13:08:25.439
  I1005 13:08:25.444039 19 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 10/05/24 13:08:25.444
  I1005 13:08:25.454980 19 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 10/05/24 13:08:25.455
  I1005 13:08:25.456169 19 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I1005 13:08:25.456261 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1005 13:08:25.456323 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1005 13:08:25.456451 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1005 13:08:25.456519 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1005 13:08:25.456538 19 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-9196 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1005 13:08:25.456548 19 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 10/05/24 13:08:25.456
  STEP: watching for the daemon set status to be patched @ 10/05/24 13:08:25.462
  I1005 13:08:25.464120 19 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I1005 13:08:25.464237 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1005 13:08:25.464314 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1005 13:08:25.464395 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1005 13:08:25.464514 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1005 13:08:25.464529 19 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-9196 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1005 13:08:25.464605 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1005 13:08:25.464629 19 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-9196 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1005 13:08:25.464645 19 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 10/05/24 13:08:25.47
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9196, will wait for the garbage collector to delete the pods @ 10/05/24 13:08:25.47
  I1005 13:08:25.533845 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.496692ms
  I1005 13:08:25.634958 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.108958ms
  I1005 13:08:28.140213 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:08:28.140271 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1005 13:08:28.144473 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20215"},"items":null}

  I1005 13:08:28.148851 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20215"},"items":null}

  I1005 13:08:28.168548 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9196" for this suite. @ 10/05/24 13:08:28.172
• [4.811 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 10/05/24 13:08:28.18
  I1005 13:08:28.180875 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-probe @ 10/05/24 13:08:28.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:08:28.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:08:28.199
  I1005 13:08:50.284892 19 container_probe.go:92] Container started at 2024-10-05 13:08:28 +0000 UTC, pod became ready at 2024-10-05 13:08:48 +0000 UTC
  I1005 13:08:50.285041 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5071" for this suite. @ 10/05/24 13:08:50.288
• [22.117 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 10/05/24 13:08:50.297
  I1005 13:08:50.297796 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:08:50.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:08:50.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:08:50.319
  STEP: Creating projection with secret that has name projected-secret-test-cc2ecc9d-121e-4045-bbd3-a346d0357ccc @ 10/05/24 13:08:50.321
  STEP: Creating a pod to test consume secrets @ 10/05/24 13:08:50.326
  STEP: Saw pod success @ 10/05/24 13:08:52.35
  I1005 13:08:52.355006 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod pod-projected-secrets-b9d1148a-d879-41e1-adfd-2dc88d417f35 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/05/24 13:08:52.363
  I1005 13:08:52.384040 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5087" for this suite. @ 10/05/24 13:08:52.387
• [2.097 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 10/05/24 13:08:52.394
  I1005 13:08:52.394928 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 13:08:52.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:08:52.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:08:52.412
  STEP: Setting up server cert @ 10/05/24 13:08:52.437
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 13:08:52.622
  STEP: Deploying the webhook pod @ 10/05/24 13:08:52.632
  STEP: Wait for the deployment to be ready @ 10/05/24 13:08:52.645
  I1005 13:08:52.656907 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/05/24 13:08:54.671
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 13:08:54.682
  I1005 13:08:55.682802 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 10/05/24 13:08:55.691
  STEP: create a pod that should be updated by the webhook @ 10/05/24 13:08:55.702
  I1005 13:08:55.769203 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6615" for this suite. @ 10/05/24 13:08:55.777
  STEP: Destroying namespace "webhook-markers-1394" for this suite. @ 10/05/24 13:08:55.948
• [3.562 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 10/05/24 13:08:55.957
  I1005 13:08:55.957879 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename replication-controller @ 10/05/24 13:08:55.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:08:55.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:08:55.978
  I1005 13:08:55.980012 19 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 10/05/24 13:08:56.993
  STEP: Checking rc "condition-test" has the desired failure condition set @ 10/05/24 13:08:56.999
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 10/05/24 13:08:58.008
  I1005 13:08:58.022052 19 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 10/05/24 13:08:58.022
  I1005 13:08:59.035796 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6106" for this suite. @ 10/05/24 13:08:59.04
• [3.091 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 10/05/24 13:08:59.048
  I1005 13:08:59.048917 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename replication-controller @ 10/05/24 13:08:59.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:08:59.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:08:59.069
  STEP: creating a ReplicationController @ 10/05/24 13:08:59.076
  STEP: waiting for RC to be added @ 10/05/24 13:08:59.08
  STEP: waiting for available Replicas @ 10/05/24 13:08:59.08
  STEP: patching ReplicationController @ 10/05/24 13:09:00.105
  STEP: waiting for RC to be modified @ 10/05/24 13:09:00.114
  STEP: patching ReplicationController status @ 10/05/24 13:09:00.114
  STEP: waiting for RC to be modified @ 10/05/24 13:09:00.12
  STEP: waiting for available Replicas @ 10/05/24 13:09:00.121
  STEP: fetching ReplicationController status @ 10/05/24 13:09:00.127
  STEP: patching ReplicationController scale @ 10/05/24 13:09:00.132
  STEP: waiting for RC to be modified @ 10/05/24 13:09:00.139
  STEP: waiting for ReplicationController's scale to be the max amount @ 10/05/24 13:09:00.139
  STEP: fetching ReplicationController; ensuring that it's patched @ 10/05/24 13:09:01.028
  STEP: updating ReplicationController status @ 10/05/24 13:09:01.032
  STEP: waiting for RC to be modified @ 10/05/24 13:09:01.039
  STEP: listing all ReplicationControllers @ 10/05/24 13:09:01.039
  STEP: checking that ReplicationController has expected values @ 10/05/24 13:09:01.043
  STEP: deleting ReplicationControllers by collection @ 10/05/24 13:09:01.043
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 10/05/24 13:09:01.053
  I1005 13:09:01.107346 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1005 13:09:01.107453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8544" for this suite. @ 10/05/24 13:09:01.113
• [2.072 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 10/05/24 13:09:01.121
  I1005 13:09:01.121332 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir @ 10/05/24 13:09:01.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:09:01.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:09:01.145
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/05/24 13:09:01.147
  E1005 13:09:02.107927      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:03.108005      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:04.108096      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:05.108384      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:09:05.178
  I1005 13:09:05.182147 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod pod-6c0de43f-c851-4a53-901a-39721f97c7a1 container test-container: <nil>
  STEP: delete the pod @ 10/05/24 13:09:05.19
  I1005 13:09:05.212560 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3373" for this suite. @ 10/05/24 13:09:05.216
• [4.104 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 10/05/24 13:09:05.225
  I1005 13:09:05.225086 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/05/24 13:09:05.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:09:05.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:09:05.244
  STEP: create the container to handle the HTTPGet hook request. @ 10/05/24 13:09:05.252
  E1005 13:09:06.109378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:07.110441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/05/24 13:09:07.278
  E1005 13:09:08.110938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:09.111176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 10/05/24 13:09:09.302
  E1005 13:09:10.111454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:11.112432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 10/05/24 13:09:11.322
  I1005 13:09:11.343083 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7268" for this suite. @ 10/05/24 13:09:11.347
• [6.130 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 10/05/24 13:09:11.354
  I1005 13:09:11.354889 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename replicaset @ 10/05/24 13:09:11.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:09:11.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:09:11.374
  I1005 13:09:11.389631 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1005 13:09:12.113450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:13.113621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:14.113697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:15.113816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:16.113929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:09:16.394456 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/05/24 13:09:16.394
  STEP: Scaling up "test-rs" replicaset @ 10/05/24 13:09:16.394
  I1005 13:09:16.406351 19 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 10/05/24 13:09:16.406
  I1005 13:09:16.419018 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9858 with ReadyReplicas 1, AvailableReplicas 1
  I1005 13:09:16.439016 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9858 with ReadyReplicas 1, AvailableReplicas 1
  I1005 13:09:16.466292 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9858 with ReadyReplicas 1, AvailableReplicas 1
  I1005 13:09:16.482838 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9858 with ReadyReplicas 1, AvailableReplicas 1
  E1005 13:09:17.114393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:09:17.142162 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9858 with ReadyReplicas 2, AvailableReplicas 2
  I1005 13:09:17.729181 19 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-9858 with ReadyReplicas 3 found true
  I1005 13:09:17.729346 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9858" for this suite. @ 10/05/24 13:09:17.733
• [6.390 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 10/05/24 13:09:17.744
  I1005 13:09:17.744979 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename sched-pred @ 10/05/24 13:09:17.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:09:17.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:09:17.765
  I1005 13:09:17.767281 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1005 13:09:17.777991 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1005 13:09:17.781947 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-60 before test
  I1005 13:09:17.787391 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-fttd5 from ingress-nginx-kubernetes-worker started at 2024-10-05 12:19:40 +0000 UTC (1 container statuses recorded)
  I1005 13:09:17.787410 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1005 13:09:17.787417 19 predicates.go:957] calico-node-p547s from kube-system started at 2024-10-05 12:19:31 +0000 UTC (1 container statuses recorded)
  I1005 13:09:17.787423 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1005 13:09:17.787429 19 predicates.go:957] test-rs-fjn6m from replicaset-9858 started at 2024-10-05 13:09:16 +0000 UTC (1 container statuses recorded)
  I1005 13:09:17.787434 19 predicates.go:959] 	Container httpd ready: true, restart count 0
  I1005 13:09:17.787441 19 predicates.go:957] sonobuoy-e2e-job-16f17f2aa4c640ea from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 13:09:17.787449 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1005 13:09:17.787454 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 13:09:17.787460 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-c9n82 from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 13:09:17.787465 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 13:09:17.787470 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1005 13:09:17.787477 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-45-162 before test
  I1005 13:09:17.792701 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hqqb6 from ingress-nginx-kubernetes-worker started at 2024-10-05 12:39:17 +0000 UTC (1 container statuses recorded)
  I1005 13:09:17.792722 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1005 13:09:17.792729 19 predicates.go:957] calico-node-pl9rk from kube-system started at 2024-10-05 12:19:21 +0000 UTC (1 container statuses recorded)
  I1005 13:09:17.792735 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1005 13:09:17.792742 19 predicates.go:957] test-rs-rp5mh from replicaset-9858 started at 2024-10-05 13:09:11 +0000 UTC (1 container statuses recorded)
  I1005 13:09:17.792749 19 predicates.go:959] 	Container httpd ready: true, restart count 0
  I1005 13:09:17.792754 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-10-05 12:24:14 +0000 UTC (1 container statuses recorded)
  I1005 13:09:17.792759 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1005 13:09:17.792764 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-5zzg2 from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 13:09:17.792770 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 13:09:17.792775 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1005 13:09:17.792781 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-83-192 before test
  I1005 13:09:17.798299 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hdfk2 from ingress-nginx-kubernetes-worker started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 13:09:17.798314 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1005 13:09:17.798321 19 predicates.go:957] calico-node-rtdfm from kube-system started at 2024-10-05 12:17:35 +0000 UTC (1 container statuses recorded)
  I1005 13:09:17.798326 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1005 13:09:17.798333 19 predicates.go:957] coredns-5b4857d7c8-h56gc from kube-system started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 13:09:17.798338 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1005 13:09:17.798344 19 predicates.go:957] kube-state-metrics-5d7bdccd49-r9dmj from kube-system started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 13:09:17.798350 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1005 13:09:17.798356 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-pn79v from kube-system started at 2024-10-05 12:15:37 +0000 UTC (2 container statuses recorded)
  I1005 13:09:17.798360 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1005 13:09:17.798366 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1005 13:09:17.798373 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-bhj4s from kubernetes-dashboard started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 13:09:17.798382 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1005 13:09:17.798388 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-4wgvx from kubernetes-dashboard started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 13:09:17.798392 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1005 13:09:17.798398 19 predicates.go:957] test-rs-hbr5z from replicaset-9858 started at 2024-10-05 13:09:16 +0000 UTC (2 container statuses recorded)
  I1005 13:09:17.798403 19 predicates.go:959] 	Container httpd ready: true, restart count 0
  I1005 13:09:17.798409 19 predicates.go:959] 	Container test-rs ready: true, restart count 0
  I1005 13:09:17.798415 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-69jb9 from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 13:09:17.798421 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 13:09:17.798426 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 10/05/24 13:09:17.798
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17fb907f272068e9], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 10/05/24 13:09:17.826
  E1005 13:09:18.115384      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:09:18.825055 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3690" for this suite. @ 10/05/24 13:09:18.829
• [1.094 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 10/05/24 13:09:18.839
  I1005 13:09:18.839034 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 13:09:18.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:09:18.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:09:18.859
  STEP: Setting up server cert @ 10/05/24 13:09:18.881
  E1005 13:09:19.115954      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 13:09:19.316
  STEP: Deploying the webhook pod @ 10/05/24 13:09:19.323
  STEP: Wait for the deployment to be ready @ 10/05/24 13:09:19.335
  I1005 13:09:19.343592 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1005 13:09:20.116427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:21.116491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/05/24 13:09:21.356
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 13:09:21.37
  E1005 13:09:22.116731      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:09:22.371113 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1005 13:09:22.380480 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5608-crds.webhook.example.com via the AdmissionRegistration API @ 10/05/24 13:09:22.888
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/05/24 13:09:22.91
  E1005 13:09:23.116803      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:24.117307      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:25.117987      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:09:25.508341 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5570" for this suite. @ 10/05/24 13:09:25.513
  STEP: Destroying namespace "webhook-markers-4640" for this suite. @ 10/05/24 13:09:25.521
• [6.690 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 10/05/24 13:09:25.529
  I1005 13:09:25.529626 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename subpath @ 10/05/24 13:09:25.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:09:25.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:09:25.549
  STEP: Setting up data @ 10/05/24 13:09:25.551
  STEP: Creating pod pod-subpath-test-projected-ftb4 @ 10/05/24 13:09:25.561
  STEP: Creating a pod to test atomic-volume-subpath @ 10/05/24 13:09:25.562
  E1005 13:09:26.118387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:27.118492      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:28.118593      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:29.118673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:30.118796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:31.118866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:32.119447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:33.119885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:34.120432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:35.120650      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:36.121698      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:37.121814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:38.121914      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:39.122014      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:40.122604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:41.122727      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:42.122909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:43.123008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:44.123105      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:45.123250      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:46.124111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:47.124313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:48.124945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:49.125077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:09:49.647
  I1005 13:09:49.652254 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-subpath-test-projected-ftb4 container test-container-subpath-projected-ftb4: <nil>
  STEP: delete the pod @ 10/05/24 13:09:49.667
  STEP: Deleting pod pod-subpath-test-projected-ftb4 @ 10/05/24 13:09:49.685
  I1005 13:09:49.685700 19 delete.go:62] Deleting pod "pod-subpath-test-projected-ftb4" in namespace "subpath-3985"
  I1005 13:09:49.689732 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3985" for this suite. @ 10/05/24 13:09:49.693
• [24.174 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 10/05/24 13:09:49.703
  I1005 13:09:49.703313 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename resourcequota @ 10/05/24 13:09:49.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:09:49.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:09:49.723
  E1005 13:09:50.125901      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:51.126455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:52.127313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:53.127385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:54.128463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:55.129384      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:56.129826      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:57.130434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:58.130525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:09:59.131380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:00.132340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:01.133197      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:02.134243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:03.135104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:04.135860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:05.136070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:06.136902      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 10/05/24 13:10:06.73
  E1005 13:10:07.137956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:08.138075      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:09.138148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:10.138425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:11.138500      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/05/24 13:10:11.736
  STEP: Ensuring resource quota status is calculated @ 10/05/24 13:10:11.743
  E1005 13:10:12.139447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:13.139563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 10/05/24 13:10:13.749
  STEP: Ensuring resource quota status captures configMap creation @ 10/05/24 13:10:13.762
  E1005 13:10:14.139702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:15.139945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 10/05/24 13:10:15.767
  STEP: Ensuring resource quota status released usage @ 10/05/24 13:10:15.774
  E1005 13:10:16.140470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:17.140660      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:10:17.780432 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3020" for this suite. @ 10/05/24 13:10:17.785
• [28.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 10/05/24 13:10:17.794
  I1005 13:10:17.794886 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/05/24 13:10:17.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:10:17.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:10:17.816
  STEP: creating the policy @ 10/05/24 13:10:17.823
  STEP: waiting until the marker is denied @ 10/05/24 13:10:17.842
  STEP: testing a replicated Deployment to be allowed @ 10/05/24 13:10:17.951
  STEP: testing a non-replicated ReplicaSet not to be denied @ 10/05/24 13:10:17.98
  I1005 13:10:18.042892 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7521" for this suite. @ 10/05/24 13:10:18.048
• [0.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 10/05/24 13:10:18.058
  I1005 13:10:18.058382 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename limitrange @ 10/05/24 13:10:18.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:10:18.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:10:18.079
  STEP: Creating LimitRange "e2e-limitrange-dqtq9" in namespace "limitrange-7886" @ 10/05/24 13:10:18.081
  STEP: Creating another limitRange in another namespace @ 10/05/24 13:10:18.087
  I1005 13:10:18.102485 19 limit_range.go:299] Namespace "e2e-limitrange-dqtq9-9730" created
  I1005 13:10:18.102514 19 limit_range.go:300] Creating LimitRange "e2e-limitrange-dqtq9" in namespace "e2e-limitrange-dqtq9-9730"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-dqtq9" @ 10/05/24 13:10:18.11
  I1005 13:10:18.113758 19 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-dqtq9" in "limitrange-7886" namespace @ 10/05/24 13:10:18.113
  I1005 13:10:18.120514 19 limit_range.go:335] LimitRange "e2e-limitrange-dqtq9" has been patched
  STEP: Delete LimitRange "e2e-limitrange-dqtq9" by Collection with labelSelector: "e2e-limitrange-dqtq9=patched" @ 10/05/24 13:10:18.12
  STEP: Confirm that the limitRange "e2e-limitrange-dqtq9" has been deleted @ 10/05/24 13:10:18.131
  I1005 13:10:18.131578 19 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1005 13:10:18.135272 19 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-dqtq9=patched"
  I1005 13:10:18.135297 19 limit_range.go:344] LimitRange "e2e-limitrange-dqtq9" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-dqtq9" @ 10/05/24 13:10:18.135
  I1005 13:10:18.138857 19 limit_range.go:350] Found 1 limitRange
  I1005 13:10:18.139018 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1005 13:10:18.141010      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "limitrange-7886" for this suite. @ 10/05/24 13:10:18.142
  STEP: Destroying namespace "e2e-limitrange-dqtq9-9730" for this suite. @ 10/05/24 13:10:18.149
• [0.099 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 10/05/24 13:10:18.157
  I1005 13:10:18.157677 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename field-validation @ 10/05/24 13:10:18.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:10:18.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:10:18.176
  I1005 13:10:18.179543 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  W1005 13:10:18.180165      19 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc004954160 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1005 13:10:19.141176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:20.141444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1005 13:10:20.718551      19 warnings.go:70] unknown field "alpha"
  W1005 13:10:20.718573      19 warnings.go:70] unknown field "beta"
  W1005 13:10:20.718576      19 warnings.go:70] unknown field "delta"
  W1005 13:10:20.718580      19 warnings.go:70] unknown field "epsilon"
  W1005 13:10:20.718583      19 warnings.go:70] unknown field "gamma"
  E1005 13:10:21.141573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:10:21.271867 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5510" for this suite. @ 10/05/24 13:10:21.276
• [3.129 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 10/05/24 13:10:21.286
  I1005 13:10:21.286861 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename deployment @ 10/05/24 13:10:21.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:10:21.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:10:21.305
  STEP: creating a Deployment @ 10/05/24 13:10:21.31
  I1005 13:10:21.310426 19 deployment.go:507] Creating simple deployment test-deployment-xl5wt
  I1005 13:10:21.325010 19 deployment.go:222] deployment "test-deployment-xl5wt" doesn't have the required revision set
  E1005 13:10:22.141876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:23.142006      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Getting /status @ 10/05/24 13:10:23.341
  I1005 13:10:23.346321 19 deployment.go:532] Deployment test-deployment-xl5wt has Conditions: [{Available True 2024-10-05 13:10:22 +0000 UTC 2024-10-05 13:10:22 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-10-05 13:10:22 +0000 UTC 2024-10-05 13:10:21 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-xl5wt-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 10/05/24 13:10:23.346
  I1005 13:10:23.357740 19 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 10, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 10, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 10, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 10, 21, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-xl5wt-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 10/05/24 13:10:23.357
  I1005 13:10:23.359708 19 deployment.go:579] Observed &Deployment event: ADDED
  I1005 13:10:23.359733 19 deployment.go:575] Observed Deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-05 13:10:21 +0000 UTC 2024-10-05 13:10:21 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-xl5wt-f4dbbbf74"}
  I1005 13:10:23.359798 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1005 13:10:23.359819 19 deployment.go:575] Observed Deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-05 13:10:21 +0000 UTC 2024-10-05 13:10:21 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-xl5wt-f4dbbbf74"}
  I1005 13:10:23.359834 19 deployment.go:575] Observed Deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-05 13:10:21 +0000 UTC 2024-10-05 13:10:21 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1005 13:10:23.359931 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1005 13:10:23.359950 19 deployment.go:575] Observed Deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-05 13:10:21 +0000 UTC 2024-10-05 13:10:21 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1005 13:10:23.359960 19 deployment.go:575] Observed Deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-05 13:10:21 +0000 UTC 2024-10-05 13:10:21 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-xl5wt-f4dbbbf74" is progressing.}
  I1005 13:10:23.360116 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1005 13:10:23.360137 19 deployment.go:575] Observed Deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-05 13:10:22 +0000 UTC 2024-10-05 13:10:22 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1005 13:10:23.360146 19 deployment.go:575] Observed Deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-05 13:10:22 +0000 UTC 2024-10-05 13:10:21 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-xl5wt-f4dbbbf74" has successfully progressed.}
  I1005 13:10:23.360290 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1005 13:10:23.360308 19 deployment.go:575] Observed Deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-05 13:10:22 +0000 UTC 2024-10-05 13:10:22 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1005 13:10:23.360319 19 deployment.go:575] Observed Deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-05 13:10:22 +0000 UTC 2024-10-05 13:10:21 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-xl5wt-f4dbbbf74" has successfully progressed.}
  I1005 13:10:23.360331 19 deployment.go:572] Found Deployment test-deployment-xl5wt in namespace deployment-8050 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1005 13:10:23.360342 19 deployment.go:583] Deployment test-deployment-xl5wt has an updated status
  STEP: patching the Statefulset Status @ 10/05/24 13:10:23.36
  I1005 13:10:23.360367 19 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1005 13:10:23.367878 19 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 10/05/24 13:10:23.367
  I1005 13:10:23.369290 19 deployment.go:616] Observed &Deployment event: ADDED
  I1005 13:10:23.369314 19 deployment.go:612] Observed deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-05 13:10:21 +0000 UTC 2024-10-05 13:10:21 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-xl5wt-f4dbbbf74"}
  I1005 13:10:23.369376 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1005 13:10:23.369393 19 deployment.go:612] Observed deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-05 13:10:21 +0000 UTC 2024-10-05 13:10:21 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-xl5wt-f4dbbbf74"}
  I1005 13:10:23.369404 19 deployment.go:612] Observed deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-05 13:10:21 +0000 UTC 2024-10-05 13:10:21 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1005 13:10:23.369472 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1005 13:10:23.369558 19 deployment.go:612] Observed deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-05 13:10:21 +0000 UTC 2024-10-05 13:10:21 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1005 13:10:23.369630 19 deployment.go:612] Observed deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-05 13:10:21 +0000 UTC 2024-10-05 13:10:21 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-xl5wt-f4dbbbf74" is progressing.}
  I1005 13:10:23.369738 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1005 13:10:23.369756 19 deployment.go:612] Observed deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-05 13:10:22 +0000 UTC 2024-10-05 13:10:22 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1005 13:10:23.369766 19 deployment.go:612] Observed deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-05 13:10:22 +0000 UTC 2024-10-05 13:10:21 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-xl5wt-f4dbbbf74" has successfully progressed.}
  I1005 13:10:23.369846 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1005 13:10:23.369861 19 deployment.go:612] Observed deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-05 13:10:22 +0000 UTC 2024-10-05 13:10:22 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1005 13:10:23.369870 19 deployment.go:612] Observed deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-05 13:10:22 +0000 UTC 2024-10-05 13:10:21 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-xl5wt-f4dbbbf74" has successfully progressed.}
  I1005 13:10:23.369879 19 deployment.go:612] Observed deployment test-deployment-xl5wt in namespace deployment-8050 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1005 13:10:23.370017 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1005 13:10:23.370039 19 deployment.go:609] Found deployment test-deployment-xl5wt in namespace deployment-8050 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1005 13:10:23.370050 19 deployment.go:620] Deployment test-deployment-xl5wt has a patched status
  I1005 13:10:23.376591 19 deployment.go:633] Deployment "test-deployment-xl5wt":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-xl5wt",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1dcb2234-61df-42cf-aaeb-c3c8b4a4259f",
      ResourceVersion: (string) (len=5) "21348",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-xl5wt-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1005 13:10:23.382600 19 deployment.go:39] New ReplicaSet "test-deployment-xl5wt-f4dbbbf74" of Deployment "test-deployment-xl5wt":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-xl5wt-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ea04744-c3cc-42f5-86f7-ae29c6ce7cea",
      ResourceVersion: (string) (len=5) "21314",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-xl5wt",
          UID: (types.UID) (len=36) "1dcb2234-61df-42cf-aaeb-c3c8b4a4259f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 31 64 63  |k:{\"uid\":\"1dc|
              00000120  62 32 32 33 34 2d 36 31  64 66 2d 34 32 63 66 2d  |b2234-61df-42cf-|
              00000130  61 61 65 62 2d 63 33 63  38 62 34 61 34 32 35 39  |aaeb-c3c8b4a4259|
              00000140  66 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |f\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1005 13:10:23.387181 19 deployment.go:67] Pod "test-deployment-xl5wt-f4dbbbf74-2xklv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-xl5wt-f4dbbbf74-2xklv",
      GenerateName: (string) (len=32) "test-deployment-xl5wt-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-8050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bdd49421-cf9c-4152-a637-150682066b33",
      ResourceVersion: (string) (len=5) "21313",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-xl5wt-f4dbbbf74",
          UID: (types.UID) (len=36) "0ea04744-c3cc-42f5-86f7-ae29c6ce7cea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 30 65 61 30 34 37 34  34 2d 63 33 63 63 2d 34  |"0ea04744-c3cc-4|
              000000a0  32 66 35 2d 38 36 66 37  2d 61 65 32 39 63 36 63  |2f5-86f7-ae29c6c|
              000000b0  65 37 63 65 61 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |e7cea\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 39  2e 38 33 5c 22 7d 22 3a  |2.168.59.83\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xshs7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xshs7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863730621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.162",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.162"
        }
      },
      PodIP: (string) (len=13) "192.168.59.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.59.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863730621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863730621,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5e3adb4655e284d0c59bd10beb3b6e2d8cd291a27ea4ee68923ca87d144b697e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xshs7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:10:23.388212 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8050" for this suite. @ 10/05/24 13:10:23.394
• [2.116 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 10/05/24 13:10:23.402
  I1005 13:10:23.402611 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename namespaces @ 10/05/24 13:10:23.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:10:23.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:10:23.427
  STEP: Creating namespace "e2e-ns-bpnz6" @ 10/05/24 13:10:23.429
  I1005 13:10:23.445094 19 namespace.go:411] Namespace "e2e-ns-bpnz6-6753" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-bpnz6-6753" @ 10/05/24 13:10:23.445
  I1005 13:10:23.454704 19 namespace.go:434] Namespace "e2e-ns-bpnz6-6753" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-bpnz6-6753" @ 10/05/24 13:10:23.454
  I1005 13:10:23.467437 19 namespace.go:463] Namespace "e2e-ns-bpnz6-6753" has []v1.FinalizerName{"kubernetes"}
  I1005 13:10:23.467546 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6488" for this suite. @ 10/05/24 13:10:23.471
  STEP: Destroying namespace "e2e-ns-bpnz6-6753" for this suite. @ 10/05/24 13:10:23.478
• [0.083 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 10/05/24 13:10:23.485
  I1005 13:10:23.485590 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename podtemplate @ 10/05/24 13:10:23.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:10:23.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:10:23.503
  STEP: Create a pod template @ 10/05/24 13:10:23.507
  STEP: Replace a pod template @ 10/05/24 13:10:23.517
  I1005 13:10:23.528882 19 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1005 13:10:23.529024 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1649" for this suite. @ 10/05/24 13:10:23.535
• [0.058 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 10/05/24 13:10:23.543
  I1005 13:10:23.543363 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename job @ 10/05/24 13:10:23.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:10:23.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:10:23.562
  STEP: Creating a job @ 10/05/24 13:10:23.564
  STEP: Ensure pods equal to parallelism count is attached to the job @ 10/05/24 13:10:23.571
  E1005 13:10:24.142449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:25.142672      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 10/05/24 13:10:25.577
  STEP: updating /status @ 10/05/24 13:10:25.585
  STEP: get /status @ 10/05/24 13:10:25.595
  I1005 13:10:25.598826 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-343" for this suite. @ 10/05/24 13:10:25.602
• [2.067 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 10/05/24 13:10:25.61
  I1005 13:10:25.610427 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename secrets @ 10/05/24 13:10:25.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:10:25.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:10:25.628
  STEP: Creating projection with secret that has name secret-emptykey-test-04a9161e-e753-44d5-8d05-eebfbd5dcb0b @ 10/05/24 13:10:25.632
  I1005 13:10:25.633083 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1657" for this suite. @ 10/05/24 13:10:25.636
• [0.033 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 10/05/24 13:10:25.643
  I1005 13:10:25.643332 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename discovery @ 10/05/24 13:10:25.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:10:25.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:10:25.669
  STEP: Setting up server cert @ 10/05/24 13:10:25.671
  I1005 13:10:25.946491 19 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1005 13:10:25.947234 19 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1005 13:10:25.947257 19 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1005 13:10:25.947265 19 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1005 13:10:25.947271 19 discovery.go:139] Checking APIGroup: apps
  I1005 13:10:25.947995 19 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1005 13:10:25.948008 19 discovery.go:148] Versions found [{apps/v1 v1}]
  I1005 13:10:25.948017 19 discovery.go:154] apps/v1 matches apps/v1
  I1005 13:10:25.948024 19 discovery.go:139] Checking APIGroup: events.k8s.io
  I1005 13:10:25.948622 19 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1005 13:10:25.948638 19 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1005 13:10:25.948644 19 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1005 13:10:25.948650 19 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1005 13:10:25.949264 19 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1005 13:10:25.949277 19 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1005 13:10:25.949284 19 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1005 13:10:25.949290 19 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1005 13:10:25.949847 19 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1005 13:10:25.949862 19 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1005 13:10:25.949868 19 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1005 13:10:25.949877 19 discovery.go:139] Checking APIGroup: autoscaling
  I1005 13:10:25.950453 19 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1005 13:10:25.950480 19 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1005 13:10:25.950486 19 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1005 13:10:25.950494 19 discovery.go:139] Checking APIGroup: batch
  I1005 13:10:25.951174 19 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1005 13:10:25.951186 19 discovery.go:148] Versions found [{batch/v1 v1}]
  I1005 13:10:25.951192 19 discovery.go:154] batch/v1 matches batch/v1
  I1005 13:10:25.951198 19 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1005 13:10:25.951749 19 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1005 13:10:25.951758 19 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1005 13:10:25.951764 19 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1005 13:10:25.951770 19 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1005 13:10:25.952323 19 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1005 13:10:25.952333 19 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1005 13:10:25.952338 19 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1005 13:10:25.952344 19 discovery.go:139] Checking APIGroup: policy
  I1005 13:10:25.952887 19 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1005 13:10:25.952897 19 discovery.go:148] Versions found [{policy/v1 v1}]
  I1005 13:10:25.952902 19 discovery.go:154] policy/v1 matches policy/v1
  I1005 13:10:25.952909 19 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1005 13:10:25.953437 19 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1005 13:10:25.953448 19 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1005 13:10:25.953467 19 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1005 13:10:25.953474 19 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1005 13:10:25.954004 19 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1005 13:10:25.954014 19 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1005 13:10:25.954020 19 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1005 13:10:25.954026 19 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1005 13:10:25.954579 19 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1005 13:10:25.954593 19 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1005 13:10:25.954597 19 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1005 13:10:25.954602 19 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1005 13:10:25.955138 19 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1005 13:10:25.955148 19 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1005 13:10:25.955154 19 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1005 13:10:25.955159 19 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1005 13:10:25.955693 19 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1005 13:10:25.955704 19 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1005 13:10:25.955709 19 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1005 13:10:25.955715 19 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1005 13:10:25.956300 19 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1005 13:10:25.956310 19 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1005 13:10:25.956316 19 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1005 13:10:25.956346 19 discovery.go:139] Checking APIGroup: node.k8s.io
  I1005 13:10:25.956920 19 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1005 13:10:25.956930 19 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1005 13:10:25.956936 19 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1005 13:10:25.956942 19 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1005 13:10:25.957484 19 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1005 13:10:25.957496 19 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1005 13:10:25.957502 19 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1005 13:10:25.957533 19 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1005 13:10:25.958159 19 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1005 13:10:25.958170 19 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I1005 13:10:25.958176 19 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1005 13:10:25.958185 19 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I1005 13:10:25.958732 19 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I1005 13:10:25.958742 19 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I1005 13:10:25.958748 19 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I1005 13:10:25.958844 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9203" for this suite. @ 10/05/24 13:10:25.963
• [0.328 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 10/05/24 13:10:25.971
  I1005 13:10:25.971676 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename dns @ 10/05/24 13:10:25.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:10:25.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:10:25.992
  STEP: Creating a test headless service @ 10/05/24 13:10:25.994
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5641 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5641;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5641 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5641;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5641.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5641.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5641.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5641.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5641.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5641.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5641.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5641.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5641.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5641.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5641.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5641.svc;check="$$(dig +notcp +noall +answer +search 28.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.28_udp@PTR;check="$$(dig +tcp +noall +answer +search 28.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.28_tcp@PTR;sleep 1; done
   @ 10/05/24 13:10:26.012
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5641 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5641;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5641 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5641;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5641.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5641.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5641.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5641.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5641.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5641.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5641.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5641.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5641.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5641.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5641.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5641.svc;check="$$(dig +notcp +noall +answer +search 28.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.28_udp@PTR;check="$$(dig +tcp +noall +answer +search 28.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.28_tcp@PTR;sleep 1; done
   @ 10/05/24 13:10:26.012
  STEP: creating a pod to probe DNS @ 10/05/24 13:10:26.012
  STEP: submitting the pod to kubernetes @ 10/05/24 13:10:26.012
  E1005 13:10:26.142803      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:27.142941      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/05/24 13:10:28.042
  STEP: looking for the results for each expected name from probers @ 10/05/24 13:10:28.046
  I1005 13:10:28.053550 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  I1005 13:10:28.058606 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  I1005 13:10:28.063086 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5641 from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  I1005 13:10:28.068384 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5641 from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  I1005 13:10:28.073269 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5641.svc from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  I1005 13:10:28.077963 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5641.svc from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  I1005 13:10:28.082991 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5641.svc from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  I1005 13:10:28.087671 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5641.svc from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  I1005 13:10:28.113552 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  I1005 13:10:28.118460 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  I1005 13:10:28.123265 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5641 from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  I1005 13:10:28.127838 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5641 from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  I1005 13:10:28.132060 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5641.svc from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  I1005 13:10:28.136787 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5641.svc from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  E1005 13:10:28.143026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:10:28.143357 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5641.svc from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  I1005 13:10:28.147480 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5641.svc from pod dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473: the server could not find the requested resource (get pods dns-test-901a0b19-5a15-441d-a689-513408224473)
  I1005 13:10:28.166720 19 dns_common.go:489] Lookups using dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5641 wheezy_tcp@dns-test-service.dns-5641 wheezy_udp@dns-test-service.dns-5641.svc wheezy_tcp@dns-test-service.dns-5641.svc wheezy_udp@_http._tcp.dns-test-service.dns-5641.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5641.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5641 jessie_tcp@dns-test-service.dns-5641 jessie_udp@dns-test-service.dns-5641.svc jessie_tcp@dns-test-service.dns-5641.svc jessie_udp@_http._tcp.dns-test-service.dns-5641.svc jessie_tcp@_http._tcp.dns-test-service.dns-5641.svc]

  I1005 13:10:28.174753 19 dns_common.go:495] Pod client logs for webserver: 
  I1005 13:10:28.181931 19 dns_common.go:495] Pod client logs for querier: 
  I1005 13:10:28.190000 19 dns_common.go:495] Pod client logs for jessie-querier: 
  E1005 13:10:29.143462      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:30.143682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:31.143852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:32.144265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:33.144750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:10:33.165343 19 dns_common.go:527] DNS probes using dns-5641/dns-test-901a0b19-5a15-441d-a689-513408224473 succeeded

  STEP: deleting the pod @ 10/05/24 13:10:33.165
  STEP: deleting the test service @ 10/05/24 13:10:33.19
  STEP: deleting the test headless service @ 10/05/24 13:10:33.219
  I1005 13:10:33.233068 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5641" for this suite. @ 10/05/24 13:10:33.236
• [7.274 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 10/05/24 13:10:33.245
  I1005 13:10:33.245931 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 13:10:33.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:10:33.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:10:33.265
  STEP: creating service nodeport-test with type=NodePort in namespace services-2150 @ 10/05/24 13:10:33.267
  STEP: creating replication controller nodeport-test in namespace services-2150 @ 10/05/24 13:10:33.283
  I1005 13:10:33.290693      19 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-2150, replica count: 2
  E1005 13:10:34.144860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:35.144912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:36.145146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:10:36.342669      19 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1005 13:10:36.342709 19 resource.go:361] Creating new exec pod
  E1005 13:10:37.145599      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:38.145776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:39.146394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:10:39.367653 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-2150 exec execpodssf6t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1005 13:10:39.461533 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1005 13:10:39.461573 19 builder.go:147] stdout: "nodeport-test-8kdcr"
  I1005 13:10:39.461672 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-2150 exec execpodssf6t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.223 80'
  I1005 13:10:39.547299 19 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.223 80\n+ echo hostName\nConnection to 10.152.183.223 80 port [tcp/http] succeeded!\n"
  I1005 13:10:39.547336 19 builder.go:147] stdout: ""
  E1005 13:10:40.147009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:10:40.462530 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-2150 exec execpodssf6t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.223 80'
  I1005 13:10:40.548932 19 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.223 80+ echo hostName\n\nConnection to 10.152.183.223 80 port [tcp/http] succeeded!\n"
  I1005 13:10:40.548971 19 builder.go:147] stdout: ""
  E1005 13:10:41.147385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:10:41.462022 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-2150 exec execpodssf6t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.223 80'
  I1005 13:10:41.572731 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.223 80\nConnection to 10.152.183.223 80 port [tcp/http] succeeded!\n"
  I1005 13:10:41.572977 19 builder.go:147] stdout: "nodeport-test-c7rn2"
  I1005 13:10:41.573260 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-2150 exec execpodssf6t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.83.192 32491'
  I1005 13:10:41.672895 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.83.192 32491\nConnection to 172.31.83.192 32491 port [tcp/*] succeeded!\n"
  I1005 13:10:41.672935 19 builder.go:147] stdout: ""
  E1005 13:10:42.148450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:10:42.574118 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-2150 exec execpodssf6t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.83.192 32491'
  I1005 13:10:42.661409 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.83.192 32491\nConnection to 172.31.83.192 32491 port [tcp/*] succeeded!\n"
  I1005 13:10:42.661453 19 builder.go:147] stdout: "nodeport-test-c7rn2"
  I1005 13:10:42.661540 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-2150 exec execpodssf6t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.60 32491'
  I1005 13:10:42.750483 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.60 32491\nConnection to 172.31.20.60 32491 port [tcp/*] succeeded!\n"
  I1005 13:10:42.750538 19 builder.go:147] stdout: "nodeport-test-8kdcr"
  I1005 13:10:42.750673 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2150" for this suite. @ 10/05/24 13:10:42.756
• [9.519 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 10/05/24 13:10:42.765
  I1005 13:10:42.765086 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename containers @ 10/05/24 13:10:42.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:10:42.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:10:42.786
  E1005 13:10:43.149063      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:44.149169      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:10:44.827672 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9042" for this suite. @ 10/05/24 13:10:44.832
• [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 10/05/24 13:10:44.84
  I1005 13:10:44.840255 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename svcaccounts @ 10/05/24 13:10:44.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:10:44.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:10:44.858
  STEP: Creating ServiceAccount "e2e-sa-2zkm7"  @ 10/05/24 13:10:44.86
  I1005 13:10:44.865594 19 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-2zkm7"  @ 10/05/24 13:10:44.865
  I1005 13:10:44.873442 19 service_accounts.go:839] AutomountServiceAccountToken: true
  I1005 13:10:44.873545 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8651" for this suite. @ 10/05/24 13:10:44.877
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 10/05/24 13:10:44.886
  I1005 13:10:44.886239 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename watch @ 10/05/24 13:10:44.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:10:44.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:10:44.904
  STEP: creating a watch on configmaps @ 10/05/24 13:10:44.907
  STEP: creating a new configmap @ 10/05/24 13:10:44.907
  STEP: modifying the configmap once @ 10/05/24 13:10:44.911
  STEP: closing the watch once it receives two notifications @ 10/05/24 13:10:44.92
  I1005 13:10:44.920458 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5400  e55a550f-e480-4361-952e-5b7109f6968e 21719 0 2024-10-05 13:10:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-05 13:10:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 13:10:44.920692 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5400  e55a550f-e480-4361-952e-5b7109f6968e 21720 0 2024-10-05 13:10:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-05 13:10:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 10/05/24 13:10:44.92
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 10/05/24 13:10:44.929
  STEP: deleting the configmap @ 10/05/24 13:10:44.93
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 10/05/24 13:10:44.937
  I1005 13:10:44.937134 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5400  e55a550f-e480-4361-952e-5b7109f6968e 21721 0 2024-10-05 13:10:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-05 13:10:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 13:10:44.937397 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5400  e55a550f-e480-4361-952e-5b7109f6968e 21722 0 2024-10-05 13:10:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-05 13:10:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 13:10:44.937513 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5400" for this suite. @ 10/05/24 13:10:44.941
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 10/05/24 13:10:44.95
  I1005 13:10:44.950212 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename cronjob @ 10/05/24 13:10:44.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:10:44.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:10:44.968
  STEP: Creating a suspended cronjob @ 10/05/24 13:10:44.971
  STEP: Ensuring no jobs are scheduled @ 10/05/24 13:10:44.976
  E1005 13:10:45.149603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:46.149697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:47.150749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:48.151051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:49.152055      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:50.152492      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:51.153190      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:52.153400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:53.154384      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:54.154703      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:55.155444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:56.155656      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:57.156371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:58.156868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:10:59.157460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:00.158457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:01.159186      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:02.159407      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:03.159894      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:04.160417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:05.160779      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:06.161451      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:07.162277      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:08.162386      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:09.162906      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:10.163806      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:11.164019      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:12.164177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:13.165249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:14.165411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:15.165925      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:16.166070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:17.166992      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:18.167206      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:19.167464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:20.167560      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:21.168447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:22.168555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:23.168815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:24.169018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:25.169259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:26.169397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:27.170285      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:28.170496      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:29.171473      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:30.171704      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:31.172418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:32.172779      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:33.173182      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:34.173327      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:35.173814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:36.174121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:37.174169      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:38.175030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:39.176013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:40.176144      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:41.176948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:42.177059      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:43.177442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:44.177551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:45.178018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:46.178075      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:47.179051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:48.179474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:49.180466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:50.180588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:51.181042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:52.181166      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:53.182261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:54.182786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:55.182959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:56.183994      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:57.184662      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:58.184804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:11:59.185490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:00.185720      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:01.186028      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:02.186283      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:03.186252      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:04.187097      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:05.187388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:06.188452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:07.188558      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:08.189464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:09.190441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:10.190692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:11.191010      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:12.191123      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:13.191258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:14.191394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:15.191725      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:16.191858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:17.192185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:18.192396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:19.192542      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:20.192699      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:21.192820      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:22.192972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:23.193630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:24.194062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:25.194041      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:26.194067      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:27.194353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:28.194823      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:29.195432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:30.196295      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:31.196372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:32.197049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:33.197148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:34.197364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:35.197457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:36.198441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:37.198537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:38.198632      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:39.199427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:40.199534      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:41.200426      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:42.200700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:43.200895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:44.201016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:45.201204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:46.201359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:47.201483      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:48.201750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:49.201882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:50.202426      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:51.202683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:52.202979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:53.203198      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:54.203333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:55.203553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:56.203853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:57.204182      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:58.204332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:12:59.204544      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:00.204831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:01.204999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:02.205147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:03.205419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:04.205573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:05.205682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:06.205811      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:07.205943      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:08.206640      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:09.206859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:10.207394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:11.208473      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:12.208557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:13.209449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:14.210461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:15.210673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:16.210805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:17.210939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:18.211448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:19.211558      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:20.211684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:21.211919      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:22.212063      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:23.212271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:24.212395      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:25.212634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:26.212763      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:27.212940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:28.213062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:29.213176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:30.214148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:31.214352      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:32.214471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:33.214706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:34.214812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:35.214921      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:36.215924      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:37.216918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:38.217388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:39.218452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:40.218544      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:41.218647      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:42.219445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:43.219563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:44.220468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:45.220687      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:46.220791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:47.220965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:48.222041      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:49.222476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:50.222535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:51.222855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:52.223371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:53.223524      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:54.223686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:55.223929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:56.224047      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:57.224164      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:58.224343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:13:59.224586      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:00.224784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:01.225551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:02.225712      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:03.225964      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:04.226386      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:05.226580      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:06.226667      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:07.226937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:08.227826      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:09.227910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:10.228024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:11.228095      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:12.228390      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:13.229461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:14.229565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:15.229692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:16.230387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:17.230518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:18.230774      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:19.230999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:20.231123      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:21.231390      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:22.231484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:23.231694      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:24.232147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:25.232253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:26.232959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:27.233097      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:28.234116      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:29.234339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:30.234629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:31.234845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:32.234950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:33.235142      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:34.235947      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:35.236196      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:36.237148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:37.237356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:38.237456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:39.238421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:40.239458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:41.239663      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:42.240714      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:43.240808      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:44.241757      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:45.241862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:46.242897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:47.243337      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:48.244211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:49.244368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:50.244489      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:51.244748      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:52.244875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:53.245093      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:54.245619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:55.246416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:56.246772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:57.246876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:58.247738      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:14:59.247837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:00.248322      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:01.248360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:02.248465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:03.248503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:04.249563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:05.249765      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:06.250430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:07.250621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:08.250810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:09.251049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:10.251348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:11.251550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:12.252610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:13.252901      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:14.253242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:15.253356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:16.253452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:17.254465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:18.255326      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:19.255553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:20.256562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:21.256669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:22.257051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:23.257166      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:24.257255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:25.257366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:26.257461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:27.257563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:28.258433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:29.259421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:30.259549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:31.260425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:32.261191      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:33.261330      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:34.261378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:35.261573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:36.261999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:37.262354      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:38.263046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:39.263176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:40.263560      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:41.263769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:42.263944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:43.264096      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:44.265011      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 10/05/24 13:15:44.977
  STEP: Removing cronjob @ 10/05/24 13:15:44.988
  I1005 13:15:44.996812 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9476" for this suite. @ 10/05/24 13:15:45
• [300.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 10/05/24 13:15:45.009
  I1005 13:15:45.009249 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 13:15:45.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:15:45.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:15:45.048
  STEP: creating service in namespace services-6369 @ 10/05/24 13:15:45.05
  STEP: creating service affinity-nodeport-transition in namespace services-6369 @ 10/05/24 13:15:45.05
  STEP: creating replication controller affinity-nodeport-transition in namespace services-6369 @ 10/05/24 13:15:45.068
  I1005 13:15:45.076725      19 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-6369, replica count: 3
  E1005 13:15:45.265868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:46.265969      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:47.266648      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:15:48.128351      19 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1005 13:15:48.141790 19 resource.go:361] Creating new exec pod
  E1005 13:15:48.267557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:49.268450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:50.268693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:15:51.162862 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-6369 exec execpod-affinityr2d4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I1005 13:15:51.259443 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I1005 13:15:51.259494 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 13:15:51.259574 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-6369 exec execpod-affinityr2d4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.77 80'
  E1005 13:15:51.269198      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:15:51.349247 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.77 80\nConnection to 10.152.183.77 80 port [tcp/http] succeeded!\n"
  I1005 13:15:51.349298 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 13:15:51.349385 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-6369 exec execpod-affinityr2d4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.60 31085'
  I1005 13:15:51.437408 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.60 31085\nConnection to 172.31.20.60 31085 port [tcp/*] succeeded!\n"
  I1005 13:15:51.437451 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 13:15:51.437613 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-6369 exec execpod-affinityr2d4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.83.192 31085'
  I1005 13:15:51.523166 19 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.83.192 31085\n+ echo hostName\nConnection to 172.31.83.192 31085 port [tcp/*] succeeded!\n"
  I1005 13:15:51.523215 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 13:15:51.534372 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-6369 exec execpod-affinityr2d4j -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.20.60:31085/ ; done'
  I1005 13:15:51.708602 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n"
  I1005 13:15:51.708647 19 builder.go:147] stdout: "\naffinity-nodeport-transition-kft2c\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-kft2c\naffinity-nodeport-transition-kft2c\naffinity-nodeport-transition-kft2c\naffinity-nodeport-transition-lhnqj\naffinity-nodeport-transition-lhnqj\naffinity-nodeport-transition-kft2c\naffinity-nodeport-transition-lhnqj\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-lhnqj\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-kft2c\naffinity-nodeport-transition-ngc7f"
  I1005 13:15:51.708661 19 service.go:242] Received response from host: affinity-nodeport-transition-kft2c
  I1005 13:15:51.708668 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.708691 19 service.go:242] Received response from host: affinity-nodeport-transition-kft2c
  I1005 13:15:51.708697 19 service.go:242] Received response from host: affinity-nodeport-transition-kft2c
  I1005 13:15:51.708704 19 service.go:242] Received response from host: affinity-nodeport-transition-kft2c
  I1005 13:15:51.708711 19 service.go:242] Received response from host: affinity-nodeport-transition-lhnqj
  I1005 13:15:51.708716 19 service.go:242] Received response from host: affinity-nodeport-transition-lhnqj
  I1005 13:15:51.708726 19 service.go:242] Received response from host: affinity-nodeport-transition-kft2c
  I1005 13:15:51.708737 19 service.go:242] Received response from host: affinity-nodeport-transition-lhnqj
  I1005 13:15:51.708743 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.708756 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.708763 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.708769 19 service.go:242] Received response from host: affinity-nodeport-transition-lhnqj
  I1005 13:15:51.708775 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.708781 19 service.go:242] Received response from host: affinity-nodeport-transition-kft2c
  I1005 13:15:51.708789 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.718633 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-6369 exec execpod-affinityr2d4j -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.20.60:31085/ ; done'
  I1005 13:15:51.934558 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31085/\n"
  I1005 13:15:51.934628 19 builder.go:147] stdout: "\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f\naffinity-nodeport-transition-ngc7f"
  I1005 13:15:51.934641 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934649 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934656 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934662 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934668 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934674 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934679 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934685 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934691 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934696 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934702 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934707 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934713 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934719 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934730 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934736 19 service.go:242] Received response from host: affinity-nodeport-transition-ngc7f
  I1005 13:15:51.934817 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-6369, will wait for the garbage collector to delete the pods @ 10/05/24 13:15:51.949
  I1005 13:15:52.015346 19 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 8.801563ms
  I1005 13:15:52.116521 19 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.169431ms
  E1005 13:15:52.270125      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:53.270502      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:54.271562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:15:54.845828 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6369" for this suite. @ 10/05/24 13:15:54.85
• [9.848 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 10/05/24 13:15:54.857
  I1005 13:15:54.857138 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename init-container @ 10/05/24 13:15:54.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:15:54.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:15:54.876
  STEP: creating the pod @ 10/05/24 13:15:54.879
  I1005 13:15:54.879335 19 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E1005 13:15:55.271699      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:56.271956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:57.272064      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:15:57.901071 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5248" for this suite. @ 10/05/24 13:15:57.906
• [3.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 10/05/24 13:15:57.915
  I1005 13:15:57.915084 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename statefulset @ 10/05/24 13:15:57.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:15:57.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:15:57.937
  STEP: Creating service test in namespace statefulset-3371 @ 10/05/24 13:15:57.939
  STEP: Creating a new StatefulSet @ 10/05/24 13:15:57.944
  I1005 13:15:57.959055 19 wait.go:40] Found 0 stateful pods, waiting for 3
  E1005 13:15:58.272561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:15:59.273443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:00.273662      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:01.273764      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:02.274177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:03.274392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:04.274655      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:05.274776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:06.274879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:07.274972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:16:07.958668 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1005 13:16:07.958698 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1005 13:16:07.958705 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/05/24 13:16:07.971
  I1005 13:16:07.983083 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 10/05/24 13:16:07.983
  E1005 13:16:08.275169      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:09.275335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:10.275537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:11.275722      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:12.275853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:13.276893      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:14.277014      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:15.277097      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:16.277537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:17.277628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 10/05/24 13:16:17.992
  STEP: Performing a canary update @ 10/05/24 13:16:17.992
  I1005 13:16:18.005585 19 statefulset.go:2507] Updating stateful set ss2
  I1005 13:16:18.015278 19 wait.go:74] Waiting for Pod statefulset-3371/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1005 13:16:18.278415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:19.278520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:20.278595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:21.278687      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:22.279449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:23.279584      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:24.280046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:25.280160      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:26.280400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:27.280725      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 10/05/24 13:16:28.016
  I1005 13:16:28.066950 19 wait.go:40] Found 2 stateful pods, waiting for 3
  E1005 13:16:28.281382      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:29.281489      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:30.281607      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:31.281806      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:32.281974      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:33.282104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:34.282201      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:35.282427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:36.282662      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:37.282784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:16:38.064646 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1005 13:16:38.064683 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1005 13:16:38.064691 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 10/05/24 13:16:38.071
  I1005 13:16:38.081733 19 statefulset.go:2507] Updating stateful set ss2
  I1005 13:16:38.090922 19 wait.go:74] Waiting for Pod statefulset-3371/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1005 13:16:38.283142      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:39.283254      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:40.283401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:41.283490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:42.284025      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:43.284128      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:44.284393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:45.284619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:46.284827      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:47.285067      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:16:48.100870 19 statefulset.go:2507] Updating stateful set ss2
  I1005 13:16:48.107944 19 wait.go:56] Waiting for StatefulSet statefulset-3371/ss2 to complete update
  I1005 13:16:48.107980 19 wait.go:63] Waiting for Pod statefulset-3371/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1005 13:16:48.285185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:49.285400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:50.285615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:51.285883      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:52.285991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:53.286209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:54.286500      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:55.286670      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:56.287742      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:57.287820      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:16:58.110613 19 statefulset.go:138] Deleting all statefulset in ns statefulset-3371
  I1005 13:16:58.113953 19 rest.go:150] Scaling statefulset ss2 to 0
  E1005 13:16:58.288734      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:16:59.289526      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:00.289633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:01.290501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:02.290654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:03.290794      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:04.290907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:05.291102      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:06.291518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:07.291716      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:08.131313 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1005 13:17:08.135424 19 rest.go:88] Deleting statefulset ss2
  I1005 13:17:08.152457 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3371" for this suite. @ 10/05/24 13:17:08.155
• [70.247 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 10/05/24 13:17:08.162
  I1005 13:17:08.162659 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-probe @ 10/05/24 13:17:08.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:17:08.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:17:08.181
  STEP: Creating pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301 @ 10/05/24 13:17:08.183
  E1005 13:17:08.292332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:09.292424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/05/24 13:17:10.202
  I1005 13:17:10.207033 19 container_probe.go:1749] Initial restart count of pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac is 0
  I1005 13:17:10.210505 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:10.292767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:11.293521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:12.216614 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:12.293919      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:13.294096      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:14.221782 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:14.294952      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:15.295088      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:16.226491 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:16.295750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:17.295975      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:18.232567 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:18.296764      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:19.297168      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:20.237766 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:20.297909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:21.298243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:22.242833 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:22.298973      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:23.299454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:24.248464 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:24.299624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:25.299841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:26.254501 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:26.300769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:27.301744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:28.260550 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:28.302769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:29.302992      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:30.265809 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:30.303962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:31.304350      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:32.270766 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:32.304963      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:33.305196      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:34.276311 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:34.305469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:35.305646      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:36.281430 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:36.305747      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:37.305833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:38.287355 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:38.306764      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:39.306866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:40.293050 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:40.307148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:41.307416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:42.297724 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:42.307878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:43.308001      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:44.303319 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:44.308368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:45.309448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:46.309431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:46.309487 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:47.309615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:48.309691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:48.314902 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:49.309817      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:50.310127      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:50.320949 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:51.310544      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:52.310796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:52.326699 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:53.311768      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:54.312448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:54.332682 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:55.312721      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:56.313636      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:56.337849 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:57.313755      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:17:58.313901      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:17:58.342945 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:17:59.314009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:00.314271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:00.349414 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:01.314640      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:02.314869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:02.355151 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:03.314979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:04.315252      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:04.360639 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:05.315653      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:06.316629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:06.366129 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:07.316775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:08.317022      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:08.372580 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:09.317393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:10.317485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:10.377763 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:11.318538      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:12.319446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:12.383733 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:13.319557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:14.319665      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:14.389067 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:15.319760      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:16.320566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:16.395292 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:17.321253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:18.321372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:18.401039 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:19.322013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:20.322119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:20.405398 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:21.322532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:22.322645      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:22.411436 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:23.322805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:24.323112      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:24.416509 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:25.323267      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:26.323554      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:26.422781 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:27.323672      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:28.323879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:28.428865 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:29.324772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:30.324914      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:30.433952 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:31.325526      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:32.325626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:32.440668 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:33.326353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:34.326453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:34.447668 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:35.326554      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:36.326728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:36.452898 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:37.327567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:38.327661      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:38.459834 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:39.328412      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:40.328508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:40.465565 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:41.329527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:42.330416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:42.471120 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:43.331082      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:44.331335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:44.477035 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:45.332403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:46.332478      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:46.483135 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:47.332604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:48.332816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:48.489193 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:49.333036      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:50.333325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:50.494451 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:51.333885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:52.334101      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:52.500704 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:53.334248      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:54.334448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:54.506486 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:55.335385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:56.335855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:56.512929 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:57.336861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:18:58.337882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:18:58.518752 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:18:59.338419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:00.339416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:00.525145 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:01.340163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:02.340385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:02.531010 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:03.340496      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:04.340698      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:04.535625 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:05.341342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:06.341561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:06.541045 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:07.341654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:08.341907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:08.545446 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:09.342354      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:10.343428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:10.549663 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:11.343516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:12.343716      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:12.555291 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:13.343827      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:14.344027      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:14.559861 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:15.344844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:16.345204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:16.565376 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:17.346089      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:18.346313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:18.570415 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:19.347169      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:20.347351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:20.580276 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:21.347895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:22.347995      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:22.586878 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:23.348355      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:24.349422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:24.592852 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:25.350426      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:26.350471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:26.598035 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:27.350612      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:28.350808      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:28.603105 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:29.350912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:30.351127      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:30.608145 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:31.352009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:32.352199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:32.614041 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:33.352798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:34.353025      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:34.619868 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:35.353133      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:36.353183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:36.625085 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:37.353354      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:38.353454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:38.631255 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:39.353557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:40.353756      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:40.636943 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:41.354628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:42.354836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:42.641834 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:43.354980      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:44.355444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:44.648776 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:45.355538      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:46.355849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:46.654870 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:47.355951      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:48.356189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:48.660746 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:49.356459      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:50.356680      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:50.666841 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:51.357531      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:52.357628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:52.673050 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:53.358431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:54.359428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:54.678512 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:55.360376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:56.361289      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:56.684627 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:57.361341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:19:58.361533      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:19:58.690575 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:19:59.361782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:00.361906      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:00.695868 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:01.362540      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:02.363308      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:02.701851 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:03.363526      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:04.363729      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:04.708105 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:05.363789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:06.364621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:06.713813 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:07.365520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:08.365701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:08.718897 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:09.366651      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:10.366753      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:10.724266 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:11.367034      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:12.367438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:12.730765 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:13.368416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:14.369419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:14.736385 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:15.369516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:16.370574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:16.742478 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:17.370667      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:18.370855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:18.748605 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:19.371294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:20.371394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:20.754410 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:21.372265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:22.372454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:22.761348 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:23.373017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:24.373399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:24.766534 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:25.374331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:26.374562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:26.772875 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:27.375547      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:28.375707      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:28.778433 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:29.376094      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:30.376414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:30.783375 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:31.377006      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:32.377129      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:32.789216 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:33.377425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:34.378421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:34.795284 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:35.378507      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:36.379571      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:36.801031 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:37.379662      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:38.379876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:38.807509 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:39.380126      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:40.380405      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:40.812861 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:41.381297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:42.381388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:42.819600 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:43.382354      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:44.382484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:44.825358 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:45.382597      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:46.383665      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:46.831539 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:47.383789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:48.384039      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:48.837363 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:49.385118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:50.385323      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:50.843626 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:51.386291      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:52.386380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:52.848635 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:53.387309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:54.387360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:54.854290 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:55.388423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:56.388511      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:56.859862 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:57.389424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:20:58.389529      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:20:58.865665 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:20:59.390278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:00.390389      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:21:00.870679 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:21:01.391276      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:02.391470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:21:02.875412 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:21:03.391625      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:04.392451      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:21:04.881866 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:21:05.393445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:06.393566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:21:06.887800 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:21:07.394425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:08.394799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:21:08.894073 19 container_probe.go:1759] Get pod busybox-cc343566-ad1e-44c5-85b0-1af0fe75b9ac in namespace container-probe-1301
  E1005 13:21:09.395738      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:10.395963      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 10/05/24 13:21:10.894
  I1005 13:21:10.910887 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1301" for this suite. @ 10/05/24 13:21:10.918
• [242.764 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 10/05/24 13:21:10.926
  I1005 13:21:10.926853 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pod-network-test @ 10/05/24 13:21:10.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:21:10.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:21:10.947
  STEP: Performing setup for networking test in namespace pod-network-test-7291 @ 10/05/24 13:21:10.949
  STEP: creating a selector @ 10/05/24 13:21:10.949
  STEP: Creating the service pods in kubernetes @ 10/05/24 13:21:10.949
  I1005 13:21:10.949608 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1005 13:21:11.396682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:12.396799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:13.396882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:14.397018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:15.397455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:16.397542      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:17.398249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:18.398395      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:19.399263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:20.399384      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:21.399493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:22.399693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/05/24 13:21:23.043
  E1005 13:21:23.399819      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:24.399917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:21:25.079895 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1005 13:21:25.079933 19 utils.go:496] Going to poll 192.168.89.103 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1005 13:21:25.084063 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.89.103:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7291 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:21:25.084087 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:21:25.084523 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:21:25.084565 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7291/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.89.103%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1005 13:21:25.138984 19 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1005 13:21:25.139023 19 utils.go:496] Going to poll 192.168.59.110 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1005 13:21:25.143825 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.59.110:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7291 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:21:25.143847 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:21:25.144275 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:21:25.144321 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7291/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.59.110%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1005 13:21:25.183064 19 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1005 13:21:25.183151 19 utils.go:496] Going to poll 192.168.195.184 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1005 13:21:25.187878 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.195.184:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7291 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:21:25.187905 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:21:25.188355 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:21:25.188396 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7291/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.195.184%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1005 13:21:25.233888 19 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1005 13:21:25.234040 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7291" for this suite. @ 10/05/24 13:21:25.239
• [14.322 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 10/05/24 13:21:25.248
  I1005 13:21:25.248588 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename ingress @ 10/05/24 13:21:25.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:21:25.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:21:25.268
  STEP: getting /apis @ 10/05/24 13:21:25.27
  STEP: getting /apis/networking.k8s.io @ 10/05/24 13:21:25.272
  STEP: getting /apis/networking.k8s.iov1 @ 10/05/24 13:21:25.273
  STEP: creating @ 10/05/24 13:21:25.274
  STEP: getting @ 10/05/24 13:21:25.295
  STEP: listing @ 10/05/24 13:21:25.302
  STEP: watching @ 10/05/24 13:21:25.306
  I1005 13:21:25.306078 19 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 10/05/24 13:21:25.309
  STEP: cluster-wide watching @ 10/05/24 13:21:25.315
  I1005 13:21:25.316074 19 ingress.go:198] starting watch
  STEP: patching @ 10/05/24 13:21:25.317
  STEP: updating @ 10/05/24 13:21:25.323
  I1005 13:21:25.335889 19 ingress.go:221] waiting for watch events with expected annotations
  I1005 13:21:25.335927 19 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 10/05/24 13:21:25.336
  STEP: updating /status @ 10/05/24 13:21:25.341
  STEP: get /status @ 10/05/24 13:21:25.355
  STEP: deleting @ 10/05/24 13:21:25.362
  STEP: deleting a collection @ 10/05/24 13:21:25.378
  I1005 13:21:25.398826 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1005 13:21:25.400864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "ingress-1122" for this suite. @ 10/05/24 13:21:25.402
• [0.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 10/05/24 13:21:25.41
  I1005 13:21:25.410809 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename var-expansion @ 10/05/24 13:21:25.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:21:25.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:21:25.43
  STEP: creating the pod @ 10/05/24 13:21:25.432
  STEP: waiting for pod running @ 10/05/24 13:21:25.444
  E1005 13:21:26.401657      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:27.401920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 10/05/24 13:21:27.455
  I1005 13:21:27.458813 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-4571 PodName:var-expansion-b741d782-c7bc-4857-baa4-24e91c6b2861 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:21:27.458835 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:21:27.459266 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:21:27.459308 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4571/pods/var-expansion-b741d782-c7bc-4857-baa4-24e91c6b2861/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 10/05/24 13:21:27.499
  I1005 13:21:27.503574 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-4571 PodName:var-expansion-b741d782-c7bc-4857-baa4-24e91c6b2861 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:21:27.503597 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:21:27.503996 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:21:27.504038 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4571/pods/var-expansion-b741d782-c7bc-4857-baa4-24e91c6b2861/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 10/05/24 13:21:27.534
  I1005 13:21:28.049623 19 pod_client.go:173] Successfully updated pod "var-expansion-b741d782-c7bc-4857-baa4-24e91c6b2861"
  STEP: waiting for annotated pod running @ 10/05/24 13:21:28.049
  STEP: deleting the pod gracefully @ 10/05/24 13:21:28.053
  I1005 13:21:28.053996 19 delete.go:62] Deleting pod "var-expansion-b741d782-c7bc-4857-baa4-24e91c6b2861" in namespace "var-expansion-4571"
  I1005 13:21:28.063896 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-b741d782-c7bc-4857-baa4-24e91c6b2861" to be fully deleted
  E1005 13:21:28.402455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:29.402645      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:30.403476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:31.403533      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:32.404450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:33.404541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:34.404638      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:35.404731      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:36.405374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:37.405603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:38.406058      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:39.406128      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:40.407192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:41.407360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:42.407767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:43.408453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:44.409251      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:45.409394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:46.410331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:47.410553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:48.411544      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:49.411667      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:50.411703      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:51.412738      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:52.413300      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:53.413440      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:54.413977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:55.414123      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:56.414643      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:57.414752      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:58.417132      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:21:59.415080      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:22:00.156815 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4571" for this suite. @ 10/05/24 13:22:00.16
• [34.758 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 10/05/24 13:22:00.168
  I1005 13:22:00.168809 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename replicaset @ 10/05/24 13:22:00.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:22:00.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:22:00.191
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 10/05/24 13:22:00.193
  I1005 13:22:00.204102 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1005 13:22:00.415452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:01.415576      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:02.415672      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:03.415820      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:04.416038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:22:05.208766 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/05/24 13:22:05.208
  STEP: getting scale subresource @ 10/05/24 13:22:05.208
  STEP: updating a scale subresource @ 10/05/24 13:22:05.212
  STEP: verifying the replicaset Spec.Replicas was modified @ 10/05/24 13:22:05.217
  STEP: Patch a scale subresource @ 10/05/24 13:22:05.221
  I1005 13:22:05.232559 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5485" for this suite. @ 10/05/24 13:22:05.24
• [5.084 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 10/05/24 13:22:05.253
  I1005 13:22:05.253379 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename resourcequota @ 10/05/24 13:22:05.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:22:05.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:22:05.283
  STEP: Discovering how many secrets are in namespace by default @ 10/05/24 13:22:05.285
  E1005 13:22:05.416399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:06.416912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:07.417854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:08.417884      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:09.418443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 10/05/24 13:22:10.289
  E1005 13:22:10.418725      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:11.419160      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:12.419240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:13.419334      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:14.419676      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/05/24 13:22:15.294
  STEP: Ensuring resource quota status is calculated @ 10/05/24 13:22:15.299
  E1005 13:22:15.420273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:16.420525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 10/05/24 13:22:17.305
  STEP: Ensuring resource quota status captures secret creation @ 10/05/24 13:22:17.319
  E1005 13:22:17.420875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:18.421448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 10/05/24 13:22:19.325
  STEP: Ensuring resource quota status released usage @ 10/05/24 13:22:19.334
  E1005 13:22:19.422025      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:20.422736      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:22:21.341094 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7821" for this suite. @ 10/05/24 13:22:21.345
• [16.102 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 10/05/24 13:22:21.355
  I1005 13:22:21.355694 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 13:22:21.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:22:21.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:22:21.373
  STEP: creating Agnhost RC @ 10/05/24 13:22:21.376
  I1005 13:22:21.376058 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-8572 create -f -'
  E1005 13:22:21.423748      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:22:21.467781 19 builder.go:146] stderr: ""
  I1005 13:22:21.467821 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/05/24 13:22:21.467
  E1005 13:22:22.423862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:22:22.473685 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1005 13:22:22.473718 19 framework.go:733] Found 1 / 1
  I1005 13:22:22.473733 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 10/05/24 13:22:22.473
  I1005 13:22:22.478533 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1005 13:22:22.478555 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1005 13:22:22.478601 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-8572 patch pod agnhost-primary-fstcq -p {"metadata":{"annotations":{"x":"y"}}}'
  I1005 13:22:22.535445 19 builder.go:146] stderr: ""
  I1005 13:22:22.535483 19 builder.go:147] stdout: "pod/agnhost-primary-fstcq patched\n"
  STEP: checking annotations @ 10/05/24 13:22:22.535
  I1005 13:22:22.540378 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1005 13:22:22.540401 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1005 13:22:22.540578 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8572" for this suite. @ 10/05/24 13:22:22.544
• [1.196 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 10/05/24 13:22:22.552
  I1005 13:22:22.552154 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename security-context @ 10/05/24 13:22:22.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:22:22.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:22:22.573
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/05/24 13:22:22.575
  E1005 13:22:23.424397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:24.424678      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:22:24.601
  I1005 13:22:24.604810 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod security-context-15af4738-76f6-4f79-a0d5-30e958ed026c container test-container: <nil>
  STEP: delete the pod @ 10/05/24 13:22:24.625
  I1005 13:22:24.648510 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2466" for this suite. @ 10/05/24 13:22:24.652
• [2.111 seconds]
------------------------------
S
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 10/05/24 13:22:24.662
  I1005 13:22:24.662926 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename limitrange @ 10/05/24 13:22:24.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:22:24.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:22:24.682
  STEP: Creating a LimitRange @ 10/05/24 13:22:24.684
  STEP: Setting up watch @ 10/05/24 13:22:24.684
  STEP: Submitting a LimitRange @ 10/05/24 13:22:24.788
  STEP: Verifying LimitRange creation was observed @ 10/05/24 13:22:24.795
  STEP: Fetching the LimitRange to ensure it has proper values @ 10/05/24 13:22:24.795
  I1005 13:22:24.800026 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1005 13:22:24.800059 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 10/05/24 13:22:24.8
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 10/05/24 13:22:24.807
  I1005 13:22:24.814189 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1005 13:22:24.814243 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 10/05/24 13:22:24.814
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 10/05/24 13:22:24.822
  I1005 13:22:24.829327 19 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1005 13:22:24.829357 19 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 10/05/24 13:22:24.829
  STEP: Failing to create a Pod with more than max resources @ 10/05/24 13:22:24.831
  STEP: Updating a LimitRange @ 10/05/24 13:22:24.832
  STEP: Verifying LimitRange updating is effective @ 10/05/24 13:22:24.839
  E1005 13:22:25.424933      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:26.425087      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 10/05/24 13:22:26.844
  STEP: Failing to create a Pod with more than max resources @ 10/05/24 13:22:26.851
  STEP: Deleting a LimitRange @ 10/05/24 13:22:26.853
  STEP: Verifying the LimitRange was deleted @ 10/05/24 13:22:26.865
  E1005 13:22:27.425452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:28.425604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:29.425701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:30.425801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:31.426240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:22:31.871867 19 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 10/05/24 13:22:31.871
  I1005 13:22:31.881470 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1836" for this suite. @ 10/05/24 13:22:31.885
• [7.232 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 10/05/24 13:22:31.895
  I1005 13:22:31.895301 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 13:22:31.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:22:31.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:22:31.913
  STEP: Creating a pod to test downward api env vars @ 10/05/24 13:22:31.915
  E1005 13:22:32.427017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:33.427677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:34.428379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:35.428486      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:22:35.938
  I1005 13:22:35.943075 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downward-api-548ff8f9-38d6-4362-8e30-c465cdbf0897 container dapi-container: <nil>
  STEP: delete the pod @ 10/05/24 13:22:35.952
  I1005 13:22:35.972110 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5385" for this suite. @ 10/05/24 13:22:35.976
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 10/05/24 13:22:35.986
  I1005 13:22:35.986269 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename svcaccounts @ 10/05/24 13:22:35.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:22:36.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:22:36.007
  STEP: Creating a pod to test service account token:  @ 10/05/24 13:22:36.009
  E1005 13:22:36.428952      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:37.429825      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:38.429963      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:39.430162      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:22:40.037
  I1005 13:22:40.042486 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod test-pod-acc4cbc0-c83d-4423-9aa7-b4213fb9b903 container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 13:22:40.052
  I1005 13:22:40.072468 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3145" for this suite. @ 10/05/24 13:22:40.077
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 10/05/24 13:22:40.087
  I1005 13:22:40.087447 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename job @ 10/05/24 13:22:40.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:22:40.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:22:40.112
  STEP: Looking for a node to schedule job pod @ 10/05/24 13:22:40.115
  STEP: Creating a job @ 10/05/24 13:22:40.118
  STEP: Ensuring job fails @ 10/05/24 13:22:40.128
  E1005 13:22:40.430993      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:41.431382      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:42.431697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:43.431791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:22:44.137464 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5650" for this suite. @ 10/05/24 13:22:44.142
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 10/05/24 13:22:44.152
  I1005 13:22:44.152085 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-probe @ 10/05/24 13:22:44.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:22:44.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:22:44.174
  STEP: Creating pod liveness-1bdf81c5-41e0-4cd6-885f-1ce814c2566b in namespace container-probe-4272 @ 10/05/24 13:22:44.176
  E1005 13:22:44.431960      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:45.432088      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/05/24 13:22:46.197
  I1005 13:22:46.201640 19 container_probe.go:1749] Initial restart count of pod liveness-1bdf81c5-41e0-4cd6-885f-1ce814c2566b is 0
  I1005 13:22:46.205045 19 container_probe.go:1759] Get pod liveness-1bdf81c5-41e0-4cd6-885f-1ce814c2566b in namespace container-probe-4272
  E1005 13:22:46.432528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:47.432744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:22:48.210492 19 container_probe.go:1759] Get pod liveness-1bdf81c5-41e0-4cd6-885f-1ce814c2566b in namespace container-probe-4272
  E1005 13:22:48.433071      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:49.433204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:22:50.216515 19 container_probe.go:1759] Get pod liveness-1bdf81c5-41e0-4cd6-885f-1ce814c2566b in namespace container-probe-4272
  E1005 13:22:50.433840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:51.434274      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:22:52.221706 19 container_probe.go:1759] Get pod liveness-1bdf81c5-41e0-4cd6-885f-1ce814c2566b in namespace container-probe-4272
  E1005 13:22:52.435014      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:53.435264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:22:54.226497 19 container_probe.go:1759] Get pod liveness-1bdf81c5-41e0-4cd6-885f-1ce814c2566b in namespace container-probe-4272
  E1005 13:22:54.435563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:55.435579      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:22:56.232180 19 container_probe.go:1759] Get pod liveness-1bdf81c5-41e0-4cd6-885f-1ce814c2566b in namespace container-probe-4272
  E1005 13:22:56.436682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:57.436748      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:22:58.237290 19 container_probe.go:1759] Get pod liveness-1bdf81c5-41e0-4cd6-885f-1ce814c2566b in namespace container-probe-4272
  E1005 13:22:58.437589      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:22:59.438440      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:23:00.243398 19 container_probe.go:1759] Get pod liveness-1bdf81c5-41e0-4cd6-885f-1ce814c2566b in namespace container-probe-4272
  E1005 13:23:00.438548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:01.439520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:23:02.248603 19 container_probe.go:1759] Get pod liveness-1bdf81c5-41e0-4cd6-885f-1ce814c2566b in namespace container-probe-4272
  E1005 13:23:02.439872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:03.440042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:23:04.253682 19 container_probe.go:1759] Get pod liveness-1bdf81c5-41e0-4cd6-885f-1ce814c2566b in namespace container-probe-4272
  E1005 13:23:04.440963      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:05.441112      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:23:06.259582 19 container_probe.go:1759] Get pod liveness-1bdf81c5-41e0-4cd6-885f-1ce814c2566b in namespace container-probe-4272
  I1005 13:23:06.259623 19 container_probe.go:1763] Restart count of pod container-probe-4272/liveness-1bdf81c5-41e0-4cd6-885f-1ce814c2566b is now 1 (20.057956694s elapsed)
  STEP: deleting the pod @ 10/05/24 13:23:06.259
  I1005 13:23:06.275959 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4272" for this suite. @ 10/05/24 13:23:06.28
• [22.138 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 10/05/24 13:23:06.289
  I1005 13:23:06.289895 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename configmap @ 10/05/24 13:23:06.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:23:06.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:23:06.31
  STEP: Creating configMap configmap-735/configmap-test-fcf246ea-da8f-4378-a98b-c96e01c59cba @ 10/05/24 13:23:06.312
  STEP: Creating a pod to test consume configMaps @ 10/05/24 13:23:06.319
  E1005 13:23:06.441178      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:07.441296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:08.442022      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:09.442342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:23:10.345
  I1005 13:23:10.349950 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-configmaps-367dc8a6-894c-4bec-8a4c-52e103322be9 container env-test: <nil>
  STEP: delete the pod @ 10/05/24 13:23:10.357
  I1005 13:23:10.375448 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-735" for this suite. @ 10/05/24 13:23:10.386
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 10/05/24 13:23:10.394
  I1005 13:23:10.394736 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pods @ 10/05/24 13:23:10.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:23:10.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:23:10.415
  STEP: creating a Pod with a static label @ 10/05/24 13:23:10.422
  STEP: watching for Pod to be ready @ 10/05/24 13:23:10.434
  I1005 13:23:10.435581 19 pods.go:945] observed Pod pod-test in namespace pods-3308 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1005 13:23:10.438091 19 pods.go:945] observed Pod pod-test in namespace pods-3308 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:23:10 +0000 UTC  }]
  E1005 13:23:10.443236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:23:10.457865 19 pods.go:945] observed Pod pod-test in namespace pods-3308 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:23:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:23:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:23:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:23:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:23:10 +0000 UTC  }]
  E1005 13:23:11.443894      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:23:11.494672 19 pods.go:948] Found Pod pod-test in namespace pods-3308 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:23:11 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:23:10 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:23:11 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:23:11 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:23:10 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 10/05/24 13:23:11.499
  STEP: getting the Pod and ensuring that it's patched @ 10/05/24 13:23:11.51
  STEP: replacing the Pod's status Ready condition to False @ 10/05/24 13:23:11.513
  STEP: check the Pod again to ensure its Ready conditions are False @ 10/05/24 13:23:11.526
  STEP: deleting the Pod via a Collection with a LabelSelector @ 10/05/24 13:23:11.526
  STEP: watching for the Pod to be deleted @ 10/05/24 13:23:11.539
  I1005 13:23:11.541063 19 pods.go:1058] observed event type MODIFIED
  E1005 13:23:12.444024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:13.444363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:23:13.501317 19 pods.go:1058] observed event type MODIFIED
  I1005 13:23:13.646491 19 pods.go:1058] observed event type MODIFIED
  E1005 13:23:14.444422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:23:14.509800 19 pods.go:1058] observed event type MODIFIED
  I1005 13:23:14.523075 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3308" for this suite. @ 10/05/24 13:23:14.529
• [4.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 10/05/24 13:23:14.537
  I1005 13:23:14.537747 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:23:14.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:23:14.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:23:14.557
  STEP: Creating configMap with name projected-configmap-test-volume-512eb81b-6635-4168-9838-e295ce658f5f @ 10/05/24 13:23:14.559
  STEP: Creating a pod to test consume configMaps @ 10/05/24 13:23:14.564
  E1005 13:23:15.444528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:16.444637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:17.445527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:18.445624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:23:18.591
  I1005 13:23:18.594383 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-projected-configmaps-e5c03be0-a588-46f7-8730-21987691900b container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 13:23:18.603
  I1005 13:23:18.625338 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1594" for this suite. @ 10/05/24 13:23:18.63
• [4.100 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 10/05/24 13:23:18.637
  I1005 13:23:18.637757 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename cronjob @ 10/05/24 13:23:18.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:23:18.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:23:18.658
  STEP: Creating a cronjob @ 10/05/24 13:23:18.66
  STEP: Ensuring more than one job is running at a time @ 10/05/24 13:23:18.665
  E1005 13:23:19.445819      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:20.446464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:21.446565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:22.447581      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:23.447693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:24.447786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:25.448542      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:26.448589      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:27.448677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:28.448810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:29.448911      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:30.449080      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:31.449334      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:32.449411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:33.449503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:34.449690      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:35.449822      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:36.450843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:37.450893      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:38.451475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:39.451619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:40.451734      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:41.452702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:42.452831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:43.452967      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:44.453072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:45.453462      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:46.453623      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:47.453748      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:48.453916      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:49.453941      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:50.454064      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:51.454688      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:52.454824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:53.454913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:54.455079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:55.455176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:56.455325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:57.455394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:58.455536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:23:59.455693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:00.455921      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:01.456397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:02.456503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:03.456557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:04.456683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:05.456699      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:06.457692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:07.458388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:08.459449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:09.460455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:10.460565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:11.461398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:12.462423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:13.463475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:14.463689      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:15.463772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:16.464680      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:17.464835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:18.465457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:19.465559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:20.465702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:21.466697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:22.466740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:23.466849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:24.467149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:25.467383      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:26.468335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:27.468433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:28.469477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:29.470344      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:30.470551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:31.470651      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:32.470841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:33.471350      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:34.471470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:35.472116      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:36.473160      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:37.473704      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:38.474953      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:39.475122      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:40.475481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:41.476435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:42.476539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:43.476660      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:44.477686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:45.478421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:46.478519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:47.478615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:48.478770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:49.478856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:50.479413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:51.480344      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:52.480477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:53.480579      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:54.480784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:55.481417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:56.482101      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:57.482828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:58.483486      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:24:59.483548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:00.484462      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 10/05/24 13:25:00.671
  STEP: Removing cronjob @ 10/05/24 13:25:00.675
  I1005 13:25:00.683002 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-21" for this suite. @ 10/05/24 13:25:00.687
• [102.058 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 10/05/24 13:25:00.696
  I1005 13:25:00.696301 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:25:00.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:25:00.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:25:00.727
  STEP: Creating configMap with name projected-configmap-test-volume-2a6c0b7c-348e-432f-aa5b-54310c483d53 @ 10/05/24 13:25:00.729
  STEP: Creating a pod to test consume configMaps @ 10/05/24 13:25:00.736
  E1005 13:25:01.484564      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:02.484691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:03.484737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:04.484983      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:25:04.767
  I1005 13:25:04.771836 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-projected-configmaps-73b6106c-fb0a-4725-8cb0-67968f58ad0a container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 13:25:04.785
  I1005 13:25:04.804395 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9415" for this suite. @ 10/05/24 13:25:04.809
• [4.121 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 10/05/24 13:25:04.816
  I1005 13:25:04.817038 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 13:25:04.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:25:04.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:25:04.838
  STEP: Setting up server cert @ 10/05/24 13:25:04.862
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 13:25:04.967
  STEP: Deploying the webhook pod @ 10/05/24 13:25:04.978
  STEP: Wait for the deployment to be ready @ 10/05/24 13:25:04.992
  I1005 13:25:05.000887 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1005 13:25:05.485394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:06.485719      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/05/24 13:25:07.015
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 13:25:07.026
  E1005 13:25:07.486336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:25:08.026980 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 10/05/24 13:25:08.036
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 10/05/24 13:25:08.055
  STEP: Creating a configMap that should not be mutated @ 10/05/24 13:25:08.063
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 10/05/24 13:25:08.078
  STEP: Creating a configMap that should be mutated @ 10/05/24 13:25:08.085
  I1005 13:25:08.157924 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1074" for this suite. @ 10/05/24 13:25:08.162
  STEP: Destroying namespace "webhook-markers-262" for this suite. @ 10/05/24 13:25:08.175
• [3.366 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 10/05/24 13:25:08.183
  I1005 13:25:08.183195 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename sched-preemption @ 10/05/24 13:25:08.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:25:08.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:25:08.201
  I1005 13:25:08.220739 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1005 13:25:08.487028      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:09.487697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:10.488720      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:11.489678      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:12.490588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:13.490698      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:14.491176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:15.491304      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:16.492177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:17.492391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:18.493177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:19.493373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:20.493787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:21.494736      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:22.495609      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:23.495737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:24.496460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:25.497028      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:26.497124      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:27.497258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:28.498566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:29.498358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:30.498979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:31.499894      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:32.500037      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:33.500198      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:34.500803      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:35.501510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:36.501648      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:37.501840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:38.502453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:39.502642      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:40.503691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:41.504662      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:42.504848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:43.504946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:44.505096      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:45.505203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:46.505481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:47.505630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:48.506063      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:49.506210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:50.506752      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:51.506856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:52.507470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:53.507577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:54.508018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:55.508425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:56.509278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:57.509363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:58.510385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:25:59.510582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:00.511458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:01.512435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:02.512965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:03.513486      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:04.514019      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:05.514444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:06.514697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:07.515419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:26:08.225830 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/05/24 13:26:08.229
  I1005 13:26:08.229725 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/05/24 13:26:08.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:26:08.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:26:08.252
  STEP: Finding an available node @ 10/05/24 13:26:08.253
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/05/24 13:26:08.253
  E1005 13:26:08.515933      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:09.516040      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/05/24 13:26:10.279
  I1005 13:26:10.294253 19 preemption.go:585] found a healthy node: ip-172-31-45-162
  E1005 13:26:10.516473      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:11.517441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:12.517838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:13.518449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:14.518927      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:15.519444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:26:16.364631 19 preemption.go:708] pods created so far: [1 1 1]
  I1005 13:26:16.364660 19 preemption.go:709] length of pods created so far: 3
  E1005 13:26:16.519885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:17.519987      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:26:18.378624 19 preemption.go:726] pods created so far: [2 2 1]
  E1005 13:26:18.520816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:19.521550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:20.521776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:21.522735      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:22.522968      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:23.523202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:24.523428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:26:25.469632 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3877" for this suite. @ 10/05/24 13:26:25.474
  I1005 13:26:25.482151 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2836" for this suite. @ 10/05/24 13:26:25.485
• [77.312 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 10/05/24 13:26:25.495
  I1005 13:26:25.495462 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename cronjob @ 10/05/24 13:26:25.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:26:25.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:26:25.515
  STEP: Creating a ForbidConcurrent cronjob @ 10/05/24 13:26:25.517
  E1005 13:26:25.523590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring a job is scheduled @ 10/05/24 13:26:25.524
  E1005 13:26:26.524634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:27.524626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:28.525370      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:29.525436      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:30.525562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:31.525659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:32.526387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:33.526729      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:34.526866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:35.527117      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:36.527680      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:37.527682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:38.528740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:39.529654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:40.529773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:41.530619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:42.530782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:43.531000      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:44.531282      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:45.531883      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:46.532780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:47.533125      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:48.533941      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:49.534787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:50.535069      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:51.535073      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:52.535331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:53.535436      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:54.535662      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:55.535909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:56.536158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:57.536787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:58.536930      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:26:59.537484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:00.537613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 10/05/24 13:27:01.53
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/05/24 13:27:01.534
  E1005 13:27:01.537783      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring no more jobs are scheduled @ 10/05/24 13:27:01.537
  STEP: Removing cronjob @ 10/05/24 13:27:01.54
  I1005 13:27:01.548347 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4989" for this suite. @ 10/05/24 13:27:01.552
• [36.065 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 10/05/24 13:27:01.56
  I1005 13:27:01.560288 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename replicaset @ 10/05/24 13:27:01.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:27:01.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:27:01.583
  STEP: Create a Replicaset @ 10/05/24 13:27:01.592
  STEP: Verify that the required pods have come up. @ 10/05/24 13:27:01.599
  I1005 13:27:01.602892 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1005 13:27:02.538464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:03.538565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:04.538638      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:05.538735      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:06.539749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:27:06.606543 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/05/24 13:27:06.606
  STEP: Getting /status @ 10/05/24 13:27:06.606
  I1005 13:27:06.610490 19 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 10/05/24 13:27:06.61
  I1005 13:27:06.619454 19 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 10/05/24 13:27:06.619
  I1005 13:27:06.620722 19 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I1005 13:27:06.620794 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1005 13:27:06.620898 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1005 13:27:06.621081 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1005 13:27:06.621103 19 replica_set.go:682] Found replicaset test-rs in namespace replicaset-9893 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1005 13:27:06.621114 19 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 10/05/24 13:27:06.621
  I1005 13:27:06.621155 19 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1005 13:27:06.628310 19 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 10/05/24 13:27:06.628
  I1005 13:27:06.629800 19 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I1005 13:27:06.629878 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1005 13:27:06.629939 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1005 13:27:06.630108 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1005 13:27:06.630126 19 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-9893 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1005 13:27:06.630200 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1005 13:27:06.630239 19 replica_set.go:718] Found replicaset test-rs in namespace replicaset-9893 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1005 13:27:06.630249 19 replica_set.go:729] Replicaset test-rs has a patched status
  I1005 13:27:06.630351 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9893" for this suite. @ 10/05/24 13:27:06.633
• [5.081 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 10/05/24 13:27:06.641
  I1005 13:27:06.641529 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/05/24 13:27:06.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:27:06.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:27:06.663
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 10/05/24 13:27:06.665
  I1005 13:27:06.665966 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:27:07.540828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:08.559705      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:09.559808      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:10.559888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:11.560498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 10/05/24 13:27:11.643
  I1005 13:27:11.643884 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:27:12.561464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:27:12.879545 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:27:13.562359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:14.562432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:15.563362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:16.563811      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:17.563973      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:27:17.821244 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5251" for this suite. @ 10/05/24 13:27:17.828
• [11.197 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 10/05/24 13:27:17.838
  I1005 13:27:17.838178 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:27:17.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:27:17.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:27:17.862
  STEP: Creating the pod @ 10/05/24 13:27:17.865
  E1005 13:27:18.564446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:19.564559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:27:20.418598 19 pod_client.go:173] Successfully updated pod "labelsupdate79a7bef2-e090-4624-8720-4e3c0f704740"
  E1005 13:27:20.565126      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:21.565410      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:22.565661      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:23.566040      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:27:24.447922 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4582" for this suite. @ 10/05/24 13:27:24.452
• [6.624 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 10/05/24 13:27:24.463
  I1005 13:27:24.463045 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename var-expansion @ 10/05/24 13:27:24.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:27:24.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:27:24.487
  STEP: Creating a pod to test env composition @ 10/05/24 13:27:24.49
  E1005 13:27:24.566886      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:25.567312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:26.568010      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:27.568453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:27:28.518
  I1005 13:27:28.522771 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod var-expansion-86a8873c-e0e8-4262-90c8-0bee833f35e7 container dapi-container: <nil>
  STEP: delete the pod @ 10/05/24 13:27:28.541
  I1005 13:27:28.558624 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4918" for this suite. @ 10/05/24 13:27:28.563
  E1005 13:27:28.568578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
• [4.111 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 10/05/24 13:27:28.574
  I1005 13:27:28.574527 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename configmap @ 10/05/24 13:27:28.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:27:28.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:27:28.604
  STEP: Creating configMap with name configmap-test-volume-map-d5ab6069-948d-4904-9a67-ace81c95a8c7 @ 10/05/24 13:27:28.606
  STEP: Creating a pod to test consume configMaps @ 10/05/24 13:27:28.612
  E1005 13:27:29.568797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:30.568830      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:31.569760      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:32.570053      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:27:32.636
  I1005 13:27:32.642321 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod pod-configmaps-eb30a718-69fd-4477-88ac-3d887bf2efee container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 13:27:32.65
  I1005 13:27:32.672143 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-179" for this suite. @ 10/05/24 13:27:32.677
• [4.111 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 10/05/24 13:27:32.685
  I1005 13:27:32.685864 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename secrets @ 10/05/24 13:27:32.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:27:32.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:27:32.708
  STEP: Creating secret with name secret-test-69940a4a-3464-489e-82db-569186b09039 @ 10/05/24 13:27:32.71
  STEP: Creating a pod to test consume secrets @ 10/05/24 13:27:32.715
  E1005 13:27:33.570279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:34.570402      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:35.570522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:36.570773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:27:36.743
  I1005 13:27:36.747972 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-secrets-31ccf61d-3936-476a-a0a7-c19465b0b724 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/05/24 13:27:36.762
  I1005 13:27:36.780813 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8413" for this suite. @ 10/05/24 13:27:36.784
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 10/05/24 13:27:36.794
  I1005 13:27:36.794093 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename deployment @ 10/05/24 13:27:36.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:27:36.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:27:36.817
  I1005 13:27:36.829625 19 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E1005 13:27:37.571477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:38.571800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:39.572514      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:40.573456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:41.573883      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:27:41.835965 19 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/05/24 13:27:41.836
  I1005 13:27:41.836040 19 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 10/05/24 13:27:41.846
  I1005 13:27:41.862518 19 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8996",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d82811b-5946-464a-867d-b6aeb6bb86fb",
      ResourceVersion: (string) (len=5) "25781",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863731661,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863731661,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1005 13:27:41.870735 19 deployment.go:39] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8996",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "384f9f0e-4baa-4b5c-8669-6142e7e82f97",
      ResourceVersion: (string) (len=5) "25783",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863731661,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "7d82811b-5946-464a-867d-b6aeb6bb86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863731661,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 64 38 32 38 31  31 62 2d 35 39 34 36 2d  |\"7d82811b-5946-|
              00000120  34 36 34 61 2d 38 36 37  64 2d 62 36 61 65 62 36  |464a-867d-b6aeb6|
              00000130  62 62 38 36 66 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bb86fb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1005 13:27:41.871177 19 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I1005 13:27:41.871379 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8996",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b142a55-38e8-4c71-891c-28ae57bbd58c",
      ResourceVersion: (string) (len=5) "25782",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863731656,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "7d82811b-5946-464a-867d-b6aeb6bb86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863731656,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863731658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863731661,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 37 64 38 32 38 31 31  |"uid\":\"7d82811|
              00000040  62 2d 35 39 34 36 2d 34  36 34 61 2d 38 36 37 64  |b-5946-464a-867d|
              00000050  2d 62 36 61 65 62 36 62  62 38 36 66 62 5c 22 7d  |-b6aeb6bb86fb\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1005 13:27:41.875857 19 deployment.go:67] Pod "test-cleanup-controller-h6djh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-h6djh",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-8996",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12dea829-862d-4bb0-943d-1c768d396371",
      ResourceVersion: (string) (len=5) "25772",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863731656,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "0b142a55-38e8-4c71-891c-28ae57bbd58c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863731656,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  30 62 31 34 32 61 35 35  |uid\":\"0b142a55|
              00000080  2d 33 38 65 38 2d 34 63  37 31 2d 38 39 31 63 2d  |-38e8-4c71-891c-|
              00000090  32 38 61 65 35 37 62 62  64 35 38 63 5c 22 7d 22  |28ae57bbd58c\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863731657,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 39  2e 31 31 38 5c 22 7d 22  |2.168.59.118\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6lsph",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6lsph",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863731657,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863731656,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863731657,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863731657,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863731656,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.162",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.162"
        }
      },
      PodIP: (string) (len=14) "192.168.59.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.59.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863731656,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863731657,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4411cfb0e4e6c3d95b134976706ecc7506d39b38c5baf97ccc1522760b36bab4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6lsph",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:27:41.877785 19 deployment.go:67] Pod "test-cleanup-deployment-898f8f847-qjxzt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-cleanup-deployment-898f8f847-qjxzt",
      GenerateName: (string) (len=34) "test-cleanup-deployment-898f8f847-",
      Namespace: (string) (len=15) "deployment-8996",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83dba312-fbde-4a88-a947-d6654a577f7c",
      ResourceVersion: (string) (len=5) "25785",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863731661,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
          UID: (types.UID) (len=36) "384f9f0e-4baa-4b5c-8669-6142e7e82f97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863731661,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  34 66 39 66 30 65 2d 34  |d\":\"384f9f0e-4|
              00000090  62 61 61 2d 34 62 35 63  2d 38 36 36 39 2d 36 31  |baa-4b5c-8669-61|
              000000a0  34 32 65 37 65 38 32 66  39 37 5c 22 7d 22 3a 7b  |42e7e82f97\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7t9ts",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7t9ts",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:27:41.878500 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8996" for this suite. @ 10/05/24 13:27:41.884
• [5.099 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 10/05/24 13:27:41.892
  I1005 13:27:41.892739 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename resourcequota @ 10/05/24 13:27:41.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:27:41.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:27:41.921
  STEP: Creating a ResourceQuota with best effort scope @ 10/05/24 13:27:41.923
  STEP: Ensuring ResourceQuota status is calculated @ 10/05/24 13:27:41.929
  E1005 13:27:42.574034      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:43.574936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 10/05/24 13:27:43.935
  STEP: Ensuring ResourceQuota status is calculated @ 10/05/24 13:27:43.941
  E1005 13:27:44.575343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:45.576351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 10/05/24 13:27:45.947
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 10/05/24 13:27:45.964
  E1005 13:27:46.577089      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:47.577377      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 10/05/24 13:27:47.97
  E1005 13:27:48.578385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:49.579423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/05/24 13:27:49.976
  STEP: Ensuring resource quota status released the pod usage @ 10/05/24 13:27:49.991
  E1005 13:27:50.580460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:51.580527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 10/05/24 13:27:51.997
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 10/05/24 13:27:52.008
  E1005 13:27:52.581528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:53.581633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 10/05/24 13:27:54.014
  E1005 13:27:54.581729      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:55.581861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/05/24 13:27:56.021
  STEP: Ensuring resource quota status released the pod usage @ 10/05/24 13:27:56.035
  E1005 13:27:56.581995      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:57.582456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:27:58.041186 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3857" for this suite. @ 10/05/24 13:27:58.047
• [16.163 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 10/05/24 13:27:58.055
  I1005 13:27:58.055921 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename disruption @ 10/05/24 13:27:58.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:27:58.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:27:58.083
  STEP: Waiting for the pdb to be processed @ 10/05/24 13:27:58.092
  E1005 13:27:58.583008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:27:59.583158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 10/05/24 13:28:00.097
  STEP: Waiting for all pods to be running @ 10/05/24 13:28:00.107
  I1005 13:28:00.111519 19 disruption.go:691] running pods: 0 < 1
  E1005 13:28:00.584121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:01.584276      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 10/05/24 13:28:02.112
  STEP: Waiting for the pdb to be processed @ 10/05/24 13:28:02.128
  STEP: Patching PodDisruptionBudget status @ 10/05/24 13:28:02.138
  STEP: Waiting for the pdb to be processed @ 10/05/24 13:28:02.148
  I1005 13:28:02.153298 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-709" for this suite. @ 10/05/24 13:28:02.156
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 10/05/24 13:28:02.165
  I1005 13:28:02.165989 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 13:28:02.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:28:02.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:28:02.188
  STEP: creating a replication controller @ 10/05/24 13:28:02.191
  I1005 13:28:02.191877 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 create -f -'
  I1005 13:28:02.283417 19 builder.go:146] stderr: ""
  I1005 13:28:02.283455 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/05/24 13:28:02.283
  I1005 13:28:02.283548 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1005 13:28:02.331941 19 builder.go:146] stderr: ""
  I1005 13:28:02.331978 19 builder.go:147] stdout: "update-demo-nautilus-5qv7f update-demo-nautilus-62rx8 "
  I1005 13:28:02.332015 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods update-demo-nautilus-5qv7f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1005 13:28:02.379001 19 builder.go:146] stderr: ""
  I1005 13:28:02.379046 19 builder.go:147] stdout: ""
  I1005 13:28:02.379063 19 kubectl.go:2502] update-demo-nautilus-5qv7f is created but not running
  E1005 13:28:02.584394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:03.584522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:04.584617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:05.585431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:06.585866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:28:07.379356 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1005 13:28:07.426676 19 builder.go:146] stderr: ""
  I1005 13:28:07.426717 19 builder.go:147] stdout: "update-demo-nautilus-5qv7f update-demo-nautilus-62rx8 "
  I1005 13:28:07.426769 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods update-demo-nautilus-5qv7f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1005 13:28:07.472014 19 builder.go:146] stderr: ""
  I1005 13:28:07.472056 19 builder.go:147] stdout: "true"
  I1005 13:28:07.472096 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods update-demo-nautilus-5qv7f -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1005 13:28:07.517173 19 builder.go:146] stderr: ""
  I1005 13:28:07.517210 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1005 13:28:07.517239 19 kubectl.go:2393] validating pod update-demo-nautilus-5qv7f
  I1005 13:28:07.525014 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1005 13:28:07.525081 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1005 13:28:07.525093 19 kubectl.go:2520] update-demo-nautilus-5qv7f is verified up and running
  I1005 13:28:07.525150 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods update-demo-nautilus-62rx8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1005 13:28:07.571998 19 builder.go:146] stderr: ""
  I1005 13:28:07.572041 19 builder.go:147] stdout: "true"
  I1005 13:28:07.572179 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods update-demo-nautilus-62rx8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E1005 13:28:07.586788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:28:07.618930 19 builder.go:146] stderr: ""
  I1005 13:28:07.618972 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1005 13:28:07.618984 19 kubectl.go:2393] validating pod update-demo-nautilus-62rx8
  I1005 13:28:07.626050 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1005 13:28:07.626093 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1005 13:28:07.626139 19 kubectl.go:2520] update-demo-nautilus-62rx8 is verified up and running
  STEP: scaling down the replication controller @ 10/05/24 13:28:07.626
  I1005 13:28:07.626997 19 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1005 13:28:07.627029 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1005 13:28:08.586889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:28:08.692451 19 builder.go:146] stderr: ""
  I1005 13:28:08.692489 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/05/24 13:28:08.692
  I1005 13:28:08.692574 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1005 13:28:08.742534 19 builder.go:146] stderr: ""
  I1005 13:28:08.742581 19 builder.go:147] stdout: "update-demo-nautilus-5qv7f update-demo-nautilus-62rx8 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 10/05/24 13:28:08.742
  E1005 13:28:09.587383      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:10.587456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:11.588434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:12.589446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:13.589537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:28:13.742818 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1005 13:28:13.788886 19 builder.go:146] stderr: ""
  I1005 13:28:13.788932 19 builder.go:147] stdout: "update-demo-nautilus-62rx8 "
  I1005 13:28:13.789030 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods update-demo-nautilus-62rx8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1005 13:28:13.834272 19 builder.go:146] stderr: ""
  I1005 13:28:13.834315 19 builder.go:147] stdout: "true"
  I1005 13:28:13.834367 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods update-demo-nautilus-62rx8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1005 13:28:13.881117 19 builder.go:146] stderr: ""
  I1005 13:28:13.881165 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1005 13:28:13.881178 19 kubectl.go:2393] validating pod update-demo-nautilus-62rx8
  I1005 13:28:13.887080 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1005 13:28:13.887124 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1005 13:28:13.887135 19 kubectl.go:2520] update-demo-nautilus-62rx8 is verified up and running
  STEP: scaling up the replication controller @ 10/05/24 13:28:13.887
  I1005 13:28:13.887886 19 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1005 13:28:13.887917 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1005 13:28:14.590100      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:28:14.957895 19 builder.go:146] stderr: ""
  I1005 13:28:14.957948 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/05/24 13:28:14.957
  I1005 13:28:14.958038 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1005 13:28:15.048708 19 builder.go:146] stderr: ""
  I1005 13:28:15.048876 19 builder.go:147] stdout: "update-demo-nautilus-62rx8 update-demo-nautilus-9hzlh "
  I1005 13:28:15.048959 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods update-demo-nautilus-62rx8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1005 13:28:15.122155 19 builder.go:146] stderr: ""
  I1005 13:28:15.122212 19 builder.go:147] stdout: "true"
  I1005 13:28:15.122338 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods update-demo-nautilus-62rx8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1005 13:28:15.197502 19 builder.go:146] stderr: ""
  I1005 13:28:15.197576 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1005 13:28:15.197589 19 kubectl.go:2393] validating pod update-demo-nautilus-62rx8
  I1005 13:28:15.204376 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1005 13:28:15.204463 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1005 13:28:15.204480 19 kubectl.go:2520] update-demo-nautilus-62rx8 is verified up and running
  I1005 13:28:15.204671 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods update-demo-nautilus-9hzlh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1005 13:28:15.262931 19 builder.go:146] stderr: ""
  I1005 13:28:15.262972 19 builder.go:147] stdout: "true"
  I1005 13:28:15.263023 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods update-demo-nautilus-9hzlh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1005 13:28:15.309676 19 builder.go:146] stderr: ""
  I1005 13:28:15.309715 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1005 13:28:15.309727 19 kubectl.go:2393] validating pod update-demo-nautilus-9hzlh
  I1005 13:28:15.316162 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1005 13:28:15.316211 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1005 13:28:15.316238 19 kubectl.go:2520] update-demo-nautilus-9hzlh is verified up and running
  STEP: using delete to clean up resources @ 10/05/24 13:28:15.316
  I1005 13:28:15.316323 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 delete --grace-period=0 --force -f -'
  I1005 13:28:15.367212 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1005 13:28:15.367317 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1005 13:28:15.367377 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get rc,svc -l name=update-demo --no-headers'
  I1005 13:28:15.419429 19 builder.go:146] stderr: "No resources found in kubectl-1990 namespace.\n"
  I1005 13:28:15.419468 19 builder.go:147] stdout: ""
  I1005 13:28:15.419518 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1990 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1005 13:28:15.468117 19 builder.go:146] stderr: ""
  I1005 13:28:15.468161 19 builder.go:147] stdout: ""
  I1005 13:28:15.468399 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1990" for this suite. @ 10/05/24 13:28:15.473
• [13.316 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 10/05/24 13:28:15.481
  I1005 13:28:15.481828 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename dns @ 10/05/24 13:28:15.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:28:15.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:28:15.504
  STEP: Creating a test headless service @ 10/05/24 13:28:15.506
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3063.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-3063.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 10/05/24 13:28:15.514
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3063.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3063.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 10/05/24 13:28:15.514
  STEP: creating a pod to probe DNS @ 10/05/24 13:28:15.514
  STEP: submitting the pod to kubernetes @ 10/05/24 13:28:15.514
  E1005 13:28:15.590248      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:16.591242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/05/24 13:28:17.536
  STEP: looking for the results for each expected name from probers @ 10/05/24 13:28:17.541
  I1005 13:28:17.564651 19 dns_common.go:527] DNS probes using dns-3063/dns-test-d0ca66e4-e35a-45e2-86a1-7d1e81c8a386 succeeded

  STEP: deleting the pod @ 10/05/24 13:28:17.564
  STEP: deleting the test headless service @ 10/05/24 13:28:17.578
  E1005 13:28:17.591663      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:28:17.593315 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3063" for this suite. @ 10/05/24 13:28:17.597
• [2.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 10/05/24 13:28:17.604
  I1005 13:28:17.604213 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 13:28:17.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:28:17.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:28:17.629
  STEP: Creating a pod to test downward api env vars @ 10/05/24 13:28:17.632
  E1005 13:28:18.591767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:19.592141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:20.592376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:21.592501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:28:21.66
  I1005 13:28:21.666306 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downward-api-59940886-a900-4e04-a92a-8cede19690a1 container dapi-container: <nil>
  STEP: delete the pod @ 10/05/24 13:28:21.676
  I1005 13:28:21.693055 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8918" for this suite. @ 10/05/24 13:28:21.698
• [4.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 10/05/24 13:28:21.706
  I1005 13:28:21.706672 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 13:28:21.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:28:21.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:28:21.732
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 13:28:21.735
  E1005 13:28:22.592647      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:23.592818      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:24.592915      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:25.593464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:28:25.766
  I1005 13:28:25.769755 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downwardapi-volume-c4f3c504-2555-4630-8420-6defcb9a1197 container client-container: <nil>
  STEP: delete the pod @ 10/05/24 13:28:25.779
  I1005 13:28:25.800732 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1390" for this suite. @ 10/05/24 13:28:25.805
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 10/05/24 13:28:25.814
  I1005 13:28:25.814085 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename daemonsets @ 10/05/24 13:28:25.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:28:25.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:28:25.837
  I1005 13:28:25.864654 19 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1005 13:28:25.871272 19 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1005 13:28:25.878320 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:28:25.878355 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:28:25.882040 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:28:25.882063 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  E1005 13:28:26.593851      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:28:26.878062 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:28:26.878107 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:28:26.882333 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1005 13:28:26.882355 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  E1005 13:28:27.593988      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:28:27.876392 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:28:27.876436 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:28:27.880988 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1005 13:28:27.881018 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I1005 13:28:27.881033 19 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1005 13:28:27.892810 19 daemon_set.go:102] Updating DaemonSet daemon-set
  E1005 13:28:28.594415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:28:28.908321 19 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1005 13:28:28.919949 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I1005 13:28:28.919982 19 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1005 13:28:28.926497 19 daemon_set.go:1193] Wrong image for pod: daemon-set-hdhck. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1005 13:28:28.926517 19 daemon_set.go:1198] Pod daemon-set-hdhck is not available
  I1005 13:28:28.930668 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:28:28.930695 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1005 13:28:29.595368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:28:29.930465 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:28:29.930502 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1005 13:28:30.596006      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:28:30.926418 19 daemon_set.go:1198] Pod daemon-set-8lh55 is not available
  I1005 13:28:30.933564 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:28:30.933596 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 10/05/24 13:28:30.948
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1882, will wait for the garbage collector to delete the pods @ 10/05/24 13:28:30.948
  I1005 13:28:31.014440 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.601737ms
  I1005 13:28:31.115069 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.613529ms
  E1005 13:28:31.596772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:28:32.221628 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:28:32.221666 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1005 13:28:32.226072 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26367"},"items":null}

  I1005 13:28:32.230875 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26367"},"items":null}

  I1005 13:28:32.246841 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1882" for this suite. @ 10/05/24 13:28:32.25
• [6.445 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 10/05/24 13:28:32.258
  I1005 13:28:32.258937 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename var-expansion @ 10/05/24 13:28:32.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:28:32.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:28:32.285
  STEP: Creating a pod to test substitution in container's command @ 10/05/24 13:28:32.29
  E1005 13:28:32.597285      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:33.597431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:28:34.312
  I1005 13:28:34.316507 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod var-expansion-4ed3642c-1b90-4bda-84a8-efd19de35b16 container dapi-container: <nil>
  STEP: delete the pod @ 10/05/24 13:28:34.327
  I1005 13:28:34.348962 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9894" for this suite. @ 10/05/24 13:28:34.353
• [2.103 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 10/05/24 13:28:34.361
  I1005 13:28:34.361915 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename dns @ 10/05/24 13:28:34.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:28:34.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:28:34.384
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2663.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-2663.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 10/05/24 13:28:34.387
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2663.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2663.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 10/05/24 13:28:34.387
  STEP: creating a pod to probe /etc/hosts @ 10/05/24 13:28:34.387
  STEP: submitting the pod to kubernetes @ 10/05/24 13:28:34.387
  E1005 13:28:34.598279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:35.598410      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/05/24 13:28:36.41
  STEP: looking for the results for each expected name from probers @ 10/05/24 13:28:36.414
  I1005 13:28:36.436641 19 dns_common.go:527] DNS probes using dns-2663/dns-test-ac84673b-05ea-49a8-aa02-03e518bcd5f2 succeeded

  STEP: deleting the pod @ 10/05/24 13:28:36.436
  I1005 13:28:36.453384 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2663" for this suite. @ 10/05/24 13:28:36.458
• [2.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 10/05/24 13:28:36.466
  I1005 13:28:36.466080 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename security-context-test @ 10/05/24 13:28:36.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:28:36.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:28:36.49
  E1005 13:28:36.598797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:37.599102      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:28:38.515837 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-119" for this suite. @ 10/05/24 13:28:38.522
• [2.065 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 10/05/24 13:28:38.53
  I1005 13:28:38.530767 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename secrets @ 10/05/24 13:28:38.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:28:38.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:28:38.562
  STEP: Creating secret with name secret-test-9908e5bf-c8e1-463b-93a0-1197545ccd0f @ 10/05/24 13:28:38.566
  STEP: Creating a pod to test consume secrets @ 10/05/24 13:28:38.571
  E1005 13:28:38.599358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:39.599489      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:40.600250      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:41.600459      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:28:42.595
  I1005 13:28:42.599515 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-secrets-2d5392ff-14a6-43df-9a6d-c341b58d8c58 container secret-volume-test: <nil>
  E1005 13:28:42.600566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod @ 10/05/24 13:28:42.608
  I1005 13:28:42.629607 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1093" for this suite. @ 10/05/24 13:28:42.634
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 10/05/24 13:28:42.642
  I1005 13:28:42.642509 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir @ 10/05/24 13:28:42.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:28:42.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:28:42.666
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/05/24 13:28:42.668
  E1005 13:28:43.600731      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:44.600938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:45.601112      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:46.601723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:28:46.696
  I1005 13:28:46.701590 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-87470c3d-9ea8-49dc-a0f0-6e1d85918990 container test-container: <nil>
  STEP: delete the pod @ 10/05/24 13:28:46.71
  I1005 13:28:46.725790 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8767" for this suite. @ 10/05/24 13:28:46.731
• [4.097 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 10/05/24 13:28:46.739
  I1005 13:28:46.739530 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubelet-test @ 10/05/24 13:28:46.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:28:46.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:28:46.762
  STEP: Waiting for pod completion @ 10/05/24 13:28:46.775
  E1005 13:28:47.601859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:48.602137      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:49.602324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:50.602543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:28:50.802396 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2969" for this suite. @ 10/05/24 13:28:50.806
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 10/05/24 13:28:50.816
  I1005 13:28:50.816528 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename resourcequota @ 10/05/24 13:28:50.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:28:50.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:28:50.839
  STEP: Counting existing ResourceQuota @ 10/05/24 13:28:50.841
  E1005 13:28:51.602789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:52.602899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:53.603670      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:54.604378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:55.604443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/05/24 13:28:55.848
  STEP: Ensuring resource quota status is calculated @ 10/05/24 13:28:55.854
  E1005 13:28:56.605369      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:57.606441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 10/05/24 13:28:57.858
  STEP: Ensuring resource quota status captures replication controller creation @ 10/05/24 13:28:57.872
  E1005 13:28:58.607470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:28:59.608455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 10/05/24 13:28:59.88
  STEP: Ensuring resource quota status released usage @ 10/05/24 13:28:59.889
  E1005 13:29:00.609448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:01.610464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:29:01.895151 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4190" for this suite. @ 10/05/24 13:29:01.9
• [11.093 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 10/05/24 13:29:01.909
  I1005 13:29:01.909376 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename sched-pred @ 10/05/24 13:29:01.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:29:01.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:29:01.934
  I1005 13:29:01.936744 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1005 13:29:01.945132 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1005 13:29:01.949590 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-60 before test
  I1005 13:29:01.955621 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-fttd5 from ingress-nginx-kubernetes-worker started at 2024-10-05 12:19:40 +0000 UTC (1 container statuses recorded)
  I1005 13:29:01.955640 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1005 13:29:01.955646 19 predicates.go:957] calico-node-p547s from kube-system started at 2024-10-05 12:19:31 +0000 UTC (1 container statuses recorded)
  I1005 13:29:01.955652 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1005 13:29:01.955657 19 predicates.go:957] sonobuoy-e2e-job-16f17f2aa4c640ea from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 13:29:01.955662 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1005 13:29:01.955667 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 13:29:01.955672 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-c9n82 from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 13:29:01.955677 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 13:29:01.955683 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1005 13:29:01.955694 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-45-162 before test
  I1005 13:29:01.960729 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hqqb6 from ingress-nginx-kubernetes-worker started at 2024-10-05 12:39:17 +0000 UTC (1 container statuses recorded)
  I1005 13:29:01.960747 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1005 13:29:01.960755 19 predicates.go:957] calico-node-pl9rk from kube-system started at 2024-10-05 12:19:21 +0000 UTC (1 container statuses recorded)
  I1005 13:29:01.960760 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1005 13:29:01.960766 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-10-05 12:24:14 +0000 UTC (1 container statuses recorded)
  I1005 13:29:01.960771 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1005 13:29:01.960777 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-5zzg2 from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 13:29:01.960781 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 13:29:01.960787 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1005 13:29:01.960793 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-83-192 before test
  I1005 13:29:01.966805 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hdfk2 from ingress-nginx-kubernetes-worker started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 13:29:01.966822 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1005 13:29:01.966829 19 predicates.go:957] calico-node-rtdfm from kube-system started at 2024-10-05 12:17:35 +0000 UTC (1 container statuses recorded)
  I1005 13:29:01.966834 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1005 13:29:01.966840 19 predicates.go:957] coredns-5b4857d7c8-h56gc from kube-system started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 13:29:01.966845 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1005 13:29:01.966850 19 predicates.go:957] kube-state-metrics-5d7bdccd49-r9dmj from kube-system started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 13:29:01.966855 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1005 13:29:01.966860 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-pn79v from kube-system started at 2024-10-05 12:15:37 +0000 UTC (2 container statuses recorded)
  I1005 13:29:01.966865 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1005 13:29:01.966870 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1005 13:29:01.966876 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-bhj4s from kubernetes-dashboard started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 13:29:01.966881 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1005 13:29:01.966888 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-4wgvx from kubernetes-dashboard started at 2024-10-05 12:15:37 +0000 UTC (1 container statuses recorded)
  I1005 13:29:01.966897 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1005 13:29:01.966903 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-69jb9 from sonobuoy started at 2024-10-05 12:24:16 +0000 UTC (2 container statuses recorded)
  I1005 13:29:01.966908 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1005 13:29:01.966913 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/05/24 13:29:01.966
  E1005 13:29:02.611187      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:03.611420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/05/24 13:29:03.989
  STEP: Trying to apply a random label on the found node. @ 10/05/24 13:29:04.002
  STEP: verifying the node has the label kubernetes.io/e2e-e487a788-e42c-48b7-9949-7d164e486e65 42 @ 10/05/24 13:29:04.011
  STEP: Trying to relaunch the pod, now with labels. @ 10/05/24 13:29:04.016
  E1005 13:29:04.611680      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:05.611809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-e487a788-e42c-48b7-9949-7d164e486e65 off the node ip-172-31-45-162 @ 10/05/24 13:29:06.042
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-e487a788-e42c-48b7-9949-7d164e486e65 @ 10/05/24 13:29:06.055
  I1005 13:29:06.059768 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3934" for this suite. @ 10/05/24 13:29:06.063
• [4.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 10/05/24 13:29:06.071
  I1005 13:29:06.071797 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename endpointslice @ 10/05/24 13:29:06.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:29:06.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:29:06.094
  I1005 13:29:06.108058 19 endpointslice.go:1045] Endpoints addresses: [172.31.29.107 172.31.5.28] , ports: [6443]
  I1005 13:29:06.108090 19 endpointslice.go:1075] EndpointSlices addresses: [172.31.29.107 172.31.5.28] , ports: [6443]
  I1005 13:29:06.108180 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2120" for this suite. @ 10/05/24 13:29:06.113
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 10/05/24 13:29:06.12
  I1005 13:29:06.120715 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:29:06.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:29:06.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:29:06.142
  STEP: Creating configMap with name projected-configmap-test-volume-map-e7981e84-036f-4438-a674-0862f00491f1 @ 10/05/24 13:29:06.145
  STEP: Creating a pod to test consume configMaps @ 10/05/24 13:29:06.15
  E1005 13:29:06.612472      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:07.612710      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:08.612861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:09.613058      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:29:10.179
  I1005 13:29:10.184120 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-projected-configmaps-85d64b6c-5f49-43c3-ad7e-c73770c9bfd7 container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 13:29:10.193
  I1005 13:29:10.210751 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1411" for this suite. @ 10/05/24 13:29:10.214
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 10/05/24 13:29:10.223
  I1005 13:29:10.223211 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename var-expansion @ 10/05/24 13:29:10.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:29:10.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:29:10.248
  STEP: creating the pod with failed condition @ 10/05/24 13:29:10.251
  E1005 13:29:10.613181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:11.613336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:12.613427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:13.614447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:14.614666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:15.614825      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:16.614934      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:17.615076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:18.616049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:19.616044      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:20.616874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:21.617631      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:22.618418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:23.618525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:24.619407      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:25.619523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:26.620423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:27.620519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:28.621339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:29.621447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:30.622411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:31.622643      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:32.622766      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:33.622968      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:34.623475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:35.623645      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:36.623752      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:37.624425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:38.625051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:39.625261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:40.625733      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:41.626617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:42.627637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:43.627727      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:44.628422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:45.629412      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:46.630293      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:47.630404      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:48.631013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:49.631167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:50.631386      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:51.631493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:52.631958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:53.632179      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:54.633022      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:55.633287      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:56.633419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:57.633637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:58.634593      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:29:59.634806      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:00.634957      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:01.635059      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:02.635889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:03.636027      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:04.636909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:05.637109      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:06.637968      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:07.638065      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:08.638445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:09.638551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:10.638653      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:11.638787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:12.638926      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:13.638998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:14.639536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:15.639616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:16.640030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:17.640167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:18.640398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:19.640593      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:20.641121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:21.641247      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:22.641928      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:23.642093      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:24.643159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:25.643372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:26.644400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:27.644561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:28.645287      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:29.645380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:30.646167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:31.646402      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:32.646881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:33.647720      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:34.648664      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:35.648754      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:36.649018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:37.649134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:38.649965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:39.650068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:40.650910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:41.651015      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:42.651198      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:43.651358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:44.652313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:45.652538      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:46.653212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:47.653457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:48.653569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:49.653662      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:50.654161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:51.654198      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:52.654454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:53.654687      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:54.655754      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:55.655866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:56.656624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:57.656686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:58.656758      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:30:59.656863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:00.657470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:01.658462      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:02.659373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:03.659572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:04.659656      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:05.659874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:06.660076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:07.660453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:08.661481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:09.661699      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pod @ 10/05/24 13:31:10.263
  E1005 13:31:10.662175      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:31:10.778651 19 pod_client.go:173] Successfully updated pod "var-expansion-d8a1c49c-e093-4124-b3f6-1431f88ac7ac"
  STEP: waiting for pod running @ 10/05/24 13:31:10.778
  E1005 13:31:11.663130      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:12.663359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 10/05/24 13:31:12.79
  I1005 13:31:12.790960 19 delete.go:62] Deleting pod "var-expansion-d8a1c49c-e093-4124-b3f6-1431f88ac7ac" in namespace "var-expansion-17"
  I1005 13:31:12.800532 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-d8a1c49c-e093-4124-b3f6-1431f88ac7ac" to be fully deleted
  E1005 13:31:13.663466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:14.663614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:15.663742      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:16.664008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:17.664147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:18.664493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:19.664685      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:20.664904      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:21.665867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:22.666008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:23.666731      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:24.666913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:25.667008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:26.667883      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:27.667986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:28.668442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:29.669505      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:30.669691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:31.670123      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:32.670358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:33.671346      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:34.671567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:35.672420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:36.672676      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:37.672795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:38.673004      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:39.673150      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:40.673355      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:41.673481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:42.673961      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:43.674047      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:44.674287      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:31:44.901174 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-17" for this suite. @ 10/05/24 13:31:44.906
• [154.692 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 10/05/24 13:31:44.915
  I1005 13:31:44.915175 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename daemonsets @ 10/05/24 13:31:44.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:31:44.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:31:44.942
  STEP: Creating simple DaemonSet "daemon-set" @ 10/05/24 13:31:44.966
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/05/24 13:31:44.972
  I1005 13:31:44.978075 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:31:44.978108 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:31:44.980859 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:31:44.980876 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  E1005 13:31:45.674401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:31:45.980981 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:31:45.981038 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:31:45.984658 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1005 13:31:45.984685 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  E1005 13:31:46.675422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:31:46.978863 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:31:46.978910 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:31:46.983416 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1005 13:31:46.983441 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 10/05/24 13:31:46.987
  STEP: DeleteCollection of the DaemonSets @ 10/05/24 13:31:46.992
  STEP: Verify that ReplicaSets have been deleted @ 10/05/24 13:31:47.004
  I1005 13:31:47.016466 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27212"},"items":null}

  I1005 13:31:47.026686 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27216"},"items":[{"metadata":{"name":"daemon-set-hnzqb","generateName":"daemon-set-","namespace":"daemonsets-9901","uid":"5deaf2e1-1e46-439b-bd6c-437c3e8b2111","resourceVersion":"27214","creationTimestamp":"2024-10-05T13:31:44Z","deletionTimestamp":"2024-10-05T13:32:17Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"50ba6a54-9b78-4361-b4a6-3a19c2c2f4fd","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-10-05T13:31:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"50ba6a54-9b78-4361-b4a6-3a19c2c2f4fd\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-10-05T13:31:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.59.77\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-dxv2f","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-dxv2f","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-45-162","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-45-162"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-05T13:31:46Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-05T13:31:44Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-05T13:31:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-05T13:31:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-05T13:31:44Z"}],"hostIP":"172.31.45.162","hostIPs":[{"ip":"172.31.45.162"}],"podIP":"192.168.59.77","podIPs":[{"ip":"192.168.59.77"}],"startTime":"2024-10-05T13:31:44Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-10-05T13:31:45Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://532e2d629f7b6e1c1c5179ead8cebff922d1005da1ed036c99d5818860fe2534","started":true,"volumeMounts":[{"name":"kube-api-access-dxv2f","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-l9qjj","generateName":"daemon-set-","namespace":"daemonsets-9901","uid":"46af1fdb-7c82-4644-8b82-4c73ba169dda","resourceVersion":"27213","creationTimestamp":"2024-10-05T13:31:44Z","deletionTimestamp":"2024-10-05T13:32:17Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"50ba6a54-9b78-4361-b4a6-3a19c2c2f4fd","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-10-05T13:31:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"50ba6a54-9b78-4361-b4a6-3a19c2c2f4fd\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-10-05T13:31:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.195.186\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-qc4hj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-qc4hj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-83-192","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-83-192"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-05T13:31:45Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-05T13:31:45Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-05T13:31:45Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-05T13:31:45Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-05T13:31:45Z"}],"hostIP":"172.31.83.192","hostIPs":[{"ip":"172.31.83.192"}],"podIP":"192.168.195.186","podIPs":[{"ip":"192.168.195.186"}],"startTime":"2024-10-05T13:31:45Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-10-05T13:31:45Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://fe2b643243ccc22c9918b83741ce2efee5229e8143db5fc5b26841253614413a","started":true,"volumeMounts":[{"name":"kube-api-access-qc4hj","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-rpgsw","generateName":"daemon-set-","namespace":"daemonsets-9901","uid":"c28a155a-080a-481d-ba73-c3b85fee334b","resourceVersion":"27215","creationTimestamp":"2024-10-05T13:31:44Z","deletionTimestamp":"2024-10-05T13:32:17Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"50ba6a54-9b78-4361-b4a6-3a19c2c2f4fd","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-10-05T13:31:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"50ba6a54-9b78-4361-b4a6-3a19c2c2f4fd\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-10-05T13:31:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.89.118\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-px2xw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-px2xw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-20-60","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-20-60"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-05T13:31:46Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-05T13:31:45Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-05T13:31:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-05T13:31:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-05T13:31:44Z"}],"hostIP":"172.31.20.60","hostIPs":[{"ip":"172.31.20.60"}],"podIP":"192.168.89.118","podIPs":[{"ip":"192.168.89.118"}],"startTime":"2024-10-05T13:31:45Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-10-05T13:31:45Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://efdc38f95b29028d113ed1a0e372f29bdc4b57e98264681252bb677d4f18aa01","started":true,"volumeMounts":[{"name":"kube-api-access-px2xw","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I1005 13:31:47.043046 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9901" for this suite. @ 10/05/24 13:31:47.048
• [2.141 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 10/05/24 13:31:47.056
  I1005 13:31:47.056485 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/05/24 13:31:47.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:31:47.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:31:47.083
  I1005 13:31:47.085669 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:31:47.628034 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6474" for this suite. @ 10/05/24 13:31:47.636
• [0.591 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 10/05/24 13:31:47.647
  I1005 13:31:47.647821 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename subpath @ 10/05/24 13:31:47.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:31:47.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:31:47.668
  STEP: Setting up data @ 10/05/24 13:31:47.67
  E1005 13:31:47.676475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating pod pod-subpath-test-secret-c9j6 @ 10/05/24 13:31:47.681
  STEP: Creating a pod to test atomic-volume-subpath @ 10/05/24 13:31:47.681
  E1005 13:31:48.677403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:49.677476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:50.677567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:51.677670      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:52.678380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:53.678458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:54.678582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:55.678692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:56.679099      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:57.679482      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:58.679563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:31:59.679677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:00.679773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:01.679925      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:02.680013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:03.680110      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:04.680402      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:05.681210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:06.681953      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:07.682048      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:08.682187      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:09.682437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:32:09.765
  I1005 13:32:09.769700 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-subpath-test-secret-c9j6 container test-container-subpath-secret-c9j6: <nil>
  STEP: delete the pod @ 10/05/24 13:32:09.782
  STEP: Deleting pod pod-subpath-test-secret-c9j6 @ 10/05/24 13:32:09.8
  I1005 13:32:09.800999 19 delete.go:62] Deleting pod "pod-subpath-test-secret-c9j6" in namespace "subpath-1974"
  I1005 13:32:09.805396 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1974" for this suite. @ 10/05/24 13:32:09.81
• [22.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 10/05/24 13:32:09.82
  I1005 13:32:09.820491 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename configmap @ 10/05/24 13:32:09.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:32:09.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:32:09.846
  STEP: Creating configMap with name configmap-test-volume-ac2b6085-b58c-4c24-8b48-8c774f48fa8f @ 10/05/24 13:32:09.848
  STEP: Creating a pod to test consume configMaps @ 10/05/24 13:32:09.853
  E1005 13:32:10.683517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:11.683616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:12.683746      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:13.683844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:32:13.878
  I1005 13:32:13.882150 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-configmaps-d69222ed-1e06-4905-8ff1-939b9757686e container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 13:32:13.89
  I1005 13:32:13.911341 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8746" for this suite. @ 10/05/24 13:32:13.916
• [4.106 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 10/05/24 13:32:13.926
  I1005 13:32:13.926454 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename endpointslice @ 10/05/24 13:32:13.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:32:13.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:32:13.951
  E1005 13:32:14.684907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:15.685001      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 10/05/24 13:32:16.028
  STEP: referencing matching pods with named port @ 10/05/24 13:32:16.037
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 10/05/24 13:32:16.046
  STEP: recreating EndpointSlices after they've been deleted @ 10/05/24 13:32:16.052
  I1005 13:32:16.075566 19 endpointslice.go:938] EndpointSlice for Service endpointslice-141/example-named-port not found
  E1005 13:32:16.685411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:17.685652      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:32:18.083006 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-141" for this suite. @ 10/05/24 13:32:18.088
• [4.169 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 10/05/24 13:32:18.095
  I1005 13:32:18.095910 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename secrets @ 10/05/24 13:32:18.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:32:18.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:32:18.121
  STEP: creating a secret @ 10/05/24 13:32:18.123
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 10/05/24 13:32:18.128
  STEP: patching the secret @ 10/05/24 13:32:18.132
  STEP: deleting the secret using a LabelSelector @ 10/05/24 13:32:18.142
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 10/05/24 13:32:18.153
  I1005 13:32:18.157835 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6883" for this suite. @ 10/05/24 13:32:18.161
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 10/05/24 13:32:18.171
  I1005 13:32:18.171143 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 13:32:18.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:32:18.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:32:18.195
  STEP: creating an Endpoint @ 10/05/24 13:32:18.202
  STEP: waiting for available Endpoint @ 10/05/24 13:32:18.206
  STEP: listing all Endpoints @ 10/05/24 13:32:18.208
  STEP: updating the Endpoint @ 10/05/24 13:32:18.212
  STEP: fetching the Endpoint @ 10/05/24 13:32:18.219
  STEP: patching the Endpoint @ 10/05/24 13:32:18.222
  STEP: fetching the Endpoint @ 10/05/24 13:32:18.231
  STEP: deleting the Endpoint by Collection @ 10/05/24 13:32:18.235
  STEP: waiting for Endpoint deletion @ 10/05/24 13:32:18.245
  STEP: fetching the Endpoint @ 10/05/24 13:32:18.246
  I1005 13:32:18.250079 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8567" for this suite. @ 10/05/24 13:32:18.255
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 10/05/24 13:32:18.264
  I1005 13:32:18.264455 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/05/24 13:32:18.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:32:18.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:32:18.29
  STEP: create the container to handle the HTTPGet hook request. @ 10/05/24 13:32:18.298
  E1005 13:32:18.685772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:19.686084      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/05/24 13:32:20.324
  E1005 13:32:20.686773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:21.686845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 10/05/24 13:32:22.346
  STEP: delete the pod with lifecycle hook @ 10/05/24 13:32:22.357
  E1005 13:32:22.687691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:23.687784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:32:24.374963 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7316" for this suite. @ 10/05/24 13:32:24.379
• [6.124 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 10/05/24 13:32:24.388
  I1005 13:32:24.388126 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename gc @ 10/05/24 13:32:24.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:32:24.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:32:24.411
  STEP: create the rc @ 10/05/24 13:32:24.417
  W1005 13:32:24.425087      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1005 13:32:24.689009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:25.690288      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:26.697458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:27.700960      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:28.702361      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:29.702387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/05/24 13:32:30.441
  STEP: wait for the rc to be deleted @ 10/05/24 13:32:30.454
  E1005 13:32:30.703463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:31.704472      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:32.704679      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:33.705145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:34.705362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 10/05/24 13:32:35.463
  E1005 13:32:35.706367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:36.706503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:37.707556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:38.707664      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:39.707760      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:40.707844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:41.708119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:42.708417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:43.708706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:44.708922      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:45.709093      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:46.709394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:47.710426      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:48.711467      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:49.711663      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:50.711863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:51.712907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:52.713133      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:53.713367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:54.714423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:55.714677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:56.714783      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:57.714991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:58.715187      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:32:59.715362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:00.715582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:01.716650      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:02.716751      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:03.716849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:04.716980      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/05/24 13:33:05.475
  W1005 13:33:05.481765      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1005 13:33:05.481796 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1005 13:33:05.481845 19 delete.go:95] Deleting pod "simpletest.rc-2897z" in namespace "gc-3587"
  I1005 13:33:05.498107 19 delete.go:95] Deleting pod "simpletest.rc-29j9j" in namespace "gc-3587"
  I1005 13:33:05.514159 19 delete.go:95] Deleting pod "simpletest.rc-2ckqc" in namespace "gc-3587"
  I1005 13:33:05.528322 19 delete.go:95] Deleting pod "simpletest.rc-2hvlt" in namespace "gc-3587"
  I1005 13:33:05.543091 19 delete.go:95] Deleting pod "simpletest.rc-477lf" in namespace "gc-3587"
  I1005 13:33:05.558296 19 delete.go:95] Deleting pod "simpletest.rc-4ld9l" in namespace "gc-3587"
  I1005 13:33:05.572863 19 delete.go:95] Deleting pod "simpletest.rc-4vl6x" in namespace "gc-3587"
  I1005 13:33:05.589080 19 delete.go:95] Deleting pod "simpletest.rc-55wcm" in namespace "gc-3587"
  I1005 13:33:05.612544 19 delete.go:95] Deleting pod "simpletest.rc-598lp" in namespace "gc-3587"
  I1005 13:33:05.631710 19 delete.go:95] Deleting pod "simpletest.rc-5bdd7" in namespace "gc-3587"
  I1005 13:33:05.646920 19 delete.go:95] Deleting pod "simpletest.rc-5fxtr" in namespace "gc-3587"
  I1005 13:33:05.665071 19 delete.go:95] Deleting pod "simpletest.rc-5vxgk" in namespace "gc-3587"
  I1005 13:33:05.679148 19 delete.go:95] Deleting pod "simpletest.rc-5xhvs" in namespace "gc-3587"
  I1005 13:33:05.694927 19 delete.go:95] Deleting pod "simpletest.rc-62bj8" in namespace "gc-3587"
  I1005 13:33:05.712778 19 delete.go:95] Deleting pod "simpletest.rc-68dqw" in namespace "gc-3587"
  E1005 13:33:05.718115      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:33:05.730490 19 delete.go:95] Deleting pod "simpletest.rc-6hxhs" in namespace "gc-3587"
  I1005 13:33:05.749176 19 delete.go:95] Deleting pod "simpletest.rc-6z5lp" in namespace "gc-3587"
  I1005 13:33:05.762603 19 delete.go:95] Deleting pod "simpletest.rc-6zlcf" in namespace "gc-3587"
  I1005 13:33:05.780758 19 delete.go:95] Deleting pod "simpletest.rc-72dr8" in namespace "gc-3587"
  I1005 13:33:05.799506 19 delete.go:95] Deleting pod "simpletest.rc-788dg" in namespace "gc-3587"
  I1005 13:33:05.821400 19 delete.go:95] Deleting pod "simpletest.rc-7kcr9" in namespace "gc-3587"
  I1005 13:33:05.833559 19 delete.go:95] Deleting pod "simpletest.rc-7mvr9" in namespace "gc-3587"
  I1005 13:33:05.845524 19 delete.go:95] Deleting pod "simpletest.rc-7sq2q" in namespace "gc-3587"
  I1005 13:33:05.862506 19 delete.go:95] Deleting pod "simpletest.rc-8zckr" in namespace "gc-3587"
  I1005 13:33:05.877885 19 delete.go:95] Deleting pod "simpletest.rc-98fns" in namespace "gc-3587"
  I1005 13:33:05.901777 19 delete.go:95] Deleting pod "simpletest.rc-9h8wn" in namespace "gc-3587"
  I1005 13:33:05.914861 19 delete.go:95] Deleting pod "simpletest.rc-9nv2g" in namespace "gc-3587"
  I1005 13:33:05.942418 19 delete.go:95] Deleting pod "simpletest.rc-9snlv" in namespace "gc-3587"
  I1005 13:33:05.953492 19 delete.go:95] Deleting pod "simpletest.rc-brgp9" in namespace "gc-3587"
  I1005 13:33:05.968212 19 delete.go:95] Deleting pod "simpletest.rc-bvkr6" in namespace "gc-3587"
  I1005 13:33:05.981566 19 delete.go:95] Deleting pod "simpletest.rc-c49sg" in namespace "gc-3587"
  I1005 13:33:05.999095 19 delete.go:95] Deleting pod "simpletest.rc-cj8l6" in namespace "gc-3587"
  I1005 13:33:06.015502 19 delete.go:95] Deleting pod "simpletest.rc-crksx" in namespace "gc-3587"
  I1005 13:33:06.028696 19 delete.go:95] Deleting pod "simpletest.rc-d5dl4" in namespace "gc-3587"
  I1005 13:33:06.045296 19 delete.go:95] Deleting pod "simpletest.rc-d8gm8" in namespace "gc-3587"
  I1005 13:33:06.059595 19 delete.go:95] Deleting pod "simpletest.rc-dshx8" in namespace "gc-3587"
  I1005 13:33:06.080320 19 delete.go:95] Deleting pod "simpletest.rc-f7cl7" in namespace "gc-3587"
  I1005 13:33:06.095714 19 delete.go:95] Deleting pod "simpletest.rc-fsg4d" in namespace "gc-3587"
  I1005 13:33:06.110355 19 delete.go:95] Deleting pod "simpletest.rc-fsn4b" in namespace "gc-3587"
  I1005 13:33:06.126851 19 delete.go:95] Deleting pod "simpletest.rc-gfxqm" in namespace "gc-3587"
  I1005 13:33:06.144129 19 delete.go:95] Deleting pod "simpletest.rc-hcttm" in namespace "gc-3587"
  I1005 13:33:06.157351 19 delete.go:95] Deleting pod "simpletest.rc-hf2vx" in namespace "gc-3587"
  I1005 13:33:06.177115 19 delete.go:95] Deleting pod "simpletest.rc-hfttc" in namespace "gc-3587"
  I1005 13:33:06.190461 19 delete.go:95] Deleting pod "simpletest.rc-hhhnc" in namespace "gc-3587"
  I1005 13:33:06.204591 19 delete.go:95] Deleting pod "simpletest.rc-hjls9" in namespace "gc-3587"
  I1005 13:33:06.236649 19 delete.go:95] Deleting pod "simpletest.rc-hjmp2" in namespace "gc-3587"
  I1005 13:33:06.256144 19 delete.go:95] Deleting pod "simpletest.rc-hjxjg" in namespace "gc-3587"
  I1005 13:33:06.274477 19 delete.go:95] Deleting pod "simpletest.rc-hpfdf" in namespace "gc-3587"
  I1005 13:33:06.290616 19 delete.go:95] Deleting pod "simpletest.rc-hr84n" in namespace "gc-3587"
  I1005 13:33:06.304471 19 delete.go:95] Deleting pod "simpletest.rc-j6qws" in namespace "gc-3587"
  I1005 13:33:06.318430 19 delete.go:95] Deleting pod "simpletest.rc-j88fk" in namespace "gc-3587"
  I1005 13:33:06.334180 19 delete.go:95] Deleting pod "simpletest.rc-jh2qj" in namespace "gc-3587"
  I1005 13:33:06.353865 19 delete.go:95] Deleting pod "simpletest.rc-jtcwj" in namespace "gc-3587"
  I1005 13:33:06.379724 19 delete.go:95] Deleting pod "simpletest.rc-jwt8v" in namespace "gc-3587"
  I1005 13:33:06.390742 19 delete.go:95] Deleting pod "simpletest.rc-jxvwn" in namespace "gc-3587"
  I1005 13:33:06.404665 19 delete.go:95] Deleting pod "simpletest.rc-kc6mg" in namespace "gc-3587"
  I1005 13:33:06.420502 19 delete.go:95] Deleting pod "simpletest.rc-knb62" in namespace "gc-3587"
  I1005 13:33:06.433191 19 delete.go:95] Deleting pod "simpletest.rc-kth2d" in namespace "gc-3587"
  I1005 13:33:06.449766 19 delete.go:95] Deleting pod "simpletest.rc-ldk58" in namespace "gc-3587"
  I1005 13:33:06.461300 19 delete.go:95] Deleting pod "simpletest.rc-ljdv2" in namespace "gc-3587"
  I1005 13:33:06.474451 19 delete.go:95] Deleting pod "simpletest.rc-m7cn5" in namespace "gc-3587"
  I1005 13:33:06.493583 19 delete.go:95] Deleting pod "simpletest.rc-m84vt" in namespace "gc-3587"
  I1005 13:33:06.507960 19 delete.go:95] Deleting pod "simpletest.rc-mnpp9" in namespace "gc-3587"
  I1005 13:33:06.521196 19 delete.go:95] Deleting pod "simpletest.rc-n4hjn" in namespace "gc-3587"
  I1005 13:33:06.534528 19 delete.go:95] Deleting pod "simpletest.rc-n7ntg" in namespace "gc-3587"
  I1005 13:33:06.549166 19 delete.go:95] Deleting pod "simpletest.rc-nfb6s" in namespace "gc-3587"
  I1005 13:33:06.563880 19 delete.go:95] Deleting pod "simpletest.rc-nn6wd" in namespace "gc-3587"
  I1005 13:33:06.577846 19 delete.go:95] Deleting pod "simpletest.rc-nsbhf" in namespace "gc-3587"
  I1005 13:33:06.592443 19 delete.go:95] Deleting pod "simpletest.rc-nwckn" in namespace "gc-3587"
  I1005 13:33:06.603662 19 delete.go:95] Deleting pod "simpletest.rc-nx2w9" in namespace "gc-3587"
  I1005 13:33:06.614830 19 delete.go:95] Deleting pod "simpletest.rc-p426h" in namespace "gc-3587"
  I1005 13:33:06.628383 19 delete.go:95] Deleting pod "simpletest.rc-p8pgw" in namespace "gc-3587"
  I1005 13:33:06.680485 19 delete.go:95] Deleting pod "simpletest.rc-pdp8s" in namespace "gc-3587"
  E1005 13:33:06.718437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:33:06.730107 19 delete.go:95] Deleting pod "simpletest.rc-pnmd9" in namespace "gc-3587"
  I1005 13:33:06.785549 19 delete.go:95] Deleting pod "simpletest.rc-q7qrb" in namespace "gc-3587"
  I1005 13:33:06.829235 19 delete.go:95] Deleting pod "simpletest.rc-qtb8k" in namespace "gc-3587"
  I1005 13:33:06.877512 19 delete.go:95] Deleting pod "simpletest.rc-qtpbv" in namespace "gc-3587"
  I1005 13:33:06.932863 19 delete.go:95] Deleting pod "simpletest.rc-rb4qk" in namespace "gc-3587"
  I1005 13:33:06.985625 19 delete.go:95] Deleting pod "simpletest.rc-rgbh6" in namespace "gc-3587"
  I1005 13:33:07.032642 19 delete.go:95] Deleting pod "simpletest.rc-rmswp" in namespace "gc-3587"
  I1005 13:33:07.085173 19 delete.go:95] Deleting pod "simpletest.rc-rvfck" in namespace "gc-3587"
  I1005 13:33:07.130620 19 delete.go:95] Deleting pod "simpletest.rc-rxcmn" in namespace "gc-3587"
  I1005 13:33:07.186629 19 delete.go:95] Deleting pod "simpletest.rc-s2vmd" in namespace "gc-3587"
  I1005 13:33:07.232040 19 delete.go:95] Deleting pod "simpletest.rc-snh2v" in namespace "gc-3587"
  I1005 13:33:07.283906 19 delete.go:95] Deleting pod "simpletest.rc-t6m99" in namespace "gc-3587"
  I1005 13:33:07.334430 19 delete.go:95] Deleting pod "simpletest.rc-tplx7" in namespace "gc-3587"
  I1005 13:33:07.378447 19 delete.go:95] Deleting pod "simpletest.rc-trmz2" in namespace "gc-3587"
  I1005 13:33:07.432111 19 delete.go:95] Deleting pod "simpletest.rc-v2jmc" in namespace "gc-3587"
  I1005 13:33:07.478821 19 delete.go:95] Deleting pod "simpletest.rc-v4c8v" in namespace "gc-3587"
  I1005 13:33:07.528393 19 delete.go:95] Deleting pod "simpletest.rc-w4kwg" in namespace "gc-3587"
  I1005 13:33:07.577940 19 delete.go:95] Deleting pod "simpletest.rc-w6dhp" in namespace "gc-3587"
  I1005 13:33:07.631497 19 delete.go:95] Deleting pod "simpletest.rc-wj89x" in namespace "gc-3587"
  I1005 13:33:07.688653 19 delete.go:95] Deleting pod "simpletest.rc-x2wmh" in namespace "gc-3587"
  E1005 13:33:07.718537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:33:07.727860 19 delete.go:95] Deleting pod "simpletest.rc-xdns6" in namespace "gc-3587"
  I1005 13:33:07.784388 19 delete.go:95] Deleting pod "simpletest.rc-xdzm2" in namespace "gc-3587"
  I1005 13:33:07.837348 19 delete.go:95] Deleting pod "simpletest.rc-xggl9" in namespace "gc-3587"
  I1005 13:33:07.879962 19 delete.go:95] Deleting pod "simpletest.rc-xlcmb" in namespace "gc-3587"
  I1005 13:33:07.943949 19 delete.go:95] Deleting pod "simpletest.rc-zgmj8" in namespace "gc-3587"
  I1005 13:33:07.977435 19 delete.go:95] Deleting pod "simpletest.rc-zgwpk" in namespace "gc-3587"
  I1005 13:33:08.029532 19 delete.go:95] Deleting pod "simpletest.rc-zrdnf" in namespace "gc-3587"
  I1005 13:33:08.088884 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3587" for this suite. @ 10/05/24 13:33:08.12
• [43.785 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 10/05/24 13:33:08.173
  I1005 13:33:08.173440 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pods @ 10/05/24 13:33:08.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:33:08.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:33:08.202
  STEP: creating the pod @ 10/05/24 13:33:08.207
  STEP: submitting the pod to kubernetes @ 10/05/24 13:33:08.207
  W1005 13:33:08.221065      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E1005 13:33:08.719353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:09.719439      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:10.720421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:11.721480      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 10/05/24 13:33:12.241
  STEP: updating the pod @ 10/05/24 13:33:12.246
  E1005 13:33:12.721617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:33:12.761852 19 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-4584b63b-cd3e-443b-a04c-41fcf144634e"
  E1005 13:33:13.722559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:14.722807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:33:14.772279 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4385" for this suite. @ 10/05/24 13:33:14.776
• [6.612 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 10/05/24 13:33:14.786
  I1005 13:33:14.786248 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename namespaces @ 10/05/24 13:33:14.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:33:14.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:33:14.811
  STEP: Creating a test namespace @ 10/05/24 13:33:14.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:33:14.836
  STEP: Creating a pod in the namespace @ 10/05/24 13:33:14.839
  STEP: Waiting for the pod to have running status @ 10/05/24 13:33:14.847
  E1005 13:33:15.723936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:16.724093      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 10/05/24 13:33:16.86
  STEP: Waiting for the namespace to be removed. @ 10/05/24 13:33:16.872
  E1005 13:33:17.724126      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:18.724468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:19.724604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:20.724835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:21.725619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:22.726353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:23.726455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:24.726509      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:25.726553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:26.727183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:27.728246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 10/05/24 13:33:27.878
  STEP: Verifying there are no pods in the namespace @ 10/05/24 13:33:27.898
  I1005 13:33:27.903666 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9044" for this suite. @ 10/05/24 13:33:27.907
  STEP: Destroying namespace "nsdeletetest-4308" for this suite. @ 10/05/24 13:33:27.914
  I1005 13:33:27.918322 19 framework.go:370] Namespace nsdeletetest-4308 was already deleted
  STEP: Destroying namespace "nsdeletetest-7826" for this suite. @ 10/05/24 13:33:27.918
• [13.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 10/05/24 13:33:27.926
  I1005 13:33:27.926337 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename svcaccounts @ 10/05/24 13:33:27.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:33:27.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:33:27.949
  I1005 13:33:27.975458 19 service_accounts.go:253] created pod pod-service-account-defaultsa
  I1005 13:33:27.975492 19 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I1005 13:33:27.981583 19 service_accounts.go:253] created pod pod-service-account-mountsa
  I1005 13:33:27.981606 19 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I1005 13:33:27.988985 19 service_accounts.go:253] created pod pod-service-account-nomountsa
  I1005 13:33:27.989009 19 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I1005 13:33:27.993916 19 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I1005 13:33:27.993946 19 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1005 13:33:28.003726 19 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I1005 13:33:28.003763 19 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1005 13:33:28.011037 19 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I1005 13:33:28.011063 19 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1005 13:33:28.018417 19 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I1005 13:33:28.018449 19 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1005 13:33:28.026479 19 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I1005 13:33:28.026661 19 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1005 13:33:28.036349 19 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I1005 13:33:28.036378 19 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1005 13:33:28.036477 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5845" for this suite. @ 10/05/24 13:33:28.041
• [0.126 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 10/05/24 13:33:28.052
  I1005 13:33:28.052762 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-runtime @ 10/05/24 13:33:28.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:33:28.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:33:28.078
  STEP: create the container @ 10/05/24 13:33:28.081
  W1005 13:33:28.093194      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/05/24 13:33:28.093
  E1005 13:33:28.728383      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:29.728484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:30.728582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/05/24 13:33:31.117
  STEP: the container should be terminated @ 10/05/24 13:33:31.12
  STEP: the termination message should be set @ 10/05/24 13:33:31.121
  I1005 13:33:31.121034 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/05/24 13:33:31.121
  I1005 13:33:31.139061 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2608" for this suite. @ 10/05/24 13:33:31.143
• [3.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 10/05/24 13:33:31.154
  I1005 13:33:31.154111 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:33:31.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:33:31.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:33:31.177
  STEP: Creating secret with name projected-secret-test-8132aeaf-36bc-47b2-9ed3-bc8bae54bb35 @ 10/05/24 13:33:31.18
  STEP: Creating a pod to test consume secrets @ 10/05/24 13:33:31.186
  E1005 13:33:31.728674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:32.729023      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:33.729629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:34.730438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:33:35.211
  I1005 13:33:35.216140 19 output.go:196] Trying to get logs from node ip-172-31-83-192 pod pod-projected-secrets-2145fcb4-41c1-4d2b-b029-56e7a672400a container secret-volume-test: <nil>
  STEP: delete the pod @ 10/05/24 13:33:35.23
  I1005 13:33:35.254443 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3851" for this suite. @ 10/05/24 13:33:35.259
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 10/05/24 13:33:35.271
  I1005 13:33:35.271297 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 13:33:35.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:33:35.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:33:35.296
  STEP: creating service in namespace services-3777 @ 10/05/24 13:33:35.298
  STEP: creating service affinity-nodeport in namespace services-3777 @ 10/05/24 13:33:35.298
  STEP: creating replication controller affinity-nodeport in namespace services-3777 @ 10/05/24 13:33:35.317
  I1005 13:33:35.323584      19 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-3777, replica count: 3
  E1005 13:33:35.730783      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:36.731556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:37.731790      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:33:38.375362      19 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1005 13:33:38.389835 19 resource.go:361] Creating new exec pod
  E1005 13:33:38.732289      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:39.732402      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:40.733384      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:33:41.416205 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-3777 exec execpod-affinitylbn8h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1005 13:33:41.512606 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I1005 13:33:41.512653 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 13:33:41.512737 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-3777 exec execpod-affinitylbn8h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.141 80'
  I1005 13:33:41.597274 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.141 80\nConnection to 10.152.183.141 80 port [tcp/http] succeeded!\n"
  I1005 13:33:41.597324 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 13:33:41.597409 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-3777 exec execpod-affinitylbn8h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.60 31052'
  I1005 13:33:41.687885 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.60 31052\nConnection to 172.31.20.60 31052 port [tcp/*] succeeded!\n"
  I1005 13:33:41.687933 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 13:33:41.688096 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-3777 exec execpod-affinitylbn8h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.83.192 31052'
  E1005 13:33:41.734925      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:33:41.772932 19 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 172.31.83.192 31052\nConnection to 172.31.83.192 31052 port [tcp/*] succeeded!\n"
  I1005 13:33:41.772989 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 13:33:41.773148 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-3777 exec execpod-affinitylbn8h -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.20.60:31052/ ; done'
  I1005 13:33:41.996502 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.60:31052/\n"
  I1005 13:33:41.996554 19 builder.go:147] stdout: "\naffinity-nodeport-6d4rb\naffinity-nodeport-6d4rb\naffinity-nodeport-6d4rb\naffinity-nodeport-6d4rb\naffinity-nodeport-6d4rb\naffinity-nodeport-6d4rb\naffinity-nodeport-6d4rb\naffinity-nodeport-6d4rb\naffinity-nodeport-6d4rb\naffinity-nodeport-6d4rb\naffinity-nodeport-6d4rb\naffinity-nodeport-6d4rb\naffinity-nodeport-6d4rb\naffinity-nodeport-6d4rb\naffinity-nodeport-6d4rb\naffinity-nodeport-6d4rb"
  I1005 13:33:41.996568 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996576 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996583 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996588 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996594 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996604 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996609 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996615 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996621 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996627 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996634 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996639 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996644 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996650 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996656 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996662 19 service.go:242] Received response from host: affinity-nodeport-6d4rb
  I1005 13:33:41.996821 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-3777, will wait for the garbage collector to delete the pods @ 10/05/24 13:33:42.011
  I1005 13:33:42.075899 19 resources.go:139] Deleting ReplicationController affinity-nodeport took: 8.414147ms
  I1005 13:33:42.176533 19 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.627901ms
  E1005 13:33:42.734969      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:43.735207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:44.735835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:33:45.304016 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3777" for this suite. @ 10/05/24 13:33:45.308
• [10.044 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 10/05/24 13:33:45.315
  I1005 13:33:45.315808 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pods @ 10/05/24 13:33:45.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:33:45.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:33:45.339
  STEP: creating pod @ 10/05/24 13:33:45.342
  E1005 13:33:45.736538      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:46.737452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:33:47.371480 19 pods.go:83] Pod pod-hostip-a90c1224-e593-457c-88a0-71e2ce9df33b has hostIP: 172.31.45.162
  I1005 13:33:47.371603 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-479" for this suite. @ 10/05/24 13:33:47.375
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 10/05/24 13:33:47.384
  I1005 13:33:47.384729 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename events @ 10/05/24 13:33:47.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:33:47.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:33:47.41
  STEP: creating a test event @ 10/05/24 13:33:47.413
  STEP: listing events in all namespaces @ 10/05/24 13:33:47.421
  STEP: listing events in test namespace @ 10/05/24 13:33:47.426
  STEP: listing events with field selection filtering on source @ 10/05/24 13:33:47.431
  STEP: listing events with field selection filtering on reportingController @ 10/05/24 13:33:47.435
  STEP: getting the test event @ 10/05/24 13:33:47.439
  STEP: patching the test event @ 10/05/24 13:33:47.442
  STEP: getting the test event @ 10/05/24 13:33:47.452
  STEP: updating the test event @ 10/05/24 13:33:47.456
  STEP: getting the test event @ 10/05/24 13:33:47.464
  STEP: deleting the test event @ 10/05/24 13:33:47.47
  STEP: listing events in all namespaces @ 10/05/24 13:33:47.479
  STEP: listing events in test namespace @ 10/05/24 13:33:47.484
  I1005 13:33:47.487985 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6521" for this suite. @ 10/05/24 13:33:47.493
• [0.117 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 10/05/24 13:33:47.502
  I1005 13:33:47.502270 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename statefulset @ 10/05/24 13:33:47.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:33:47.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:33:47.525
  STEP: Creating service test in namespace statefulset-4029 @ 10/05/24 13:33:47.528
  STEP: Looking for a node to schedule stateful set and pod @ 10/05/24 13:33:47.532
  STEP: Creating pod with conflicting port in namespace statefulset-4029 @ 10/05/24 13:33:47.536
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4029 @ 10/05/24 13:33:47.545
  E1005 13:33:47.738172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:48.738357      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-4029 @ 10/05/24 13:33:49.556
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4029 @ 10/05/24 13:33:49.563
  I1005 13:33:49.586185 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-4029, name: ss-0, uid: d6b5795e-ecd5-44a5-8524-78da0f204d36, status phase: Pending. Waiting for statefulset controller to delete.
  I1005 13:33:49.606003 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-4029, name: ss-0, uid: d6b5795e-ecd5-44a5-8524-78da0f204d36, status phase: Failed. Waiting for statefulset controller to delete.
  I1005 13:33:49.625479 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-4029, name: ss-0, uid: d6b5795e-ecd5-44a5-8524-78da0f204d36, status phase: Failed. Waiting for statefulset controller to delete.
  I1005 13:33:49.629237 19 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-4029
  STEP: Removing pod with conflicting port in namespace statefulset-4029 @ 10/05/24 13:33:49.629
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4029 and will be in running state @ 10/05/24 13:33:49.646
  E1005 13:33:49.738606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:50.739170      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:33:51.656114 19 statefulset.go:138] Deleting all statefulset in ns statefulset-4029
  I1005 13:33:51.661190 19 rest.go:150] Scaling statefulset ss to 0
  E1005 13:33:51.739637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:52.739756      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:53.740430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:54.740585      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:55.740815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:56.741012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:57.741279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:58.741372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:33:59.741572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:00.741681      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:34:01.681644 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1005 13:34:01.686804 19 rest.go:88] Deleting statefulset ss
  I1005 13:34:01.701665 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4029" for this suite. @ 10/05/24 13:34:01.706
• [14.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 10/05/24 13:34:01.715
  I1005 13:34:01.715441 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename gc @ 10/05/24 13:34:01.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:34:01.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:34:01.74
  E1005 13:34:01.741920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the deployment @ 10/05/24 13:34:01.743
  W1005 13:34:01.749247      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/05/24 13:34:01.749
  STEP: delete the deployment @ 10/05/24 13:34:02.256
  STEP: wait for all rs to be garbage collected @ 10/05/24 13:34:02.265
  STEP: expected 0 rs, got 1 rs @ 10/05/24 13:34:02.276
  STEP: expected 0 pods, got 2 pods @ 10/05/24 13:34:02.281
  E1005 13:34:02.742056      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/05/24 13:34:02.778
  W1005 13:34:02.784396      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1005 13:34:02.784426 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1005 13:34:02.784629 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1434" for this suite. @ 10/05/24 13:34:02.789
• [1.083 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 10/05/24 13:34:02.798
  I1005 13:34:02.798057 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 13:34:02.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:34:02.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:34:02.821
  STEP: creating service endpoint-test2 in namespace services-1786 @ 10/05/24 13:34:02.823
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1786 to expose endpoints map[] @ 10/05/24 13:34:02.835
  I1005 13:34:02.841432 19 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E1005 13:34:03.742247      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:34:03.851689 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-1786 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1786 @ 10/05/24 13:34:03.851
  E1005 13:34:04.742392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:05.742657      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1786 to expose endpoints map[pod1:[80]] @ 10/05/24 13:34:05.875
  I1005 13:34:05.886898 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-1786 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 10/05/24 13:34:05.886
  I1005 13:34:05.886958 19 resource.go:361] Creating new exec pod
  E1005 13:34:06.743296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:07.743411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:08.743489      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:34:08.903897 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-1786 exec execpodhmg7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1005 13:34:08.987405 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1005 13:34:08.987447 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 13:34:08.987528 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-1786 exec execpodhmg7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.32 80'
  I1005 13:34:09.071619 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.32 80\nConnection to 10.152.183.32 80 port [tcp/http] succeeded!\n"
  I1005 13:34:09.071658 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-1786 @ 10/05/24 13:34:09.071
  E1005 13:34:09.743583      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:10.743818      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1786 to expose endpoints map[pod1:[80] pod2:[80]] @ 10/05/24 13:34:11.094
  I1005 13:34:11.112043 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-1786 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 10/05/24 13:34:11.112
  E1005 13:34:11.744444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:34:12.113163 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-1786 exec execpodhmg7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1005 13:34:12.199935 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1005 13:34:12.200023 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 13:34:12.200199 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-1786 exec execpodhmg7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.32 80'
  I1005 13:34:12.288764 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.32 80\nConnection to 10.152.183.32 80 port [tcp/http] succeeded!\n"
  I1005 13:34:12.288809 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1786 @ 10/05/24 13:34:12.288
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1786 to expose endpoints map[pod2:[80]] @ 10/05/24 13:34:12.301
  E1005 13:34:12.744565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:34:13.330970 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-1786 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 10/05/24 13:34:13.331
  E1005 13:34:13.744732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:34:14.331537 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-1786 exec execpodhmg7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1005 13:34:14.420640 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1005 13:34:14.420685 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 13:34:14.420819 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-1786 exec execpodhmg7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.32 80'
  I1005 13:34:14.509541 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.32 80\nConnection to 10.152.183.32 80 port [tcp/http] succeeded!\n"
  I1005 13:34:14.509582 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-1786 @ 10/05/24 13:34:14.509
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1786 to expose endpoints map[] @ 10/05/24 13:34:14.526
  E1005 13:34:14.745695      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:34:15.552126 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-1786 exposes endpoints map[]
  I1005 13:34:15.574745 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1786" for this suite. @ 10/05/24 13:34:15.579
• [12.789 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 10/05/24 13:34:15.587
  I1005 13:34:15.587707 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename job @ 10/05/24 13:34:15.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:34:15.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:34:15.608
  STEP: Creating a job @ 10/05/24 13:34:15.612
  STEP: Ensuring job reaches completions @ 10/05/24 13:34:15.617
  E1005 13:34:15.746156      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:16.747123      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:17.747455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:18.748453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:19.749335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:20.749385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:21.749523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:22.749814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:23.750049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:24.750239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:25.751259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:26.752305      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:34:27.629265 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8802" for this suite. @ 10/05/24 13:34:27.634
• [12.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 10/05/24 13:34:27.642
  I1005 13:34:27.642454 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename configmap @ 10/05/24 13:34:27.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:34:27.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:34:27.667
  STEP: Creating configMap configmap-7837/configmap-test-02634868-af8f-44aa-b7c0-b7ef1d9fbdad @ 10/05/24 13:34:27.669
  STEP: Creating a pod to test consume configMaps @ 10/05/24 13:34:27.675
  E1005 13:34:27.753030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:28.753274      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:34:29.697
  I1005 13:34:29.702880 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-configmaps-adae0d5b-cf59-4692-970e-d9206b45412d container env-test: <nil>
  STEP: delete the pod @ 10/05/24 13:34:29.721
  I1005 13:34:29.739283 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7837" for this suite. @ 10/05/24 13:34:29.744
• [2.109 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 10/05/24 13:34:29.751
  I1005 13:34:29.751895 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename secrets @ 10/05/24 13:34:29.752
  E1005 13:34:29.753897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:34:29.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:34:29.775
  STEP: Creating secret with name secret-test-288ad4a1-3903-4ced-901d-954e5afba617 @ 10/05/24 13:34:29.778
  STEP: Creating a pod to test consume secrets @ 10/05/24 13:34:29.782
  E1005 13:34:30.754093      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:31.754277      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:34:31.799
  I1005 13:34:31.804686 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-secrets-8c7c8416-043f-40d3-aa55-96658d88e770 container secret-env-test: <nil>
  STEP: delete the pod @ 10/05/24 13:34:31.814
  I1005 13:34:31.831345 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8034" for this suite. @ 10/05/24 13:34:31.836
• [2.093 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 10/05/24 13:34:31.845
  I1005 13:34:31.845175 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/05/24 13:34:31.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:34:31.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:34:31.871
  I1005 13:34:31.873752 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:34:32.754990      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 10/05/24 13:34:33.118
  I1005 13:34:33.118899 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6227 --namespace=crd-publish-openapi-6227 create -f -'
  I1005 13:34:33.188871 19 builder.go:146] stderr: ""
  I1005 13:34:33.188928 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4286-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1005 13:34:33.188979 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6227 --namespace=crd-publish-openapi-6227 delete e2e-test-crd-publish-openapi-4286-crds test-foo'
  I1005 13:34:33.242903 19 builder.go:146] stderr: ""
  I1005 13:34:33.242948 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4286-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1005 13:34:33.242992 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6227 --namespace=crd-publish-openapi-6227 apply -f -'
  I1005 13:34:33.302538 19 builder.go:146] stderr: ""
  I1005 13:34:33.302580 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4286-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1005 13:34:33.302636 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6227 --namespace=crd-publish-openapi-6227 delete e2e-test-crd-publish-openapi-4286-crds test-foo'
  I1005 13:34:33.359754 19 builder.go:146] stderr: ""
  I1005 13:34:33.359804 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4286-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 10/05/24 13:34:33.359
  I1005 13:34:33.359882 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6227 --namespace=crd-publish-openapi-6227 create -f -'
  I1005 13:34:33.404617 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 10/05/24 13:34:33.404
  I1005 13:34:33.404733 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6227 --namespace=crd-publish-openapi-6227 create -f -'
  I1005 13:34:33.448147 19 builder.go:135] rc: 1
  I1005 13:34:33.448252 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6227 --namespace=crd-publish-openapi-6227 apply -f -'
  I1005 13:34:33.499308 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 10/05/24 13:34:33.499
  I1005 13:34:33.499483 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6227 --namespace=crd-publish-openapi-6227 create -f -'
  I1005 13:34:33.544402 19 builder.go:135] rc: 1
  I1005 13:34:33.544494 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6227 --namespace=crd-publish-openapi-6227 apply -f -'
  I1005 13:34:33.598574 19 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 10/05/24 13:34:33.598
  I1005 13:34:33.598695 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6227 explain e2e-test-crd-publish-openapi-4286-crds'
  I1005 13:34:33.641109 19 builder.go:146] stderr: ""
  I1005 13:34:33.641245 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4286-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 10/05/24 13:34:33.641
  I1005 13:34:33.641540 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6227 explain e2e-test-crd-publish-openapi-4286-crds.metadata'
  I1005 13:34:33.687061 19 builder.go:146] stderr: ""
  I1005 13:34:33.687248 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4286-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1005 13:34:33.687453 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6227 explain e2e-test-crd-publish-openapi-4286-crds.spec'
  I1005 13:34:33.730692 19 builder.go:146] stderr: ""
  I1005 13:34:33.730734 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4286-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1005 13:34:33.730846 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6227 explain e2e-test-crd-publish-openapi-4286-crds.spec.bars'
  E1005 13:34:33.755835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:34:33.774431 19 builder.go:146] stderr: ""
  I1005 13:34:33.774482 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4286-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 10/05/24 13:34:33.774
  I1005 13:34:33.774646 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-6227 explain e2e-test-crd-publish-openapi-4286-crds.spec.bars2'
  I1005 13:34:33.818712 19 builder.go:135] rc: 1
  E1005 13:34:34.756722      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:34:35.116114 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6227" for this suite. @ 10/05/24 13:34:35.124
• [3.288 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 10/05/24 13:34:35.133
  I1005 13:34:35.133188 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename security-context-test @ 10/05/24 13:34:35.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:34:35.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:34:35.155
  E1005 13:34:35.757387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:36.757396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:37.757487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:38.757582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:34:39.195322 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2111" for this suite. @ 10/05/24 13:34:39.2
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 10/05/24 13:34:39.214
  I1005 13:34:39.214429 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename containers @ 10/05/24 13:34:39.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:34:39.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:34:39.239
  STEP: Creating a pod to test override command @ 10/05/24 13:34:39.242
  E1005 13:34:39.758446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:40.759446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:41.760483      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:42.760698      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:34:43.268
  I1005 13:34:43.272382 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod client-containers-e9e44d7b-ebb2-4a7c-9eef-d90d26572d64 container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 13:34:43.282
  I1005 13:34:43.304422 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3470" for this suite. @ 10/05/24 13:34:43.308
• [4.104 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 10/05/24 13:34:43.318
  I1005 13:34:43.318703 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename subpath @ 10/05/24 13:34:43.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:34:43.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:34:43.342
  STEP: Setting up data @ 10/05/24 13:34:43.344
  STEP: Creating pod pod-subpath-test-configmap-t9mm @ 10/05/24 13:34:43.357
  STEP: Creating a pod to test atomic-volume-subpath @ 10/05/24 13:34:43.357
  E1005 13:34:43.760829      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:44.761018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:45.761139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:46.761389      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:47.761952      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:48.762452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:49.762585      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:50.762791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:51.762894      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:52.763113      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:53.764040      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:54.764170      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:55.764860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:56.765018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:57.765155      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:58.765389      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:34:59.765507      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:00.765655      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:01.766602      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:02.766586      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:03.767435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:04.768421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:05.768896      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:06.768966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:35:07.44
  I1005 13:35:07.444098 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-subpath-test-configmap-t9mm container test-container-subpath-configmap-t9mm: <nil>
  STEP: delete the pod @ 10/05/24 13:35:07.454
  STEP: Deleting pod pod-subpath-test-configmap-t9mm @ 10/05/24 13:35:07.47
  I1005 13:35:07.470531 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-t9mm" in namespace "subpath-7050"
  I1005 13:35:07.475059 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7050" for this suite. @ 10/05/24 13:35:07.478
• [24.166 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 10/05/24 13:35:07.485
  I1005 13:35:07.485325 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir @ 10/05/24 13:35:07.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:35:07.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:35:07.505
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/05/24 13:35:07.508
  E1005 13:35:07.769444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:08.769548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:09.770016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:10.770367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:35:11.533
  I1005 13:35:11.539034 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-6b7ab556-ec08-4b47-a5bc-3bf0b4e71391 container test-container: <nil>
  STEP: delete the pod @ 10/05/24 13:35:11.549
  I1005 13:35:11.568092 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1351" for this suite. @ 10/05/24 13:35:11.572
• [4.096 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 10/05/24 13:35:11.581
  I1005 13:35:11.581747 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename lease-test @ 10/05/24 13:35:11.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:35:11.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:35:11.605
  I1005 13:35:11.677953 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9518" for this suite. @ 10/05/24 13:35:11.681
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 10/05/24 13:35:11.689
  I1005 13:35:11.689876 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:35:11.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:35:11.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:35:11.713
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 13:35:11.716
  E1005 13:35:11.771441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:12.771757      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:35:13.738
  I1005 13:35:13.743184 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downwardapi-volume-e39c59ef-b57d-42bc-ae7d-03b0091883ec container client-container: <nil>
  STEP: delete the pod @ 10/05/24 13:35:13.753
  I1005 13:35:13.770213 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1005 13:35:13.772279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-1215" for this suite. @ 10/05/24 13:35:13.775
• [2.094 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 10/05/24 13:35:13.783
  I1005 13:35:13.783620 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename configmap @ 10/05/24 13:35:13.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:35:13.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:35:13.808
  STEP: Creating configMap with name configmap-test-upd-692ce46c-f11e-40d2-a473-9e91af43bf0d @ 10/05/24 13:35:13.815
  STEP: Creating the pod @ 10/05/24 13:35:13.82
  E1005 13:35:14.772491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:15.773457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 10/05/24 13:35:15.843
  STEP: Waiting for pod with binary data @ 10/05/24 13:35:15.852
  I1005 13:35:15.862693 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2984" for this suite. @ 10/05/24 13:35:15.867
• [2.092 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 10/05/24 13:35:15.875
  I1005 13:35:15.875466 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename gc @ 10/05/24 13:35:15.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:35:15.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:35:15.898
  STEP: create the rc @ 10/05/24 13:35:15.901
  W1005 13:35:15.906941      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1005 13:35:16.774149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:17.774308      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:18.774387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:19.774495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:20.774704      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/05/24 13:35:20.912
  STEP: wait for all pods to be garbage collected @ 10/05/24 13:35:20.919
  E1005 13:35:21.775015      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:22.775311      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:23.775539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:24.775617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:25.775728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/05/24 13:35:25.931
  W1005 13:35:25.937256      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1005 13:35:25.937287 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1005 13:35:25.937426 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-831" for this suite. @ 10/05/24 13:35:25.942
• [10.075 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 10/05/24 13:35:25.95
  I1005 13:35:25.950713 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:35:25.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:35:25.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:35:25.973
  STEP: Creating projection with secret that has name projected-secret-test-de1a0acb-0561-4026-93b5-35fef2e22be6 @ 10/05/24 13:35:25.976
  STEP: Creating a pod to test consume secrets @ 10/05/24 13:35:25.981
  E1005 13:35:26.776399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:27.776525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:28.777028      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:29.777279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:35:30.006
  I1005 13:35:30.011711 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-projected-secrets-8cfc082b-98e1-4ef0-9416-fc8b23f0ad93 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/05/24 13:35:30.02
  I1005 13:35:30.040032 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3168" for this suite. @ 10/05/24 13:35:30.045
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 10/05/24 13:35:30.052
  I1005 13:35:30.052981 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename namespaces @ 10/05/24 13:35:30.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:35:30.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:35:30.075
  STEP: Updating Namespace "namespaces-9338" @ 10/05/24 13:35:30.077
  I1005 13:35:30.087942 19 namespace.go:389] Namespace "namespaces-9338" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"49728754-3de7-461b-a75e-2caa8ae866e3", "kubernetes.io/metadata.name":"namespaces-9338", "namespaces-9338":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1005 13:35:30.088054 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9338" for this suite. @ 10/05/24 13:35:30.092
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 10/05/24 13:35:30.101
  I1005 13:35:30.101577 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 13:35:30.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:35:30.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:35:30.125
  STEP: Setting up server cert @ 10/05/24 13:35:30.152
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 13:35:30.481
  STEP: Deploying the webhook pod @ 10/05/24 13:35:30.494
  STEP: Wait for the deployment to be ready @ 10/05/24 13:35:30.51
  I1005 13:35:30.521865 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1005 13:35:30.778165      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:31.778372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/05/24 13:35:32.536
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 13:35:32.548
  E1005 13:35:32.779336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:35:33.549271 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/05/24 13:35:33.637
  STEP: Creating a configMap that should be mutated @ 10/05/24 13:35:33.649
  STEP: Deleting the collection of validation webhooks @ 10/05/24 13:35:33.684
  STEP: Creating a configMap that should not be mutated @ 10/05/24 13:35:33.754
  E1005 13:35:33.779347      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:35:33.812495 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6040" for this suite. @ 10/05/24 13:35:33.816
  STEP: Destroying namespace "webhook-markers-1531" for this suite. @ 10/05/24 13:35:33.827
• [3.734 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 10/05/24 13:35:33.835
  I1005 13:35:33.835755 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/05/24 13:35:33.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:35:33.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:35:33.858
  STEP: getting /apis @ 10/05/24 13:35:33.867
  STEP: getting /apis/admissionregistration.k8s.io @ 10/05/24 13:35:33.871
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 10/05/24 13:35:33.872
  STEP: creating @ 10/05/24 13:35:33.873
  STEP: getting @ 10/05/24 13:35:33.889
  STEP: listing @ 10/05/24 13:35:33.893
  STEP: watching @ 10/05/24 13:35:33.896
  I1005 13:35:33.896997 19 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 10/05/24 13:35:33.898
  STEP: updating @ 10/05/24 13:35:33.904
  I1005 13:35:33.914729 19 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 10/05/24 13:35:33.914
  STEP: deleting a collection @ 10/05/24 13:35:33.932
  I1005 13:35:33.955676 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3348" for this suite. @ 10/05/24 13:35:33.96
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 10/05/24 13:35:33.968
  I1005 13:35:33.968273 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename statefulset @ 10/05/24 13:35:33.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:35:33.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:35:33.994
  STEP: Creating service test in namespace statefulset-6102 @ 10/05/24 13:35:33.996
  STEP: Creating a new StatefulSet @ 10/05/24 13:35:34.002
  I1005 13:35:34.013197 19 wait.go:40] Found 0 stateful pods, waiting for 3
  E1005 13:35:34.780139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:35.780397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:36.780691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:37.780891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:38.781457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:39.782460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:40.782658      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:41.782786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:42.782990      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:43.783134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:35:44.015920 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1005 13:35:44.015956 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1005 13:35:44.015962 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1005 13:35:44.029036 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-6102 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1005 13:35:44.126931 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1005 13:35:44.126986 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1005 13:35:44.126997 19 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1005 13:35:44.783354      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:45.783598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:46.784464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:47.784706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:48.784883      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:49.785062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:50.785454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:51.785698      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:52.785791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:53.785881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/05/24 13:35:54.137
  I1005 13:35:54.148882 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 10/05/24 13:35:54.148
  E1005 13:35:54.786006      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:55.786108      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:56.786185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:57.786372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:58.786486      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:35:59.787491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:00.788430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:01.788539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:02.788618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:03.788658      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 10/05/24 13:36:04.159
  I1005 13:36:04.164712 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-6102 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1005 13:36:04.242607 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1005 13:36:04.242649 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1005 13:36:04.242661 19 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1005 13:36:04.789455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:05.790460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:06.791465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:07.791625      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:08.791827      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:09.791948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:10.792182      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:11.792348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:12.792562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:13.792898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 10/05/24 13:36:14.261
  I1005 13:36:14.261991 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-6102 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1005 13:36:14.351826 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1005 13:36:14.351870 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1005 13:36:14.351883 19 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1005 13:36:14.793070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:15.793366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:16.793572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:17.793689      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:18.793898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:19.794126      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:20.794266      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:21.794398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:22.794592      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:23.794799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:36:24.374120 19 statefulset.go:2507] Updating stateful set ss2
  E1005 13:36:24.795026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:25.795288      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:26.795368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:27.795574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:28.795637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:29.795771      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:30.795979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:31.796161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:32.796274      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:33.796424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 10/05/24 13:36:34.386
  I1005 13:36:34.390036 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-6102 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1005 13:36:34.475013 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1005 13:36:34.475064 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1005 13:36:34.475074 19 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1005 13:36:34.797319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:35.797491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:36.798423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:37.799167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:38.799618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:39.800421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:40.800540      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:41.800648      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:42.801425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:43.802430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:36:44.494141 19 statefulset.go:138] Deleting all statefulset in ns statefulset-6102
  I1005 13:36:44.497603 19 rest.go:150] Scaling statefulset ss2 to 0
  E1005 13:36:44.803004      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:45.803134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:46.803387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:47.803734      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:48.803851      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:49.804058      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:50.804294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:51.804366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:52.804454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:53.804583      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:36:54.514378 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1005 13:36:54.518502 19 rest.go:88] Deleting statefulset ss2
  I1005 13:36:54.535645 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6102" for this suite. @ 10/05/24 13:36:54.54
• [80.579 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 10/05/24 13:36:54.546
  I1005 13:36:54.546897 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename configmap @ 10/05/24 13:36:54.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:36:54.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:36:54.574
  STEP: Creating configMap with name configmap-test-volume-497a4a18-ee04-47f5-be02-f889e96ef70a @ 10/05/24 13:36:54.576
  STEP: Creating a pod to test consume configMaps @ 10/05/24 13:36:54.582
  E1005 13:36:54.805319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:55.805429      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:56.806447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:57.806555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:36:58.606
  I1005 13:36:58.611489 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-configmaps-819d92d4-8be8-42f1-93e7-88116f5fadaa container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 13:36:58.618
  I1005 13:36:58.641420 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-219" for this suite. @ 10/05/24 13:36:58.646
• [4.107 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 10/05/24 13:36:58.654
  I1005 13:36:58.654437 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename crd-watch @ 10/05/24 13:36:58.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:36:58.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:36:58.675
  I1005 13:36:58.678350 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:36:58.807552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:36:59.807817      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:00.807891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 10/05/24 13:37:01.218
  I1005 13:37:01.223416 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-05T13:37:01Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-05T13:37:01Z]] name:name1 resourceVersion:32465 uid:ec0b5912-61c2-4978-8fde-1f5a139c7818] num:map[num1:9223372036854775807 num2:1000000]]}
  E1005 13:37:01.808021      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:02.808101      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:03.808420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:04.809438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:05.810456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:06.810635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:07.810832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:08.810980      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:09.811060      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:10.811330      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 10/05/24 13:37:11.223
  I1005 13:37:11.231188 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-05T13:37:11Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-05T13:37:11Z]] name:name2 resourceVersion:32496 uid:f5446345-b5de-43b1-bf81-edca050eff6d] num:map[num1:9223372036854775807 num2:1000000]]}
  E1005 13:37:11.812054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:12.812290      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:13.812480      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:14.812734      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:15.812999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:16.813060      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:17.813295      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:18.813391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:19.814424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:20.815421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 10/05/24 13:37:21.232
  I1005 13:37:21.239700 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-05T13:37:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-05T13:37:21Z]] name:name1 resourceVersion:32516 uid:ec0b5912-61c2-4978-8fde-1f5a139c7818] num:map[num1:9223372036854775807 num2:1000000]]}
  E1005 13:37:21.816500      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:22.816606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:23.817335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:24.817372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:25.818428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:26.819414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:27.819624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:28.819845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:29.820171      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:30.820409      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 10/05/24 13:37:31.239
  I1005 13:37:31.246860 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-05T13:37:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-05T13:37:31Z]] name:name2 resourceVersion:32535 uid:f5446345-b5de-43b1-bf81-edca050eff6d] num:map[num1:9223372036854775807 num2:1000000]]}
  E1005 13:37:31.820619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:32.820897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:33.821106      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:34.821245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:35.821528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:36.821629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:37.821891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:38.822092      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:39.822317      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:40.822476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 10/05/24 13:37:41.247
  I1005 13:37:41.257445 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-05T13:37:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-05T13:37:21Z]] name:name1 resourceVersion:32555 uid:ec0b5912-61c2-4978-8fde-1f5a139c7818] num:map[num1:9223372036854775807 num2:1000000]]}
  E1005 13:37:41.823185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:42.823291      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:43.823542      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:44.823707      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:45.823943      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:46.824074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:47.824333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:48.824416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:49.824633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:50.825416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 10/05/24 13:37:51.257
  I1005 13:37:51.267806 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-05T13:37:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-05T13:37:31Z]] name:name2 resourceVersion:32575 uid:f5446345-b5de-43b1-bf81-edca050eff6d] num:map[num1:9223372036854775807 num2:1000000]]}
  E1005 13:37:51.825574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:52.825795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:53.825996      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:54.826137      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:55.826317      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:56.826415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:57.826546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:58.827559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:37:59.827654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:00.828423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:38:01.785413 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-861" for this suite. @ 10/05/24 13:38:01.79
• [63.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 10/05/24 13:38:01.798
  I1005 13:38:01.798832 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename secrets @ 10/05/24 13:38:01.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:38:01.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:38:01.822
  STEP: Creating secret with name secret-test-map-fb898c0a-e119-411a-aa1d-876f02440bf0 @ 10/05/24 13:38:01.825
  E1005 13:38:01.828598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a pod to test consume secrets @ 10/05/24 13:38:01.831
  E1005 13:38:02.829376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:03.830458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:04.830664      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:05.830789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:38:05.855
  I1005 13:38:05.861338 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-secrets-83293a01-a5de-4b86-9b1f-579dccdb4b24 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/05/24 13:38:05.87
  I1005 13:38:05.887415 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1360" for this suite. @ 10/05/24 13:38:05.892
• [4.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 10/05/24 13:38:05.9
  I1005 13:38:05.900031 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/05/24 13:38:05.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:38:05.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:38:05.923
  STEP: set up a multi version CRD @ 10/05/24 13:38:05.926
  I1005 13:38:05.926633 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:38:06.830915      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:07.831864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:08.832614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 10/05/24 13:38:09.174
  STEP: check the unserved version gets removed @ 10/05/24 13:38:09.191
  E1005 13:38:09.832732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 10/05/24 13:38:09.975
  E1005 13:38:10.833324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:11.833565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:38:12.404976 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9924" for this suite. @ 10/05/24 13:38:12.412
• [6.520 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 10/05/24 13:38:12.42
  I1005 13:38:12.420235 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename containers @ 10/05/24 13:38:12.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:38:12.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:38:12.442
  STEP: Creating a pod to test override all @ 10/05/24 13:38:12.445
  E1005 13:38:12.833992      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:13.834673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:14.835461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:15.835766      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:38:16.473
  I1005 13:38:16.477192 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod client-containers-15547262-eda1-4be3-8975-c762795ac5d6 container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 13:38:16.486
  I1005 13:38:16.508851 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9622" for this suite. @ 10/05/24 13:38:16.514
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 10/05/24 13:38:16.521
  I1005 13:38:16.521413 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/05/24 13:38:16.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:38:16.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:38:16.543
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 10/05/24 13:38:16.546
  I1005 13:38:16.546394 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:38:16.836588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:17.836846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:38:17.852340 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:38:18.837467      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:19.838471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:20.839456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:21.840099      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:38:22.786888 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3153" for this suite. @ 10/05/24 13:38:22.793
• [6.280 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 10/05/24 13:38:22.801
  I1005 13:38:22.801136 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 10/05/24 13:38:22.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:38:22.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:38:22.823
  STEP: Setting up the test @ 10/05/24 13:38:22.825
  STEP: Creating hostNetwork=false pod @ 10/05/24 13:38:22.825
  E1005 13:38:22.840077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:23.840403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:24.841018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 10/05/24 13:38:24.851
  E1005 13:38:25.841084      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:26.841209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Running the test @ 10/05/24 13:38:26.878
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 10/05/24 13:38:26.878
  I1005 13:38:26.878052 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2899 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:38:26.878071 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:38:26.878502 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:38:26.878538 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2899/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1005 13:38:26.929268 19 exec_util.go:111] Exec stderr: ""
  I1005 13:38:26.929326 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2899 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:38:26.929336 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:38:26.929854 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:38:26.929906 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2899/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1005 13:38:26.967061 19 exec_util.go:111] Exec stderr: ""
  I1005 13:38:26.967114 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2899 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:38:26.967123 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:38:26.967674 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:38:26.967734 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2899/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1005 13:38:27.005893 19 exec_util.go:111] Exec stderr: ""
  I1005 13:38:27.005957 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2899 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:38:27.005966 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:38:27.006544 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:38:27.006592 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2899/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1005 13:38:27.041138 19 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 10/05/24 13:38:27.041
  I1005 13:38:27.041244 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2899 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:38:27.041253 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:38:27.041777 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:38:27.041838 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2899/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1005 13:38:27.083116 19 exec_util.go:111] Exec stderr: ""
  I1005 13:38:27.083171 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2899 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:38:27.083181 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:38:27.083673 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:38:27.083721 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2899/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1005 13:38:27.117702 19 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 10/05/24 13:38:27.117
  I1005 13:38:27.117786 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2899 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:38:27.117798 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:38:27.118394 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:38:27.118514 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2899/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1005 13:38:27.162690 19 exec_util.go:111] Exec stderr: ""
  I1005 13:38:27.162739 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2899 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:38:27.162748 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:38:27.163198 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:38:27.163266 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2899/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1005 13:38:27.196652 19 exec_util.go:111] Exec stderr: ""
  I1005 13:38:27.196711 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2899 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:38:27.196720 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:38:27.197305 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:38:27.197388 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2899/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1005 13:38:27.228390 19 exec_util.go:111] Exec stderr: ""
  I1005 13:38:27.228433 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2899 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:38:27.228442 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:38:27.228917 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:38:27.228964 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2899/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1005 13:38:27.261558 19 exec_util.go:111] Exec stderr: ""
  I1005 13:38:27.261714 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-2899" for this suite. @ 10/05/24 13:38:27.266
• [4.474 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 10/05/24 13:38:27.274
  I1005 13:38:27.274783 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir @ 10/05/24 13:38:27.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:38:27.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:38:27.293
  STEP: Creating a pod to test emptydir volume type on node default medium @ 10/05/24 13:38:27.295
  E1005 13:38:27.841989      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:28.842360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:29.843376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:30.843504      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:38:31.322
  I1005 13:38:31.326213 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-6c324efb-8aea-4bd3-a827-8e1287df42f6 container test-container: <nil>
  STEP: delete the pod @ 10/05/24 13:38:31.34
  I1005 13:38:31.361330 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4888" for this suite. @ 10/05/24 13:38:31.365
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 10/05/24 13:38:31.375
  I1005 13:38:31.375191 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:38:31.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:38:31.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:38:31.398
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 13:38:31.401
  E1005 13:38:31.844498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:32.845494      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:33.846192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:34.847280      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:38:35.43
  I1005 13:38:35.434728 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod downwardapi-volume-9b9aaa7b-c18d-4938-a229-4ddd680e2e87 container client-container: <nil>
  STEP: delete the pod @ 10/05/24 13:38:35.451
  I1005 13:38:35.469834 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1275" for this suite. @ 10/05/24 13:38:35.474
• [4.107 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 10/05/24 13:38:35.482
  I1005 13:38:35.482816 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename daemonsets @ 10/05/24 13:38:35.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:38:35.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:38:35.5
  STEP: Creating simple DaemonSet "daemon-set" @ 10/05/24 13:38:35.525
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/05/24 13:38:35.53
  I1005 13:38:35.534361 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:38:35.534393 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:38:35.537973 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:38:35.538007 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  E1005 13:38:35.847386      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:38:36.536115 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:38:36.536164 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:38:36.539894 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:38:36.539917 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  E1005 13:38:36.848291      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:38:37.535857 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:38:37.535901 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:38:37.539562 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1005 13:38:37.539585 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 10/05/24 13:38:37.543
  I1005 13:38:37.561750 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:38:37.561788 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:38:37.565502 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1005 13:38:37.565520 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  E1005 13:38:37.848518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:38:38.563383 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:38:38.563428 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:38:38.567626 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1005 13:38:38.567645 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  E1005 13:38:38.849104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:38:39.561509 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:38:39.561545 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:38:39.565434 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1005 13:38:39.565455 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/05/24 13:38:39.568
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7646, will wait for the garbage collector to delete the pods @ 10/05/24 13:38:39.568
  I1005 13:38:39.633724 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.243951ms
  I1005 13:38:39.734308 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.577304ms
  E1005 13:38:39.850022      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:40.850812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:38:40.939974 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:38:40.940015 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1005 13:38:40.943321 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33032"},"items":null}

  I1005 13:38:40.947244 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33032"},"items":null}

  I1005 13:38:40.962675 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7646" for this suite. @ 10/05/24 13:38:40.966
• [5.492 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 10/05/24 13:38:40.975
  I1005 13:38:40.975088 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/05/24 13:38:40.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:38:40.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:38:40.993
  STEP: set up a multi version CRD @ 10/05/24 13:38:40.995
  I1005 13:38:40.996090 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:38:41.850897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:42.851060      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:43.851531      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: rename a version @ 10/05/24 13:38:44.041
  STEP: check the new version name is served @ 10/05/24 13:38:44.052
  E1005 13:38:44.851600      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 10/05/24 13:38:44.896
  STEP: check the other version is not changed @ 10/05/24 13:38:45.529
  E1005 13:38:45.852200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:46.852504      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:47.852909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:38:48.031172 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8273" for this suite. @ 10/05/24 13:38:48.037
• [7.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 10/05/24 13:38:48.048
  I1005 13:38:48.048368 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/05/24 13:38:48.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:38:48.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:38:48.07
  I1005 13:38:48.072375 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:38:48.853023      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:38:49.097080 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1213" for this suite. @ 10/05/24 13:38:49.102
• [1.062 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 10/05/24 13:38:49.111
  I1005 13:38:49.111039 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 13:38:49.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:38:49.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:38:49.131
  STEP: creating service in namespace services-4091 @ 10/05/24 13:38:49.134
  STEP: creating service affinity-clusterip-transition in namespace services-4091 @ 10/05/24 13:38:49.134
  STEP: creating replication controller affinity-clusterip-transition in namespace services-4091 @ 10/05/24 13:38:49.146
  I1005 13:38:49.158606      19 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-4091, replica count: 3
  E1005 13:38:49.853448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:50.853777      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:51.854485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:38:52.210034      19 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1005 13:38:52.219387 19 resource.go:361] Creating new exec pod
  E1005 13:38:52.855013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:53.855278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:54.855427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:38:55.235098 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-4091 exec execpod-affinityj9xfk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1005 13:38:55.330019 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I1005 13:38:55.330069 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 13:38:55.330150 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-4091 exec execpod-affinityj9xfk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.214 80'
  I1005 13:38:55.419920 19 builder.go:146] stderr: "+ echo+ nc -v -t -w 2 10.152.183.214 80 hostName\n\nConnection to 10.152.183.214 80 port [tcp/http] succeeded!\n"
  I1005 13:38:55.419964 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 13:38:55.430040 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-4091 exec execpod-affinityj9xfk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.214:80/ ; done'
  I1005 13:38:55.585124 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n"
  I1005 13:38:55.585187 19 builder.go:147] stdout: "\naffinity-clusterip-transition-7zldg\naffinity-clusterip-transition-7zldg\naffinity-clusterip-transition-7zldg\naffinity-clusterip-transition-lkvcx\naffinity-clusterip-transition-7zldg\naffinity-clusterip-transition-7zldg\naffinity-clusterip-transition-lkvcx\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-lkvcx\naffinity-clusterip-transition-7zldg\naffinity-clusterip-transition-7zldg\naffinity-clusterip-transition-lkvcx\naffinity-clusterip-transition-lkvcx\naffinity-clusterip-transition-7zldg\naffinity-clusterip-transition-7zldg"
  I1005 13:38:55.585201 19 service.go:242] Received response from host: affinity-clusterip-transition-7zldg
  I1005 13:38:55.585210 19 service.go:242] Received response from host: affinity-clusterip-transition-7zldg
  I1005 13:38:55.585233 19 service.go:242] Received response from host: affinity-clusterip-transition-7zldg
  I1005 13:38:55.585239 19 service.go:242] Received response from host: affinity-clusterip-transition-lkvcx
  I1005 13:38:55.585246 19 service.go:242] Received response from host: affinity-clusterip-transition-7zldg
  I1005 13:38:55.585253 19 service.go:242] Received response from host: affinity-clusterip-transition-7zldg
  I1005 13:38:55.585266 19 service.go:242] Received response from host: affinity-clusterip-transition-lkvcx
  I1005 13:38:55.585271 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.585277 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.585283 19 service.go:242] Received response from host: affinity-clusterip-transition-lkvcx
  I1005 13:38:55.585289 19 service.go:242] Received response from host: affinity-clusterip-transition-7zldg
  I1005 13:38:55.585295 19 service.go:242] Received response from host: affinity-clusterip-transition-7zldg
  I1005 13:38:55.585301 19 service.go:242] Received response from host: affinity-clusterip-transition-lkvcx
  I1005 13:38:55.585307 19 service.go:242] Received response from host: affinity-clusterip-transition-lkvcx
  I1005 13:38:55.585312 19 service.go:242] Received response from host: affinity-clusterip-transition-7zldg
  I1005 13:38:55.585334 19 service.go:242] Received response from host: affinity-clusterip-transition-7zldg
  I1005 13:38:55.594565 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-4091 exec execpod-affinityj9xfk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.214:80/ ; done'
  I1005 13:38:55.733740 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.214:80/\n"
  I1005 13:38:55.733793 19 builder.go:147] stdout: "\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb\naffinity-clusterip-transition-5dszb"
  I1005 13:38:55.733807 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.733815 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.733822 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.733827 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.733833 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.733838 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.733845 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.733853 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.733859 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.733867 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.733873 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.733884 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.733890 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.733894 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.733900 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.733905 19 service.go:242] Received response from host: affinity-clusterip-transition-5dszb
  I1005 13:38:55.734007 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-4091, will wait for the garbage collector to delete the pods @ 10/05/24 13:38:55.75
  I1005 13:38:55.815051 19 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 10.097879ms
  E1005 13:38:55.856117      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:38:55.915363 19 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.307436ms
  E1005 13:38:56.857060      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:57.858079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:38:58.858678      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:38:59.037159 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4091" for this suite. @ 10/05/24 13:38:59.041
• [9.941 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 10/05/24 13:38:59.051
  I1005 13:38:59.052003 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename prestop @ 10/05/24 13:38:59.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:38:59.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:38:59.072
  STEP: Creating server pod server in namespace prestop-223 @ 10/05/24 13:38:59.074
  STEP: Waiting for pods to come up. @ 10/05/24 13:38:59.082
  E1005 13:38:59.858788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:00.858934      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-223 @ 10/05/24 13:39:01.097
  E1005 13:39:01.859034      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:02.859170      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 10/05/24 13:39:03.113
  E1005 13:39:03.859393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:04.860171      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:05.860254      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:06.860412      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:07.860616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:39:08.133053 19 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 10/05/24 13:39:08.133
  I1005 13:39:08.148804 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-223" for this suite. @ 10/05/24 13:39:08.153
• [9.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 10/05/24 13:39:08.162
  I1005 13:39:08.162290 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 13:39:08.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:39:08.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:39:08.182
  STEP: Setting up server cert @ 10/05/24 13:39:08.205
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 13:39:08.352
  STEP: Deploying the webhook pod @ 10/05/24 13:39:08.363
  STEP: Wait for the deployment to be ready @ 10/05/24 13:39:08.378
  I1005 13:39:08.387199 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1005 13:39:08.861469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:09.861791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/05/24 13:39:10.4
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 13:39:10.414
  E1005 13:39:10.861797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:39:11.414575 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/05/24 13:39:11.502
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/05/24 13:39:11.533
  STEP: Deleting the collection of validation webhooks @ 10/05/24 13:39:11.561
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/05/24 13:39:11.632
  I1005 13:39:11.692861 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3741" for this suite. @ 10/05/24 13:39:11.696
  STEP: Destroying namespace "webhook-markers-3847" for this suite. @ 10/05/24 13:39:11.706
• [3.552 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 10/05/24 13:39:11.714
  I1005 13:39:11.714014 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename resourcequota @ 10/05/24 13:39:11.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:39:11.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:39:11.734
  STEP: Counting existing ResourceQuota @ 10/05/24 13:39:11.735
  E1005 13:39:11.862198      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:12.862620      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:13.863061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:14.863561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:15.864268      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/05/24 13:39:16.74
  STEP: Ensuring resource quota status is calculated @ 10/05/24 13:39:16.747
  E1005 13:39:16.864727      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:17.865099      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 10/05/24 13:39:18.753
  STEP: Creating a NodePort Service @ 10/05/24 13:39:18.771
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 10/05/24 13:39:18.798
  STEP: Ensuring resource quota status captures service creation @ 10/05/24 13:39:18.826
  E1005 13:39:18.865607      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:19.865732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 10/05/24 13:39:20.832
  E1005 13:39:20.865868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status released usage @ 10/05/24 13:39:20.878
  E1005 13:39:21.866618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:22.866726      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:39:22.884749 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5559" for this suite. @ 10/05/24 13:39:22.89
• [11.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 10/05/24 13:39:22.9
  I1005 13:39:22.900464 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 13:39:22.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:39:22.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:39:22.924
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 13:39:22.926
  E1005 13:39:23.867577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:24.867673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:25.867772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:26.868020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:39:26.957
  I1005 13:39:26.962061 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downwardapi-volume-2569125d-8150-4781-8b83-24d6e40cbec4 container client-container: <nil>
  STEP: delete the pod @ 10/05/24 13:39:26.97
  I1005 13:39:26.992461 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2100" for this suite. @ 10/05/24 13:39:26.995
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 10/05/24 13:39:27.004
  I1005 13:39:27.004233 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename secrets @ 10/05/24 13:39:27.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:39:27.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:39:27.026
  STEP: creating secret secrets-3696/secret-test-be163883-fe32-4ae1-b73f-5553ab643f06 @ 10/05/24 13:39:27.028
  STEP: Creating a pod to test consume secrets @ 10/05/24 13:39:27.033
  E1005 13:39:27.868689      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:28.869482      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:39:29.053
  I1005 13:39:29.057782 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod pod-configmaps-c985e5a1-35d0-4152-9c59-12845be34e5f container env-test: <nil>
  STEP: delete the pod @ 10/05/24 13:39:29.064
  I1005 13:39:29.086057 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3696" for this suite. @ 10/05/24 13:39:29.09
• [2.095 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 10/05/24 13:39:29.099
  I1005 13:39:29.099313 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename sched-preemption @ 10/05/24 13:39:29.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:39:29.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:39:29.116
  I1005 13:39:29.131305 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1005 13:39:29.869563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:30.869668      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:31.870428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:32.871466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:33.871584      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:34.871672      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:35.871776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:36.872015      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:37.873062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:38.873194      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:39.874170      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:40.874436      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:41.874719      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:42.874840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:43.875881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:44.876703      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:45.877666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:46.878429      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:47.878537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:48.879421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:49.880446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:50.880578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:51.880725      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:52.880843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:53.881000      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:54.881154      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:55.881293      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:56.881403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:57.882278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:58.882462      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:39:59.883427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:00.883581      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:01.883740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:02.883977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:03.884354      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:04.884472      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:05.884612      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:06.884854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:07.885914      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:08.886061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:09.886751      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:10.886897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:11.887511      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:12.888427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:13.889440      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:14.889627      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:15.890409      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:16.890569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:17.891212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:18.891441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:19.892091      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:20.892384      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:21.893369      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:22.893528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:23.893635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:24.893837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:25.894868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:26.895097      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:27.895709      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:28.895902      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:40:29.138071 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/05/24 13:40:29.142
  I1005 13:40:29.163471 19 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I1005 13:40:29.171511 19 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I1005 13:40:29.191713 19 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I1005 13:40:29.202012 19 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I1005 13:40:29.223688 19 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I1005 13:40:29.230374 19 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/05/24 13:40:29.23
  E1005 13:40:29.896040      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:30.896143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 10/05/24 13:40:31.269
  E1005 13:40:31.897146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:32.897260      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:33.897336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:34.897357      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:40:35.364861 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5085" for this suite. @ 10/05/24 13:40:35.368
• [66.276 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 10/05/24 13:40:35.375
  I1005 13:40:35.375945 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename init-container @ 10/05/24 13:40:35.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:40:35.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:40:35.395
  STEP: creating the pod @ 10/05/24 13:40:35.397
  I1005 13:40:35.397906 19 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E1005 13:40:35.898464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:36.899499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:37.899551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:38.900469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:40:39.275025 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6064" for this suite. @ 10/05/24 13:40:39.281
• [3.913 seconds]
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 10/05/24 13:40:39.289
  I1005 13:40:39.289395 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename configmap @ 10/05/24 13:40:39.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:40:39.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:40:39.31
  STEP: Creating configMap with name configmap-test-upd-6d92a109-d483-4f0d-99e5-c1946c716565 @ 10/05/24 13:40:39.317
  STEP: Creating the pod @ 10/05/24 13:40:39.322
  E1005 13:40:39.901180      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:40.901519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-6d92a109-d483-4f0d-99e5-c1946c716565 @ 10/05/24 13:40:41.357
  STEP: waiting to observe update in volume @ 10/05/24 13:40:41.364
  E1005 13:40:41.901595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:42.902463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:43.902918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:44.903072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:45.903185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:46.904174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:47.904607      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:48.904743      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:49.905270      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:50.905397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:51.906332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:52.906611      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:53.907585      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:54.907691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:55.908428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:56.908552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:57.909264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:58.909383      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:40:59.910324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:00.910550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:01.911360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:02.911512      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:03.911552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:04.911660      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:05.912517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:06.913425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:07.914440      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:08.915444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:09.916012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:10.916711      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:11.917516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:12.917601      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:13.918304      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:14.918388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:15.918510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:16.919510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:17.920451      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:18.921444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:19.922319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:20.922480      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:21.923160      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:22.923285      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:23.924212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:24.924387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:25.924944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:26.925376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:27.926204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:28.926440      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:29.927442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:30.927508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:31.928077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:32.928819      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:33.929775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:34.929999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:35.930761      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:36.930817      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:37.931493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:38.931617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:39.932261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:40.932397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:41.932500      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:42.932619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:43.932684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:44.932798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:45.933368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:46.933384      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:47.934362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:48.934574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:49.934769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:50.934853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:51.935261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:52.935399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:53.936258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:54.936402      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:55.937366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:56.937460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:41:57.763319 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-57" for this suite. @ 10/05/24 13:41:57.767
• [78.486 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 10/05/24 13:41:57.776
  I1005 13:41:57.776120 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename deployment @ 10/05/24 13:41:57.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:41:57.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:41:57.796
  I1005 13:41:57.808110 19 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E1005 13:41:57.938435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:58.938545      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:41:59.939421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:00.939660      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:01.939872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:42:02.813411 19 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/05/24 13:42:02.813
  I1005 13:42:02.813488 19 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E1005 13:42:02.940606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:03.940856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:42:04.818729 19 deployment.go:921] Creating deployment "test-rollover-deployment"
  I1005 13:42:04.829274 19 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E1005 13:42:04.941832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:05.941956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:42:06.839334 19 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I1005 13:42:06.847905 19 deployment.go:943] Ensure that both replica sets have 1 created replica
  I1005 13:42:06.855145 19 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1005 13:42:06.866816 19 deployment.go:313] Updating deployment test-rollover-deployment
  I1005 13:42:06.866859 19 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E1005 13:42:06.942583      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:07.942818      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:42:08.875692 19 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1005 13:42:08.883467 19 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I1005 13:42:08.891729 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1005 13:42:08.891783 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 42, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 42, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 42, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 42, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:42:08.943833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:09.944046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:42:10.901035 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1005 13:42:10.901100 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 42, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 42, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 42, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 42, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:42:10.944145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:11.944320      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:42:12.903455 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1005 13:42:12.903509 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 42, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 42, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 42, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 42, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:42:12.944579      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:13.944809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:42:14.901393 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1005 13:42:14.901453 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 42, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 42, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 42, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 42, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:42:14.945467      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:15.945697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:42:16.900796 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1005 13:42:16.900861 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 42, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 42, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 42, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 42, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:42:16.945817      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:17.945927      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:42:18.901262 19 deployment.go:94] 
  I1005 13:42:18.901311 19 deployment.go:974] Ensure that both old replica sets have no replicas
  I1005 13:42:18.913457 19 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4111",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78d14f32-cd5b-470a-8678-cf3742682d74",
      ResourceVersion: (string) (len=5) "34281",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863732524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1005 13:42:18.918573 19 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4111",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12f567bf-6a9f-4314-8b43-430bfc78c366",
      ResourceVersion: (string) (len=5) "34271",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863732526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "78d14f32-cd5b-470a-8678-cf3742682d74",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 38 64 31 34 66  33 32 2d 63 64 35 62 2d  |\"78d14f32-cd5b-|
              00000120  34 37 30 61 2d 38 36 37  38 2d 63 66 33 37 34 32  |470a-8678-cf3742|
              00000130  36 38 32 64 37 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |682d74\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1005 13:42:18.919160 19 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1005 13:42:18.919398 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4111",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11c76ab3-1e37-4113-8dca-435f018a75e5",
      ResourceVersion: (string) (len=5) "34280",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863732517,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "78d14f32-cd5b-470a-8678-cf3742682d74",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  37 38 64 31 34 66 33 32  2d 63 64 35 62 2d 34 37  |78d14f32-cd5b-47|
              000000c0  30 61 2d 38 36 37 38 2d  63 66 33 37 34 32 36 38  |0a-8678-cf374268|
              000000d0  32 64 37 34 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |2d74\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1005 13:42:18.920135 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4111",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9006554c-c441-4ad1-b2d2-c2ead779adeb",
      ResourceVersion: (string) (len=5) "34237",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863732524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "78d14f32-cd5b-470a-8678-cf3742682d74",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 38 64 31 34 66  33 32 2d 63 64 35 62 2d  |\"78d14f32-cd5b-|
              00000120  34 37 30 61 2d 38 36 37  38 2d 63 66 33 37 34 32  |470a-8678-cf3742|
              00000130  36 38 32 64 37 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |682d74\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1005 13:42:18.925369 19 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-shs5l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-shs5l",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-4111",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e9f8200-9838-4a72-989e-d6fd97d17486",
      ResourceVersion: (string) (len=5) "34249",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863732526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "12f567bf-6a9f-4314-8b43-430bfc78c366",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 32  66 35 36 37 62 66 2d 36  |d\":\"12f567bf-6|
              00000090  61 39 66 2d 34 33 31 34  2d 38 62 34 33 2d 34 33  |a9f-4314-8b43-43|
              000000a0  30 62 66 63 37 38 63 33  36 36 5c 22 7d 22 3a 7b  |0bfc78c366\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 39  2e 31 30 36 5c 22 7d 22  |2.168.59.106\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6xnrt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6xnrt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863732526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.162",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.162"
        }
      },
      PodIP: (string) (len=14) "192.168.59.106",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.59.106"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863732526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863732527,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://9ca1d37ba051cb384cc59537702a3dcef09bb9c0efd5b8dbe307acb1c3b7f895",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6xnrt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:42:18.926430 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4111" for this suite. @ 10/05/24 13:42:18.93
• [21.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 10/05/24 13:42:18.939
  I1005 13:42:18.939026 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename watch @ 10/05/24 13:42:18.939
  E1005 13:42:18.946834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:42:18.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:42:18.959
  STEP: getting a starting resourceVersion @ 10/05/24 13:42:18.961
  STEP: starting a background goroutine to produce watch events @ 10/05/24 13:42:18.967
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 10/05/24 13:42:18.967
  E1005 13:42:19.946860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:20.946974      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:42:21.748508 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2679" for this suite. @ 10/05/24 13:42:21.795
• [2.912 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 10/05/24 13:42:21.851
  I1005 13:42:21.851248 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/05/24 13:42:21.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:42:21.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:42:21.873
  I1005 13:42:21.874765 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:42:21.947544      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:22.947800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:23.948433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:24.949328      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:42:24.971949 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6205" for this suite. @ 10/05/24 13:42:24.976
• [3.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 10/05/24 13:42:24.987
  I1005 13:42:24.987069 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename sysctl @ 10/05/24 13:42:24.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:42:25.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:42:25.008
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 10/05/24 13:42:25.01
  STEP: Watching for error events or started pod @ 10/05/24 13:42:25.019
  E1005 13:42:25.949742      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:26.950443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 10/05/24 13:42:27.024
  E1005 13:42:27.950561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:28.950666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 10/05/24 13:42:29.038
  STEP: Getting logs from the pod @ 10/05/24 13:42:29.038
  STEP: Checking that the sysctl is actually updated @ 10/05/24 13:42:29.046
  I1005 13:42:29.047101 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6264" for this suite. @ 10/05/24 13:42:29.051
• [4.073 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 10/05/24 13:42:29.06
  I1005 13:42:29.060075 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 13:42:29.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:42:29.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:42:29.081
  STEP: Starting the proxy @ 10/05/24 13:42:29.084
  I1005 13:42:29.084341 19 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-814 proxy --unix-socket=/tmp/kubectl-proxy-unix1162501462/test'
  STEP: retrieving proxy /api/ output @ 10/05/24 13:42:29.118
  I1005 13:42:29.118887 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-814" for this suite. @ 10/05/24 13:42:29.124
• [0.072 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 10/05/24 13:42:29.132
  I1005 13:42:29.132418 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pod-network-test @ 10/05/24 13:42:29.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:42:29.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:42:29.153
  STEP: Performing setup for networking test in namespace pod-network-test-8179 @ 10/05/24 13:42:29.155
  STEP: creating a selector @ 10/05/24 13:42:29.155
  STEP: Creating the service pods in kubernetes @ 10/05/24 13:42:29.155
  I1005 13:42:29.155562 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1005 13:42:29.950817      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:30.951584      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:31.952076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:32.952492      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:33.953419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:34.954423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:35.954826      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:36.954918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:37.955418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:38.955509      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:39.955613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:40.956428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/05/24 13:42:41.254
  E1005 13:42:41.956574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:42.956755      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:42:43.289053 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1005 13:42:43.289091 19 utils.go:496] Going to poll 192.168.89.111 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1005 13:42:43.293064 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.89.111 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8179 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:42:43.293088 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:42:43.293522 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:42:43.293562 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8179/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.89.111+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1005 13:42:43.956810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:42:44.335202 19 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1005 13:42:44.335286 19 utils.go:496] Going to poll 192.168.59.98 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1005 13:42:44.339696 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.59.98 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8179 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:42:44.339718 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:42:44.340152 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:42:44.340191 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8179/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.59.98+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1005 13:42:44.956906      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:42:45.382268 19 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1005 13:42:45.382304 19 utils.go:496] Going to poll 192.168.195.177 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1005 13:42:45.388282 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.195.177 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8179 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:42:45.388307 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:42:45.388713 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:42:45.388753 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8179/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.195.177+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1005 13:42:45.956956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:42:46.429032 19 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1005 13:42:46.429279 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8179" for this suite. @ 10/05/24 13:42:46.434
• [17.312 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 10/05/24 13:42:46.444
  I1005 13:42:46.444777 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename resourcequota @ 10/05/24 13:42:46.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:42:46.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:42:46.461
  STEP: Creating a ResourceQuota with terminating scope @ 10/05/24 13:42:46.463
  STEP: Ensuring ResourceQuota status is calculated @ 10/05/24 13:42:46.469
  E1005 13:42:46.957096      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:47.957195      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 10/05/24 13:42:48.474
  STEP: Ensuring ResourceQuota status is calculated @ 10/05/24 13:42:48.479
  E1005 13:42:48.957371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:49.957480      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 10/05/24 13:42:50.484
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 10/05/24 13:42:50.501
  E1005 13:42:50.958435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:51.959111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 10/05/24 13:42:52.506
  E1005 13:42:52.960073      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:53.960300      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/05/24 13:42:54.511
  STEP: Ensuring resource quota status released the pod usage @ 10/05/24 13:42:54.526
  E1005 13:42:54.961068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:55.961248      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 10/05/24 13:42:56.531
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 10/05/24 13:42:56.542
  E1005 13:42:56.961333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:57.961548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 10/05/24 13:42:58.547
  E1005 13:42:58.962364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:42:59.962483      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/05/24 13:43:00.553
  STEP: Ensuring resource quota status released the pod usage @ 10/05/24 13:43:00.573
  E1005 13:43:00.963268      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:01.963667      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:43:02.579397 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9340" for this suite. @ 10/05/24 13:43:02.583
• [16.147 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 10/05/24 13:43:02.591
  I1005 13:43:02.591933 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename runtimeclass @ 10/05/24 13:43:02.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:43:02.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:43:02.612
  E1005 13:43:02.963814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:03.964027      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:43:04.648314 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-639" for this suite. @ 10/05/24 13:43:04.653
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 10/05/24 13:43:04.661
  I1005 13:43:04.661372 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:43:04.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:43:04.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:43:04.682
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 13:43:04.683
  E1005 13:43:04.965042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:05.965147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:43:06.706
  I1005 13:43:06.711503 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downwardapi-volume-a0dc760a-e858-456a-8f5b-ea2257015f09 container client-container: <nil>
  STEP: delete the pod @ 10/05/24 13:43:06.72
  I1005 13:43:06.738086 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6975" for this suite. @ 10/05/24 13:43:06.742
• [2.089 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 10/05/24 13:43:06.75
  I1005 13:43:06.750109 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename secrets @ 10/05/24 13:43:06.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:43:06.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:43:06.769
  STEP: Creating secret with name secret-test-db0e3ea4-f367-4b80-b2b7-9b07ba752569 @ 10/05/24 13:43:06.771
  STEP: Creating a pod to test consume secrets @ 10/05/24 13:43:06.777
  E1005 13:43:06.965278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:07.965391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:08.966010      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:09.966254      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:43:10.804
  I1005 13:43:10.808934 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod pod-secrets-aa590524-22df-41a2-8954-8cf444c010a4 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/05/24 13:43:10.821
  I1005 13:43:10.846198 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5219" for this suite. @ 10/05/24 13:43:10.851
• [4.110 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 10/05/24 13:43:10.859
  I1005 13:43:10.859907 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:43:10.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:43:10.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:43:10.883
  STEP: Creating configMap with name configmap-projected-all-test-volume-320ba216-6595-43c8-b3fa-4ec48dd5e459 @ 10/05/24 13:43:10.885
  STEP: Creating secret with name secret-projected-all-test-volume-01fedd9f-303b-46a2-8ed6-faf2d472a0a7 @ 10/05/24 13:43:10.891
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 10/05/24 13:43:10.896
  E1005 13:43:10.966634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:11.967160      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:12.967456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:13.968455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:43:14.927
  I1005 13:43:14.930760 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod projected-volume-76542804-7e66-431a-9652-0e7e0d184cd9 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 10/05/24 13:43:14.938
  I1005 13:43:14.955544 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1266" for this suite. @ 10/05/24 13:43:14.96
• [4.107 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 10/05/24 13:43:14.967
  I1005 13:43:14.967575 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 13:43:14.968
  E1005 13:43:14.968400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:43:14.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:43:14.987
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 13:43:14.99
  E1005 13:43:15.968858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:16.968948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:17.969441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:18.970414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:43:19.016
  I1005 13:43:19.020501 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downwardapi-volume-bca9d9db-15dc-42e9-9604-d99d87ef549b container client-container: <nil>
  STEP: delete the pod @ 10/05/24 13:43:19.029
  I1005 13:43:19.050476 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6821" for this suite. @ 10/05/24 13:43:19.054
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 10/05/24 13:43:19.062
  I1005 13:43:19.062139 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename replication-controller @ 10/05/24 13:43:19.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:43:19.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:43:19.083
  STEP: Creating replication controller my-hostname-basic-fdebfcd0-cc3c-4538-ab2c-8d04896d6e78 @ 10/05/24 13:43:19.085
  I1005 13:43:19.098671 19 resource.go:87] Pod name my-hostname-basic-fdebfcd0-cc3c-4538-ab2c-8d04896d6e78: Found 0 pods out of 1
  E1005 13:43:19.970573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:20.970793      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:21.970881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:22.971531      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:23.971735      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:43:24.102876 19 resource.go:87] Pod name my-hostname-basic-fdebfcd0-cc3c-4538-ab2c-8d04896d6e78: Found 1 pods out of 1
  I1005 13:43:24.102921 19 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-fdebfcd0-cc3c-4538-ab2c-8d04896d6e78" are running
  I1005 13:43:24.107577 19 rc.go:523] Pod "my-hostname-basic-fdebfcd0-cc3c-4538-ab2c-8d04896d6e78-78964" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-05 13:43:20 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-05 13:43:19 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-05 13:43:20 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-05 13:43:20 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-05 13:43:19 +0000 UTC Reason: Message:}])
  I1005 13:43:24.107620 19 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/05/24 13:43:24.107
  I1005 13:43:24.121400 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3616" for this suite. @ 10/05/24 13:43:24.126
• [5.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 10/05/24 13:43:24.136
  I1005 13:43:24.137004 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 13:43:24.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:43:24.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:43:24.16
  STEP: creating Agnhost RC @ 10/05/24 13:43:24.162
  I1005 13:43:24.163014 19 kubectl.go:1537] namespace kubectl-1920
  I1005 13:43:24.163064 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1920 create -f -'
  I1005 13:43:24.293137 19 builder.go:146] stderr: ""
  I1005 13:43:24.293233 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/05/24 13:43:24.293
  E1005 13:43:24.972662      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:43:25.299128 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1005 13:43:25.299163 19 framework.go:733] Found 0 / 1
  E1005 13:43:25.972799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:43:26.299441 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1005 13:43:26.299478 19 framework.go:733] Found 1 / 1
  I1005 13:43:26.299493 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1005 13:43:26.304105 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1005 13:43:26.304125 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1005 13:43:26.304132 19 kubectl.go:1544] wait on agnhost-primary startup in kubectl-1920 
  I1005 13:43:26.304179 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1920 logs agnhost-primary-l4wcf agnhost-primary'
  I1005 13:43:26.357801 19 builder.go:146] stderr: ""
  I1005 13:43:26.357846 19 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 10/05/24 13:43:26.357
  I1005 13:43:26.357930 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1920 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1005 13:43:26.428626 19 builder.go:146] stderr: ""
  I1005 13:43:26.428673 19 builder.go:147] stdout: "service/rm2 exposed\n"
  I1005 13:43:26.439165 19 utils.go:1203] Service rm2 in namespace kubectl-1920 found.
  E1005 13:43:26.973466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:27.973647      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: exposing service @ 10/05/24 13:43:28.449
  I1005 13:43:28.449802 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-1920 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1005 13:43:28.551289 19 builder.go:146] stderr: ""
  I1005 13:43:28.551406 19 builder.go:147] stdout: "service/rm3 exposed\n"
  I1005 13:43:28.559542 19 utils.go:1203] Service rm3 in namespace kubectl-1920 found.
  E1005 13:43:28.974294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:29.974410      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:43:30.568556 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1920" for this suite. @ 10/05/24 13:43:30.572
• [6.443 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 10/05/24 13:43:30.58
  I1005 13:43:30.580543 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubelet-test @ 10/05/24 13:43:30.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:43:30.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:43:30.603
  E1005 13:43:30.974772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:31.975306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:43:32.638753 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3966" for this suite. @ 10/05/24 13:43:32.643
• [2.071 seconds]
------------------------------
S
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 10/05/24 13:43:32.651
  I1005 13:43:32.651830 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename hostport @ 10/05/24 13:43:32.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:43:32.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:43:32.67
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 10/05/24 13:43:32.676
  E1005 13:43:32.975417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:33.975652      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.20.60 on the node which pod1 resides and expect scheduled @ 10/05/24 13:43:34.694
  E1005 13:43:34.976517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:35.976679      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:36.977326      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:37.977369      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:38.977849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:39.977932      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:40.978832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:41.978946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:42.979747      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:43.979970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:44.980679      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:45.980843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.20.60 but use UDP protocol on the node which pod2 resides @ 10/05/24 13:43:46.738
  E1005 13:43:46.981640      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:47.981872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:48.982436      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:49.982603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 10/05/24 13:43:50.776
  I1005 13:43:50.776163 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.20.60 http://127.0.0.1:54323/hostname] Namespace:hostport-9753 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:43:50.776180 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:43:50.776714 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:43:50.776756 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9753/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.20.60+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.20.60, port: 54323 @ 10/05/24 13:43:50.815
  I1005 13:43:50.815702 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.20.60:54323/hostname] Namespace:hostport-9753 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:43:50.815721 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:43:50.816124 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:43:50.816162 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9753/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.20.60%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.20.60, port: 54323 UDP @ 10/05/24 13:43:50.852
  I1005 13:43:50.852488 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.20.60 54323] Namespace:hostport-9753 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:43:50.852506 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:43:50.853093 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:43:50.853251 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9753/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.20.60+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1005 13:43:50.982645      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:51.982936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:52.983273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:53.983487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:54.983614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:43:55.896966 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9753" for this suite. @ 10/05/24 13:43:55.902
• [23.261 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 10/05/24 13:43:55.912
  I1005 13:43:55.912603 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:43:55.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:43:55.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:43:55.931
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 13:43:55.934
  E1005 13:43:55.984601      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:56.984795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:57.985163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:43:58.985308      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:43:59.966
  I1005 13:43:59.975208 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downwardapi-volume-1679b442-c718-4645-a1e1-584124c30808 container client-container: <nil>
  STEP: delete the pod @ 10/05/24 13:43:59.984
  E1005 13:43:59.985913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:44:00.005824 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9720" for this suite. @ 10/05/24 13:44:00.009
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 10/05/24 13:44:00.018
  I1005 13:44:00.018852 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir @ 10/05/24 13:44:00.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:00.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:00.039
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/05/24 13:44:00.04
  E1005 13:44:00.987072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:01.987394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:02.988389      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:03.988477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:44:04.069
  I1005 13:44:04.074213 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-025ebe7f-5dfd-4447-8a4a-1df27eb3573a container test-container: <nil>
  STEP: delete the pod @ 10/05/24 13:44:04.082
  I1005 13:44:04.101626 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7538" for this suite. @ 10/05/24 13:44:04.105
• [4.096 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 10/05/24 13:44:04.114
  I1005 13:44:04.114850 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/05/24 13:44:04.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:04.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:04.135
  I1005 13:44:04.139750 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:44:04.988577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/05/24 13:44:05.367
  I1005 13:44:05.367405 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-2053 --namespace=crd-publish-openapi-2053 create -f -'
  E1005 13:44:05.989490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:06.989650      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:44:07.447267 19 builder.go:146] stderr: ""
  I1005 13:44:07.447308 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9962-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1005 13:44:07.447361 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-2053 --namespace=crd-publish-openapi-2053 delete e2e-test-crd-publish-openapi-9962-crds test-cr'
  I1005 13:44:07.501856 19 builder.go:146] stderr: ""
  I1005 13:44:07.501899 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9962-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1005 13:44:07.501945 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-2053 --namespace=crd-publish-openapi-2053 apply -f -'
  I1005 13:44:07.560462 19 builder.go:146] stderr: ""
  I1005 13:44:07.560502 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9962-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1005 13:44:07.560570 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-2053 --namespace=crd-publish-openapi-2053 delete e2e-test-crd-publish-openapi-9962-crds test-cr'
  I1005 13:44:07.615887 19 builder.go:146] stderr: ""
  I1005 13:44:07.615927 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9962-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/05/24 13:44:07.615
  I1005 13:44:07.616006 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-2053 explain e2e-test-crd-publish-openapi-9962-crds'
  I1005 13:44:07.661177 19 builder.go:146] stderr: ""
  I1005 13:44:07.661245 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9962-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1005 13:44:07.992374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:44:08.925083 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2053" for this suite. @ 10/05/24 13:44:08.932
• [4.827 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 10/05/24 13:44:08.942
  I1005 13:44:08.942286 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-runtime @ 10/05/24 13:44:08.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:08.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:08.963
  STEP: create the container @ 10/05/24 13:44:08.966
  W1005 13:44:08.974209      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/05/24 13:44:08.974
  E1005 13:44:08.992618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:09.992726      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:10.992801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:11.992945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/05/24 13:44:11.996
  STEP: the container should be terminated @ 10/05/24 13:44:12.001
  STEP: the termination message should be set @ 10/05/24 13:44:12.001
  I1005 13:44:12.001468 19 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 10/05/24 13:44:12.001
  I1005 13:44:12.025070 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6335" for this suite. @ 10/05/24 13:44:12.029
• [3.095 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 10/05/24 13:44:12.037
  I1005 13:44:12.037801 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pods @ 10/05/24 13:44:12.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:12.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:12.059
  STEP: creating the pod @ 10/05/24 13:44:12.061
  STEP: submitting the pod to kubernetes @ 10/05/24 13:44:12.061
  E1005 13:44:12.993061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:13.993193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 10/05/24 13:44:14.085
  STEP: updating the pod @ 10/05/24 13:44:14.089
  I1005 13:44:14.602880 19 pod_client.go:173] Successfully updated pod "pod-update-e88ad222-268d-4366-96e2-4f5c47771a1f"
  STEP: verifying the updated pod is in kubernetes @ 10/05/24 13:44:14.607
  I1005 13:44:14.611395 19 pods.go:391] Pod update OK
  I1005 13:44:14.611506 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4494" for this suite. @ 10/05/24 13:44:14.615
• [2.588 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 10/05/24 13:44:14.626
  I1005 13:44:14.626203 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename runtimeclass @ 10/05/24 13:44:14.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:14.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:14.648
  STEP: Deleting RuntimeClass runtimeclass-1610-delete-me @ 10/05/24 13:44:14.654
  STEP: Waiting for the RuntimeClass to disappear @ 10/05/24 13:44:14.662
  I1005 13:44:14.672445 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1610" for this suite. @ 10/05/24 13:44:14.676
• [0.058 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 10/05/24 13:44:14.683
  I1005 13:44:14.683917 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 13:44:14.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:14.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:14.702
  STEP: Setting up server cert @ 10/05/24 13:44:14.731
  E1005 13:44:14.995178      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 13:44:15.07
  STEP: Deploying the webhook pod @ 10/05/24 13:44:15.081
  STEP: Wait for the deployment to be ready @ 10/05/24 13:44:15.094
  I1005 13:44:15.105048 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1005 13:44:15.995398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:16.995521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/05/24 13:44:17.116
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 13:44:17.128
  E1005 13:44:17.995618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:44:18.129955 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 10/05/24 13:44:18.138
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/05/24 13:44:18.138
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 10/05/24 13:44:18.154
  E1005 13:44:18.995695      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 10/05/24 13:44:19.165
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/05/24 13:44:19.165
  E1005 13:44:19.995782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 10/05/24 13:44:20.202
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/05/24 13:44:20.202
  E1005 13:44:20.996776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:21.997126      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:22.997195      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:23.997387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:24.998413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 10/05/24 13:44:25.241
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/05/24 13:44:25.241
  E1005 13:44:25.998536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:26.998626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:27.999426      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:28.999531      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:29.999749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:44:30.341608 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3591" for this suite. @ 10/05/24 13:44:30.347
  STEP: Destroying namespace "webhook-markers-6707" for this suite. @ 10/05/24 13:44:30.353
• [15.678 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 10/05/24 13:44:30.361
  I1005 13:44:30.361604 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename runtimeclass @ 10/05/24 13:44:30.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:30.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:30.381
  STEP: getting /apis @ 10/05/24 13:44:30.383
  STEP: getting /apis/node.k8s.io @ 10/05/24 13:44:30.388
  STEP: getting /apis/node.k8s.io/v1 @ 10/05/24 13:44:30.389
  STEP: creating @ 10/05/24 13:44:30.39
  STEP: watching @ 10/05/24 13:44:30.41
  I1005 13:44:30.410145 19 runtimeclass.go:275] starting watch
  STEP: getting @ 10/05/24 13:44:30.415
  STEP: listing @ 10/05/24 13:44:30.418
  STEP: patching @ 10/05/24 13:44:30.422
  STEP: updating @ 10/05/24 13:44:30.428
  I1005 13:44:30.433794 19 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 10/05/24 13:44:30.433
  STEP: deleting a collection @ 10/05/24 13:44:30.452
  I1005 13:44:30.473668 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8001" for this suite. @ 10/05/24 13:44:30.477
• [0.125 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 10/05/24 13:44:30.486
  I1005 13:44:30.487001 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename apf @ 10/05/24 13:44:30.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:30.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:30.507
  STEP: getting /apis @ 10/05/24 13:44:30.509
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 10/05/24 13:44:30.511
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 10/05/24 13:44:30.512
  STEP: creating @ 10/05/24 13:44:30.513
  STEP: getting @ 10/05/24 13:44:30.532
  STEP: listing @ 10/05/24 13:44:30.538
  STEP: watching @ 10/05/24 13:44:30.543
  I1005 13:44:30.543804 19 flowcontrol.go:394] starting watch
  STEP: patching @ 10/05/24 13:44:30.544
  STEP: updating @ 10/05/24 13:44:30.551
  I1005 13:44:30.560868 19 flowcontrol.go:422] waiting for watch events with expected annotations
  I1005 13:44:30.560902 19 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 10/05/24 13:44:30.56
  STEP: patching /status @ 10/05/24 13:44:30.564
  STEP: updating /status @ 10/05/24 13:44:30.571
  STEP: deleting @ 10/05/24 13:44:30.582
  STEP: deleting a collection @ 10/05/24 13:44:30.597
  I1005 13:44:30.625813 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3165" for this suite. @ 10/05/24 13:44:30.63
• [0.151 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 10/05/24 13:44:30.638
  I1005 13:44:30.638375 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 13:44:30.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:30.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:30.657
  I1005 13:44:30.659336 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-3295 create -f -'
  I1005 13:44:30.751314 19 builder.go:146] stderr: ""
  I1005 13:44:30.751363 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1005 13:44:30.751489 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-3295 create -f -'
  I1005 13:44:30.842510 19 builder.go:146] stderr: ""
  I1005 13:44:30.842549 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/05/24 13:44:30.842
  E1005 13:44:31.000716      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:44:31.847535 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1005 13:44:31.847572 19 framework.go:733] Found 1 / 1
  I1005 13:44:31.847587 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1005 13:44:31.851740 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1005 13:44:31.851761 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1005 13:44:31.851810 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-3295 describe pod agnhost-primary-hk9jl'
  I1005 13:44:31.908236 19 builder.go:146] stderr: ""
  I1005 13:44:31.908305 19 builder.go:147] stdout: "Name:             agnhost-primary-hk9jl\nNamespace:        kubectl-3295\nPriority:         0\nService Account:  default\nNode:             ip-172-31-45-162/172.31.45.162\nStart Time:       Sat, 05 Oct 2024 13:44:30 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.59.81\nIPs:\n  IP:           192.168.59.81\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://87517d75ed8efff5cfc876ca25f7d59dce328042e2c1e7147d1e70b4eff9230c\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 05 Oct 2024 13:44:31 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-vq56f (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-vq56f:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-3295/agnhost-primary-hk9jl to ip-172-31-45-162\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    0s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I1005 13:44:31.908388 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-3295 describe rc agnhost-primary'
  I1005 13:44:31.972498 19 builder.go:146] stderr: ""
  I1005 13:44:31.972547 19 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3295\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-hk9jl\n"
  I1005 13:44:31.972612 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-3295 describe service agnhost-primary'
  E1005 13:44:32.001025      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:44:32.033619 19 builder.go:146] stderr: ""
  I1005 13:44:32.033678 19 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-3295\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.243\nIPs:                      10.152.183.243\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.59.81:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I1005 13:44:32.038683 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-3295 describe node ip-172-31-20-60'
  I1005 13:44:32.113939 19 builder.go:146] stderr: ""
  I1005 13:44:32.114029 19 builder.go:147] stdout: "Name:               ip-172-31-20-60\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-20-60\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 05 Oct 2024 12:19:18 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-20-60\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 05 Oct 2024 13:44:24 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 05 Oct 2024 12:19:58 +0000   Sat, 05 Oct 2024 12:19:58 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 05 Oct 2024 13:43:51 +0000   Sat, 05 Oct 2024 12:19:18 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 05 Oct 2024 13:43:51 +0000   Sat, 05 Oct 2024 12:19:18 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 05 Oct 2024 13:43:51 +0000   Sat, 05 Oct 2024 12:19:18 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 05 Oct 2024 13:43:51 +0000   Sat, 05 Oct 2024 12:19:40 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.20.60\n  Hostname:    ip-172-31-20-60\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      16069568Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7967652Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    2\n  ephemeral-storage:      14809713845\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7865252Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                      ec28b584ad5c0f6628b14cb138573a75\n  System UUID:                     ec28b584-ad5c-0f66-28b1-4cb138573a75\n  Boot ID:                         e3e2b02e-b076-45c0-b528-228e21292d05\n  Kernel Version:                  6.8.0-1015-aws\n  OS Image:                        Ubuntu 22.04.5 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.31.1\n  Kube-Proxy Version:              v1.31.1\nNon-terminated Pods:               (4 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-fttd5           0 (0%)        0 (0%)      0 (0%)           0 (0%)         84m\n  kube-system                      calico-node-p547s                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         85m\n  sonobuoy                         sonobuoy-e2e-job-16f17f2aa4c640ea                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         80m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-b363c5b450ba45fb-c9n82    0 (0%)        0 (0%)      0 (0%)           0 (0%)         80m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    250m (12%)  0 (0%)\n  memory                 0 (0%)      0 (0%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  scheduling.k8s.io/foo  0           0\nEvents:                  <none>\n"
  I1005 13:44:32.114095 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-3295 describe namespace kubectl-3295'
  I1005 13:44:32.170589 19 builder.go:146] stderr: ""
  I1005 13:44:32.170647 19 builder.go:147] stdout: "Name:         kubectl-3295\nLabels:       e2e-framework=kubectl\n              e2e-run=49728754-3de7-461b-a75e-2caa8ae866e3\n              kubernetes.io/metadata.name=kubectl-3295\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1005 13:44:32.170766 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3295" for this suite. @ 10/05/24 13:44:32.174
• [1.544 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 10/05/24 13:44:32.182
  I1005 13:44:32.182780 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename svcaccounts @ 10/05/24 13:44:32.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:32.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:32.202
  I1005 13:44:32.209697 19 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-4070"
  I1005 13:44:32.216757 19 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-4070"
  STEP: waiting for a new root ca configmap created @ 10/05/24 13:44:32.717
  I1005 13:44:32.723160 19 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-4070"
  I1005 13:44:32.730879 19 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-4070"
  E1005 13:44:33.001510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 10/05/24 13:44:33.231
  I1005 13:44:33.236593 19 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-4070"
  I1005 13:44:33.236723 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4070" for this suite. @ 10/05/24 13:44:33.241
• [1.067 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 10/05/24 13:44:33.249
  I1005 13:44:33.249839 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 13:44:33.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:33.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:33.269
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/05/24 13:44:33.271
  I1005 13:44:33.271481 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-7536 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1005 13:44:33.324395 19 builder.go:146] stderr: ""
  I1005 13:44:33.324437 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 10/05/24 13:44:33.324
  I1005 13:44:33.324528 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-7536 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1005 13:44:33.376605 19 builder.go:146] stderr: ""
  I1005 13:44:33.376646 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/05/24 13:44:33.376
  I1005 13:44:33.381661 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-7536 delete pods e2e-test-httpd-pod'
  E1005 13:44:34.001641      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:35.001881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:44:35.289527 19 builder.go:146] stderr: ""
  I1005 13:44:35.289583 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1005 13:44:35.289785 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7536" for this suite. @ 10/05/24 13:44:35.293
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 10/05/24 13:44:35.301
  I1005 13:44:35.301340 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename apf @ 10/05/24 13:44:35.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:35.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:35.327
  STEP: getting /apis @ 10/05/24 13:44:35.33
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 10/05/24 13:44:35.332
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 10/05/24 13:44:35.332
  STEP: creating @ 10/05/24 13:44:35.333
  STEP: getting @ 10/05/24 13:44:35.35
  STEP: listing @ 10/05/24 13:44:35.355
  STEP: watching @ 10/05/24 13:44:35.358
  I1005 13:44:35.358639 19 flowcontrol.go:620] starting watch
  STEP: patching @ 10/05/24 13:44:35.359
  STEP: updating @ 10/05/24 13:44:35.366
  I1005 13:44:35.376112 19 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 10/05/24 13:44:35.376
  STEP: patching /status @ 10/05/24 13:44:35.382
  STEP: updating /status @ 10/05/24 13:44:35.39
  STEP: deleting @ 10/05/24 13:44:35.4
  STEP: deleting a collection @ 10/05/24 13:44:35.413
  I1005 13:44:35.439863 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5214" for this suite. @ 10/05/24 13:44:35.443
• [0.149 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 10/05/24 13:44:35.45
  I1005 13:44:35.450722 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/05/24 13:44:35.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:35.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:35.473
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 10/05/24 13:44:35.474
  I1005 13:44:35.474957 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:44:36.002805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:44:36.679489 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:44:37.002957      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:38.003458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:39.003958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:40.004121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:41.004269      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:44:41.745396 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3074" for this suite. @ 10/05/24 13:44:41.752
• [6.312 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 10/05/24 13:44:41.762
  I1005 13:44:41.762576 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename crd-webhook @ 10/05/24 13:44:41.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:41.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:41.781
  STEP: Setting up server cert @ 10/05/24 13:44:41.783
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/05/24 13:44:41.912
  STEP: Deploying the custom resource conversion webhook pod @ 10/05/24 13:44:41.918
  STEP: Wait for the deployment to be ready @ 10/05/24 13:44:41.936
  I1005 13:44:41.944784 19 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1005 13:44:42.004958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:43.005191      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/05/24 13:44:43.958
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 13:44:43.969
  E1005 13:44:44.005296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:44:44.969593 19 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1005 13:44:44.977963 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:44:45.005430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:46.006282      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:47.006966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 10/05/24 13:44:47.536
  STEP: Create a v2 custom resource @ 10/05/24 13:44:47.553
  STEP: List CRs in v1 @ 10/05/24 13:44:47.559
  STEP: List CRs in v2 @ 10/05/24 13:44:47.578
  E1005 13:44:48.007388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:44:48.146787 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9387" for this suite. @ 10/05/24 13:44:48.15
• [6.399 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 10/05/24 13:44:48.161
  I1005 13:44:48.161567 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:44:48.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:48.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:48.178
  STEP: Creating configMap with name projected-configmap-test-volume-map-e053bf2f-d0d2-45dd-ace8-9d7b5a3c3642 @ 10/05/24 13:44:48.181
  STEP: Creating a pod to test consume configMaps @ 10/05/24 13:44:48.187
  E1005 13:44:49.008380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:50.008476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:51.008558      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:52.008672      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:44:52.213
  I1005 13:44:52.217778 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-projected-configmaps-1fe88286-a0b7-4372-ac1a-44ad753a8640 container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 13:44:52.225
  I1005 13:44:52.250865 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3143" for this suite. @ 10/05/24 13:44:52.255
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 10/05/24 13:44:52.264
  I1005 13:44:52.264282 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename endpointslicemirroring @ 10/05/24 13:44:52.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:52.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:52.285
  STEP: mirroring a new custom Endpoint @ 10/05/24 13:44:52.298
  I1005 13:44:52.309258 19 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E1005 13:44:53.009170      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:54.009370      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 10/05/24 13:44:54.315
  I1005 13:44:54.323741 19 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E1005 13:44:55.010485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:56.010644      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 10/05/24 13:44:56.329
  I1005 13:44:56.341254 19 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  E1005 13:44:57.010789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:44:58.011013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:44:58.346007 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8557" for this suite. @ 10/05/24 13:44:58.35
• [6.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 10/05/24 13:44:58.362
  I1005 13:44:58.362960 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir @ 10/05/24 13:44:58.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:44:58.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:44:58.386
  STEP: Creating Pod @ 10/05/24 13:44:58.387
  E1005 13:44:59.011181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:00.011320      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 10/05/24 13:45:00.407
  I1005 13:45:00.407963 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-236 PodName:pod-sharedvolume-931836ca-bd32-44ce-8015-5510d6d92206 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:45:00.407982 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:45:00.408487 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:45:00.408574 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-236/pods/pod-sharedvolume-931836ca-bd32-44ce-8015-5510d6d92206/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I1005 13:45:00.455860 19 exec_util.go:111] Exec stderr: ""
  I1005 13:45:00.456003 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-236" for this suite. @ 10/05/24 13:45:00.461
• [2.107 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 10/05/24 13:45:00.47
  I1005 13:45:00.470402 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 13:45:00.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:45:00.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:45:00.491
  STEP: creating service multiprotocol-test in namespace services-764 @ 10/05/24 13:45:00.493
  STEP: creating pod pod1 in namespace services-764 @ 10/05/24 13:45:00.506
  STEP: Creating pod pod1 in namespace services-764 @ 10/05/24 13:45:00.506
  E1005 13:45:01.011938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:02.012107      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-764 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 10/05/24 13:45:02.538
  I1005 13:45:02.550539 19 service.go:4392] successfully validated that service multiprotocol-test in namespace services-764 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 10/05/24 13:45:02.55
  I1005 13:45:02.550609 19 resource.go:361] Creating new exec pod
  E1005 13:45:03.012427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:04.013448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:04.566803 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-764 exec execpodrln5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80'
  I1005 13:45:04.652775 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.156 80\nConnection to 10.152.183.156 80 port [tcp/http] succeeded!\n"
  I1005 13:45:04.652819 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 13:45:04.652896 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-764 exec execpodrln5z -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.156 80'
  E1005 13:45:05.013505      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:06.014445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:07.014682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:08.015332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:08.738248 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.156 80\nConnection to 10.152.183.156 80 port [udp/*] succeeded!\n"
  I1005 13:45:08.738295 19 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 10/05/24 13:45:08.738
  I1005 13:45:08.749613 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-764 exec execpodrln5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80'
  I1005 13:45:08.841557 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.156 80\nConnection to 10.152.183.156 80 port [tcp/http] succeeded!\n"
  I1005 13:45:08.841598 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1005 13:45:08.841788 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-764 exec execpodrln5z -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.156 80'
  E1005 13:45:09.015474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:10.016297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:11.016392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:12.017173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:12.925901 19 builder.go:146] stderr: "+ echo hostName+ \nnc -v -u -w 2 10.152.183.156 80\nConnection to 10.152.183.156 80 port [udp/*] succeeded!\n"
  I1005 13:45:12.925947 19 builder.go:147] stdout: ""
  I1005 13:45:12.926010 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-764 exec execpodrln5z -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.156 80'
  E1005 13:45:13.018213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:14.018356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:15.019298      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:16.019417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:17.015927 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.156 80\nConnection to 10.152.183.156 80 port [udp/*] succeeded!\n"
  I1005 13:45:17.015975 19 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 10/05/24 13:45:17.016
  E1005 13:45:17.020086      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:17.025376 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-764 exec execpodrln5z -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.156 80'
  E1005 13:45:18.020186      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:19.020420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:20.020948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:21.021209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:21.129437 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.156 80\nConnection to 10.152.183.156 80 port [udp/*] succeeded!\n"
  I1005 13:45:21.129500 19 builder.go:147] stdout: "pod1"
  I1005 13:45:21.129616 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-764 exec execpodrln5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80'
  E1005 13:45:22.021376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:23.022454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:23.213858 19 builder.go:135] rc: 1
  I1005 13:45:23.213925 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-764 exec execpodrln5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80:
  Command stdout:

  stderr:
  + + nc -v -t -w 2 10.152.183.156 80
  echo hostName
  nc: connect to 10.152.183.156 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1005 13:45:23.213992 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-764 exec execpodrln5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80'
  E1005 13:45:24.022747      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:25.023048      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:25.302365 19 builder.go:135] rc: 1
  I1005 13:45:25.302429 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-764 exec execpodrln5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.156 80
  nc: connect to 10.152.183.156 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1005 13:45:25.302496 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-764 exec execpodrln5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80'
  E1005 13:45:26.023144      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:27.023294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:27.387680 19 builder.go:135] rc: 1
  I1005 13:45:27.387788 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-764 exec execpodrln5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.156 80
  nc: connect to 10.152.183.156 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1005 13:45:27.388000 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-764" for this suite. @ 10/05/24 13:45:27.394
• [26.938 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 10/05/24 13:45:27.408
  I1005 13:45:27.408858 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-probe @ 10/05/24 13:45:27.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:45:27.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:45:27.438
  STEP: Creating pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868 @ 10/05/24 13:45:27.439
  E1005 13:45:28.023418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:29.023658      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/05/24 13:45:29.46
  I1005 13:45:29.464669 19 container_probe.go:1749] Initial restart count of pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 is 0
  I1005 13:45:29.469105 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:45:30.023773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:31.024367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:31.474861 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:45:32.024391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:33.025418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:33.479542 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:45:34.026147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:35.026317      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:35.485381 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:45:36.027022      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:37.027144      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:37.491095 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:45:38.027364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:39.028127      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:39.495504 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:45:40.029206      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:41.029358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:41.500697 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:45:42.030372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:43.030475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:43.506533 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:45:44.031177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:45.031355      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:45.512620 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:45:46.032211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:47.032360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:47.518174 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:45:48.032463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:49.032660      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:49.523005 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:45:50.033666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:51.033861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:51.528013 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:45:52.034417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:53.034639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:53.532610 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:45:54.034766      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:55.035456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:55.537582 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:45:56.036368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:57.036672      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:57.543817 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:45:58.037452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:45:59.037549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:45:59.550018 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:46:00.038434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:01.038534      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:01.554778 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:46:02.039348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:03.039458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:03.560865 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:46:04.040425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:05.041432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:05.566293 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:46:06.041536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:07.041763      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:07.571541 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:46:08.042090      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:09.042311      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:09.576865 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:46:10.042407      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:11.042653      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:11.582777 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:46:12.043348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:13.043470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:13.587451 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:46:14.044118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:15.044613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:15.593413 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:46:16.044776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:17.045066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:17.599006 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  E1005 13:46:18.045484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:19.045599      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:19.604898 19 container_probe.go:1759] Get pod busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 in namespace container-probe-1868
  I1005 13:46:19.604941 19 container_probe.go:1763] Restart count of pod container-probe-1868/busybox-860bd8ab-7e07-46ee-8976-d9383bcb8f77 is now 1 (50.140244964s elapsed)
  STEP: deleting the pod @ 10/05/24 13:46:19.605
  I1005 13:46:19.622937 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1868" for this suite. @ 10/05/24 13:46:19.627
• [52.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 10/05/24 13:46:19.638
  I1005 13:46:19.638539 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename aggregator @ 10/05/24 13:46:19.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:46:19.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:46:19.659
  I1005 13:46:19.661059 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Registering the sample API server. @ 10/05/24 13:46:19.661
  I1005 13:46:19.941148 19 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I1005 13:46:19.984003 19 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E1005 13:46:20.046054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:21.046181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:22.040149 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:46:22.047199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:23.047385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:24.045157 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:46:24.048245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:25.048399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:26.045418 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:46:26.048388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:27.048567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:28.045446 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:46:28.049531      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:29.049740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:30.045556 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:46:30.050609      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:31.050792      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:32.046180 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:46:32.051324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:33.051502      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:34.044790 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:46:34.051936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:35.052089      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:36.046598 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:46:36.052834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:37.053199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:38.045264 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:46:38.053393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:39.054459      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:40.045907 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:46:40.055032      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:41.055208      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:42.047636 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 5, 13, 46, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1005 13:46:42.055673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:43.055832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:44.055826      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:46:44.168749 19 aggregator.go:755] Waited 115.912032ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 10/05/24 13:46:44.207
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 10/05/24 13:46:44.211
  STEP: List APIServices @ 10/05/24 13:46:44.22
  I1005 13:46:44.225558 19 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 10/05/24 13:46:44.225
  I1005 13:46:44.246413 19 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 10/05/24 13:46:44.246
  I1005 13:46:44.263439 19 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.October, 5, 13, 46, 44, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 10/05/24 13:46:44.263
  I1005 13:46:44.268082 19 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-10-05 13:46:44 +0000 UTC Passed all checks passed}
  I1005 13:46:44.268109 19 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1005 13:46:44.268120 19 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 10/05/24 13:46:44.268
  I1005 13:46:44.285038 19 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-2108498678" @ 10/05/24 13:46:44.285
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 10/05/24 13:46:44.3
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 10/05/24 13:46:44.316
  STEP: Patch APIService Status @ 10/05/24 13:46:44.321
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 10/05/24 13:46:44.33
  I1005 13:46:44.334184 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-10-05 13:46:44 +0000 UTC Passed all checks passed}
  I1005 13:46:44.334214 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1005 13:46:44.334248 19 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1005 13:46:44.334259 19 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 10/05/24 13:46:44.334
  STEP: Confirm that the generated APIService has been deleted @ 10/05/24 13:46:44.345
  I1005 13:46:44.345706 19 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I1005 13:46:44.350318 19 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1005 13:46:44.350345 19 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I1005 13:46:44.471057 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4942" for this suite. @ 10/05/24 13:46:44.475
• [24.844 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 10/05/24 13:46:44.482
  I1005 13:46:44.482897 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename svcaccounts @ 10/05/24 13:46:44.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:46:44.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:46:44.504
  I1005 13:46:44.521575 19 service_accounts.go:618] created pod
  E1005 13:46:45.056892      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:46.057656      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:47.058454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:48.058541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:49.059484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:50.059693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:51.059792      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:52.059888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:53.060435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:54.061542      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:46:54.552
  E1005 13:46:55.062457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:56.062682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:57.062860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:58.063857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:46:59.064065      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:00.064802      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:01.065022      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:02.065129      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:03.065358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:04.065464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:05.065770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:06.065962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:07.066356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:08.066563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:09.066680      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:10.066876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:11.067068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:12.067358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:13.067459      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:14.068426      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:15.069425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:16.069548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:17.069821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:18.070029      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:19.070433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:20.070661      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:21.070860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:22.071017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:23.071318      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:24.071364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:47:24.553113 19 service_accounts.go:624] polling logs
  I1005 13:47:24.576289 19 service_accounts.go:634] Pod logs: 
  I1005 13:46:50.373761       1 log.go:245] OK: Got token
  I1005 13:46:50.373803       1 log.go:245] validating with in-cluster discovery
  I1005 13:46:50.374002       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I1005 13:46:50.374143       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8243:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00026f330), NotBefore:(*jwt.NumericDate)(0xc00026f420), IssuedAt:(*jwt.NumericDate)(0xc00026f340), ID:"ddea9c7f-0634-4e7e-9fe6-eff39816685a"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8243", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"8f4a27c1-4d24-4fb2-aeb5-e90e1babfdb8"}}}
  I1005 13:46:50.382848       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1005 13:46:50.387254       1 log.go:245] OK: Validated signature on JWT
  I1005 13:46:50.387370       1 log.go:245] OK: Got valid claims from token!
  I1005 13:46:50.387401       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8243:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002b7210), NotBefore:(*jwt.NumericDate)(0xc0002b7238), IssuedAt:(*jwt.NumericDate)(0xc0002b7218), ID:"ddea9c7f-0634-4e7e-9fe6-eff39816685a"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8243", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"8f4a27c1-4d24-4fb2-aeb5-e90e1babfdb8"}}}

  I1005 13:47:24.576337 19 service_accounts.go:638] completed pod
  I1005 13:47:24.584695 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8243" for this suite. @ 10/05/24 13:47:24.588
• [40.115 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 10/05/24 13:47:24.597
  I1005 13:47:24.598008 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename configmap @ 10/05/24 13:47:24.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:47:24.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:47:24.616
  STEP: Creating configMap with name configmap-test-volume-map-765b5fbf-c30d-4dc5-a0cb-ae09d4763299 @ 10/05/24 13:47:24.618
  STEP: Creating a pod to test consume configMaps @ 10/05/24 13:47:24.626
  E1005 13:47:25.072366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:26.072518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:27.072651      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:28.072781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:47:28.65
  I1005 13:47:28.654802 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-configmaps-34f13846-388f-42fd-a917-b96229da7562 container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 13:47:28.664
  I1005 13:47:28.681295 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-246" for this suite. @ 10/05/24 13:47:28.686
• [4.097 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 10/05/24 13:47:28.695
  I1005 13:47:28.695826 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 13:47:28.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:47:28.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:47:28.717
  STEP: validating cluster-info @ 10/05/24 13:47:28.721
  I1005 13:47:28.721141 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-3738 cluster-info'
  I1005 13:47:28.794127 19 builder.go:146] stderr: ""
  I1005 13:47:28.794259 19 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1005 13:47:28.794399 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3738" for this suite. @ 10/05/24 13:47:28.798
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 10/05/24 13:47:28.807
  I1005 13:47:28.807695 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pods @ 10/05/24 13:47:28.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:47:28.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:47:28.828
  STEP: Create a pod @ 10/05/24 13:47:28.83
  E1005 13:47:29.073416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:30.074437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 10/05/24 13:47:30.852
  I1005 13:47:30.861016 19 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1005 13:47:30.861139 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5475" for this suite. @ 10/05/24 13:47:30.865
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 10/05/24 13:47:30.874
  I1005 13:47:30.874602 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 13:47:30.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:47:30.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:47:30.896
  STEP: Setting up server cert @ 10/05/24 13:47:30.925
  E1005 13:47:31.074939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 13:47:31.172
  STEP: Deploying the webhook pod @ 10/05/24 13:47:31.183
  STEP: Wait for the deployment to be ready @ 10/05/24 13:47:31.197
  I1005 13:47:31.209640 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1005 13:47:32.075201      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:33.075438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/05/24 13:47:33.223
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 13:47:33.234
  E1005 13:47:34.075581      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:47:34.235923 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/05/24 13:47:34.245
  STEP: create the configmap with a random name @ 10/05/24 13:47:34.263
  STEP: verify the configmap is mutated @ 10/05/24 13:47:34.274
  STEP: create the configmap with 'skip-me' name @ 10/05/24 13:47:34.274
  I1005 13:47:34.337396 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9520" for this suite. @ 10/05/24 13:47:34.343
  STEP: Destroying namespace "webhook-markers-5757" for this suite. @ 10/05/24 13:47:34.351
• [3.486 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 10/05/24 13:47:34.36
  I1005 13:47:34.360512 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 13:47:34.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:47:34.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:47:34.376
  STEP: creating all guestbook components @ 10/05/24 13:47:34.378
  I1005 13:47:34.378522 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1005 13:47:34.378588 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-5225 create -f -'
  I1005 13:47:34.477476 19 builder.go:146] stderr: ""
  I1005 13:47:34.477514 19 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1005 13:47:34.477562 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1005 13:47:34.477632 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-5225 create -f -'
  I1005 13:47:34.570590 19 builder.go:146] stderr: ""
  I1005 13:47:34.570645 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1005 13:47:34.570701 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1005 13:47:34.570769 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-5225 create -f -'
  I1005 13:47:34.664154 19 builder.go:146] stderr: ""
  I1005 13:47:34.664201 19 builder.go:147] stdout: "service/frontend created\n"
  I1005 13:47:34.664311 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1005 13:47:34.664451 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-5225 create -f -'
  I1005 13:47:34.736767 19 builder.go:146] stderr: ""
  I1005 13:47:34.736807 19 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1005 13:47:34.736875 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1005 13:47:34.737165 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-5225 create -f -'
  I1005 13:47:34.808891 19 builder.go:146] stderr: ""
  I1005 13:47:34.808929 19 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1005 13:47:34.809012 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1005 13:47:34.809130 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-5225 create -f -'
  I1005 13:47:34.876558 19 builder.go:146] stderr: ""
  I1005 13:47:34.876658 19 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 10/05/24 13:47:34.876
  I1005 13:47:34.876700 19 kubectl.go:2272] Waiting for all frontend pods to be Running.
  E1005 13:47:35.075669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:36.076288      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:37.076499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:38.076715      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:39.076944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:47:39.927358 19 kubectl.go:2276] Waiting for frontend to serve content.
  I1005 13:47:39.940557 19 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I1005 13:47:39.953000 19 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 10/05/24 13:47:39.964
  I1005 13:47:39.964415 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-5225 delete --grace-period=0 --force -f -'
  I1005 13:47:40.030626 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1005 13:47:40.030674 19 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 10/05/24 13:47:40.03
  I1005 13:47:40.030859 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-5225 delete --grace-period=0 --force -f -'
  E1005 13:47:40.077016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:47:40.100769 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1005 13:47:40.100808 19 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/05/24 13:47:40.1
  I1005 13:47:40.100942 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-5225 delete --grace-period=0 --force -f -'
  I1005 13:47:40.169820 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1005 13:47:40.169858 19 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/05/24 13:47:40.169
  I1005 13:47:40.170120 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-5225 delete --grace-period=0 --force -f -'
  I1005 13:47:40.224263 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1005 13:47:40.224302 19 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/05/24 13:47:40.224
  I1005 13:47:40.224427 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-5225 delete --grace-period=0 --force -f -'
  I1005 13:47:40.294644 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1005 13:47:40.294716 19 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/05/24 13:47:40.294
  I1005 13:47:40.294902 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-5225 delete --grace-period=0 --force -f -'
  I1005 13:47:40.390533 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1005 13:47:40.390582 19 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1005 13:47:40.390841 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5225" for this suite. @ 10/05/24 13:47:40.396
• [6.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 10/05/24 13:47:40.404
  I1005 13:47:40.404365 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:47:40.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:47:40.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:47:40.436
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 13:47:40.439
  E1005 13:47:41.077749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:42.078351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:43.078470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:44.079446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:47:44.475
  I1005 13:47:44.480288 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downwardapi-volume-77f0076b-7aee-471c-aa2e-720de27efcd9 container client-container: <nil>
  STEP: delete the pod @ 10/05/24 13:47:44.489
  I1005 13:47:44.505596 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2076" for this suite. @ 10/05/24 13:47:44.509
• [4.112 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 10/05/24 13:47:44.516
  I1005 13:47:44.516901 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename subpath @ 10/05/24 13:47:44.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:47:44.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:47:44.536
  STEP: Setting up data @ 10/05/24 13:47:44.539
  STEP: Creating pod pod-subpath-test-configmap-z8zq @ 10/05/24 13:47:44.548
  STEP: Creating a pod to test atomic-volume-subpath @ 10/05/24 13:47:44.548
  E1005 13:47:45.079553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:46.079665      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:47.080356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:48.080592      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:49.080756      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:50.080978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:51.081169      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:52.081398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:53.082354      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:54.082589      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:55.082706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:56.082816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:57.083718      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:58.083911      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:47:59.084631      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:00.084749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:01.084843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:02.085189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:03.085294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:04.085415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:05.085649      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:06.085786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:07.085969      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:08.086205      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:48:08.628
  I1005 13:48:08.632435 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-subpath-test-configmap-z8zq container test-container-subpath-configmap-z8zq: <nil>
  STEP: delete the pod @ 10/05/24 13:48:08.64
  STEP: Deleting pod pod-subpath-test-configmap-z8zq @ 10/05/24 13:48:08.657
  I1005 13:48:08.657728 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-z8zq" in namespace "subpath-2769"
  I1005 13:48:08.661358 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2769" for this suite. @ 10/05/24 13:48:08.668
• [24.160 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 10/05/24 13:48:08.676
  I1005 13:48:08.676698 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename statefulset @ 10/05/24 13:48:08.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:48:08.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:48:08.695
  STEP: Creating service test in namespace statefulset-1741 @ 10/05/24 13:48:08.697
  STEP: Creating stateful set ss in namespace statefulset-1741 @ 10/05/24 13:48:08.701
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1741 @ 10/05/24 13:48:08.709
  I1005 13:48:08.714532 19 wait.go:40] Found 0 stateful pods, waiting for 1
  E1005 13:48:09.087127      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:10.087245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:11.087809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:12.087931      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:13.088424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:14.088523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:15.088845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:16.089419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:17.090426      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:18.090610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:18.715979 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 10/05/24 13:48:18.716
  I1005 13:48:18.719926 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-1741 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1005 13:48:18.805835 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1005 13:48:18.805885 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1005 13:48:18.805893 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1005 13:48:18.810619 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1005 13:48:19.090875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:20.091070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:21.091181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:22.091351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:23.091394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:24.091516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:25.091842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:26.092050      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:27.092293      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:28.092444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:28.812022 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1005 13:48:28.812066 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1005 13:48:28.848417 19 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I1005 13:48:28.848487 19 resource.go:175] ss-0  ip-172-31-45-162  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:09 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:08 +0000 UTC  }]
  I1005 13:48:28.848495 19 resource.go:175] ss-2                    Pending         []
  I1005 13:48:28.848501 19 resource.go:178] 
  I1005 13:48:28.848507 19 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 2
  E1005 13:48:29.092737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:29.854933 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.983651699s
  E1005 13:48:30.093292      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:30.860205 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.977801586s
  E1005 13:48:31.093380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:31.866010 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.972615683s
  E1005 13:48:32.094356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:32.870860 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.966836134s
  E1005 13:48:33.095273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:33.875951 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.961845691s
  E1005 13:48:34.096272      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:34.881843 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.956654723s
  E1005 13:48:35.097154      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:35.889938 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.95097199s
  E1005 13:48:36.098239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:36.894924 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.94288777s
  E1005 13:48:37.099199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:37.899863 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 937.857253ms
  E1005 13:48:38.100084      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1741 @ 10/05/24 13:48:38.9
  I1005 13:48:38.905807 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-1741 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1005 13:48:38.992124 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1005 13:48:38.992163 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1005 13:48:38.992175 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1005 13:48:38.992246 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-1741 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1005 13:48:39.080797 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1005 13:48:39.080840 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1005 13:48:39.080850 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1005 13:48:39.080902 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-1741 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E1005 13:48:39.100322      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:39.166888 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1005 13:48:39.166927 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1005 13:48:39.166936 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1005 13:48:39.172347 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1005 13:48:39.172370 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1005 13:48:39.172377 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 10/05/24 13:48:39.172
  I1005 13:48:39.176599 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-1741 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1005 13:48:39.260193 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1005 13:48:39.260254 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1005 13:48:39.260263 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1005 13:48:39.260317 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-1741 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1005 13:48:39.353397 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1005 13:48:39.353436 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1005 13:48:39.353447 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1005 13:48:39.353496 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-1741 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1005 13:48:39.436211 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1005 13:48:39.436271 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1005 13:48:39.436281 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1005 13:48:39.436290 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1005 13:48:39.440922 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1005 13:48:40.100685      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:41.100797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:42.100897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:43.101114      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:44.101412      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:45.101572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:46.101774      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:47.102342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:48.102476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:48:49.102726      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:49.447809 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1005 13:48:49.447839 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1005 13:48:49.447846 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1005 13:48:49.461785 19 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I1005 13:48:49.461839 19 resource.go:175] ss-0  ip-172-31-45-162  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:09 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:08 +0000 UTC  }]
  I1005 13:48:49.461859 19 resource.go:175] ss-1  ip-172-31-83-192  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:30 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:28 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:28 +0000 UTC  }]
  I1005 13:48:49.461876 19 resource.go:175] ss-2  ip-172-31-20-60   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:29 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:28 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:28 +0000 UTC  }]
  I1005 13:48:49.461881 19 resource.go:178] 
  I1005 13:48:49.461887 19 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  E1005 13:48:50.102913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:50.468431 19 resource.go:168] POD   NODE             PHASE      GRACE  CONDITIONS
  I1005 13:48:50.468492 19 resource.go:175] ss-2  ip-172-31-20-60  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:49 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:28 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:40 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:40 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-05 13:48:28 +0000 UTC  }]
  I1005 13:48:50.468499 19 resource.go:178] 
  I1005 13:48:50.468506 19 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 1
  E1005 13:48:51.103000      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:51.473951 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.989101596s
  E1005 13:48:52.103748      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:52.479479 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.983422755s
  E1005 13:48:53.103874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:53.485676 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.977327413s
  E1005 13:48:54.104395      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:54.492276 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.97185629s
  E1005 13:48:55.104989      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:55.496841 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.965160065s
  E1005 13:48:56.105689      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:56.501807 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.96041176s
  E1005 13:48:57.106659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:57.506917 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.955516885s
  E1005 13:48:58.107647      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:48:58.511875 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 950.599742ms
  E1005 13:48:59.108422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1741 @ 10/05/24 13:48:59.513
  I1005 13:48:59.519393 19 rest.go:150] Scaling statefulset ss to 0
  I1005 13:48:59.527884 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1005 13:48:59.531774 19 statefulset.go:138] Deleting all statefulset in ns statefulset-1741
  I1005 13:48:59.535630 19 rest.go:150] Scaling statefulset ss to 0
  I1005 13:48:59.542360 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1005 13:48:59.546396 19 rest.go:88] Deleting statefulset ss
  I1005 13:48:59.560695 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1741" for this suite. @ 10/05/24 13:48:59.564
• [50.895 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 10/05/24 13:48:59.572
  I1005 13:48:59.572170 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir @ 10/05/24 13:48:59.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:48:59.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:48:59.592
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/05/24 13:48:59.593
  E1005 13:49:00.109018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:01.110054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:02.111085      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:03.111206      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:49:03.618
  I1005 13:49:03.622660 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-5b24179a-9e32-4e7b-954f-74b92e4f13b8 container test-container: <nil>
  STEP: delete the pod @ 10/05/24 13:49:03.639
  I1005 13:49:03.660698 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5492" for this suite. @ 10/05/24 13:49:03.664
• [4.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 10/05/24 13:49:03.673
  I1005 13:49:03.673156 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename field-validation @ 10/05/24 13:49:03.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:49:03.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:49:03.695
  I1005 13:49:03.696943 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:49:04.111997      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:05.112138      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:06.112297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1005 13:49:06.233263      19 warnings.go:70] unknown field "alpha"
  W1005 13:49:06.233285      19 warnings.go:70] unknown field "beta"
  W1005 13:49:06.233289      19 warnings.go:70] unknown field "delta"
  W1005 13:49:06.233294      19 warnings.go:70] unknown field "epsilon"
  W1005 13:49:06.233297      19 warnings.go:70] unknown field "gamma"
  I1005 13:49:06.780673 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1607" for this suite. @ 10/05/24 13:49:06.785
• [3.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 10/05/24 13:49:06.792
  I1005 13:49:06.792960 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename namespaces @ 10/05/24 13:49:06.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:49:06.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:49:06.817
  STEP: Read namespace status @ 10/05/24 13:49:06.818
  I1005 13:49:06.822356 19 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 10/05/24 13:49:06.822
  I1005 13:49:06.828362 19 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 10/05/24 13:49:06.828
  I1005 13:49:06.839764 19 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1005 13:49:06.839917 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2302" for this suite. @ 10/05/24 13:49:06.844
• [0.059 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 10/05/24 13:49:06.851
  I1005 13:49:06.851720 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/05/24 13:49:06.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:49:06.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:49:06.87
  STEP: fetching the /apis discovery document @ 10/05/24 13:49:06.872
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 10/05/24 13:49:06.873
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 10/05/24 13:49:06.873
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 10/05/24 13:49:06.873
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 10/05/24 13:49:06.874
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 10/05/24 13:49:06.874
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 10/05/24 13:49:06.875
  I1005 13:49:06.875090 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6178" for this suite. @ 10/05/24 13:49:06.879
• [0.035 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 10/05/24 13:49:06.887
  I1005 13:49:06.887121 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:49:06.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:49:06.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:49:06.907
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 13:49:06.909
  E1005 13:49:07.113108      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:08.113272      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:09.113863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:10.114142      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:49:10.933
  I1005 13:49:10.937197 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downwardapi-volume-845268e2-0adf-4e3f-ac86-f93c34ed40a5 container client-container: <nil>
  STEP: delete the pod @ 10/05/24 13:49:10.947
  I1005 13:49:10.968923 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9516" for this suite. @ 10/05/24 13:49:10.973
• [4.097 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 10/05/24 13:49:10.984
  I1005 13:49:10.984211 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename configmap @ 10/05/24 13:49:10.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:49:10.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:49:11.001
  STEP: creating a ConfigMap @ 10/05/24 13:49:11.004
  STEP: fetching the ConfigMap @ 10/05/24 13:49:11.008
  STEP: patching the ConfigMap @ 10/05/24 13:49:11.012
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 10/05/24 13:49:11.017
  STEP: deleting the ConfigMap by collection with a label selector @ 10/05/24 13:49:11.021
  STEP: listing all ConfigMaps in test namespace @ 10/05/24 13:49:11.031
  I1005 13:49:11.035403 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3984" for this suite. @ 10/05/24 13:49:11.039
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 10/05/24 13:49:11.047
  I1005 13:49:11.047580 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 13:49:11.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:49:11.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:49:11.067
  STEP: Setting up server cert @ 10/05/24 13:49:11.091
  E1005 13:49:11.114400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 13:49:11.366
  STEP: Deploying the webhook pod @ 10/05/24 13:49:11.377
  STEP: Wait for the deployment to be ready @ 10/05/24 13:49:11.396
  I1005 13:49:11.405828 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1005 13:49:12.114468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:13.114727      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/05/24 13:49:13.419
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 13:49:13.43
  E1005 13:49:14.114835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:49:14.431171 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/05/24 13:49:14.44
  STEP: create a pod @ 10/05/24 13:49:14.455
  E1005 13:49:15.115873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:16.115965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 10/05/24 13:49:16.473
  I1005 13:49:16.474025 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=webhook-3243 attach --namespace=webhook-3243 to-be-attached-pod -i -c=container1'
  I1005 13:49:16.539148 19 builder.go:135] rc: 1
  I1005 13:49:16.596531 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3243" for this suite. @ 10/05/24 13:49:16.602
  STEP: Destroying namespace "webhook-markers-6745" for this suite. @ 10/05/24 13:49:16.609
• [5.572 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 10/05/24 13:49:16.619
  I1005 13:49:16.619751 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pod-network-test @ 10/05/24 13:49:16.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:49:16.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:49:16.635
  STEP: Performing setup for networking test in namespace pod-network-test-8717 @ 10/05/24 13:49:16.638
  STEP: creating a selector @ 10/05/24 13:49:16.638
  STEP: Creating the service pods in kubernetes @ 10/05/24 13:49:16.638
  I1005 13:49:16.638169 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1005 13:49:17.116596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:18.116736      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:19.117454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:20.118452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:21.119264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:22.119557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:23.120450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:24.120676      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:25.121464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:26.121611      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:27.122461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:28.122728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:29.123614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:30.123766      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:31.124156      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:32.124440      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:33.125196      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:34.125339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:35.126381      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:36.126486      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:37.126603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:38.126813      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/05/24 13:49:38.761
  E1005 13:49:39.127448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:40.127533      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:49:40.783796 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1005 13:49:40.783833 19 networking.go:42] Breadth first check of 192.168.89.127 on host 172.31.20.60...
  I1005 13:49:40.788111 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.59.69:9080/dial?request=hostname&protocol=udp&host=192.168.89.127&port=8081&tries=1'] Namespace:pod-network-test-8717 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:49:40.788134 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:49:40.788584 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:49:40.788626 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8717/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.59.69%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.89.127%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1005 13:49:40.843290 19 utils.go:356] Waiting for responses: map[]
  I1005 13:49:40.843325 19 utils.go:360] reached 192.168.89.127 after 0/1 tries
  I1005 13:49:40.843334 19 networking.go:42] Breadth first check of 192.168.59.113 on host 172.31.45.162...
  I1005 13:49:40.848354 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.59.69:9080/dial?request=hostname&protocol=udp&host=192.168.59.113&port=8081&tries=1'] Namespace:pod-network-test-8717 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:49:40.848378 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:49:40.848826 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:49:40.848884 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8717/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.59.69%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.59.113%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1005 13:49:40.890341 19 utils.go:356] Waiting for responses: map[]
  I1005 13:49:40.890378 19 utils.go:360] reached 192.168.59.113 after 0/1 tries
  I1005 13:49:40.890414 19 networking.go:42] Breadth first check of 192.168.195.174 on host 172.31.83.192...
  I1005 13:49:40.894588 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.59.69:9080/dial?request=hostname&protocol=udp&host=192.168.195.174&port=8081&tries=1'] Namespace:pod-network-test-8717 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1005 13:49:40.894609 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  I1005 13:49:40.895016 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1005 13:49:40.895057 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8717/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.59.69%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.195.174%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1005 13:49:40.936153 19 utils.go:356] Waiting for responses: map[]
  I1005 13:49:40.936181 19 utils.go:360] reached 192.168.195.174 after 0/1 tries
  I1005 13:49:40.936190 19 networking.go:53] Going to retry 0 out of 3 pods....
  I1005 13:49:40.936304 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8717" for this suite. @ 10/05/24 13:49:40.941
• [24.330 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 10/05/24 13:49:40.954
  I1005 13:49:40.954987 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename security-context @ 10/05/24 13:49:40.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:49:40.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:49:40.975
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/05/24 13:49:40.977
  E1005 13:49:41.128349      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:42.128475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:43.129458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:44.130444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:49:45.001
  I1005 13:49:45.005298 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod security-context-7c4b4140-45c6-4354-a3ec-55bd1721d26e container test-container: <nil>
  STEP: delete the pod @ 10/05/24 13:49:45.014
  I1005 13:49:45.033914 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2925" for this suite. @ 10/05/24 13:49:45.037
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 10/05/24 13:49:45.045
  I1005 13:49:45.045376 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 13:49:45.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:49:45.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:49:45.065
  STEP: Creating a pod to test downward api env vars @ 10/05/24 13:49:45.067
  E1005 13:49:45.131317      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:46.131403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:49:47.089
  I1005 13:49:47.093172 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod downward-api-83ab67a3-b30b-4d73-b2f6-56bcf7104109 container dapi-container: <nil>
  STEP: delete the pod @ 10/05/24 13:49:47.111
  E1005 13:49:47.132029      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:49:47.132812 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1288" for this suite. @ 10/05/24 13:49:47.137
• [2.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 10/05/24 13:49:47.146
  I1005 13:49:47.146113 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename svc-latency @ 10/05/24 13:49:47.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:49:47.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:49:47.168
  I1005 13:49:47.169645 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-9117 @ 10/05/24 13:49:47.17
  I1005 13:49:47.179241      19 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-9117, replica count: 1
  E1005 13:49:48.132168      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:49:48.230745      19 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1005 13:49:48.346640 19 service_latency.go:356] Created: latency-svc-flzh4
  I1005 13:49:48.355724 19 service_latency.go:363] Got endpoints: latency-svc-flzh4 [24.372547ms]
  I1005 13:49:48.374684 19 service_latency.go:356] Created: latency-svc-jwjzn
  I1005 13:49:48.381988 19 service_latency.go:356] Created: latency-svc-zcz8g
  I1005 13:49:48.385099 19 service_latency.go:363] Got endpoints: latency-svc-jwjzn [28.551186ms]
  I1005 13:49:48.391344 19 service_latency.go:356] Created: latency-svc-k8jnf
  I1005 13:49:48.394195 19 service_latency.go:363] Got endpoints: latency-svc-zcz8g [38.325142ms]
  I1005 13:49:48.400119 19 service_latency.go:363] Got endpoints: latency-svc-k8jnf [44.226668ms]
  I1005 13:49:48.402799 19 service_latency.go:356] Created: latency-svc-st4vv
  I1005 13:49:48.406941 19 service_latency.go:363] Got endpoints: latency-svc-st4vv [50.858394ms]
  I1005 13:49:48.409965 19 service_latency.go:356] Created: latency-svc-6s84c
  I1005 13:49:48.416047 19 service_latency.go:363] Got endpoints: latency-svc-6s84c [59.884494ms]
  I1005 13:49:48.417092 19 service_latency.go:356] Created: latency-svc-nv9w5
  I1005 13:49:48.425798 19 service_latency.go:363] Got endpoints: latency-svc-nv9w5 [69.547596ms]
  I1005 13:49:48.428408 19 service_latency.go:356] Created: latency-svc-t462l
  I1005 13:49:48.435367 19 service_latency.go:363] Got endpoints: latency-svc-t462l [79.036441ms]
  I1005 13:49:48.440109 19 service_latency.go:356] Created: latency-svc-4b6jb
  I1005 13:49:48.444893 19 service_latency.go:363] Got endpoints: latency-svc-4b6jb [88.530659ms]
  I1005 13:49:48.447499 19 service_latency.go:356] Created: latency-svc-g2gvz
  I1005 13:49:48.456410 19 service_latency.go:363] Got endpoints: latency-svc-g2gvz [99.476878ms]
  I1005 13:49:48.465128 19 service_latency.go:356] Created: latency-svc-kgvjv
  I1005 13:49:48.465157 19 service_latency.go:363] Got endpoints: latency-svc-kgvjv [108.414216ms]
  I1005 13:49:48.476006 19 service_latency.go:356] Created: latency-svc-wd2fn
  I1005 13:49:48.477196 19 service_latency.go:363] Got endpoints: latency-svc-wd2fn [120.142632ms]
  I1005 13:49:48.477498 19 service_latency.go:356] Created: latency-svc-cxb9p
  I1005 13:49:48.484253 19 service_latency.go:363] Got endpoints: latency-svc-cxb9p [127.432373ms]
  I1005 13:49:48.488419 19 service_latency.go:356] Created: latency-svc-l2n4z
  I1005 13:49:48.492688 19 service_latency.go:363] Got endpoints: latency-svc-l2n4z [135.699233ms]
  I1005 13:49:48.497643 19 service_latency.go:356] Created: latency-svc-qf7cp
  I1005 13:49:48.501534 19 service_latency.go:363] Got endpoints: latency-svc-qf7cp [144.658987ms]
  I1005 13:49:48.506609 19 service_latency.go:356] Created: latency-svc-rf5r6
  I1005 13:49:48.510977 19 service_latency.go:363] Got endpoints: latency-svc-rf5r6 [153.86772ms]
  I1005 13:49:48.513718 19 service_latency.go:356] Created: latency-svc-qp5fq
  I1005 13:49:48.519428 19 service_latency.go:363] Got endpoints: latency-svc-qp5fq [134.272949ms]
  I1005 13:49:48.531866 19 service_latency.go:356] Created: latency-svc-sxrp8
  I1005 13:49:48.542075 19 service_latency.go:356] Created: latency-svc-xnfsp
  I1005 13:49:48.547270 19 service_latency.go:363] Got endpoints: latency-svc-sxrp8 [153.033604ms]
  I1005 13:49:48.551485 19 service_latency.go:363] Got endpoints: latency-svc-xnfsp [151.336048ms]
  I1005 13:49:48.555788 19 service_latency.go:356] Created: latency-svc-9qg6s
  I1005 13:49:48.565277 19 service_latency.go:363] Got endpoints: latency-svc-9qg6s [158.310989ms]
  I1005 13:49:48.569070 19 service_latency.go:356] Created: latency-svc-kqpc9
  I1005 13:49:48.576668 19 service_latency.go:356] Created: latency-svc-pkkrx
  I1005 13:49:48.579606 19 service_latency.go:363] Got endpoints: latency-svc-kqpc9 [163.528919ms]
  I1005 13:49:48.587128 19 service_latency.go:363] Got endpoints: latency-svc-pkkrx [161.297096ms]
  I1005 13:49:48.602416 19 service_latency.go:356] Created: latency-svc-p66zv
  I1005 13:49:48.602867 19 service_latency.go:356] Created: latency-svc-f6g4s
  I1005 13:49:48.605286 19 service_latency.go:363] Got endpoints: latency-svc-p66zv [169.88086ms]
  I1005 13:49:48.610303 19 service_latency.go:363] Got endpoints: latency-svc-f6g4s [165.147598ms]
  I1005 13:49:48.612468 19 service_latency.go:356] Created: latency-svc-7gql8
  I1005 13:49:48.624549 19 service_latency.go:356] Created: latency-svc-g2jbb
  I1005 13:49:48.627484 19 service_latency.go:363] Got endpoints: latency-svc-7gql8 [170.836684ms]
  I1005 13:49:48.630888 19 service_latency.go:363] Got endpoints: latency-svc-g2jbb [165.716752ms]
  I1005 13:49:48.634125 19 service_latency.go:356] Created: latency-svc-w27h5
  I1005 13:49:48.638643 19 service_latency.go:363] Got endpoints: latency-svc-w27h5 [161.405903ms]
  I1005 13:49:48.641710 19 service_latency.go:356] Created: latency-svc-x8m2v
  I1005 13:49:48.651980 19 service_latency.go:363] Got endpoints: latency-svc-x8m2v [167.558829ms]
  I1005 13:49:48.657799 19 service_latency.go:356] Created: latency-svc-t99c5
  I1005 13:49:48.664739 19 service_latency.go:363] Got endpoints: latency-svc-t99c5 [172.011057ms]
  I1005 13:49:48.668922 19 service_latency.go:356] Created: latency-svc-52s5t
  I1005 13:49:48.672755 19 service_latency.go:356] Created: latency-svc-7b7lf
  I1005 13:49:48.676725 19 service_latency.go:363] Got endpoints: latency-svc-52s5t [175.163421ms]
  I1005 13:49:48.682692 19 service_latency.go:363] Got endpoints: latency-svc-7b7lf [171.681981ms]
  I1005 13:49:48.688489 19 service_latency.go:356] Created: latency-svc-j29c6
  I1005 13:49:48.693826 19 service_latency.go:363] Got endpoints: latency-svc-j29c6 [174.369254ms]
  I1005 13:49:48.697757 19 service_latency.go:356] Created: latency-svc-z92pj
  I1005 13:49:48.704477 19 service_latency.go:356] Created: latency-svc-lrmgz
  I1005 13:49:48.705747 19 service_latency.go:363] Got endpoints: latency-svc-z92pj [158.443366ms]
  I1005 13:49:48.709942 19 service_latency.go:363] Got endpoints: latency-svc-lrmgz [158.401434ms]
  I1005 13:49:48.713621 19 service_latency.go:356] Created: latency-svc-x59sb
  I1005 13:49:48.718709 19 service_latency.go:363] Got endpoints: latency-svc-x59sb [153.365212ms]
  I1005 13:49:48.722366 19 service_latency.go:356] Created: latency-svc-q9p57
  I1005 13:49:48.728523 19 service_latency.go:356] Created: latency-svc-49hst
  I1005 13:49:48.729276 19 service_latency.go:363] Got endpoints: latency-svc-q9p57 [149.639643ms]
  I1005 13:49:48.739387 19 service_latency.go:363] Got endpoints: latency-svc-49hst [152.223618ms]
  I1005 13:49:48.741770 19 service_latency.go:356] Created: latency-svc-zb9nw
  I1005 13:49:48.749060 19 service_latency.go:356] Created: latency-svc-vf65n
  I1005 13:49:48.755606 19 service_latency.go:363] Got endpoints: latency-svc-zb9nw [150.28908ms]
  I1005 13:49:48.756576 19 service_latency.go:356] Created: latency-svc-26p8b
  I1005 13:49:48.765729 19 service_latency.go:356] Created: latency-svc-cvmgk
  I1005 13:49:48.771237 19 service_latency.go:356] Created: latency-svc-p2hnl
  I1005 13:49:48.778932 19 service_latency.go:356] Created: latency-svc-xjck5
  I1005 13:49:48.786005 19 service_latency.go:356] Created: latency-svc-5fx2m
  I1005 13:49:48.791945 19 service_latency.go:356] Created: latency-svc-ldzsg
  I1005 13:49:48.798653 19 service_latency.go:356] Created: latency-svc-m66kc
  I1005 13:49:48.806384 19 service_latency.go:356] Created: latency-svc-l62v7
  I1005 13:49:48.806782 19 service_latency.go:363] Got endpoints: latency-svc-vf65n [196.448083ms]
  I1005 13:49:48.815237 19 service_latency.go:356] Created: latency-svc-6n9tg
  I1005 13:49:48.821452 19 service_latency.go:356] Created: latency-svc-98zmv
  I1005 13:49:48.828102 19 service_latency.go:356] Created: latency-svc-k2hdt
  I1005 13:49:48.833428 19 service_latency.go:356] Created: latency-svc-8xhz6
  I1005 13:49:48.841954 19 service_latency.go:356] Created: latency-svc-x2xft
  I1005 13:49:48.847373 19 service_latency.go:356] Created: latency-svc-9rnvz
  I1005 13:49:48.854422 19 service_latency.go:363] Got endpoints: latency-svc-26p8b [226.906502ms]
  I1005 13:49:48.858029 19 service_latency.go:356] Created: latency-svc-6cz9v
  I1005 13:49:48.867794 19 service_latency.go:356] Created: latency-svc-7qb8p
  I1005 13:49:48.905269 19 service_latency.go:363] Got endpoints: latency-svc-cvmgk [274.328952ms]
  I1005 13:49:48.921816 19 service_latency.go:356] Created: latency-svc-ctwkk
  I1005 13:49:48.953604 19 service_latency.go:363] Got endpoints: latency-svc-p2hnl [314.919189ms]
  I1005 13:49:48.970264 19 service_latency.go:356] Created: latency-svc-rhv9b
  I1005 13:49:49.004491 19 service_latency.go:363] Got endpoints: latency-svc-xjck5 [352.46026ms]
  I1005 13:49:49.016691 19 service_latency.go:356] Created: latency-svc-z6kkk
  I1005 13:49:49.056363 19 service_latency.go:363] Got endpoints: latency-svc-5fx2m [391.586006ms]
  I1005 13:49:49.069432 19 service_latency.go:356] Created: latency-svc-xpqxt
  I1005 13:49:49.106132 19 service_latency.go:363] Got endpoints: latency-svc-ldzsg [429.348089ms]
  I1005 13:49:49.117816 19 service_latency.go:356] Created: latency-svc-8qblq
  E1005 13:49:49.133091      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:49:49.155011 19 service_latency.go:363] Got endpoints: latency-svc-m66kc [472.280525ms]
  I1005 13:49:49.169045 19 service_latency.go:356] Created: latency-svc-ftjnj
  I1005 13:49:49.204409 19 service_latency.go:363] Got endpoints: latency-svc-l62v7 [510.520473ms]
  I1005 13:49:49.216970 19 service_latency.go:356] Created: latency-svc-x2mt2
  I1005 13:49:49.255831 19 service_latency.go:363] Got endpoints: latency-svc-6n9tg [550.055726ms]
  I1005 13:49:49.269547 19 service_latency.go:356] Created: latency-svc-mkct4
  I1005 13:49:49.306658 19 service_latency.go:363] Got endpoints: latency-svc-98zmv [596.678845ms]
  I1005 13:49:49.318681 19 service_latency.go:356] Created: latency-svc-b6tz2
  I1005 13:49:49.357329 19 service_latency.go:363] Got endpoints: latency-svc-k2hdt [638.549625ms]
  I1005 13:49:49.373576 19 service_latency.go:356] Created: latency-svc-7vkvx
  I1005 13:49:49.404902 19 service_latency.go:363] Got endpoints: latency-svc-8xhz6 [675.592755ms]
  I1005 13:49:49.417611 19 service_latency.go:356] Created: latency-svc-26m2v
  I1005 13:49:49.457531 19 service_latency.go:363] Got endpoints: latency-svc-x2xft [718.113653ms]
  I1005 13:49:49.469459 19 service_latency.go:356] Created: latency-svc-lsjmh
  I1005 13:49:49.505788 19 service_latency.go:363] Got endpoints: latency-svc-9rnvz [750.14489ms]
  I1005 13:49:49.518037 19 service_latency.go:356] Created: latency-svc-fwqjk
  I1005 13:49:49.554339 19 service_latency.go:363] Got endpoints: latency-svc-6cz9v [747.503969ms]
  I1005 13:49:49.568549 19 service_latency.go:356] Created: latency-svc-xsf47
  I1005 13:49:49.604574 19 service_latency.go:363] Got endpoints: latency-svc-7qb8p [750.084928ms]
  I1005 13:49:49.618637 19 service_latency.go:356] Created: latency-svc-bxfs2
  I1005 13:49:49.654865 19 service_latency.go:363] Got endpoints: latency-svc-ctwkk [749.550899ms]
  I1005 13:49:49.669031 19 service_latency.go:356] Created: latency-svc-czqm6
  I1005 13:49:49.703916 19 service_latency.go:363] Got endpoints: latency-svc-rhv9b [750.255664ms]
  I1005 13:49:49.717178 19 service_latency.go:356] Created: latency-svc-zw7bn
  I1005 13:49:49.756250 19 service_latency.go:363] Got endpoints: latency-svc-z6kkk [751.709107ms]
  I1005 13:49:49.767483 19 service_latency.go:356] Created: latency-svc-jg4vx
  I1005 13:49:49.804510 19 service_latency.go:363] Got endpoints: latency-svc-xpqxt [748.100652ms]
  I1005 13:49:49.816977 19 service_latency.go:356] Created: latency-svc-nxpv2
  I1005 13:49:49.856621 19 service_latency.go:363] Got endpoints: latency-svc-8qblq [750.444533ms]
  I1005 13:49:49.871207 19 service_latency.go:356] Created: latency-svc-t784t
  I1005 13:49:49.904794 19 service_latency.go:363] Got endpoints: latency-svc-ftjnj [749.73376ms]
  I1005 13:49:49.919349 19 service_latency.go:356] Created: latency-svc-vl6xx
  I1005 13:49:49.955374 19 service_latency.go:363] Got endpoints: latency-svc-x2mt2 [750.912648ms]
  I1005 13:49:49.968348 19 service_latency.go:356] Created: latency-svc-sfbd7
  I1005 13:49:50.006781 19 service_latency.go:363] Got endpoints: latency-svc-mkct4 [750.845264ms]
  I1005 13:49:50.018913 19 service_latency.go:356] Created: latency-svc-xtfqq
  I1005 13:49:50.056053 19 service_latency.go:363] Got endpoints: latency-svc-b6tz2 [749.316459ms]
  I1005 13:49:50.066155 19 service_latency.go:356] Created: latency-svc-9rswq
  I1005 13:49:50.104595 19 service_latency.go:363] Got endpoints: latency-svc-7vkvx [747.037777ms]
  I1005 13:49:50.117508 19 service_latency.go:356] Created: latency-svc-9x6bw
  E1005 13:49:50.133628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:49:50.154779 19 service_latency.go:363] Got endpoints: latency-svc-26m2v [749.81967ms]
  I1005 13:49:50.170913 19 service_latency.go:356] Created: latency-svc-rl5r9
  I1005 13:49:50.205197 19 service_latency.go:363] Got endpoints: latency-svc-lsjmh [747.608941ms]
  I1005 13:49:50.216860 19 service_latency.go:356] Created: latency-svc-rb9rh
  I1005 13:49:50.253937 19 service_latency.go:363] Got endpoints: latency-svc-fwqjk [748.095613ms]
  I1005 13:49:50.265867 19 service_latency.go:356] Created: latency-svc-lrhw5
  I1005 13:49:50.304325 19 service_latency.go:363] Got endpoints: latency-svc-xsf47 [749.893011ms]
  I1005 13:49:50.318167 19 service_latency.go:356] Created: latency-svc-pdnbf
  I1005 13:49:50.356742 19 service_latency.go:363] Got endpoints: latency-svc-bxfs2 [752.057715ms]
  I1005 13:49:50.368693 19 service_latency.go:356] Created: latency-svc-gsbd2
  I1005 13:49:50.405479 19 service_latency.go:363] Got endpoints: latency-svc-czqm6 [750.562383ms]
  I1005 13:49:50.417956 19 service_latency.go:356] Created: latency-svc-45f4h
  I1005 13:49:50.455588 19 service_latency.go:363] Got endpoints: latency-svc-zw7bn [751.620478ms]
  I1005 13:49:50.471360 19 service_latency.go:356] Created: latency-svc-5mdp8
  I1005 13:49:50.505368 19 service_latency.go:363] Got endpoints: latency-svc-jg4vx [749.06213ms]
  I1005 13:49:50.517265 19 service_latency.go:356] Created: latency-svc-cq45h
  I1005 13:49:50.556936 19 service_latency.go:363] Got endpoints: latency-svc-nxpv2 [752.348798ms]
  I1005 13:49:50.568029 19 service_latency.go:356] Created: latency-svc-bv8vw
  I1005 13:49:50.606466 19 service_latency.go:363] Got endpoints: latency-svc-t784t [749.788405ms]
  I1005 13:49:50.620447 19 service_latency.go:356] Created: latency-svc-db2bc
  I1005 13:49:50.653143 19 service_latency.go:363] Got endpoints: latency-svc-vl6xx [748.292448ms]
  I1005 13:49:50.667316 19 service_latency.go:356] Created: latency-svc-rx7lq
  I1005 13:49:50.704889 19 service_latency.go:363] Got endpoints: latency-svc-sfbd7 [749.463878ms]
  I1005 13:49:50.717481 19 service_latency.go:356] Created: latency-svc-9fmh7
  I1005 13:49:50.755067 19 service_latency.go:363] Got endpoints: latency-svc-xtfqq [748.234895ms]
  I1005 13:49:50.769349 19 service_latency.go:356] Created: latency-svc-gs2gp
  I1005 13:49:50.806569 19 service_latency.go:363] Got endpoints: latency-svc-9rswq [750.45917ms]
  I1005 13:49:50.820857 19 service_latency.go:356] Created: latency-svc-q4898
  I1005 13:49:50.857193 19 service_latency.go:363] Got endpoints: latency-svc-9x6bw [752.547804ms]
  I1005 13:49:50.868533 19 service_latency.go:356] Created: latency-svc-z9cxt
  I1005 13:49:50.904288 19 service_latency.go:363] Got endpoints: latency-svc-rl5r9 [749.455755ms]
  I1005 13:49:50.919902 19 service_latency.go:356] Created: latency-svc-ptpn5
  I1005 13:49:50.954561 19 service_latency.go:363] Got endpoints: latency-svc-rb9rh [749.28126ms]
  I1005 13:49:50.968864 19 service_latency.go:356] Created: latency-svc-tbjqp
  I1005 13:49:51.005631 19 service_latency.go:363] Got endpoints: latency-svc-lrhw5 [751.632263ms]
  I1005 13:49:51.016433 19 service_latency.go:356] Created: latency-svc-mdsns
  I1005 13:49:51.056680 19 service_latency.go:363] Got endpoints: latency-svc-pdnbf [752.306403ms]
  I1005 13:49:51.069694 19 service_latency.go:356] Created: latency-svc-t4wxc
  I1005 13:49:51.103733 19 service_latency.go:363] Got endpoints: latency-svc-gsbd2 [746.929011ms]
  I1005 13:49:51.118805 19 service_latency.go:356] Created: latency-svc-mj6km
  E1005 13:49:51.133846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:49:51.153490 19 service_latency.go:363] Got endpoints: latency-svc-45f4h [747.706993ms]
  I1005 13:49:51.164784 19 service_latency.go:356] Created: latency-svc-pd8x5
  I1005 13:49:51.205783 19 service_latency.go:363] Got endpoints: latency-svc-5mdp8 [750.144597ms]
  I1005 13:49:51.218869 19 service_latency.go:356] Created: latency-svc-nhqjf
  I1005 13:49:51.255810 19 service_latency.go:363] Got endpoints: latency-svc-cq45h [750.397062ms]
  I1005 13:49:51.269388 19 service_latency.go:356] Created: latency-svc-mjp79
  I1005 13:49:51.306043 19 service_latency.go:363] Got endpoints: latency-svc-bv8vw [749.050174ms]
  I1005 13:49:51.319459 19 service_latency.go:356] Created: latency-svc-g9h49
  I1005 13:49:51.353368 19 service_latency.go:363] Got endpoints: latency-svc-db2bc [746.853468ms]
  I1005 13:49:51.368182 19 service_latency.go:356] Created: latency-svc-9smb9
  I1005 13:49:51.405707 19 service_latency.go:363] Got endpoints: latency-svc-rx7lq [752.511537ms]
  I1005 13:49:51.418287 19 service_latency.go:356] Created: latency-svc-ljqhj
  I1005 13:49:51.457088 19 service_latency.go:363] Got endpoints: latency-svc-9fmh7 [752.149582ms]
  I1005 13:49:51.473464 19 service_latency.go:356] Created: latency-svc-vjj8q
  I1005 13:49:51.505688 19 service_latency.go:363] Got endpoints: latency-svc-gs2gp [750.568943ms]
  I1005 13:49:51.519546 19 service_latency.go:356] Created: latency-svc-br7nx
  I1005 13:49:51.556158 19 service_latency.go:363] Got endpoints: latency-svc-q4898 [749.448699ms]
  I1005 13:49:51.568070 19 service_latency.go:356] Created: latency-svc-kr8v2
  I1005 13:49:51.602827 19 service_latency.go:363] Got endpoints: latency-svc-z9cxt [745.261595ms]
  I1005 13:49:51.616411 19 service_latency.go:356] Created: latency-svc-cbtpq
  I1005 13:49:51.655657 19 service_latency.go:363] Got endpoints: latency-svc-ptpn5 [751.227062ms]
  I1005 13:49:51.668261 19 service_latency.go:356] Created: latency-svc-xxldk
  I1005 13:49:51.704768 19 service_latency.go:363] Got endpoints: latency-svc-tbjqp [749.81848ms]
  I1005 13:49:51.719383 19 service_latency.go:356] Created: latency-svc-d6p9d
  I1005 13:49:51.754406 19 service_latency.go:363] Got endpoints: latency-svc-mdsns [748.719397ms]
  I1005 13:49:51.767474 19 service_latency.go:356] Created: latency-svc-29vwn
  I1005 13:49:51.805764 19 service_latency.go:363] Got endpoints: latency-svc-t4wxc [748.984593ms]
  I1005 13:49:51.820194 19 service_latency.go:356] Created: latency-svc-j9d5b
  I1005 13:49:51.854396 19 service_latency.go:363] Got endpoints: latency-svc-mj6km [750.607676ms]
  I1005 13:49:51.868046 19 service_latency.go:356] Created: latency-svc-kt6lr
  I1005 13:49:51.904487 19 service_latency.go:363] Got endpoints: latency-svc-pd8x5 [750.946859ms]
  I1005 13:49:51.917160 19 service_latency.go:356] Created: latency-svc-b8rn2
  I1005 13:49:51.955531 19 service_latency.go:363] Got endpoints: latency-svc-nhqjf [749.693475ms]
  I1005 13:49:51.967433 19 service_latency.go:356] Created: latency-svc-hkk5s
  I1005 13:49:52.004851 19 service_latency.go:363] Got endpoints: latency-svc-mjp79 [748.985295ms]
  I1005 13:49:52.018737 19 service_latency.go:356] Created: latency-svc-gxscp
  I1005 13:49:52.053494 19 service_latency.go:363] Got endpoints: latency-svc-g9h49 [747.390593ms]
  I1005 13:49:52.066981 19 service_latency.go:356] Created: latency-svc-b9dqx
  I1005 13:49:52.104876 19 service_latency.go:363] Got endpoints: latency-svc-9smb9 [751.455005ms]
  I1005 13:49:52.120194 19 service_latency.go:356] Created: latency-svc-bbrhl
  E1005 13:49:52.134348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:49:52.155005 19 service_latency.go:363] Got endpoints: latency-svc-ljqhj [749.245326ms]
  I1005 13:49:52.166728 19 service_latency.go:356] Created: latency-svc-z89xl
  I1005 13:49:52.205913 19 service_latency.go:363] Got endpoints: latency-svc-vjj8q [748.759257ms]
  I1005 13:49:52.219245 19 service_latency.go:356] Created: latency-svc-sv5mb
  I1005 13:49:52.252879 19 service_latency.go:363] Got endpoints: latency-svc-br7nx [747.062243ms]
  I1005 13:49:52.267561 19 service_latency.go:356] Created: latency-svc-k2k2t
  I1005 13:49:52.304481 19 service_latency.go:363] Got endpoints: latency-svc-kr8v2 [748.274354ms]
  I1005 13:49:52.315984 19 service_latency.go:356] Created: latency-svc-v4zfr
  I1005 13:49:52.355578 19 service_latency.go:363] Got endpoints: latency-svc-cbtpq [752.687071ms]
  I1005 13:49:52.374255 19 service_latency.go:356] Created: latency-svc-h8qmr
  I1005 13:49:52.406720 19 service_latency.go:363] Got endpoints: latency-svc-xxldk [751.012163ms]
  I1005 13:49:52.418821 19 service_latency.go:356] Created: latency-svc-t996q
  I1005 13:49:52.456711 19 service_latency.go:363] Got endpoints: latency-svc-d6p9d [751.878182ms]
  I1005 13:49:52.467698 19 service_latency.go:356] Created: latency-svc-kdmk6
  I1005 13:49:52.504706 19 service_latency.go:363] Got endpoints: latency-svc-29vwn [750.247193ms]
  I1005 13:49:52.516945 19 service_latency.go:356] Created: latency-svc-n7n9n
  I1005 13:49:52.556358 19 service_latency.go:363] Got endpoints: latency-svc-j9d5b [750.549076ms]
  I1005 13:49:52.570143 19 service_latency.go:356] Created: latency-svc-9hcxv
  I1005 13:49:52.603531 19 service_latency.go:363] Got endpoints: latency-svc-kt6lr [749.075627ms]
  I1005 13:49:52.619959 19 service_latency.go:356] Created: latency-svc-967kp
  I1005 13:49:52.654173 19 service_latency.go:363] Got endpoints: latency-svc-b8rn2 [749.635163ms]
  I1005 13:49:52.666515 19 service_latency.go:356] Created: latency-svc-45krf
  I1005 13:49:52.705821 19 service_latency.go:363] Got endpoints: latency-svc-hkk5s [750.243567ms]
  I1005 13:49:52.719578 19 service_latency.go:356] Created: latency-svc-qgkr4
  I1005 13:49:52.755486 19 service_latency.go:363] Got endpoints: latency-svc-gxscp [750.592902ms]
  I1005 13:49:52.769214 19 service_latency.go:356] Created: latency-svc-7gvdp
  I1005 13:49:52.807414 19 service_latency.go:363] Got endpoints: latency-svc-b9dqx [753.863152ms]
  I1005 13:49:52.821432 19 service_latency.go:356] Created: latency-svc-9w42f
  I1005 13:49:52.854577 19 service_latency.go:363] Got endpoints: latency-svc-bbrhl [749.653573ms]
  I1005 13:49:52.876876 19 service_latency.go:356] Created: latency-svc-7zp64
  I1005 13:49:52.906013 19 service_latency.go:363] Got endpoints: latency-svc-z89xl [750.946815ms]
  I1005 13:49:52.926373 19 service_latency.go:356] Created: latency-svc-krhnm
  I1005 13:49:52.956757 19 service_latency.go:363] Got endpoints: latency-svc-sv5mb [750.792159ms]
  I1005 13:49:52.972267 19 service_latency.go:356] Created: latency-svc-bjz4w
  I1005 13:49:53.004333 19 service_latency.go:363] Got endpoints: latency-svc-k2k2t [751.399501ms]
  I1005 13:49:53.015389 19 service_latency.go:356] Created: latency-svc-kg9r7
  I1005 13:49:53.055079 19 service_latency.go:363] Got endpoints: latency-svc-v4zfr [750.540294ms]
  I1005 13:49:53.067605 19 service_latency.go:356] Created: latency-svc-nsjpr
  I1005 13:49:53.104403 19 service_latency.go:363] Got endpoints: latency-svc-h8qmr [748.765557ms]
  I1005 13:49:53.117842 19 service_latency.go:356] Created: latency-svc-p78j2
  E1005 13:49:53.135197      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:49:53.153396 19 service_latency.go:363] Got endpoints: latency-svc-t996q [746.610901ms]
  I1005 13:49:53.165898 19 service_latency.go:356] Created: latency-svc-kr7rv
  I1005 13:49:53.205274 19 service_latency.go:363] Got endpoints: latency-svc-kdmk6 [748.506549ms]
  I1005 13:49:53.216356 19 service_latency.go:356] Created: latency-svc-hl4b5
  I1005 13:49:53.255861 19 service_latency.go:363] Got endpoints: latency-svc-n7n9n [751.090014ms]
  I1005 13:49:53.269042 19 service_latency.go:356] Created: latency-svc-j2r2j
  I1005 13:49:53.305027 19 service_latency.go:363] Got endpoints: latency-svc-9hcxv [748.606148ms]
  I1005 13:49:53.319699 19 service_latency.go:356] Created: latency-svc-gphcw
  I1005 13:49:53.354586 19 service_latency.go:363] Got endpoints: latency-svc-967kp [751.001137ms]
  I1005 13:49:53.367293 19 service_latency.go:356] Created: latency-svc-wdb8c
  I1005 13:49:53.406112 19 service_latency.go:363] Got endpoints: latency-svc-45krf [751.856963ms]
  I1005 13:49:53.418256 19 service_latency.go:356] Created: latency-svc-wmmqn
  I1005 13:49:53.457014 19 service_latency.go:363] Got endpoints: latency-svc-qgkr4 [751.143161ms]
  I1005 13:49:53.469134 19 service_latency.go:356] Created: latency-svc-xdjmh
  I1005 13:49:53.503318 19 service_latency.go:363] Got endpoints: latency-svc-7gvdp [747.772205ms]
  I1005 13:49:53.518133 19 service_latency.go:356] Created: latency-svc-fzwzj
  I1005 13:49:53.555460 19 service_latency.go:363] Got endpoints: latency-svc-9w42f [748.000327ms]
  I1005 13:49:53.568627 19 service_latency.go:356] Created: latency-svc-z7ptj
  I1005 13:49:53.605542 19 service_latency.go:363] Got endpoints: latency-svc-7zp64 [750.914424ms]
  I1005 13:49:53.619212 19 service_latency.go:356] Created: latency-svc-pq9c4
  I1005 13:49:53.655779 19 service_latency.go:363] Got endpoints: latency-svc-krhnm [749.7142ms]
  I1005 13:49:53.669257 19 service_latency.go:356] Created: latency-svc-qgjlj
  I1005 13:49:53.704051 19 service_latency.go:363] Got endpoints: latency-svc-bjz4w [747.245562ms]
  I1005 13:49:53.718281 19 service_latency.go:356] Created: latency-svc-9bgxh
  I1005 13:49:53.755183 19 service_latency.go:363] Got endpoints: latency-svc-kg9r7 [750.801428ms]
  I1005 13:49:53.768913 19 service_latency.go:356] Created: latency-svc-tkzsk
  I1005 13:49:53.803589 19 service_latency.go:363] Got endpoints: latency-svc-nsjpr [748.447239ms]
  I1005 13:49:53.815541 19 service_latency.go:356] Created: latency-svc-phwdj
  I1005 13:49:53.856463 19 service_latency.go:363] Got endpoints: latency-svc-p78j2 [751.866033ms]
  I1005 13:49:53.869269 19 service_latency.go:356] Created: latency-svc-t6xgp
  I1005 13:49:53.905506 19 service_latency.go:363] Got endpoints: latency-svc-kr7rv [752.052633ms]
  I1005 13:49:53.917498 19 service_latency.go:356] Created: latency-svc-hhhdf
  I1005 13:49:53.955454 19 service_latency.go:363] Got endpoints: latency-svc-hl4b5 [750.108082ms]
  I1005 13:49:53.970504 19 service_latency.go:356] Created: latency-svc-nrzrj
  I1005 13:49:54.004310 19 service_latency.go:363] Got endpoints: latency-svc-j2r2j [748.391414ms]
  I1005 13:49:54.019768 19 service_latency.go:356] Created: latency-svc-jh9pg
  I1005 13:49:54.053690 19 service_latency.go:363] Got endpoints: latency-svc-gphcw [748.610618ms]
  I1005 13:49:54.066407 19 service_latency.go:356] Created: latency-svc-tkwd6
  I1005 13:49:54.105984 19 service_latency.go:363] Got endpoints: latency-svc-wdb8c [751.338197ms]
  I1005 13:49:54.118577 19 service_latency.go:356] Created: latency-svc-j5hqv
  E1005 13:49:54.135821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:49:54.156511 19 service_latency.go:363] Got endpoints: latency-svc-wmmqn [750.236383ms]
  I1005 13:49:54.170935 19 service_latency.go:356] Created: latency-svc-h2mm5
  I1005 13:49:54.206496 19 service_latency.go:363] Got endpoints: latency-svc-xdjmh [749.421746ms]
  I1005 13:49:54.219889 19 service_latency.go:356] Created: latency-svc-z958n
  I1005 13:49:54.253404 19 service_latency.go:363] Got endpoints: latency-svc-fzwzj [750.037932ms]
  I1005 13:49:54.268819 19 service_latency.go:356] Created: latency-svc-9kbgn
  I1005 13:49:54.305575 19 service_latency.go:363] Got endpoints: latency-svc-z7ptj [749.895273ms]
  I1005 13:49:54.322212 19 service_latency.go:356] Created: latency-svc-7l96v
  I1005 13:49:54.360124 19 service_latency.go:363] Got endpoints: latency-svc-pq9c4 [754.523866ms]
  I1005 13:49:54.380602 19 service_latency.go:356] Created: latency-svc-xqgdm
  I1005 13:49:54.410609 19 service_latency.go:363] Got endpoints: latency-svc-qgjlj [754.74666ms]
  I1005 13:49:54.427487 19 service_latency.go:356] Created: latency-svc-6p6xx
  I1005 13:49:54.455865 19 service_latency.go:363] Got endpoints: latency-svc-9bgxh [751.716006ms]
  I1005 13:49:54.468637 19 service_latency.go:356] Created: latency-svc-k9mss
  I1005 13:49:54.504739 19 service_latency.go:363] Got endpoints: latency-svc-tkzsk [749.416429ms]
  I1005 13:49:54.520495 19 service_latency.go:356] Created: latency-svc-8rnmd
  I1005 13:49:54.555548 19 service_latency.go:363] Got endpoints: latency-svc-phwdj [751.907985ms]
  I1005 13:49:54.570759 19 service_latency.go:356] Created: latency-svc-v9jh6
  I1005 13:49:54.608259 19 service_latency.go:363] Got endpoints: latency-svc-t6xgp [751.746622ms]
  I1005 13:49:54.625034 19 service_latency.go:356] Created: latency-svc-6drtj
  I1005 13:49:54.659784 19 service_latency.go:363] Got endpoints: latency-svc-hhhdf [754.225199ms]
  I1005 13:49:54.678313 19 service_latency.go:356] Created: latency-svc-lpzft
  I1005 13:49:54.703615 19 service_latency.go:363] Got endpoints: latency-svc-nrzrj [748.103107ms]
  I1005 13:49:54.719410 19 service_latency.go:356] Created: latency-svc-wqmwh
  I1005 13:49:54.755136 19 service_latency.go:363] Got endpoints: latency-svc-jh9pg [750.769782ms]
  I1005 13:49:54.768862 19 service_latency.go:356] Created: latency-svc-674nr
  I1005 13:49:54.805187 19 service_latency.go:363] Got endpoints: latency-svc-tkwd6 [751.439743ms]
  I1005 13:49:54.819295 19 service_latency.go:356] Created: latency-svc-8k854
  I1005 13:49:54.855924 19 service_latency.go:363] Got endpoints: latency-svc-j5hqv [749.887683ms]
  I1005 13:49:54.867940 19 service_latency.go:356] Created: latency-svc-zkzpk
  I1005 13:49:54.906190 19 service_latency.go:363] Got endpoints: latency-svc-h2mm5 [749.615278ms]
  I1005 13:49:54.919242 19 service_latency.go:356] Created: latency-svc-l8pkj
  I1005 13:49:54.953606 19 service_latency.go:363] Got endpoints: latency-svc-z958n [747.051284ms]
  I1005 13:49:54.968978 19 service_latency.go:356] Created: latency-svc-q8lmk
  I1005 13:49:55.003408 19 service_latency.go:363] Got endpoints: latency-svc-9kbgn [749.9482ms]
  I1005 13:49:55.017336 19 service_latency.go:356] Created: latency-svc-9697h
  I1005 13:49:55.054636 19 service_latency.go:363] Got endpoints: latency-svc-7l96v [748.998766ms]
  I1005 13:49:55.068305 19 service_latency.go:356] Created: latency-svc-cjxn5
  I1005 13:49:55.106484 19 service_latency.go:363] Got endpoints: latency-svc-xqgdm [746.31098ms]
  I1005 13:49:55.119280 19 service_latency.go:356] Created: latency-svc-pjhmz
  E1005 13:49:55.136444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:49:55.155875 19 service_latency.go:363] Got endpoints: latency-svc-6p6xx [745.165685ms]
  I1005 13:49:55.168466 19 service_latency.go:356] Created: latency-svc-vdz8k
  I1005 13:49:55.204761 19 service_latency.go:363] Got endpoints: latency-svc-k9mss [748.853607ms]
  I1005 13:49:55.223718 19 service_latency.go:356] Created: latency-svc-t87n7
  I1005 13:49:55.254151 19 service_latency.go:363] Got endpoints: latency-svc-8rnmd [749.354445ms]
  I1005 13:49:55.267840 19 service_latency.go:356] Created: latency-svc-zkssk
  I1005 13:49:55.305300 19 service_latency.go:363] Got endpoints: latency-svc-v9jh6 [749.698939ms]
  I1005 13:49:55.317490 19 service_latency.go:356] Created: latency-svc-2j5ms
  I1005 13:49:55.357105 19 service_latency.go:363] Got endpoints: latency-svc-6drtj [748.796706ms]
  I1005 13:49:55.371958 19 service_latency.go:356] Created: latency-svc-2m2q2
  I1005 13:49:55.404067 19 service_latency.go:363] Got endpoints: latency-svc-lpzft [744.209564ms]
  I1005 13:49:55.424952 19 service_latency.go:356] Created: latency-svc-kfpsk
  I1005 13:49:55.453787 19 service_latency.go:363] Got endpoints: latency-svc-wqmwh [750.119691ms]
  I1005 13:49:55.466484 19 service_latency.go:356] Created: latency-svc-gcw6p
  I1005 13:49:55.507373 19 service_latency.go:363] Got endpoints: latency-svc-674nr [752.184085ms]
  I1005 13:49:55.519847 19 service_latency.go:356] Created: latency-svc-d6wnt
  I1005 13:49:55.555845 19 service_latency.go:363] Got endpoints: latency-svc-8k854 [750.584424ms]
  I1005 13:49:55.568328 19 service_latency.go:356] Created: latency-svc-492t6
  I1005 13:49:55.605443 19 service_latency.go:363] Got endpoints: latency-svc-zkzpk [749.43709ms]
  I1005 13:49:55.618954 19 service_latency.go:356] Created: latency-svc-lbxbs
  I1005 13:49:55.654093 19 service_latency.go:363] Got endpoints: latency-svc-l8pkj [747.787313ms]
  I1005 13:49:55.667789 19 service_latency.go:356] Created: latency-svc-c8p8b
  I1005 13:49:55.704251 19 service_latency.go:363] Got endpoints: latency-svc-q8lmk [750.594205ms]
  I1005 13:49:55.717897 19 service_latency.go:356] Created: latency-svc-wnrtp
  I1005 13:49:55.754569 19 service_latency.go:363] Got endpoints: latency-svc-9697h [751.105992ms]
  I1005 13:49:55.765879 19 service_latency.go:356] Created: latency-svc-9x8cb
  I1005 13:49:55.806431 19 service_latency.go:363] Got endpoints: latency-svc-cjxn5 [751.738666ms]
  I1005 13:49:55.819423 19 service_latency.go:356] Created: latency-svc-q9x7k
  I1005 13:49:55.855592 19 service_latency.go:363] Got endpoints: latency-svc-pjhmz [749.056932ms]
  I1005 13:49:55.870407 19 service_latency.go:356] Created: latency-svc-ddhgf
  I1005 13:49:55.905773 19 service_latency.go:363] Got endpoints: latency-svc-vdz8k [749.848162ms]
  I1005 13:49:55.919602 19 service_latency.go:356] Created: latency-svc-pdj6p
  I1005 13:49:55.954021 19 service_latency.go:363] Got endpoints: latency-svc-t87n7 [749.109103ms]
  I1005 13:49:55.967204 19 service_latency.go:356] Created: latency-svc-qvqlq
  I1005 13:49:56.006790 19 service_latency.go:363] Got endpoints: latency-svc-zkssk [752.53095ms]
  I1005 13:49:56.020353 19 service_latency.go:356] Created: latency-svc-tkdfh
  I1005 13:49:56.055354 19 service_latency.go:363] Got endpoints: latency-svc-2j5ms [750.005326ms]
  I1005 13:49:56.068412 19 service_latency.go:356] Created: latency-svc-5jp4s
  I1005 13:49:56.104678 19 service_latency.go:363] Got endpoints: latency-svc-2m2q2 [747.521765ms]
  E1005 13:49:56.136971      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:49:56.168810 19 service_latency.go:363] Got endpoints: latency-svc-kfpsk [764.539753ms]
  I1005 13:49:56.176458 19 service_latency.go:356] Created: latency-svc-nh78g
  I1005 13:49:56.184183 19 service_latency.go:356] Created: latency-svc-nw5fq
  I1005 13:49:56.203728 19 service_latency.go:363] Got endpoints: latency-svc-gcw6p [749.876045ms]
  I1005 13:49:56.255994 19 service_latency.go:363] Got endpoints: latency-svc-d6wnt [748.566538ms]
  I1005 13:49:56.304276 19 service_latency.go:363] Got endpoints: latency-svc-492t6 [748.358348ms]
  I1005 13:49:56.355949 19 service_latency.go:363] Got endpoints: latency-svc-lbxbs [750.449008ms]
  I1005 13:49:56.405363 19 service_latency.go:363] Got endpoints: latency-svc-c8p8b [751.214664ms]
  I1005 13:49:56.456371 19 service_latency.go:363] Got endpoints: latency-svc-wnrtp [752.066328ms]
  I1005 13:49:56.503471 19 service_latency.go:363] Got endpoints: latency-svc-9x8cb [748.848642ms]
  I1005 13:49:56.555457 19 service_latency.go:363] Got endpoints: latency-svc-q9x7k [748.975684ms]
  I1005 13:49:56.605368 19 service_latency.go:363] Got endpoints: latency-svc-ddhgf [749.713891ms]
  I1005 13:49:56.656710 19 service_latency.go:363] Got endpoints: latency-svc-pdj6p [750.885173ms]
  I1005 13:49:56.705112 19 service_latency.go:363] Got endpoints: latency-svc-qvqlq [750.748782ms]
  I1005 13:49:56.755848 19 service_latency.go:363] Got endpoints: latency-svc-tkdfh [749.007413ms]
  I1005 13:49:56.803638 19 service_latency.go:363] Got endpoints: latency-svc-5jp4s [748.241123ms]
  I1005 13:49:56.855358 19 service_latency.go:363] Got endpoints: latency-svc-nh78g [750.602801ms]
  I1005 13:49:56.904904 19 service_latency.go:363] Got endpoints: latency-svc-nw5fq [736.035628ms]
  I1005 13:49:56.905012 19 service_latency.go:114] Latencies: [28.551186ms 38.325142ms 44.226668ms 50.858394ms 59.884494ms 69.547596ms 79.036441ms 88.530659ms 99.476878ms 108.414216ms 120.142632ms 127.432373ms 134.272949ms 135.699233ms 144.658987ms 149.639643ms 150.28908ms 151.336048ms 152.223618ms 153.033604ms 153.365212ms 153.86772ms 158.310989ms 158.401434ms 158.443366ms 161.297096ms 161.405903ms 163.528919ms 165.147598ms 165.716752ms 167.558829ms 169.88086ms 170.836684ms 171.681981ms 172.011057ms 174.369254ms 175.163421ms 196.448083ms 226.906502ms 274.328952ms 314.919189ms 352.46026ms 391.586006ms 429.348089ms 472.280525ms 510.520473ms 550.055726ms 596.678845ms 638.549625ms 675.592755ms 718.113653ms 736.035628ms 744.209564ms 745.165685ms 745.261595ms 746.31098ms 746.610901ms 746.853468ms 746.929011ms 747.037777ms 747.051284ms 747.062243ms 747.245562ms 747.390593ms 747.503969ms 747.521765ms 747.608941ms 747.706993ms 747.772205ms 747.787313ms 748.000327ms 748.095613ms 748.100652ms 748.103107ms 748.234895ms 748.241123ms 748.274354ms 748.292448ms 748.358348ms 748.391414ms 748.447239ms 748.506549ms 748.566538ms 748.606148ms 748.610618ms 748.719397ms 748.759257ms 748.765557ms 748.796706ms 748.848642ms 748.853607ms 748.975684ms 748.984593ms 748.985295ms 748.998766ms 749.007413ms 749.050174ms 749.056932ms 749.06213ms 749.075627ms 749.109103ms 749.245326ms 749.28126ms 749.316459ms 749.354445ms 749.416429ms 749.421746ms 749.43709ms 749.448699ms 749.455755ms 749.463878ms 749.550899ms 749.615278ms 749.635163ms 749.653573ms 749.693475ms 749.698939ms 749.713891ms 749.7142ms 749.73376ms 749.788405ms 749.81848ms 749.81967ms 749.848162ms 749.876045ms 749.887683ms 749.893011ms 749.895273ms 749.9482ms 750.005326ms 750.037932ms 750.084928ms 750.108082ms 750.119691ms 750.144597ms 750.14489ms 750.236383ms 750.243567ms 750.247193ms 750.255664ms 750.397062ms 750.444533ms 750.449008ms 750.45917ms 750.540294ms 750.549076ms 750.562383ms 750.568943ms 750.584424ms 750.592902ms 750.594205ms 750.602801ms 750.607676ms 750.748782ms 750.769782ms 750.792159ms 750.801428ms 750.845264ms 750.885173ms 750.912648ms 750.914424ms 750.946815ms 750.946859ms 751.001137ms 751.012163ms 751.090014ms 751.105992ms 751.143161ms 751.214664ms 751.227062ms 751.338197ms 751.399501ms 751.439743ms 751.455005ms 751.620478ms 751.632263ms 751.709107ms 751.716006ms 751.738666ms 751.746622ms 751.856963ms 751.866033ms 751.878182ms 751.907985ms 752.052633ms 752.057715ms 752.066328ms 752.149582ms 752.184085ms 752.306403ms 752.348798ms 752.511537ms 752.53095ms 752.547804ms 752.687071ms 753.863152ms 754.225199ms 754.523866ms 754.74666ms 764.539753ms]
  I1005 13:49:56.905033 19 service_latency.go:118] 50 %ile: 749.109103ms
  I1005 13:49:56.905040 19 service_latency.go:119] 90 %ile: 751.856963ms
  I1005 13:49:56.905046 19 service_latency.go:120] 99 %ile: 754.74666ms
  I1005 13:49:56.905084 19 service_latency.go:121] Total sample count: 200
  I1005 13:49:56.905186 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-9117" for this suite. @ 10/05/24 13:49:56.91
• [9.772 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 10/05/24 13:49:56.917
  I1005 13:49:56.917884 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/05/24 13:49:56.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:49:56.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:49:56.936
  I1005 13:49:56.938106 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:49:57.137322      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:49:58.145732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/05/24 13:49:58.292
  I1005 13:49:58.292093 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-9119 --namespace=crd-publish-openapi-9119 create -f -'
  I1005 13:49:58.365412 19 builder.go:146] stderr: ""
  I1005 13:49:58.365453 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1141-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1005 13:49:58.365504 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-9119 --namespace=crd-publish-openapi-9119 delete e2e-test-crd-publish-openapi-1141-crds test-cr'
  I1005 13:49:58.420135 19 builder.go:146] stderr: ""
  I1005 13:49:58.420180 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1141-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1005 13:49:58.420240 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-9119 --namespace=crd-publish-openapi-9119 apply -f -'
  I1005 13:49:58.517510 19 builder.go:146] stderr: ""
  I1005 13:49:58.517566 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1141-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1005 13:49:58.517613 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-9119 --namespace=crd-publish-openapi-9119 delete e2e-test-crd-publish-openapi-1141-crds test-cr'
  I1005 13:49:58.597009 19 builder.go:146] stderr: ""
  I1005 13:49:58.597060 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1141-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 10/05/24 13:49:58.597
  I1005 13:49:58.597135 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=crd-publish-openapi-9119 explain e2e-test-crd-publish-openapi-1141-crds'
  I1005 13:49:58.638791 19 builder.go:146] stderr: ""
  I1005 13:49:58.638860 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-1141-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E1005 13:49:59.145847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:49:59.842137 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9119" for this suite. @ 10/05/24 13:49:59.85
• [2.941 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 10/05/24 13:49:59.859
  I1005 13:49:59.859028 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename resourcequota @ 10/05/24 13:49:59.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:49:59.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:49:59.884
  STEP: Creating a ResourceQuota @ 10/05/24 13:49:59.887
  STEP: Getting a ResourceQuota @ 10/05/24 13:49:59.893
  STEP: Updating a ResourceQuota @ 10/05/24 13:49:59.9
  STEP: Verifying a ResourceQuota was modified @ 10/05/24 13:49:59.906
  STEP: Deleting a ResourceQuota @ 10/05/24 13:49:59.913
  STEP: Verifying the deleted ResourceQuota @ 10/05/24 13:49:59.92
  I1005 13:49:59.924875 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9809" for this suite. @ 10/05/24 13:49:59.929
• [0.078 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 10/05/24 13:49:59.936
  I1005 13:49:59.936923 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:49:59.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:49:59.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:49:59.961
  STEP: Creating projection with secret that has name projected-secret-test-map-dc1d5b30-a160-42cf-8d78-43168f5e5356 @ 10/05/24 13:49:59.964
  STEP: Creating a pod to test consume secrets @ 10/05/24 13:49:59.968
  E1005 13:50:00.146470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:01.146659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:02.147323      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:03.147368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:50:03.995
  I1005 13:50:04.000071 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-projected-secrets-faee12ec-f6cd-4818-926a-7c5123fe32d9 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/05/24 13:50:04.012
  I1005 13:50:04.031979 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1424" for this suite. @ 10/05/24 13:50:04.037
• [4.111 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 10/05/24 13:50:04.049
  I1005 13:50:04.049409 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename volumeattachment @ 10/05/24 13:50:04.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:50:04.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:50:04.078
  STEP: Create VolumeAttachment "va-e2e-b4gp4" on node "ip-172-31-29-107" @ 10/05/24 13:50:04.086
  STEP: Get VolumeAttachment "va-e2e-b4gp4" on node "ip-172-31-29-107" @ 10/05/24 13:50:04.091
  STEP: Patch VolumeAttachment "va-e2e-b4gp4" on node "ip-172-31-29-107" @ 10/05/24 13:50:04.095
  STEP: List VolumeAttachments with "va-e2e-b4gp4=patched" label @ 10/05/24 13:50:04.102
  STEP: Delete VolumeAttachment "va-e2e-b4gp4" on node "ip-172-31-29-107" @ 10/05/24 13:50:04.106
  STEP: Confirm deletion of VolumeAttachment "va-e2e-b4gp4" on node "ip-172-31-29-107" @ 10/05/24 13:50:04.115
  STEP: Create VolumeAttachment "va-e2e-l76zf" on node "ip-172-31-29-107" @ 10/05/24 13:50:04.123
  STEP: Update the VolumeAttachment "va-e2e-l76zf" on node "ip-172-31-29-107" with label "va-e2e=updated" @ 10/05/24 13:50:04.128
  STEP: Create VolumeAttachment "va-e2e-v5gqh" on node "ip-172-31-5-28" @ 10/05/24 13:50:04.145
  E1005 13:50:04.148264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Update the VolumeAttachment "va-e2e-v5gqh" on node "ip-172-31-5-28" with label "va-e2e=updated" @ 10/05/24 13:50:04.151
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 10/05/24 13:50:04.159
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 10/05/24 13:50:04.178
  I1005 13:50:04.182425 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-960" for this suite. @ 10/05/24 13:50:04.186
• [0.147 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 10/05/24 13:50:04.196
  I1005 13:50:04.196238 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename daemonsets @ 10/05/24 13:50:04.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:50:04.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:50:04.224
  STEP: Creating a simple DaemonSet "daemon-set" @ 10/05/24 13:50:04.248
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/05/24 13:50:04.254
  I1005 13:50:04.259300 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:50:04.259342 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:50:04.263053 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:50:04.263075 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  E1005 13:50:05.148457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:05.260849 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:50:05.260900 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:50:05.265842 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1005 13:50:05.265864 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  E1005 13:50:06.148564      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:06.259396 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:50:06.259432 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:50:06.264707 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1005 13:50:06.264734 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 10/05/24 13:50:06.268
  I1005 13:50:06.284617 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:50:06.284657 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:50:06.291074 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1005 13:50:06.291103 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 10/05/24 13:50:06.291
  E1005 13:50:07.149450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 10/05/24 13:50:07.299
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1813, will wait for the garbage collector to delete the pods @ 10/05/24 13:50:07.299
  I1005 13:50:07.363761 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.653995ms
  E1005 13:50:08.149683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:09.150575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:09.264579 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 1.900813898s
  E1005 13:50:10.151108      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:10.369998 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:50:10.370030 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1005 13:50:10.374798 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"39923"},"items":null}

  I1005 13:50:10.378727 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"39923"},"items":null}

  I1005 13:50:10.394636 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1813" for this suite. @ 10/05/24 13:50:10.398
• [6.211 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 10/05/24 13:50:10.407
  I1005 13:50:10.407524 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:50:10.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:50:10.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:50:10.43
  STEP: Creating the pod @ 10/05/24 13:50:10.432
  E1005 13:50:11.151193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:12.151379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:12.980155 19 pod_client.go:173] Successfully updated pod "annotationupdate8945e992-6eac-4497-b452-8d98e07782a3"
  E1005 13:50:13.152130      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:14.152403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:15.153011      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:16.153496      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:17.009197 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1018" for this suite. @ 10/05/24 13:50:17.014
• [6.615 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 10/05/24 13:50:17.022
  I1005 13:50:17.022822 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 13:50:17.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:50:17.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:50:17.047
  STEP: create deployment with httpd image @ 10/05/24 13:50:17.05
  I1005 13:50:17.050646 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-6833 create -f -'
  I1005 13:50:17.120155 19 builder.go:146] stderr: ""
  I1005 13:50:17.120192 19 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 10/05/24 13:50:17.12
  I1005 13:50:17.120308 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-6833 diff -f -'
  E1005 13:50:17.155394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:18.155505      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:19.155719      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:20.155871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:21.156100      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:21.440208 19 builder.go:135] rc: 1
  I1005 13:50:21.440326 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-6833 delete -f -'
  I1005 13:50:21.495538 19 builder.go:146] stderr: ""
  I1005 13:50:21.495586 19 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1005 13:50:21.495712 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6833" for this suite. @ 10/05/24 13:50:21.502
• [4.490 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 10/05/24 13:50:21.514
  I1005 13:50:21.514140 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename resourcequota @ 10/05/24 13:50:21.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:50:21.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:50:21.537
  STEP: Counting existing ResourceQuota @ 10/05/24 13:50:21.54
  E1005 13:50:22.156699      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:23.156936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:24.157831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:25.157992      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:26.158448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/05/24 13:50:26.545
  STEP: Ensuring resource quota status is calculated @ 10/05/24 13:50:26.552
  E1005 13:50:27.158653      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:28.158801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 10/05/24 13:50:28.559
  STEP: Ensuring resource quota status captures replicaset creation @ 10/05/24 13:50:28.572
  E1005 13:50:29.159445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:30.159872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 10/05/24 13:50:30.579
  STEP: Ensuring resource quota status released usage @ 10/05/24 13:50:30.587
  E1005 13:50:31.160396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:32.160498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:32.594052 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6550" for this suite. @ 10/05/24 13:50:32.598
• [11.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 10/05/24 13:50:32.608
  I1005 13:50:32.608335 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:50:32.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:50:32.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:50:32.631
  STEP: Creating configMap with name projected-configmap-test-volume-ac4c6bd2-832d-43ef-8f39-4a4cfbee9b16 @ 10/05/24 13:50:32.634
  STEP: Creating a pod to test consume configMaps @ 10/05/24 13:50:32.639
  E1005 13:50:33.160606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:34.160654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:35.160756      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:36.160890      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:50:36.667
  I1005 13:50:36.670984 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-projected-configmaps-31939ebf-e5c8-4756-8dab-eb6d6a3e9324 container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 13:50:36.68
  I1005 13:50:36.703175 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-372" for this suite. @ 10/05/24 13:50:36.707
• [4.107 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 10/05/24 13:50:36.715
  I1005 13:50:36.715481 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename deployment @ 10/05/24 13:50:36.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:50:36.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:50:36.747
  I1005 13:50:36.749565 19 deployment.go:1645] Creating simple deployment test-new-deployment
  I1005 13:50:36.763766 19 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  E1005 13:50:37.160967      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:38.161079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 10/05/24 13:50:38.782
  STEP: updating a scale subresource @ 10/05/24 13:50:38.786
  STEP: verifying the deployment Spec.Replicas was modified @ 10/05/24 13:50:38.793
  STEP: Patch a scale subresource @ 10/05/24 13:50:38.797
  I1005 13:50:38.815153 19 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8408",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6448c837-bf86-4a27-ada8-a09080f7ccc4",
      ResourceVersion: (string) (len=5) "40171",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863733036,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1005 13:50:38.824324 19 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8408",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06b9c834-ed3e-4fae-90bb-13e21493defe",
      ResourceVersion: (string) (len=5) "40176",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863733036,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "6448c837-bf86-4a27-ada8-a09080f7ccc4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 34 34 38 63 38  33 37 2d 62 66 38 36 2d  |\"6448c837-bf86-|
              00000120  34 61 32 37 2d 61 64 61  38 2d 61 30 39 30 38 30  |4a27-ada8-a09080|
              00000130  66 37 63 63 63 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f7ccc4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1005 13:50:38.828594 19 deployment.go:67] Pod "test-new-deployment-64bcfc6446-gbfr2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-gbfr2",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8408",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d0cf325-ac6f-4727-818b-486e24d6d2d0",
      ResourceVersion: (string) (len=5) "40174",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863733038,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "06b9c834-ed3e-4fae-90bb-13e21493defe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  62 39 63 38 33 34 2d 65  |d\":\"06b9c834-e|
              00000090  64 33 65 2d 34 66 61 65  2d 39 30 62 62 2d 31 33  |d3e-4fae-90bb-13|
              000000a0  65 32 31 34 39 33 64 65  66 65 5c 22 7d 22 3a 7b  |e21493defe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x6rbh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x6rbh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-60",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:50:38.829670 19 deployment.go:67] Pod "test-new-deployment-64bcfc6446-rms54" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-rms54",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8408",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4ec22b2-522b-45b1-9f95-5f3390e10031",
      ResourceVersion: (string) (len=5) "40166",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863733036,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "06b9c834-ed3e-4fae-90bb-13e21493defe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  62 39 63 38 33 34 2d 65  |d\":\"06b9c834-e|
              00000090  64 33 65 2d 34 66 61 65  2d 39 30 62 62 2d 31 33  |d3e-4fae-90bb-13|
              000000a0  65 32 31 34 39 33 64 65  66 65 5c 22 7d 22 3a 7b  |e21493defe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 39  2e 37 36 5c 22 7d 22 3a  |2.168.59.76\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-csj7l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-csj7l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.162",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.162"
        }
      },
      PodIP: (string) (len=13) "192.168.59.76",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.59.76"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863733036,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863733037,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1c703c3359f6e258cb01f8bde2f3add8e85dc8b0f413622e41b9e38e14e7cb76",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-csj7l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1005 13:50:38.830766 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8408" for this suite. @ 10/05/24 13:50:38.837
• [2.134 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 10/05/24 13:50:38.85
  I1005 13:50:38.850140 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 13:50:38.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:50:38.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:50:38.881
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 13:50:38.884
  E1005 13:50:39.162143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:40.162388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:41.162528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:42.162871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:50:42.91
  I1005 13:50:42.914720 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downwardapi-volume-3b5abdfb-9b66-437c-8c39-1d4047868084 container client-container: <nil>
  STEP: delete the pod @ 10/05/24 13:50:42.923
  I1005 13:50:42.939790 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5098" for this suite. @ 10/05/24 13:50:42.943
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 10/05/24 13:50:42.952
  I1005 13:50:42.952656 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 13:50:42.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:50:42.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:50:42.976
  STEP: Setting up server cert @ 10/05/24 13:50:43.006
  E1005 13:50:43.163413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 13:50:43.515
  STEP: Deploying the webhook pod @ 10/05/24 13:50:43.526
  STEP: Wait for the deployment to be ready @ 10/05/24 13:50:43.54
  I1005 13:50:43.549010 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1005 13:50:44.163644      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:45.163915      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/05/24 13:50:45.564
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 13:50:45.576
  E1005 13:50:46.164841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:46.576669 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 10/05/24 13:50:46.586
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/05/24 13:50:46.6
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 10/05/24 13:50:46.607
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/05/24 13:50:46.62
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 10/05/24 13:50:46.635
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/05/24 13:50:46.643
  I1005 13:50:46.696571 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8255" for this suite. @ 10/05/24 13:50:46.701
  STEP: Destroying namespace "webhook-markers-3310" for this suite. @ 10/05/24 13:50:46.714
• [3.770 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 10/05/24 13:50:46.722
  I1005 13:50:46.722309 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename job @ 10/05/24 13:50:46.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:50:46.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:50:46.747
  STEP: Creating a job @ 10/05/24 13:50:46.749
  STEP: Ensuring active pods == parallelism @ 10/05/24 13:50:46.755
  E1005 13:50:47.165447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:48.165644      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 10/05/24 13:50:48.76
  E1005 13:50:49.166553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:49.279286 19 pod_client.go:173] Successfully updated pod "adopt-release-lk7ch"
  STEP: Checking that the Job readopts the Pod @ 10/05/24 13:50:49.279
  E1005 13:50:50.166658      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:51.166735      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 10/05/24 13:50:51.289
  I1005 13:50:51.802386 19 pod_client.go:173] Successfully updated pod "adopt-release-lk7ch"
  STEP: Checking that the Job releases the Pod @ 10/05/24 13:50:51.802
  E1005 13:50:52.167796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:50:53.168513      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:53.813713 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3985" for this suite. @ 10/05/24 13:50:53.819
• [7.105 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 10/05/24 13:50:53.827
  I1005 13:50:53.827415 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename daemonsets @ 10/05/24 13:50:53.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:50:53.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:50:53.852
  I1005 13:50:53.876844 19 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 10/05/24 13:50:53.884
  I1005 13:50:53.889210 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:50:53.889258 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 10/05/24 13:50:53.889
  I1005 13:50:53.908162 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:50:53.908196 19 fixtures.go:130] Node ip-172-31-83-192 is running 0 daemon pod, expected 1
  E1005 13:50:54.169453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:54.910815 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:50:54.910850 19 fixtures.go:130] Node ip-172-31-83-192 is running 0 daemon pod, expected 1
  E1005 13:50:55.170149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:55.910601 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1005 13:50:55.910636 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 10/05/24 13:50:55.915
  I1005 13:50:55.933198 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1005 13:50:55.933245 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E1005 13:50:56.170581      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:56.934494 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:50:56.934575 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 10/05/24 13:50:56.934
  I1005 13:50:56.952180 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:50:56.952239 19 fixtures.go:130] Node ip-172-31-83-192 is running 0 daemon pod, expected 1
  E1005 13:50:57.171544      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:57.952244 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:50:57.952278 19 fixtures.go:130] Node ip-172-31-83-192 is running 0 daemon pod, expected 1
  E1005 13:50:58.172447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:50:58.951573 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1005 13:50:58.951604 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/05/24 13:50:58.959
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8896, will wait for the garbage collector to delete the pods @ 10/05/24 13:50:58.959
  I1005 13:50:59.023139 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.798979ms
  I1005 13:50:59.124064 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.920029ms
  E1005 13:50:59.173306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:00.174340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:51:00.430462 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:51:00.430508 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1005 13:51:00.434538 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40549"},"items":null}

  I1005 13:51:00.438425 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40549"},"items":null}

  I1005 13:51:00.463567 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8896" for this suite. @ 10/05/24 13:51:00.467
• [6.649 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 10/05/24 13:51:00.476
  I1005 13:51:00.476969 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename configmap @ 10/05/24 13:51:00.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:51:00.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:51:00.499
  STEP: Creating configMap that has name configmap-test-emptyKey-a35657e4-09fc-45d6-a753-151eaefd7e3c @ 10/05/24 13:51:00.501
  I1005 13:51:00.502957 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1307" for this suite. @ 10/05/24 13:51:00.507
• [0.038 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 10/05/24 13:51:00.515
  I1005 13:51:00.515474 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:51:00.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:51:00.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:51:00.535
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-ce2d42f9-2e0b-4b05-ba30-4acf4f16b5f2 @ 10/05/24 13:51:00.542
  STEP: Creating the pod @ 10/05/24 13:51:00.547
  E1005 13:51:01.175261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:02.175417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-ce2d42f9-2e0b-4b05-ba30-4acf4f16b5f2 @ 10/05/24 13:51:02.585
  STEP: waiting to observe update in volume @ 10/05/24 13:51:02.59
  E1005 13:51:03.176098      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:04.176276      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:05.176942      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:06.177048      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:07.177169      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:08.177396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:09.178447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:10.178543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:11.178699      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:12.179448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:13.180390      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:14.180486      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:15.181448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:16.181678      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:17.181754      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:18.181851      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:19.182636      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:20.182887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:21.183607      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:22.183773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:23.184779      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:24.185027      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:25.185791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:26.186009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:27.186283      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:28.186722      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:29.186830      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:30.186918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:31.187959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:32.188064      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:33.188457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:34.189483      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:35.190371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:36.190499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:37.190719      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:38.190889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:39.191432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:40.191530      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:41.192445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:42.192814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:43.193543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:44.193725      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:45.194338      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:46.194569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:47.195525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:48.195666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:49.195731      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:50.195979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:51.196768      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:52.197053      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:53.197566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:54.198450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:55.198917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:56.199032      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:57.199130      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:58.199271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:51:59.199753      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:00.199868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:01.199992      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:02.200125      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:03.200439      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:04.201472      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:05.201565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:06.201681      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:07.202469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:08.202692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:09.202918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:10.203086      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:11.203375      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:12.203499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:13.204055      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:14.204298      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:15.204932      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:16.205476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:17.206067      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:18.206323      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:19.207068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:20.207150      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:21.207899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:22.208212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:23.208366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:24.208400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:25.209167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:26.209305      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:27.209408      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:28.209493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:29.209617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:30.209734      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:52:31.069625 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5857" for this suite. @ 10/05/24 13:52:31.074
• [90.568 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 10/05/24 13:52:31.083
  I1005 13:52:31.083549 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename services @ 10/05/24 13:52:31.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:52:31.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:52:31.106
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-4177 @ 10/05/24 13:52:31.109
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/05/24 13:52:31.128
  STEP: creating service externalsvc in namespace services-4177 @ 10/05/24 13:52:31.128
  STEP: creating replication controller externalsvc in namespace services-4177 @ 10/05/24 13:52:31.142
  I1005 13:52:31.151036      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4177, replica count: 2
  E1005 13:52:31.210070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:32.210950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:33.211903      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:52:34.203034      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 10/05/24 13:52:34.208
  E1005 13:52:34.211907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:52:34.232287 19 resource.go:361] Creating new exec pod
  E1005 13:52:35.212499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:36.213501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:52:36.252909 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=services-4177 exec execpodb2x7j -- /bin/sh -x -c nslookup nodeport-service.services-4177.svc.cluster.local'
  I1005 13:52:36.359840 19 builder.go:146] stderr: "+ nslookup nodeport-service.services-4177.svc.cluster.local\n"
  I1005 13:52:36.359885 19 builder.go:147] stdout: "Server:\t\t10.152.183.202\nAddress:\t10.152.183.202#53\n\nnodeport-service.services-4177.svc.cluster.local\tcanonical name = externalsvc.services-4177.svc.cluster.local.\nName:\texternalsvc.services-4177.svc.cluster.local\nAddress: 10.152.183.245\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4177, will wait for the garbage collector to delete the pods @ 10/05/24 13:52:36.36
  I1005 13:52:36.423776 19 resources.go:139] Deleting ReplicationController externalsvc took: 9.601784ms
  I1005 13:52:36.524245 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.439929ms
  E1005 13:52:37.213757      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:38.214421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:39.214744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:52:39.543197 19 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I1005 13:52:39.555049 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4177" for this suite. @ 10/05/24 13:52:39.56
• [8.486 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 10/05/24 13:52:39.569
  I1005 13:52:39.569532 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/05/24 13:52:39.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:52:39.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:52:39.591
  I1005 13:52:39.593710 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:52:40.215376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:41.216380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:42.216670      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:43.217692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:44.218079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:45.218804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:52:45.836528 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1135" for this suite. @ 10/05/24 13:52:45.841
• [6.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 10/05/24 13:52:45.85
  I1005 13:52:45.850962 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename svcaccounts @ 10/05/24 13:52:45.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:52:45.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:52:45.875
  STEP: creating a ServiceAccount @ 10/05/24 13:52:45.877
  STEP: watching for the ServiceAccount to be added @ 10/05/24 13:52:45.888
  STEP: patching the ServiceAccount @ 10/05/24 13:52:45.889
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 10/05/24 13:52:45.895
  STEP: deleting the ServiceAccount @ 10/05/24 13:52:45.9
  I1005 13:52:45.917955 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6364" for this suite. @ 10/05/24 13:52:45.923
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 10/05/24 13:52:45.93
  I1005 13:52:45.930481 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename configmap @ 10/05/24 13:52:45.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:52:45.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:52:45.95
  I1005 13:52:45.997008 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1363" for this suite. @ 10/05/24 13:52:46
• [0.078 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 10/05/24 13:52:46.008
  I1005 13:52:46.008889 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename sched-preemption @ 10/05/24 13:52:46.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:52:46.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:52:46.031
  I1005 13:52:46.049728 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1005 13:52:46.218907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:47.219806      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:48.220861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:49.221467      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:50.222279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:51.222400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:52.223166      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:53.223378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:54.224461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:55.224673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:56.224852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:57.225058      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:58.225479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:52:59.225581      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:00.226477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:01.226633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:02.226787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:03.227465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:04.227809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:05.228427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:06.228546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:07.228651      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:08.228962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:09.229047      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:10.229146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:11.229256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:12.229387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:13.229547      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:14.229676      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:15.229780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:16.230411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:17.230548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:18.231075      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:19.231299      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:20.232361      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:21.232525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:22.233068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:23.233324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:24.234081      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:25.234203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:26.234373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:27.234698      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:28.234761      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:29.234992      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:30.235691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:31.236784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:32.237428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:33.238420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:34.239420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:35.240416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:36.241059      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:37.241186      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:38.241357      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:39.242438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:40.242981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:41.243429      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:42.243717      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:43.243828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:44.243951      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:45.244437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:53:46.056510 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/05/24 13:53:46.06
  I1005 13:53:46.060727 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/05/24 13:53:46.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:53:46.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:53:46.088
  I1005 13:53:46.106962 19 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1005 13:53:46.111665 19 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I1005 13:53:46.201032 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3579" for this suite. @ 10/05/24 13:53:46.206
  I1005 13:53:46.213581 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9475" for this suite. @ 10/05/24 13:53:46.217
• [60.217 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 10/05/24 13:53:46.226
  I1005 13:53:46.226241 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename gc @ 10/05/24 13:53:46.226
  E1005 13:53:46.244706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:53:46.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:53:46.249
  STEP: create the rc1 @ 10/05/24 13:53:46.255
  STEP: create the rc2 @ 10/05/24 13:53:46.261
  E1005 13:53:47.247964      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:48.247066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:49.248002      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:50.248122      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:51.249413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:52.254125      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 10/05/24 13:53:52.273
  STEP: delete the rc simpletest-rc-to-be-deleted @ 10/05/24 13:53:52.834
  STEP: wait for the rc to be deleted @ 10/05/24 13:53:52.848
  E1005 13:53:53.254697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:54.254818      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:55.255020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:56.255177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:57.255604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:53:57.861760 19 garbage_collector.go:762] 75 pods remaining
  I1005 13:53:57.861815 19 garbage_collector.go:769] 75 pods has nil DeletionTimestamp
  I1005 13:53:57.861822 19 garbage_collector.go:770] 
  E1005 13:53:58.255848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:53:59.256421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:00.257528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:01.257654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:02.257720      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/05/24 13:54:02.86
  W1005 13:54:02.867545      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1005 13:54:02.867576 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1005 13:54:02.867633 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-26x8d" in namespace "gc-4241"
  I1005 13:54:02.889383 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4mddc" in namespace "gc-4241"
  I1005 13:54:02.901822 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4q8xq" in namespace "gc-4241"
  I1005 13:54:02.916176 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4zslj" in namespace "gc-4241"
  I1005 13:54:02.932925 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5fc5s" in namespace "gc-4241"
  I1005 13:54:02.945770 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5fjcd" in namespace "gc-4241"
  I1005 13:54:02.959561 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5hh2t" in namespace "gc-4241"
  I1005 13:54:02.973996 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5m5ts" in namespace "gc-4241"
  I1005 13:54:02.990967 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6fd8v" in namespace "gc-4241"
  I1005 13:54:03.004107 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6hsvp" in namespace "gc-4241"
  I1005 13:54:03.019370 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6pg9q" in namespace "gc-4241"
  I1005 13:54:03.031518 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6vlzc" in namespace "gc-4241"
  I1005 13:54:03.045972 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-727kq" in namespace "gc-4241"
  I1005 13:54:03.059204 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7lgjh" in namespace "gc-4241"
  I1005 13:54:03.076643 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7s7rj" in namespace "gc-4241"
  I1005 13:54:03.091175 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8fgxg" in namespace "gc-4241"
  I1005 13:54:03.104924 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8n7xm" in namespace "gc-4241"
  I1005 13:54:03.118917 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8q5kx" in namespace "gc-4241"
  I1005 13:54:03.135965 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8rdx4" in namespace "gc-4241"
  I1005 13:54:03.151759 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8wzdp" in namespace "gc-4241"
  I1005 13:54:03.165169 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9fnzt" in namespace "gc-4241"
  I1005 13:54:03.178286 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9mj6c" in namespace "gc-4241"
  I1005 13:54:03.194590 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9ph6h" in namespace "gc-4241"
  I1005 13:54:03.211112 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9tnv9" in namespace "gc-4241"
  I1005 13:54:03.226621 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9wsxt" in namespace "gc-4241"
  I1005 13:54:03.242687 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b5zff" in namespace "gc-4241"
  I1005 13:54:03.254933 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b6b5g" in namespace "gc-4241"
  E1005 13:54:03.258747      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:54:03.267473 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b8kdt" in namespace "gc-4241"
  I1005 13:54:03.285942 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bgfzh" in namespace "gc-4241"
  I1005 13:54:03.299983 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-blfwv" in namespace "gc-4241"
  I1005 13:54:03.327477 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bnb9k" in namespace "gc-4241"
  I1005 13:54:03.344711 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bzfn7" in namespace "gc-4241"
  I1005 13:54:03.368289 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c6xmc" in namespace "gc-4241"
  I1005 13:54:03.386594 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cnghb" in namespace "gc-4241"
  I1005 13:54:03.405697 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cpp86" in namespace "gc-4241"
  I1005 13:54:03.423397 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d6p4v" in namespace "gc-4241"
  I1005 13:54:03.437677 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d7255" in namespace "gc-4241"
  I1005 13:54:03.449889 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d94kr" in namespace "gc-4241"
  I1005 13:54:03.466416 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dphqm" in namespace "gc-4241"
  I1005 13:54:03.480130 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-drphz" in namespace "gc-4241"
  I1005 13:54:03.495086 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dw96f" in namespace "gc-4241"
  I1005 13:54:03.508773 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f6pv9" in namespace "gc-4241"
  I1005 13:54:03.524497 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fcbf7" in namespace "gc-4241"
  I1005 13:54:03.536697 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fcbqx" in namespace "gc-4241"
  I1005 13:54:03.548739 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ffckg" in namespace "gc-4241"
  I1005 13:54:03.562771 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fq4gs" in namespace "gc-4241"
  I1005 13:54:03.579458 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h4tkq" in namespace "gc-4241"
  I1005 13:54:03.599494 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hd2sx" in namespace "gc-4241"
  I1005 13:54:03.619376 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hdq97" in namespace "gc-4241"
  I1005 13:54:03.638544 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hkdst" in namespace "gc-4241"
  I1005 13:54:03.655993 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4241" for this suite. @ 10/05/24 13:54:03.66
• [17.442 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 10/05/24 13:54:03.668
  I1005 13:54:03.668521 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename daemonsets @ 10/05/24 13:54:03.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:54:03.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:54:03.694
  I1005 13:54:03.719251 19 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/05/24 13:54:03.726
  I1005 13:54:03.732826 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:03.739960 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:03.746655 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:54:03.746680 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  E1005 13:54:04.259768      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:54:04.732201 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:04.733255 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:04.740407 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:54:04.740534 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  E1005 13:54:05.260925      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:54:05.733568 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:05.733604 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:05.741797 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1005 13:54:05.741824 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  E1005 13:54:06.261130      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:54:06.732695 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:06.732729 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:06.737900 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1005 13:54:06.737924 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 10/05/24 13:54:06.756
  STEP: Check that daemon pods images are updated. @ 10/05/24 13:54:06.767
  I1005 13:54:06.771070 19 daemon_set.go:1193] Wrong image for pod: daemon-set-6lj9g. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1005 13:54:06.771101 19 daemon_set.go:1193] Wrong image for pod: daemon-set-d2z4r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1005 13:54:06.771108 19 daemon_set.go:1193] Wrong image for pod: daemon-set-ps688. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1005 13:54:06.776416 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:06.776452 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1005 13:54:07.261909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:54:07.774075 19 daemon_set.go:1193] Wrong image for pod: daemon-set-6lj9g. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1005 13:54:07.774113 19 daemon_set.go:1193] Wrong image for pod: daemon-set-d2z4r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1005 13:54:07.774120 19 daemon_set.go:1198] Pod daemon-set-pkv9k is not available
  I1005 13:54:07.779306 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:07.779342 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1005 13:54:08.262764      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:54:08.774934 19 daemon_set.go:1193] Wrong image for pod: daemon-set-6lj9g. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1005 13:54:08.774966 19 daemon_set.go:1198] Pod daemon-set-g4tnr is not available
  I1005 13:54:08.779140 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:08.779175 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1005 13:54:09.263445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:54:09.773497 19 daemon_set.go:1198] Pod daemon-set-hjxw2 is not available
  I1005 13:54:09.778005 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:09.778034 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 10/05/24 13:54:09.778
  I1005 13:54:09.783263 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:09.783292 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:09.786466 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1005 13:54:09.786489 19 fixtures.go:130] Node ip-172-31-83-192 is running 0 daemon pod, expected 1
  E1005 13:54:10.264126      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:54:10.782977 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:10.783016 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:10.788031 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1005 13:54:10.788051 19 fixtures.go:130] Node ip-172-31-83-192 is running 0 daemon pod, expected 1
  E1005 13:54:11.264485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:54:11.785193 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:11.785253 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:54:11.788696 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1005 13:54:11.788718 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/05/24 13:54:11.809
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2391, will wait for the garbage collector to delete the pods @ 10/05/24 13:54:11.809
  I1005 13:54:11.873629 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.377397ms
  I1005 13:54:11.974656 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.011021ms
  E1005 13:54:12.264802      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:13.265520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:54:13.281508 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1005 13:54:13.281543 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1005 13:54:13.286067 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"43850"},"items":null}

  I1005 13:54:13.289180 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"43851"},"items":null}

  I1005 13:54:13.306774 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2391" for this suite. @ 10/05/24 13:54:13.31
• [9.650 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 10/05/24 13:54:13.319
  I1005 13:54:13.319087 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pods @ 10/05/24 13:54:13.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:54:13.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:54:13.341
  I1005 13:54:13.345601 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: creating the pod @ 10/05/24 13:54:13.346
  STEP: submitting the pod to kubernetes @ 10/05/24 13:54:13.346
  E1005 13:54:14.265600      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:15.266099      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:54:15.421398 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7917" for this suite. @ 10/05/24 13:54:15.427
• [2.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 10/05/24 13:54:15.435
  I1005 13:54:15.435799 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename statefulset @ 10/05/24 13:54:15.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:54:15.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:54:15.457
  STEP: Creating service test in namespace statefulset-3588 @ 10/05/24 13:54:15.459
  STEP: Creating statefulset ss in namespace statefulset-3588 @ 10/05/24 13:54:15.465
  I1005 13:54:15.478192 19 wait.go:40] Found 0 stateful pods, waiting for 1
  E1005 13:54:16.266142      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:17.266370      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:18.266509      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:19.266609      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:20.266726      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:21.266927      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:22.267047      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:23.267146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:24.267246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:25.267368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:54:25.481269 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 10/05/24 13:54:25.49
  STEP: updating a scale subresource @ 10/05/24 13:54:25.494
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/05/24 13:54:25.502
  STEP: Patch a scale subresource @ 10/05/24 13:54:25.507
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/05/24 13:54:25.519
  I1005 13:54:25.524267 19 statefulset.go:138] Deleting all statefulset in ns statefulset-3588
  I1005 13:54:25.528131 19 rest.go:150] Scaling statefulset ss to 0
  E1005 13:54:26.267488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:27.267557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:28.267656      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:29.267776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:30.267869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:31.267938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:32.268427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:33.268560      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:34.268666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:35.268731      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:54:35.549027 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1005 13:54:35.553896 19 rest.go:88] Deleting statefulset ss
  I1005 13:54:35.570037 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3588" for this suite. @ 10/05/24 13:54:35.573
• [20.146 seconds]
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 10/05/24 13:54:35.581
  I1005 13:54:35.581885 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-runtime @ 10/05/24 13:54:35.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:54:35.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:54:35.603
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 10/05/24 13:54:35.617
  E1005 13:54:36.268867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:37.268954      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:38.269445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:39.270449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:40.270653      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:41.270788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:42.270986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:43.271994      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:44.272925      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:45.273808      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:46.274059      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:47.274208      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:48.275077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:49.275209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:50.276172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 10/05/24 13:54:50.705
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 10/05/24 13:54:50.71
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 10/05/24 13:54:50.719
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 10/05/24 13:54:50.719
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 10/05/24 13:54:50.742
  E1005 13:54:51.276266      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:52.276544      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:53.277371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 10/05/24 13:54:53.764
  E1005 13:54:54.277480      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 10/05/24 13:54:54.775
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 10/05/24 13:54:54.784
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 10/05/24 13:54:54.784
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 10/05/24 13:54:54.809
  E1005 13:54:55.277574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 10/05/24 13:54:55.82
  E1005 13:54:56.278433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:57.278550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 10/05/24 13:54:57.835
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 10/05/24 13:54:57.845
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 10/05/24 13:54:57.845
  I1005 13:54:57.876207 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4511" for this suite. @ 10/05/24 13:54:57.881
• [22.310 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 10/05/24 13:54:57.891
  I1005 13:54:57.891672 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename downward-api @ 10/05/24 13:54:57.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:54:57.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:54:57.913
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 13:54:57.915
  E1005 13:54:58.279159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:54:59.280682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:00.280867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:01.281134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:55:01.943
  I1005 13:55:01.947196 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downwardapi-volume-e1b56b88-c40c-4930-a5f1-cdce151d0418 container client-container: <nil>
  STEP: delete the pod @ 10/05/24 13:55:01.961
  I1005 13:55:01.982605 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3880" for this suite. @ 10/05/24 13:55:01.987
• [4.106 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 10/05/24 13:55:01.998
  I1005 13:55:01.998162 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename sched-preemption @ 10/05/24 13:55:01.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:55:02.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:55:02.02
  I1005 13:55:02.038786 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1005 13:55:02.281112      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:03.281193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:04.281340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:05.281365      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:06.281701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:07.282425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:08.282564      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:09.282626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:10.282736      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:11.283517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:12.284563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:13.284655      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:14.285310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:15.285399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:16.285903      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:17.285980      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:18.286783      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:19.286850      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:20.287454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:21.288446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:22.288573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:23.289427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:24.289552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:25.289736      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:26.290287      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:27.290510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:28.291512      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:29.291755      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:30.292669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:31.293521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:32.294388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:33.294866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:34.295613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:35.295732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:36.295808      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:37.296027      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:38.296125      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:39.296362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:40.297351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:41.297534      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:42.298429      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:43.299448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:44.299522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:45.300427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:46.300789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:47.300907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:48.301885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:49.301976      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:50.302929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:51.303336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:52.303377      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:53.303584      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:54.304444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:55.304656      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:56.305149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:57.305374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:58.305808      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:55:59.305947      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:00.306443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:01.306805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:56:02.045569 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 10/05/24 13:56:02.049
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 10/05/24 13:56:02.058
  I1005 13:56:02.071418 19 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 10/05/24 13:56:02.071
  E1005 13:56:02.306916      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:03.307037      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 10/05/24 13:56:04.08
  I1005 13:56:04.088817 19 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 10/05/24 13:56:04.088
  E1005 13:56:04.307918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:05.308530      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 10/05/24 13:56:06.099
  I1005 13:56:06.105399 19 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E1005 13:56:06.308848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:56:06.622584 19 pod_client.go:173] Successfully updated pod "victim-pod"
  I1005 13:56:06.665745 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3416" for this suite. @ 10/05/24 13:56:06.671
• [64.683 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 10/05/24 13:56:06.681
  I1005 13:56:06.681038 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename tables @ 10/05/24 13:56:06.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:56:06.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:56:06.704
  I1005 13:56:06.709391 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-4108" for this suite. @ 10/05/24 13:56:06.714
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 10/05/24 13:56:06.721
  I1005 13:56:06.722005 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename field-validation @ 10/05/24 13:56:06.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:56:06.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:56:06.743
  STEP: apply creating a deployment @ 10/05/24 13:56:06.746
  I1005 13:56:06.764138 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9566" for this suite. @ 10/05/24 13:56:06.768
• [0.053 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 10/05/24 13:56:06.775
  I1005 13:56:06.775476 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 13:56:06.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:56:06.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:56:06.795
  STEP: Setting up server cert @ 10/05/24 13:56:06.821
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 13:56:06.938
  STEP: Deploying the webhook pod @ 10/05/24 13:56:06.95
  STEP: Wait for the deployment to be ready @ 10/05/24 13:56:06.963
  I1005 13:56:06.972581 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1005 13:56:07.308947      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:08.309062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/05/24 13:56:08.988
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 13:56:09.001
  E1005 13:56:09.309173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:56:10.001946 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/05/24 13:56:10.012
  I1005 13:56:10.059016 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6127" for this suite. @ 10/05/24 13:56:10.066
  STEP: Destroying namespace "webhook-markers-2467" for this suite. @ 10/05/24 13:56:10.075
• [3.309 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 10/05/24 13:56:10.084
  I1005 13:56:10.084797 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-probe @ 10/05/24 13:56:10.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:56:10.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:56:10.106
  E1005 13:56:10.309281      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:11.310194      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:12.310665      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:13.310827      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:14.311035      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:15.311765      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:16.312779      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:17.313773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:18.314814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:19.315555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:20.315985      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:21.316625      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:22.317458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:23.318201      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:24.319056      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:25.319302      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:26.319524      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:27.320371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:28.321437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:29.322469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:30.322763      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:31.323016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:32.323066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:33.323848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:34.324239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:35.324347      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:36.324778      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:37.324802      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:38.324987      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:39.325928      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:40.326312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:41.326694      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:42.327183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:43.327913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:44.327952      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:45.328838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:46.328993      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:47.329401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:48.329514      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:49.329598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:50.330420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:51.330542      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:52.330675      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:53.331393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:54.331519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:55.331696      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:56.332569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:57.332724      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:58.332817      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:56:59.332922      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:00.333145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:01.333208      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:02.334052      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:03.334276      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:04.334394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:05.334559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:06.335595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:07.335726      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:08.336410      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:09.336939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:57:10.125321 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1870" for this suite. @ 10/05/24 13:57:10.13
• [60.055 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 10/05/24 13:57:10.14
  I1005 13:57:10.140288 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:57:10.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:57:10.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:57:10.167
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 13:57:10.169
  E1005 13:57:10.337331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:11.337768      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:12.338162      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:13.338288      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:57:14.197
  I1005 13:57:14.201705 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod downwardapi-volume-c8bc1b0f-a9bc-4e0c-b5ac-dc31fc7fc6ff container client-container: <nil>
  STEP: delete the pod @ 10/05/24 13:57:14.214
  I1005 13:57:14.234207 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8013" for this suite. @ 10/05/24 13:57:14.238
• [4.108 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 10/05/24 13:57:14.248
  I1005 13:57:14.248781 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename namespaces @ 10/05/24 13:57:14.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:57:14.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:57:14.273
  STEP: Creating a test namespace @ 10/05/24 13:57:14.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:57:14.293
  STEP: Creating a service in the namespace @ 10/05/24 13:57:14.295
  STEP: Deleting the namespace @ 10/05/24 13:57:14.307
  STEP: Waiting for the namespace to be removed. @ 10/05/24 13:57:14.318
  E1005 13:57:14.338411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:15.338669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:16.339136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:17.339990      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:18.340015      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:19.340507      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 10/05/24 13:57:20.323
  E1005 13:57:20.341007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying there is no service in the namespace @ 10/05/24 13:57:20.344
  I1005 13:57:20.349663 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5319" for this suite. @ 10/05/24 13:57:20.354
  STEP: Destroying namespace "nsdeletetest-3154" for this suite. @ 10/05/24 13:57:20.364
  I1005 13:57:20.368611 19 framework.go:370] Namespace nsdeletetest-3154 was already deleted
  STEP: Destroying namespace "nsdeletetest-5124" for this suite. @ 10/05/24 13:57:20.368
• [6.129 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 10/05/24 13:57:20.377
  I1005 13:57:20.377468 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename cronjob @ 10/05/24 13:57:20.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:57:20.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:57:20.401
  STEP: Creating a ReplaceConcurrent cronjob @ 10/05/24 13:57:20.405
  STEP: Ensuring a job is scheduled @ 10/05/24 13:57:20.412
  E1005 13:57:21.341344      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:22.341414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:23.341595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:24.341718      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:25.342624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:26.343672      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:27.343797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:28.344027      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:29.344152      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:30.344388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:31.344805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:32.344982      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:33.344989      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:34.345617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:35.345794      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:36.345885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:37.345969      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:38.346140      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:39.346280      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:40.346485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:41.347562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:42.347659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:43.348349      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:44.349435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:45.350341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:46.350547      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:47.351368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:48.351482      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:49.351966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:50.352143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:51.352552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:52.352701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:53.352826      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:54.353536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:55.353628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:56.354553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:57.354776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:58.355060      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:57:59.355873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:00.355917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 10/05/24 13:58:00.419
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/05/24 13:58:00.422
  STEP: Ensuring the job is replaced with a new one @ 10/05/24 13:58:00.426
  E1005 13:58:01.356552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:02.357471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:03.357559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:04.357662      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:05.358437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:06.359307      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:07.359382      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:08.359518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:09.360431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:10.360641      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:11.361601      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:12.361822      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:13.361837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:14.362170      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:15.362311      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:16.363275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:17.363411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:18.363511      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:19.363624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:20.364471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:21.364525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:22.364720      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:23.364852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:24.365087      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:25.365388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:26.365603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:27.365706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:28.365834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:29.366004      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:30.366141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:31.366578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:32.367458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:33.367563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:34.367660      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:35.368447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:36.368522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:37.368637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:38.368732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:39.368846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:40.368913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:41.369527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:42.369628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:43.370397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:44.370471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:45.370620      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:46.371616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:47.372463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:48.372587      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:49.372727      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:50.372836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:51.373311      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:52.373554      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:53.373708      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:54.373938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:55.374069      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:56.374310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:57.374393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:58.374527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:58:59.375465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:00.375654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 10/05/24 13:59:00.431
  I1005 13:59:00.439499 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-715" for this suite. @ 10/05/24 13:59:00.444
• [100.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 10/05/24 13:59:00.454
  I1005 13:59:00.454911 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/05/24 13:59:00.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:59:00.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:59:00.477
  STEP: creating a policy with variables @ 10/05/24 13:59:00.486
  STEP: waiting until the marker is denied @ 10/05/24 13:59:00.503
  E1005 13:59:01.376660      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 10/05/24 13:59:01.415
  STEP: testing a non-replicated ReplicaSet not to be denied @ 10/05/24 13:59:01.432
  I1005 13:59:01.476529 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8313" for this suite. @ 10/05/24 13:59:01.487
• [1.047 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 10/05/24 13:59:01.502
  I1005 13:59:01.502165 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubelet-test @ 10/05/24 13:59:01.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:59:01.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:59:01.529
  E1005 13:59:02.376776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:03.377733      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:59:03.575415 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3897" for this suite. @ 10/05/24 13:59:03.58
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 10/05/24 13:59:03.588
  I1005 13:59:03.588518 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:59:03.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:59:03.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:59:03.611
  STEP: Creating projection with secret that has name projected-secret-test-map-bc99ba1d-973e-4237-8f6a-ff8c61eedc5f @ 10/05/24 13:59:03.613
  STEP: Creating a pod to test consume secrets @ 10/05/24 13:59:03.619
  E1005 13:59:04.377831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:05.377929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:06.378895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:07.379546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:59:07.646
  I1005 13:59:07.650886 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod pod-projected-secrets-aa462b74-6312-483a-b5cc-78192d07ac22 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/05/24 13:59:07.667
  I1005 13:59:07.685904 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2602" for this suite. @ 10/05/24 13:59:07.689
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 10/05/24 13:59:07.698
  I1005 13:59:07.698135 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename configmap @ 10/05/24 13:59:07.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:59:07.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:59:07.726
  STEP: Creating configMap with name configmap-test-volume-f7bce722-d492-43c2-bbdc-3821cdd61578 @ 10/05/24 13:59:07.729
  STEP: Creating a pod to test consume configMaps @ 10/05/24 13:59:07.735
  E1005 13:59:08.380364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:09.380489      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:10.381473      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:11.381573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:59:11.758
  I1005 13:59:11.762688 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod pod-configmaps-856d1ccf-f92e-4c18-9f0f-f690a36f00ff container agnhost-container: <nil>
  STEP: delete the pod @ 10/05/24 13:59:11.771
  I1005 13:59:11.794139 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6190" for this suite. @ 10/05/24 13:59:11.798
• [4.108 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 10/05/24 13:59:11.806
  I1005 13:59:11.806165 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/05/24 13:59:11.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:59:11.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:59:11.829
  I1005 13:59:11.831972 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 13:59:12.382121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:13.382660      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:14.382624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:59:14.888210 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4810" for this suite. @ 10/05/24 13:59:14.893
• [3.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 10/05/24 13:59:14.902
  I1005 13:59:14.902489 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename projected @ 10/05/24 13:59:14.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:59:14.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:59:14.924
  STEP: Creating a pod to test downward API volume plugin @ 10/05/24 13:59:14.927
  E1005 13:59:15.387437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:16.383944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:17.384079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:18.384299      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 13:59:18.951
  I1005 13:59:18.955945 19 output.go:196] Trying to get logs from node ip-172-31-20-60 pod downwardapi-volume-d579acff-34a5-40c7-bfef-0dd25cd63586 container client-container: <nil>
  STEP: delete the pod @ 10/05/24 13:59:18.963
  I1005 13:59:18.985172 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-110" for this suite. @ 10/05/24 13:59:18.989
• [4.094 seconds]
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 10/05/24 13:59:18.996
  I1005 13:59:18.996723 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename pods @ 10/05/24 13:59:18.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:59:19.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:59:19.019
  STEP: creating the pod @ 10/05/24 13:59:19.021
  STEP: submitting the pod to kubernetes @ 10/05/24 13:59:19.021
  STEP: verifying QOS class is set on the pod @ 10/05/24 13:59:19.03
  I1005 13:59:19.036058 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4638" for this suite. @ 10/05/24 13:59:19.043
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 10/05/24 13:59:19.051
  I1005 13:59:19.052031 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename controllerrevisions @ 10/05/24 13:59:19.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:59:19.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:59:19.076
  STEP: Creating DaemonSet "e2e-mt2tp-daemon-set" @ 10/05/24 13:59:19.101
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/05/24 13:59:19.108
  I1005 13:59:19.112262 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:59:19.112299 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:59:19.115773 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-mt2tp-daemon-set: 0
  I1005 13:59:19.115796 19 fixtures.go:130] Node ip-172-31-20-60 is running 0 daemon pod, expected 1
  E1005 13:59:19.384383      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:59:20.114663 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:59:20.114713 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:59:20.120497 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-mt2tp-daemon-set: 1
  I1005 13:59:20.120519 19 fixtures.go:130] Node ip-172-31-45-162 is running 0 daemon pod, expected 1
  E1005 13:59:20.384860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:59:21.115245 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-29-107 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:59:21.115279 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-5-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1005 13:59:21.119615 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-mt2tp-daemon-set: 3
  I1005 13:59:21.119639 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-mt2tp-daemon-set
  STEP: Confirm DaemonSet "e2e-mt2tp-daemon-set" successfully created with "daemonset-name=e2e-mt2tp-daemon-set" label @ 10/05/24 13:59:21.123
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-mt2tp-daemon-set" @ 10/05/24 13:59:21.131
  I1005 13:59:21.136631 19 controller_revision.go:162] Located ControllerRevision: "e2e-mt2tp-daemon-set-84d544d68c"
  STEP: Patching ControllerRevision "e2e-mt2tp-daemon-set-84d544d68c" @ 10/05/24 13:59:21.14
  I1005 13:59:21.149411 19 controller_revision.go:173] e2e-mt2tp-daemon-set-84d544d68c has been patched
  STEP: Create a new ControllerRevision @ 10/05/24 13:59:21.149
  I1005 13:59:21.155426 19 controller_revision.go:191] Created ControllerRevision: e2e-mt2tp-daemon-set-649ff954dc
  STEP: Confirm that there are two ControllerRevisions @ 10/05/24 13:59:21.155
  I1005 13:59:21.155499 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1005 13:59:21.159519 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-mt2tp-daemon-set-84d544d68c" @ 10/05/24 13:59:21.159
  STEP: Confirm that there is only one ControllerRevision @ 10/05/24 13:59:21.168
  I1005 13:59:21.168805 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1005 13:59:21.172711 19 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-mt2tp-daemon-set-649ff954dc" @ 10/05/24 13:59:21.176
  I1005 13:59:21.185967 19 controller_revision.go:220] e2e-mt2tp-daemon-set-649ff954dc has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 10/05/24 13:59:21.186
  W1005 13:59:21.193181      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 10/05/24 13:59:21.193
  I1005 13:59:21.193323 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E1005 13:59:21.385769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:59:22.193688 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1005 13:59:22.199111 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-mt2tp-daemon-set-649ff954dc=updated" @ 10/05/24 13:59:22.199
  STEP: Confirm that there is only one ControllerRevision @ 10/05/24 13:59:22.21
  I1005 13:59:22.210418 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1005 13:59:22.214348 19 controller_revision.go:265] Found 1 ControllerRevisions
  I1005 13:59:22.218753 19 controller_revision.go:246] ControllerRevision "e2e-mt2tp-daemon-set-64764d9f78" has revision 3
  STEP: Deleting DaemonSet "e2e-mt2tp-daemon-set" @ 10/05/24 13:59:22.222
  STEP: deleting DaemonSet.extensions e2e-mt2tp-daemon-set in namespace controllerrevisions-1614, will wait for the garbage collector to delete the pods @ 10/05/24 13:59:22.222
  I1005 13:59:22.286183 19 resources.go:139] Deleting DaemonSet.extensions e2e-mt2tp-daemon-set took: 8.474405ms
  E1005 13:59:22.385940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:59:22.387301 19 resources.go:163] Terminating DaemonSet.extensions e2e-mt2tp-daemon-set pods took: 101.114455ms
  E1005 13:59:23.386343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 13:59:23.793704 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-mt2tp-daemon-set: 0
  I1005 13:59:23.793740 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-mt2tp-daemon-set
  I1005 13:59:23.798424 19 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"45579"},"items":null}

  I1005 13:59:23.803295 19 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"45579"},"items":null}

  I1005 13:59:23.819975 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-1614" for this suite. @ 10/05/24 13:59:23.824
• [4.783 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 10/05/24 13:59:23.835
  I1005 13:59:23.835251 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/05/24 13:59:23.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:59:23.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:59:23.858
  STEP: Creating two CSIDrivers @ 10/05/24 13:59:23.861
  STEP: Getting "inline-driver-87796c94-e202-4aa0-9fbd-153f4ed00f66" & "inline-driver-b3c9c2c1-1a10-484b-8467-82ce28b0083b" @ 10/05/24 13:59:23.881
  STEP: Patching the CSIDriver "inline-driver-b3c9c2c1-1a10-484b-8467-82ce28b0083b" @ 10/05/24 13:59:23.89
  STEP: Updating the CSIDriver "inline-driver-b3c9c2c1-1a10-484b-8467-82ce28b0083b" @ 10/05/24 13:59:23.896
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-1892" @ 10/05/24 13:59:23.906
  STEP: Deleting CSIDriver "inline-driver-87796c94-e202-4aa0-9fbd-153f4ed00f66" @ 10/05/24 13:59:23.909
  STEP: Confirm deletion of CSIDriver "inline-driver-87796c94-e202-4aa0-9fbd-153f4ed00f66" @ 10/05/24 13:59:23.917
  STEP: Deleting CSIDriver "inline-driver-b3c9c2c1-1a10-484b-8467-82ce28b0083b" via DeleteCollection @ 10/05/24 13:59:23.92
  STEP: Confirm deletion of CSIDriver "inline-driver-b3c9c2c1-1a10-484b-8467-82ce28b0083b" @ 10/05/24 13:59:23.931
  I1005 13:59:23.935708 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1892" for this suite. @ 10/05/24 13:59:23.94
• [0.115 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 10/05/24 13:59:23.95
  I1005 13:59:23.950619 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename chunking @ 10/05/24 13:59:23.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 13:59:23.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 13:59:23.974
  STEP: creating a large number of resources @ 10/05/24 13:59:23.977
  E1005 13:59:24.386994      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:25.387805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:26.388709      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:27.388742      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:28.389596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:29.389838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:30.390128      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:31.390478      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:32.390511      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:33.390821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:34.390900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:35.391605      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:36.392342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:37.392586      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:38.392900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:39.393437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:40.394427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:41.395176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 10/05/24 13:59:41.66
  I1005 13:59:41.706821 19 chunking.go:163] Retrieved 40/40 results with rv 46106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 10/05/24 13:59:41.706
  E1005 13:59:42.395365      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:43.395469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:44.395614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:45.395820      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:46.395878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:47.395998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:48.396120      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:49.397136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:50.398121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:51.398650      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:52.399430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:53.399561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:54.399854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:55.400189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:56.401249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:57.401361      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:58.401712      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 13:59:59.401916      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:00.402116      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:01.402419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:00:01.714664 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:00:02.403386      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:03.404438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:04.405424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:05.405603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:06.406607      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:07.406691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:08.407507      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:09.408420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:10.409416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:11.410095      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:12.410250      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:13.410356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:14.410539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:15.410709      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:16.411682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:17.411794      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:18.411979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:19.412668      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:20.412772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:21.412864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:00:21.713558 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:00:22.412970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:23.413611      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:24.413701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:25.414415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:26.414959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:27.415149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:28.415300      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:29.415506      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:30.415695      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:31.416682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:32.416841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:33.417051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:34.417297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:35.417364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:36.418027      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:37.418134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:38.419182      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:39.419358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:40.419462      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:41.420517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:00:41.714162 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:00:42.421434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:43.422418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:44.422778      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:45.422906      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:46.423297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:47.423530      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:48.424466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:49.424727      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:50.424918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:51.424991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:52.425249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:53.425358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:54.425624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:55.425711      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:56.426633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:57.426744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:58.427413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:00:59.427519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:00.428414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:01.428751      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:01:01.713602 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:01:02.429349      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:03.429537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:04.429745      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:05.430418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:06.430626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:07.430852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:08.430925      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:09.431132      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:10.431358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:11.432330      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:12.432577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:13.432809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:14.433052      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:15.433186      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:16.434188      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:17.434378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:18.435489      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:19.435551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:20.435789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:21.436649      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:01:21.712798 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:01:22.437446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:23.437534      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:24.438422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:25.439421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:26.439596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:27.440417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:28.441575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:29.441666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:30.441953      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:31.442020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:32.442263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:33.442563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:34.442867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:35.443496      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:36.443646      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:37.443890      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:38.443974      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:39.444111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:40.444346      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:41.444688      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:01:41.713184 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:01:42.444901      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:43.445109      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:44.445328      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:45.445397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:46.445639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:47.445751      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:48.445849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:49.445951      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:50.446436      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:51.446526      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:52.447420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:53.448419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:54.449423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:55.450427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:56.450596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:57.451428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:58.452473      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:01:59.452583      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:00.452861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:01.453871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:02:01.712842 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:02:02.454536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:03.455437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:04.455629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:05.455824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:06.455947      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:07.456730      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:08.456913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:09.456943      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:10.457815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:11.458209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:12.458355      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:13.458522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:14.458575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:15.458684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:16.459639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:17.459886      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:18.460454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:19.460678      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:20.461445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:21.461591      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:02:21.713565 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:02:22.462362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:23.462572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:24.462777      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:25.462982      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:26.464056      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:27.464179      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:28.465790      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:29.465965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:30.466076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:31.466331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:32.466518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:33.466678      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:34.466862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:35.467702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:36.468651      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:37.468757      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:38.468880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:39.468967      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:40.469484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:41.469605      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:02:41.713280 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:02:42.470432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:43.470532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:44.471425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:45.471640      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:46.472645      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:47.472846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:48.472978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:49.473166      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:50.473329      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:51.473701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:52.473900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:53.474787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:54.474925      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:55.475118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:56.475982      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:57.476089      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:58.476268      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:02:59.476358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:00.476601      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:01.476678      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:03:01.712395 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:03:02.477700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:03.477800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:04.478438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:05.479434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:06.479597      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:07.480423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:08.481756      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:09.481682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:10.482437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:11.482630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:12.482898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:13.483149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:14.483356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:15.484434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:16.484626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:17.484732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:18.484887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:19.485087      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:20.485207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:21.485327      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:03:21.714000 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:03:22.485744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:23.486796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:24.486904      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:25.487098      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:26.487248      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:27.487367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:28.488656      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:29.489075      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:30.489468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:31.489616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:32.489824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:33.490100      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:34.490321      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:35.490338      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:36.491373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:37.491513      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:38.491613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:39.491799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:40.492061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:41.492115      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:03:41.713028 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:03:42.492740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:43.493437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:44.493635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:45.493833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:46.494212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:47.494367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:48.495563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:49.496457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:50.496509      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:51.496596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:52.496723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:53.497304      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:54.497376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:55.498419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:56.498620      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:57.499415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:58.502410      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:03:59.502624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:00.502822      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:01.502884      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:04:01.712643 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:04:02.503007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:03.503251      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:04.503538      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:05.503772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:06.504753      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:07.505021      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:08.505381      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:09.505548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:10.505745      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:11.505815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:12.506675      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:13.506782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:14.507550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:15.508439      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:16.508633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:17.508727      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:18.510425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:19.510789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:20.510957      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:21.511022      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:04:21.713273 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:04:22.511178      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:23.511416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:24.512427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:25.512630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:26.512673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:27.512928      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:28.513656      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:29.514482      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:30.514782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:31.514875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:32.515115      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:33.515359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:34.515579      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:35.515694      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:36.516760      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:37.516871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:38.517019      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:39.517565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:40.517667      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:41.518714      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:04:41.712576 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:04:42.519338      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:43.520433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:44.520702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:45.520920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:46.521030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:47.521325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:48.521378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:49.521506      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:50.521657      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:51.521752      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:52.521862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:53.522100      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:54.522235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:55.522458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:56.522675      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:57.522878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:58.522985      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:04:59.523097      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:00.523195      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:01.523308      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:05:01.713282 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1005 14:05:02.523959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:03.524112      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:04.524338      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:05.524596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:06.524707      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:07.524977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:08.525108      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:09.525244      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:10.525447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:11.525681      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:12.525913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:13.526734      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:14.526864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:15.527879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:16.528416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:17.529434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:18.529547      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:19.529771      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:20.530425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:21.530667      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:05:21.712547 19 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1005 14:05:21.712581 19 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 10/05/24 14:05:21.712
  STEP: retrieving all remaining pages @ 10/05/24 14:05:21.716
  I1005 14:05:21.722073 19 chunking.go:221] Retrieved 40/40 results with rv 46762 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3NjIsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I1005 14:05:21.726898 19 chunking.go:221] Retrieved 40/40 results with rv 46762 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3NjIsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I1005 14:05:21.731137 19 chunking.go:221] Retrieved 40/40 results with rv 46762 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3NjIsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I1005 14:05:21.736383 19 chunking.go:221] Retrieved 40/40 results with rv 46762 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3NjIsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I1005 14:05:21.741253 19 chunking.go:221] Retrieved 40/40 results with rv 46762 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3NjIsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I1005 14:05:21.745496 19 chunking.go:221] Retrieved 40/40 results with rv 46762 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3NjIsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I1005 14:05:21.750824 19 chunking.go:221] Retrieved 40/40 results with rv 46762 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3NjIsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I1005 14:05:21.755818 19 chunking.go:221] Retrieved 40/40 results with rv 46762 and continue 
  I1005 14:05:21.755973 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7260" for this suite. @ 10/05/24 14:05:21.76
• [357.817 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 10/05/24 14:05:21.768
  I1005 14:05:21.768031 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir @ 10/05/24 14:05:21.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 14:05:21.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 14:05:21.8
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/05/24 14:05:21.802
  E1005 14:05:22.531762      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:23.532439      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:24.532583      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:25.532666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 14:05:25.835
  I1005 14:05:25.839639 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-e30b8607-03d4-4e3b-9c13-511c3037ec1f container test-container: <nil>
  STEP: delete the pod @ 10/05/24 14:05:25.857
  I1005 14:05:25.879356 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7821" for this suite. @ 10/05/24 14:05:25.884
• [4.124 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 10/05/24 14:05:25.892
  I1005 14:05:25.892067 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/05/24 14:05:25.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 14:05:25.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 14:05:25.915
  STEP: Creating 50 configmaps @ 10/05/24 14:05:25.917
  STEP: Creating RC which spawns configmap-volume pods @ 10/05/24 14:05:26.188
  I1005 14:05:26.247670 19 resource.go:87] Pod name wrapped-volume-race-6ad921e5-0ea2-4417-aebb-969e9b117b00: Found 3 pods out of 5
  E1005 14:05:26.532819      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:27.532930      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:28.532995      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:29.533205      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:30.533457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:05:31.256370 19 resource.go:87] Pod name wrapped-volume-race-6ad921e5-0ea2-4417-aebb-969e9b117b00: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/05/24 14:05:31.256
  STEP: Creating RC which spawns configmap-volume pods @ 10/05/24 14:05:31.283
  I1005 14:05:31.298096 19 resource.go:87] Pod name wrapped-volume-race-4929dd79-e62e-4fcc-b7eb-5825897e883e: Found 0 pods out of 5
  E1005 14:05:31.533610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:32.533732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:33.534234      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:34.533963      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:35.534185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:05:36.306468 19 resource.go:87] Pod name wrapped-volume-race-4929dd79-e62e-4fcc-b7eb-5825897e883e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/05/24 14:05:36.306
  STEP: Creating RC which spawns configmap-volume pods @ 10/05/24 14:05:36.333
  I1005 14:05:36.347119 19 resource.go:87] Pod name wrapped-volume-race-78ad81aa-512c-4cae-8803-9834ee6f046b: Found 0 pods out of 5
  E1005 14:05:36.534467      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:37.534700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:38.534783      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:39.534889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:40.535003      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:05:41.357201 19 resource.go:87] Pod name wrapped-volume-race-78ad81aa-512c-4cae-8803-9834ee6f046b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/05/24 14:05:41.357
  STEP: deleting ReplicationController wrapped-volume-race-78ad81aa-512c-4cae-8803-9834ee6f046b in namespace emptydir-wrapper-7930, will wait for the garbage collector to delete the pods @ 10/05/24 14:05:41.379
  I1005 14:05:41.444095 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-78ad81aa-512c-4cae-8803-9834ee6f046b took: 9.689186ms
  E1005 14:05:41.535473      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:05:41.544743 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-78ad81aa-512c-4cae-8803-9834ee6f046b pods took: 100.646303ms
  E1005 14:05:42.536195      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-4929dd79-e62e-4fcc-b7eb-5825897e883e in namespace emptydir-wrapper-7930, will wait for the garbage collector to delete the pods @ 10/05/24 14:05:42.545
  I1005 14:05:42.612611 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-4929dd79-e62e-4fcc-b7eb-5825897e883e took: 9.978894ms
  I1005 14:05:42.713022 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-4929dd79-e62e-4fcc-b7eb-5825897e883e pods took: 100.405631ms
  E1005 14:05:43.536604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-6ad921e5-0ea2-4417-aebb-969e9b117b00 in namespace emptydir-wrapper-7930, will wait for the garbage collector to delete the pods @ 10/05/24 14:05:43.813
  I1005 14:05:43.879545 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-6ad921e5-0ea2-4417-aebb-969e9b117b00 took: 9.270802ms
  I1005 14:05:43.980304 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-6ad921e5-0ea2-4417-aebb-969e9b117b00 pods took: 100.753634ms
  E1005 14:05:44.536915      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 10/05/24 14:05:45.18
  E1005 14:05:45.537881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:05:45.564072 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7930" for this suite. @ 10/05/24 14:05:45.567
• [19.683 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 10/05/24 14:05:45.575
  I1005 14:05:45.575656 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename events @ 10/05/24 14:05:45.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 14:05:45.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 14:05:45.597
  STEP: Create set of events @ 10/05/24 14:05:45.6
  I1005 14:05:45.606901 19 core_events.go:198] created test-event-1
  I1005 14:05:45.615211 19 core_events.go:198] created test-event-2
  I1005 14:05:45.624557 19 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 10/05/24 14:05:45.624
  STEP: delete collection of events @ 10/05/24 14:05:45.629
  I1005 14:05:45.629999 19 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/05/24 14:05:45.67
  I1005 14:05:45.670877 19 core_events.go:230] requesting list of events to confirm quantity
  I1005 14:05:45.675855 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-660" for this suite. @ 10/05/24 14:05:45.682
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 10/05/24 14:05:45.691
  I1005 14:05:45.691661 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename deployment @ 10/05/24 14:05:45.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 14:05:45.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 14:05:45.717
  STEP: creating a Deployment @ 10/05/24 14:05:45.724
  STEP: waiting for Deployment to be created @ 10/05/24 14:05:45.73
  STEP: waiting for all Replicas to be Ready @ 10/05/24 14:05:45.731
  I1005 14:05:45.732818 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1005 14:05:45.732839 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1005 14:05:45.746737 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1005 14:05:45.746765 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1005 14:05:45.771295 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1005 14:05:45.771329 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1005 14:05:45.808081 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1005 14:05:45.808117 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1005 14:05:46.531534 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1005 14:05:46.531567 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E1005 14:05:46.538658      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:05:47.054524 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 10/05/24 14:05:47.054
  I1005 14:05:47.064330 19 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 10/05/24 14:05:47.064
  I1005 14:05:47.065733 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0
  I1005 14:05:47.065748 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0
  I1005 14:05:47.065756 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0
  I1005 14:05:47.065762 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0
  I1005 14:05:47.065768 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0
  I1005 14:05:47.065775 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0
  I1005 14:05:47.065783 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0
  I1005 14:05:47.065789 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 0
  I1005 14:05:47.065866 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1
  I1005 14:05:47.065877 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1
  I1005 14:05:47.065884 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2
  I1005 14:05:47.065889 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2
  I1005 14:05:47.065897 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2
  I1005 14:05:47.065903 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2
  I1005 14:05:47.077022 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2
  I1005 14:05:47.077047 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2
  I1005 14:05:47.180984 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2
  I1005 14:05:47.181028 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2
  I1005 14:05:47.191726 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1
  I1005 14:05:47.191751 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1
  I1005 14:05:47.212738 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1
  I1005 14:05:47.212773 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1
  E1005 14:05:47.539153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:05:48.064536 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2
  I1005 14:05:48.064570 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2
  I1005 14:05:48.090875 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1
  STEP: listing Deployments @ 10/05/24 14:05:48.09
  I1005 14:05:48.095667 19 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 10/05/24 14:05:48.095
  I1005 14:05:48.110891 19 deployment.go:360] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 10/05/24 14:05:48.111
  I1005 14:05:48.118640 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1005 14:05:48.124063 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1005 14:05:48.158667 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1005 14:05:48.173570 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1005 14:05:48.182420 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E1005 14:05:48.540023      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:05:49.088003 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1005 14:05:49.110916 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1005 14:05:49.131439 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1005 14:05:49.157849 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1005 14:05:49.181106 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1005 14:05:49.540690      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:50.540893      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:05:50.564495 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 10/05/24 14:05:50.598
  STEP: fetching the DeploymentStatus @ 10/05/24 14:05:50.609
  I1005 14:05:50.615825 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1
  I1005 14:05:50.615930 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1
  I1005 14:05:50.615947 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1
  I1005 14:05:50.615956 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1
  I1005 14:05:50.616100 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 1
  I1005 14:05:50.616180 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2
  I1005 14:05:50.616199 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2
  I1005 14:05:50.616302 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2
  I1005 14:05:50.616446 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2
  I1005 14:05:50.616460 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 2
  I1005 14:05:50.616469 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7002 with ReadyReplicas 3
  STEP: deleting the Deployment @ 10/05/24 14:05:50.616
  I1005 14:05:50.629198 19 deployment.go:475] observed event type MODIFIED
  I1005 14:05:50.629246 19 deployment.go:475] observed event type MODIFIED
  I1005 14:05:50.629256 19 deployment.go:475] observed event type MODIFIED
  I1005 14:05:50.629334 19 deployment.go:475] observed event type MODIFIED
  I1005 14:05:50.629345 19 deployment.go:475] observed event type MODIFIED
  I1005 14:05:50.629381 19 deployment.go:475] observed event type MODIFIED
  I1005 14:05:50.629387 19 deployment.go:475] observed event type MODIFIED
  I1005 14:05:50.629453 19 deployment.go:475] observed event type MODIFIED
  I1005 14:05:50.629463 19 deployment.go:475] observed event type MODIFIED
  I1005 14:05:50.629470 19 deployment.go:475] observed event type MODIFIED
  I1005 14:05:50.629587 19 deployment.go:475] observed event type MODIFIED
  I1005 14:05:50.629598 19 deployment.go:475] observed event type MODIFIED
  I1005 14:05:50.629607 19 deployment.go:475] observed event type MODIFIED
  I1005 14:05:50.629674 19 deployment.go:475] observed event type MODIFIED
  I1005 14:05:50.634363 19 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I1005 14:05:50.637476 19 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7002",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65f01b9c-1b5a-4d0c-98a3-93a9cfdbdfcc",
      ResourceVersion: (string) (len=5) "47859",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863733948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "c03a812d-8e9a-4930-a145-fa48cd01f205",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 30 33 61  38 31 32 64 2d 38 65 39  |":\"c03a812d-8e9|
              00000130  61 2d 34 39 33 30 2d 61  31 34 35 2d 66 61 34 38  |a-4930-a145-fa48|
              00000140  63 64 30 31 66 32 30 35  5c 22 7d 22 3a 7b 7d 7d  |cd01f205\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1005 14:05:50.642856 19 deployment.go:669] pod: "test-deployment-6c86c7f765-92blh":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-92blh",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-7002",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5e21b74-729d-4002-bb7c-c21c29558ef1",
      ResourceVersion: (string) (len=5) "47858",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863733949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "65f01b9c-1b5a-4d0c-98a3-93a9cfdbdfcc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 35 66 30 31 62 39 63  |uid\":\"65f01b9c|
              000000a0  2d 31 62 35 61 2d 34 64  30 63 2d 39 38 61 33 2d  |-1b5a-4d0c-98a3-|
              000000b0  39 33 61 39 63 66 64 62  64 66 63 63 5c 22 7d 22  |93a9cfdbdfcc\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 39  2e 31 31 35 5c 22 7d 22  |2.168.89.115\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nxrs2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nxrs2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-60",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.60",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.60"
        }
      },
      PodIP: (string) (len=14) "192.168.89.115",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.89.115"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863733949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863733949,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e142ed5f8aee6a75050dc240ba581b9c30a0eb94e2173049fb8b6a05fb9af518",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nxrs2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1005 14:05:50.644257 19 deployment.go:669] pod: "test-deployment-6c86c7f765-nsczm":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-nsczm",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-7002",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "030c9495-68e9-421e-84d1-45473e5567ec",
      ResourceVersion: (string) (len=5) "47822",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863733948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "65f01b9c-1b5a-4d0c-98a3-93a9cfdbdfcc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 35 66 30 31 62 39 63  |uid\":\"65f01b9c|
              000000a0  2d 31 62 35 61 2d 34 64  30 63 2d 39 38 61 33 2d  |-1b5a-4d0c-98a3-|
              000000b0  39 33 61 39 63 66 64 62  64 66 63 63 5c 22 7d 22  |93a9cfdbdfcc\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 39  2e 38 30 5c 22 7d 22 3a  |2.168.59.80\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hnzhg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hnzhg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.162",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.162"
        }
      },
      PodIP: (string) (len=13) "192.168.59.80",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.59.80"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863733948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863733948,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e8660853db3ed6980321b99cbab346cc18c4594b3d40542a9167b5c90721fca7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hnzhg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1005 14:05:50.645461 19 deployment.go:657] ReplicaSet "test-deployment-6ccdbb4d8c":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7002",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10939ded-bdcd-4cab-9b2b-06d9a736131d",
      ResourceVersion: (string) (len=5) "47869",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863733947,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "c03a812d-8e9a-4930-a145-fa48cd01f205",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 30 33 61  38 31 32 64 2d 38 65 39  |":\"c03a812d-8e9|
              00000130  61 2d 34 39 33 30 2d 61  31 34 35 2d 66 61 34 38  |a-4930-a145-fa48|
              00000140  63 64 30 31 66 32 30 35  5c 22 7d 22 3a 7b 7d 7d  |cd01f205\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1005 14:05:50.649997 19 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-djbjf":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-djbjf",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=15) "deployment-7002",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "905bef27-4737-46a5-8d43-a0f87961b50f",
      ResourceVersion: (string) (len=5) "47865",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863733947,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863733952,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "10939ded-bdcd-4cab-9b2b-06d9a736131d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733947,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 30 39 33 39 64 65 64  |uid\":\"10939ded|
              000000a0  2d 62 64 63 64 2d 34 63  61 62 2d 39 62 32 62 2d  |-bdcd-4cab-9b2b-|
              000000b0  30 36 64 39 61 37 33 36  31 33 31 64 5c 22 7d 22  |06d9a736131d\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 39  2e 37 38 5c 22 7d 22 3a  |2.168.59.78\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l6w6f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l6w6f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-162",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733947,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733947,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.162",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.162"
        }
      },
      PodIP: (string) (len=13) "192.168.59.78",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.59.78"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863733947,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863733947,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://0c2db104979b07f926ed86f6cbd531625c44e25ba009571b884e8c97ce17c975",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l6w6f",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1005 14:05:50.651514 19 deployment.go:657] ReplicaSet "test-deployment-77bdf6fb4b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-77bdf6fb4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7002",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35b607ce-a106-4502-8059-683959bdb321",
      ResourceVersion: (string) (len=5) "47773",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863733945,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "c03a812d-8e9a-4930-a145-fa48cd01f205",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 30 33 61  38 31 32 64 2d 38 65 39  |":\"c03a812d-8e9|
              00000130  61 2d 34 39 33 30 2d 61  31 34 35 2d 66 61 34 38  |a-4930-a145-fa48|
              00000140  63 64 30 31 66 32 30 35  5c 22 7d 22 3a 7b 7d 7d  |cd01f205\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863733948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1005 14:05:50.656669 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7002" for this suite. @ 10/05/24 14:05:50.667
• [4.982 seconds]
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 10/05/24 14:05:50.674
  I1005 14:05:50.674331 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename container-probe @ 10/05/24 14:05:50.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 14:05:50.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 14:05:50.696
  STEP: Creating pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428 @ 10/05/24 14:05:50.698
  E1005 14:05:51.541435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:52.542452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/05/24 14:05:52.717
  I1005 14:05:52.721733 19 container_probe.go:1749] Initial restart count of pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 is 0
  I1005 14:05:52.725533 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:05:53.543493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:54.543725      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:05:54.731656 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:05:55.544521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:56.544712      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:05:56.737402 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:05:57.545250      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:05:58.545378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:05:58.743482 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:05:59.546471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:00.547463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:00.748831 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:01.547739      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:02.548455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:02.755793 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:03.549477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:04.550442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:04.762135 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:05.551438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:06.552366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:06.768960 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:07.552478      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:08.553438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:08.774851 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:09.554515      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:10.554623      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:10.781242 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:11.555067      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:12.555240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:12.788039 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  I1005 14:06:12.788071 19 container_probe.go:1763] Restart count of pod container-probe-6428/liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 is now 1 (20.066308664s elapsed)
  E1005 14:06:13.555860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:14.556479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:14.794002 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:15.557522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:16.557716      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:16.800252 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:17.557885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:18.558449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:18.805637 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:19.559461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:20.560460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:20.811467 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:21.561437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:22.561615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:22.816743 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:23.562634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:24.562845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:24.823177 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:25.563002      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:26.563128      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:26.828564 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:27.563415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:28.564482      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:28.834629 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:29.565054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:30.565212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:30.841655 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:31.565377      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:32.565665      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:32.847495 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  I1005 14:06:32.847531 19 container_probe.go:1763] Restart count of pod container-probe-6428/liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 is now 2 (40.125768599s elapsed)
  E1005 14:06:33.566074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:34.566205      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:34.853676 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:35.566388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:36.566399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:36.859417 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:37.566627      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:38.567459      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:38.865704 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:39.568456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:40.568549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:40.871190 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:41.568784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:42.568898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:42.878039 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:43.569456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:44.569592      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:44.884617 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:45.569816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:46.570202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:46.889703 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:47.570403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:48.571453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:48.895513 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:49.572419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:50.572646      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:50.901209 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:51.572756      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:52.572895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:52.906009 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  I1005 14:06:52.906047 19 container_probe.go:1763] Restart count of pod container-probe-6428/liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 is now 3 (1m0.18428507s elapsed)
  E1005 14:06:53.573470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:54.573694      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:54.912045 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:55.574469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:56.574684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:56.917064 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:57.574783      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:06:58.574950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:06:58.923423 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:06:59.575255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:00.576012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:00.929317 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:01.576202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:02.576393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:02.935910 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:03.576590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:04.576822      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:04.941473 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:05.577820      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:06.577913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:06.947868 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:07.578386      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:08.579460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:08.953936 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:09.579590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:10.579712      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:10.960045 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:11.579909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:12.580503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:12.967264 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  I1005 14:07:12.967300 19 container_probe.go:1763] Restart count of pod container-probe-6428/liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 is now 4 (1m20.245537711s elapsed)
  E1005 14:07:13.580929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:14.581159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:14.972877 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:15.581590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:16.581821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:16.979529 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:17.582266      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:18.582363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:18.984575 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:19.583365      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:20.583606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:20.990801 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:21.584473      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:22.584600      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:22.995962 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:23.584694      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:24.585552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:25.001454 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:25.585715      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:26.585766      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:27.007445 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:27.586100      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:28.586935      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:29.014624 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:29.587026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:30.587140      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:31.020805 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:31.587579      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:32.587701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:33.026996 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:33.587946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:34.588084      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:35.033759 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:35.588171      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:36.588363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:37.039968 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:37.588459      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:38.589437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:39.046833 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:39.590437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:40.590597      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:41.051815 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:41.591441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:42.592436      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:43.058315 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:43.593425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:44.593564      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:45.064431 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:45.593701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:46.593777      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:47.071181 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:47.594831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:48.594958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:49.076532 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:49.595891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:50.596094      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:51.082643 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:51.596351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:52.597251      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:53.088008 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:53.597352      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:54.598418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:55.094882 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:55.599418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:56.600521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:57.100554 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:57.601117      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:07:58.601339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:07:59.106547 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:07:59.602148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:00.602411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:08:01.111791 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:08:01.603468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:02.603663      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:08:03.117750 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:08:03.604429      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:04.604684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:08:05.124099 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:08:05.605730      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:06.606808      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:08:07.129472 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:08:07.607842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:08.607935      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:08:09.135887 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:08:09.608385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:10.609423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:08:11.141774 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  E1005 14:08:11.610422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:12.610629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:08:13.148406 19 container_probe.go:1759] Get pod liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 in namespace container-probe-6428
  I1005 14:08:13.148445 19 container_probe.go:1763] Restart count of pod container-probe-6428/liveness-c9277ed7-b653-4394-99bc-eeecd81cc418 is now 5 (2m20.426681794s elapsed)
  STEP: deleting the pod @ 10/05/24 14:08:13.148
  I1005 14:08:13.163805 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6428" for this suite. @ 10/05/24 14:08:13.168
• [142.503 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 10/05/24 14:08:13.177
  I1005 14:08:13.177373 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename disruption @ 10/05/24 14:08:13.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 14:08:13.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 14:08:13.204
  STEP: Creating a pdb that targets all three pods in a test replica set @ 10/05/24 14:08:13.207
  STEP: Waiting for the pdb to be processed @ 10/05/24 14:08:13.212
  E1005 14:08:13.610809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:14.610916      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 10/05/24 14:08:15.227
  STEP: Waiting for all pods to be running @ 10/05/24 14:08:15.227
  I1005 14:08:15.231255 19 disruption.go:680] pods: 0 < 3
  E1005 14:08:15.611540      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:16.611858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 10/05/24 14:08:17.234
  STEP: Updating the pdb to allow a pod to be evicted @ 10/05/24 14:08:17.245
  STEP: Waiting for the pdb to be processed @ 10/05/24 14:08:17.255
  E1005 14:08:17.612479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:18.612610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/05/24 14:08:19.26
  STEP: Waiting for all pods to be running @ 10/05/24 14:08:19.26
  STEP: Waiting for the pdb to observed all healthy pods @ 10/05/24 14:08:19.266
  STEP: Patching the pdb to disallow a pod to be evicted @ 10/05/24 14:08:19.296
  STEP: Waiting for the pdb to be processed @ 10/05/24 14:08:19.312
  E1005 14:08:19.612712      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:20.612857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 10/05/24 14:08:21.319
  STEP: locating a running pod @ 10/05/24 14:08:21.324
  STEP: Deleting the pdb to allow a pod to be evicted @ 10/05/24 14:08:21.336
  STEP: Waiting for the pdb to be deleted @ 10/05/24 14:08:21.343
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/05/24 14:08:21.347
  STEP: Waiting for all pods to be running @ 10/05/24 14:08:21.347
  I1005 14:08:21.371826 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5210" for this suite. @ 10/05/24 14:08:21.38
• [8.216 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 10/05/24 14:08:21.393
  I1005 14:08:21.393703 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/05/24 14:08:21.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 14:08:21.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 14:08:21.414
  I1005 14:08:21.417311 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  E1005 14:08:21.613382      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:22.614366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:23.614477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:08:24.475688 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9999" for this suite. @ 10/05/24 14:08:24.481
• [3.096 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 10/05/24 14:08:24.49
  I1005 14:08:24.490109 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename dns @ 10/05/24 14:08:24.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 14:08:24.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 14:08:24.513
  STEP: Creating a test externalName service @ 10/05/24 14:08:24.515
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9075.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9075.svc.cluster.local; sleep 1; done
   @ 10/05/24 14:08:24.52
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9075.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9075.svc.cluster.local; sleep 1; done
   @ 10/05/24 14:08:24.52
  STEP: creating a pod to probe DNS @ 10/05/24 14:08:24.52
  STEP: submitting the pod to kubernetes @ 10/05/24 14:08:24.52
  E1005 14:08:24.615302      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:25.615842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/05/24 14:08:26.542
  STEP: looking for the results for each expected name from probers @ 10/05/24 14:08:26.547
  I1005 14:08:26.558469 19 dns_common.go:552] DNS probes using dns-test-c2739b16-095f-4760-b90a-37b0f1dc2be5 succeeded

  STEP: changing the externalName to bar.example.com @ 10/05/24 14:08:26.558
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9075.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9075.svc.cluster.local; sleep 1; done
   @ 10/05/24 14:08:26.569
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9075.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9075.svc.cluster.local; sleep 1; done
   @ 10/05/24 14:08:26.569
  STEP: creating a second pod to probe DNS @ 10/05/24 14:08:26.569
  STEP: submitting the pod to kubernetes @ 10/05/24 14:08:26.569
  E1005 14:08:26.617384      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:27.617375      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/05/24 14:08:28.587
  STEP: looking for the results for each expected name from probers @ 10/05/24 14:08:28.591
  I1005 14:08:28.597711 19 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-9075.svc.cluster.local from pod  dns-9075/dns-test-e76de788-9030-4f3d-86ea-a4aac291decd contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1005 14:08:28.602502 19 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-9075.svc.cluster.local from pod  dns-9075/dns-test-e76de788-9030-4f3d-86ea-a4aac291decd contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1005 14:08:28.602531 19 dns_common.go:489] Lookups using dns-9075/dns-test-e76de788-9030-4f3d-86ea-a4aac291decd failed for: [wheezy_udp@dns-test-service-3.dns-9075.svc.cluster.local jessie_udp@dns-test-service-3.dns-9075.svc.cluster.local]

  I1005 14:08:28.617271 19 dns_common.go:495] Pod client logs for webserver: 
  E1005 14:08:28.617508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:08:28.624980 19 dns_common.go:495] Pod client logs for querier: 
  I1005 14:08:28.632499 19 dns_common.go:495] Pod client logs for jessie-querier: 
  E1005 14:08:29.618568      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:30.619527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:31.619811      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:32.620434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:08:33.603422 19 dns_common.go:552] DNS probes using dns-test-e76de788-9030-4f3d-86ea-a4aac291decd succeeded

  STEP: changing the service to type=ClusterIP @ 10/05/24 14:08:33.603
  W1005 14:08:33.620791      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9075.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-9075.svc.cluster.local; sleep 1; done
   @ 10/05/24 14:08:33.62
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9075.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9075.svc.cluster.local; sleep 1; done
   @ 10/05/24 14:08:33.62
  STEP: creating a third pod to probe DNS @ 10/05/24 14:08:33.62
  E1005 14:08:33.621204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: submitting the pod to kubernetes @ 10/05/24 14:08:33.625
  E1005 14:08:34.621360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:35.621570      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/05/24 14:08:35.642
  STEP: looking for the results for each expected name from probers @ 10/05/24 14:08:35.646
  I1005 14:08:35.659125 19 dns_common.go:552] DNS probes using dns-test-b2fce11e-690e-4203-bffd-db1e0be6e22b succeeded

  STEP: deleting the pod @ 10/05/24 14:08:35.659
  STEP: deleting the pod @ 10/05/24 14:08:35.673
  STEP: deleting the pod @ 10/05/24 14:08:35.687
  STEP: deleting the test externalName service @ 10/05/24 14:08:35.702
  I1005 14:08:35.720532 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9075" for this suite. @ 10/05/24 14:08:35.725
• [11.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 10/05/24 14:08:35.736
  I1005 14:08:35.736305 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename kubectl @ 10/05/24 14:08:35.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 14:08:35.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 14:08:35.758
  STEP: creating a replication controller @ 10/05/24 14:08:35.76
  I1005 14:08:35.760754 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-7707 create -f -'
  I1005 14:08:35.849117 19 builder.go:146] stderr: ""
  I1005 14:08:35.849162 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/05/24 14:08:35.849
  I1005 14:08:35.849286 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-7707 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1005 14:08:35.899947 19 builder.go:146] stderr: ""
  I1005 14:08:35.899990 19 builder.go:147] stdout: "update-demo-nautilus-6thg5 update-demo-nautilus-xkvbk "
  I1005 14:08:35.900065 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-7707 get pods update-demo-nautilus-6thg5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1005 14:08:35.946910 19 builder.go:146] stderr: ""
  I1005 14:08:35.946950 19 builder.go:147] stdout: ""
  I1005 14:08:35.946959 19 kubectl.go:2502] update-demo-nautilus-6thg5 is created but not running
  E1005 14:08:36.622432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:37.622746      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:38.622965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:39.623147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:40.623443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:08:40.947901 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-7707 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1005 14:08:40.996322 19 builder.go:146] stderr: ""
  I1005 14:08:40.996359 19 builder.go:147] stdout: "update-demo-nautilus-6thg5 update-demo-nautilus-xkvbk "
  I1005 14:08:40.996420 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-7707 get pods update-demo-nautilus-6thg5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1005 14:08:41.040738 19 builder.go:146] stderr: ""
  I1005 14:08:41.040781 19 builder.go:147] stdout: "true"
  I1005 14:08:41.040828 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-7707 get pods update-demo-nautilus-6thg5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1005 14:08:41.086159 19 builder.go:146] stderr: ""
  I1005 14:08:41.086196 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1005 14:08:41.086208 19 kubectl.go:2393] validating pod update-demo-nautilus-6thg5
  I1005 14:08:41.091928 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1005 14:08:41.091980 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1005 14:08:41.091994 19 kubectl.go:2520] update-demo-nautilus-6thg5 is verified up and running
  I1005 14:08:41.092034 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-7707 get pods update-demo-nautilus-xkvbk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1005 14:08:41.137621 19 builder.go:146] stderr: ""
  I1005 14:08:41.137666 19 builder.go:147] stdout: "true"
  I1005 14:08:41.137713 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-7707 get pods update-demo-nautilus-xkvbk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1005 14:08:41.182454 19 builder.go:146] stderr: ""
  I1005 14:08:41.182503 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1005 14:08:41.182517 19 kubectl.go:2393] validating pod update-demo-nautilus-xkvbk
  I1005 14:08:41.189237 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1005 14:08:41.189289 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1005 14:08:41.189300 19 kubectl.go:2520] update-demo-nautilus-xkvbk is verified up and running
  STEP: using delete to clean up resources @ 10/05/24 14:08:41.189
  I1005 14:08:41.189412 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-7707 delete --grace-period=0 --force -f -'
  I1005 14:08:41.242106 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1005 14:08:41.242147 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1005 14:08:41.242286 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-7707 get rc,svc -l name=update-demo --no-headers'
  I1005 14:08:41.309503 19 builder.go:146] stderr: "No resources found in kubectl-7707 namespace.\n"
  I1005 14:08:41.309555 19 builder.go:147] stdout: ""
  I1005 14:08:41.309616 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=kubectl-7707 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1005 14:08:41.386773 19 builder.go:146] stderr: ""
  I1005 14:08:41.386840 19 builder.go:147] stdout: ""
  I1005 14:08:41.387286 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7707" for this suite. @ 10/05/24 14:08:41.393
• [5.665 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 10/05/24 14:08:41.401
  I1005 14:08:41.401779 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename subpath @ 10/05/24 14:08:41.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 14:08:41.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 14:08:41.442
  STEP: Setting up data @ 10/05/24 14:08:41.446
  STEP: Creating pod pod-subpath-test-downwardapi-m7tl @ 10/05/24 14:08:41.456
  STEP: Creating a pod to test atomic-volume-subpath @ 10/05/24 14:08:41.456
  E1005 14:08:41.624053      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:42.624305      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:43.624981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:44.625104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:45.626092      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:46.626888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:47.627729      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:48.628448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:49.628546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:50.628621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:51.629458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:52.630461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:53.631552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:54.631791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:55.632775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:56.632800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:57.632980      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:58.633064      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:08:59.633250      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:00.633464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:01.634343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:02.634434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:03.635481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:04.636460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/05/24 14:09:05.541
  I1005 14:09:05.546340 19 output.go:196] Trying to get logs from node ip-172-31-45-162 pod pod-subpath-test-downwardapi-m7tl container test-container-subpath-downwardapi-m7tl: <nil>
  STEP: delete the pod @ 10/05/24 14:09:05.559
  STEP: Deleting pod pod-subpath-test-downwardapi-m7tl @ 10/05/24 14:09:05.58
  I1005 14:09:05.580709 19 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-m7tl" in namespace "subpath-2243"
  I1005 14:09:05.585283 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2243" for this suite. @ 10/05/24 14:09:05.589
• [24.195 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 10/05/24 14:09:05.596
  I1005 14:09:05.596931 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename statefulset @ 10/05/24 14:09:05.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 14:09:05.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 14:09:05.623
  STEP: Creating service test in namespace statefulset-2120 @ 10/05/24 14:09:05.625
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 10/05/24 14:09:05.63
  STEP: Creating stateful set ss in namespace statefulset-2120 @ 10/05/24 14:09:05.634
  E1005 14:09:05.636592      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2120 @ 10/05/24 14:09:05.64
  I1005 14:09:05.644955 19 wait.go:40] Found 0 stateful pods, waiting for 1
  E1005 14:09:06.637030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:07.637910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:08.638004      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:09.638426      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:10.638549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:11.638643      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:12.638711      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:13.638819      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:14.638922      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:15.639104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:15.647644 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 10/05/24 14:09:15.647
  I1005 14:09:15.653038 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-2120 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1005 14:09:15.754078 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1005 14:09:15.754128 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1005 14:09:15.754138 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1005 14:09:15.761377 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1005 14:09:16.639282      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:17.639409      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:18.639496      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:19.639650      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:20.639767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:21.639800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:22.639912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:23.640148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:24.640282      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:25.640495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:25.760598 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1005 14:09:25.760643 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1005 14:09:25.779524 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999786s
  E1005 14:09:26.641589      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:26.785784 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.99608232s
  E1005 14:09:27.642453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:27.791908 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.989256826s
  E1005 14:09:28.642828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:28.797790 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.9838833s
  E1005 14:09:29.643389      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:29.804722 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.977267182s
  E1005 14:09:30.643583      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:30.810173 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.971085479s
  E1005 14:09:31.644202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:31.816589 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.965428737s
  E1005 14:09:32.644428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:32.822922 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.958354996s
  E1005 14:09:33.644728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:33.829475 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.952193161s
  E1005 14:09:34.644820      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:34.835251 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 945.766057ms
  E1005 14:09:35.645286      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2120 @ 10/05/24 14:09:35.835
  I1005 14:09:35.841954 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-2120 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1005 14:09:35.928902 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1005 14:09:35.928941 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1005 14:09:35.928950 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1005 14:09:35.933928 19 wait.go:40] Found 1 stateful pods, waiting for 3
  E1005 14:09:36.645891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:37.646076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:38.646312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:39.646414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:40.647359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:41.648456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:42.648559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:43.648628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:44.649467      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:45.650426      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:45.935278 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1005 14:09:45.935315 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1005 14:09:45.935323 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 10/05/24 14:09:45.935
  STEP: Scale down will halt with unhealthy stateful pod @ 10/05/24 14:09:45.935
  I1005 14:09:45.944429 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-2120 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1005 14:09:46.034316 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1005 14:09:46.034364 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1005 14:09:46.034374 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1005 14:09:46.034426 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-2120 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1005 14:09:46.118020 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1005 14:09:46.118076 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1005 14:09:46.118087 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1005 14:09:46.118131 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-2120 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1005 14:09:46.205949 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1005 14:09:46.205988 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1005 14:09:46.205998 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1005 14:09:46.206008 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1005 14:09:46.211437 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1005 14:09:46.650678      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:47.650806      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:48.651008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:49.651111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:50.651363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:51.651467      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:52.651575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:53.651767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:54.652023      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:09:55.652177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:56.217878 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1005 14:09:56.217909 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1005 14:09:56.217918 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1005 14:09:56.236138 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999626s
  E1005 14:09:56.652465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:57.242647 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.992550225s
  E1005 14:09:57.653339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:58.248192 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.986345523s
  E1005 14:09:58.653598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:09:59.254459 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.981106338s
  E1005 14:09:59.653725      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:10:00.260609 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.974800594s
  E1005 14:10:00.654034      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:10:01.266022 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.968596332s
  E1005 14:10:01.654607      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:10:02.271927 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.963240203s
  E1005 14:10:02.655447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:10:03.277283 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.95727878s
  E1005 14:10:03.655592      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:10:04.284715 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.951042158s
  E1005 14:10:04.656291      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:10:05.290708 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 944.53143ms
  E1005 14:10:05.656943      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2120 @ 10/05/24 14:10:06.291
  I1005 14:10:06.296343 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-2120 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1005 14:10:06.398292 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1005 14:10:06.398330 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1005 14:10:06.398341 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1005 14:10:06.398394 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-2120 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1005 14:10:06.480507 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1005 14:10:06.480556 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1005 14:10:06.480567 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1005 14:10:06.480712 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2051842454 --namespace=statefulset-2120 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1005 14:10:06.565613 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1005 14:10:06.565650 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1005 14:10:06.565661 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1005 14:10:06.565671 19 rest.go:150] Scaling statefulset ss to 0
  E1005 14:10:06.657189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:10:07.657293      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:10:08.657383      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:10:09.657464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:10:10.658315      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:10:11.658394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:10:12.658495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:10:13.658579      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:10:14.659420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:10:15.659553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 10/05/24 14:10:16.578
  I1005 14:10:16.578620 19 statefulset.go:138] Deleting all statefulset in ns statefulset-2120
  I1005 14:10:16.582470 19 rest.go:150] Scaling statefulset ss to 0
  I1005 14:10:16.590724 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1005 14:10:16.595014 19 rest.go:88] Deleting statefulset ss
  I1005 14:10:16.612811 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2120" for this suite. @ 10/05/24 14:10:16.617
• [71.028 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 10/05/24 14:10:16.624
  I1005 14:10:16.624586 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/05/24 14:10:16.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 14:10:16.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 14:10:16.649
  E1005 14:10:16.660262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:10:17.660442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:10:18.660569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 10/05/24 14:10:18.688
  STEP: Cleaning up the configmap @ 10/05/24 14:10:18.695
  STEP: Cleaning up the pod @ 10/05/24 14:10:18.704
  I1005 14:10:18.717437 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6550" for this suite. @ 10/05/24 14:10:18.723
• [2.109 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 10/05/24 14:10:18.733
  I1005 14:10:18.734005 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename watch @ 10/05/24 14:10:18.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 14:10:18.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 14:10:18.757
  STEP: creating a new configmap @ 10/05/24 14:10:18.759
  STEP: modifying the configmap once @ 10/05/24 14:10:18.765
  STEP: modifying the configmap a second time @ 10/05/24 14:10:18.775
  STEP: deleting the configmap @ 10/05/24 14:10:18.784
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 10/05/24 14:10:18.792
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 10/05/24 14:10:18.794
  I1005 14:10:18.794281 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-351  3ab4bd1f-4eaf-4f1c-804c-6ab4dcf7dd82 49293 0 2024-10-05 14:10:18 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-10-05 14:10:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 14:10:18.794392 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-351  3ab4bd1f-4eaf-4f1c-804c-6ab4dcf7dd82 49294 0 2024-10-05 14:10:18 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-10-05 14:10:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1005 14:10:18.794480 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-351" for this suite. @ 10/05/24 14:10:18.798
• [0.073 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 10/05/24 14:10:18.807
  I1005 14:10:18.807128 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2051842454
  STEP: Building a namespace api object, basename webhook @ 10/05/24 14:10:18.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/05/24 14:10:18.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/05/24 14:10:18.83
  STEP: Setting up server cert @ 10/05/24 14:10:18.857
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/05/24 14:10:19.031
  STEP: Deploying the webhook pod @ 10/05/24 14:10:19.043
  STEP: Wait for the deployment to be ready @ 10/05/24 14:10:19.057
  I1005 14:10:19.066637 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1005 14:10:19.660700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1005 14:10:20.660812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/05/24 14:10:21.082
  STEP: Verifying the service has paired with the endpoint @ 10/05/24 14:10:21.094
  E1005 14:10:21.660919      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1005 14:10:22.095685 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 10/05/24 14:10:22.105
  I1005 14:10:22.150695 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-335" for this suite. @ 10/05/24 14:10:22.154
  STEP: Destroying namespace "webhook-markers-5136" for this suite. @ 10/05/24 14:10:22.164
• [3.365 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1005 14:10:22.172467 19 suites.go:34] Running AfterSuite actions on node 1
  I1005 14:10:22.172552 19 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.031 seconds]
------------------------------

Ran 404 of 6603 Specs in 6355.592 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6199 Skipped
PASS

Ginkgo ran 1 suite in 1h45m56.548787958s
Test Suite Passed
